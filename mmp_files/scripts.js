function PxLoaderImage(a, b, c) {
    var d = this,
        e = null;
    this.img = new Image, this.tags = b, this.priority = c;
    var f = function() {
            "complete" === d.img.readyState && (i(), e.onLoad(d))
        },
        g = function() {
            i(), e.onLoad(d)
        },
        h = function() {
            i(), e.onError(d)
        },
        i = function() {
            d.unbind("load", g), d.unbind("readystatechange", f), d.unbind("error", h)
        };
    this.start = function(b) {
        e = b, d.bind("load", g), d.bind("readystatechange", f), d.bind("error", h), d.img.src = a
    }, this.checkStatus = function() {
        d.img.complete && (i(), e.onLoad(d))
    }, this.onTimeout = function() {
        i(), d.img.complete ? e.onLoad(d) : e.onTimeout(d)
    }, this.getName = function() {
        return a
    }, this.bind = function(a, b) {
        d.img.addEventListener ? d.img.addEventListener(a, b, !1) : d.img.attachEvent && d.img.attachEvent("on" + a, b)
    }, this.unbind = function(a, b) {
        d.img.removeEventListener ? d.img.removeEventListener(a, b, !1) : d.img.detachEvent && d.img.detachEvent("on" + a, b)
    }
}

function PxLoaderSound(a, b, c, d) {
    var e = this,
        f = null,
        g = navigator.userAgent.match(/(ipad|iphone|ipod)/i),
        h = navigator.userAgent.match(/android/i);
    this.useGlobalHTML5Audio = g || h, this.tags = c, this.priority = d, this.sound = soundManager.createSound({
        id: a,
        url: b,
        autoLoad: !1,
        onload: function() {
            f.onLoad(e)
        },
        onsuspend: function() {
            f.onTimeout(e)
        },
        whileloading: function() {
            var a = this.bytesLoaded,
                b = this.bytesTotal;
            a > 0 && a === b && f.onLoad(e)
        }
    }), this.start = function(a) {
        f = a, this.useGlobalHTML5Audio ? f.onTimeout(e) : this.sound.load()
    }, this.checkStatus = function() {
        switch (e.sound.readyState) {
            case 0:
                break;
            case 1:
                break;
            case 2:
                f.onError(e);
                break;
            case 3:
                f.onLoad(e)
        }
    }, this.onTimeout = function() {
        f.onTimeout(e)
    }, this.getName = function() {
        return b
    }
}

function PxLoaderVideo(a, b, c) {
    var d = this,
        e = null;
    this.readyEventName = "canplaythrough";
    try {
        this.vid = new Video
    } catch (f) {
        this.vid = document.createElement("video")
    }
    this.tags = b, this.priority = c;
    var g = function() {
            4 === d.vid.readyState && (j(), e.onLoad(d))
        },
        h = function() {
            j(), e.onLoad(d)
        },
        i = function() {
            j(), e.onError(d)
        },
        j = function() {
            d.unbind("load", h), d.unbind(d.readyEventName, g), d.unbind("error", i)
        };
    this.start = function(b) {
        e = b, d.bind("load", h), d.bind(d.readyEventName, g), d.bind("error", i), d.bind("suspend", h), d.vid.src = a, d.vid.load()
    }, this.checkStatus = function() {
        4 === d.vid.readyState && (j(), e.onLoad(d))
    }, this.onTimeout = function() {
        j(), 4 !== d.vid.readyState ? e.onLoad(d) : e.onTimeout(d)
    }, this.getName = function() {
        return a
    }, this.bind = function(a, b) {
        d.vid.addEventListener ? d.vid.addEventListener(a, b, !1) : d.vid.attachEvent && d.vid.attachEvent("on" + a, b)
    }, this.unbind = function(a, b) {
        d.vid.removeEventListener ? d.vid.removeEventListener(a, b, !1) : d.vid.detachEvent && d.vid.detachEvent("on" + a, b)
    }
}! function(a, b) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {
        if (!a.document) throw new Error("jQuery requires a window with a document");
        return b(a)
    } : b(a)
}("undefined" != typeof window ? window : this, function(a, b) {
    function c(a) {
        var b = a.length,
            c = eb.type(a);
        return "function" === c || eb.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a
    }

    function d(a, b, c) {
        if (eb.isFunction(b)) return eb.grep(a, function(a, d) {
            return !!b.call(a, d, a) !== c
        });
        if (b.nodeType) return eb.grep(a, function(a) {
            return a === b !== c
        });
        if ("string" == typeof b) {
            if (mb.test(b)) return eb.filter(b, a, c);
            b = eb.filter(b, a)
        }
        return eb.grep(a, function(a) {
            return eb.inArray(a, b) >= 0 !== c
        })
    }

    function e(a, b) {
        do a = a[b]; while (a && 1 !== a.nodeType);
        return a
    }

    function f(a) {
        var b = ub[a] = {};
        return eb.each(a.match(tb) || [], function(a, c) {
            b[c] = !0
        }), b
    }

    function g() {
        ob.addEventListener ? (ob.removeEventListener("DOMContentLoaded", h, !1), a.removeEventListener("load", h, !1)) : (ob.detachEvent("onreadystatechange", h), a.detachEvent("onload", h))
    }

    function h() {
        (ob.addEventListener || "load" === event.type || "complete" === ob.readyState) && (g(), eb.ready())
    }

    function i(a, b, c) {
        if (void 0 === c && 1 === a.nodeType) {
            var d = "data-" + b.replace(zb, "-$1").toLowerCase();
            if (c = a.getAttribute(d), "string" == typeof c) {
                try {
                    c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : yb.test(c) ? eb.parseJSON(c) : c
                } catch (e) {}
                eb.data(a, b, c)
            } else c = void 0
        }
        return c
    }

    function j(a) {
        var b;
        for (b in a)
            if (("data" !== b || !eb.isEmptyObject(a[b])) && "toJSON" !== b) return !1;
        return !0
    }

    function k(a, b, c, d) {
        if (eb.acceptData(a)) {
            var e, f, g = eb.expando,
                h = a.nodeType,
                i = h ? eb.cache : a,
                j = h ? a[g] : a[g] && g;
            if (j && i[j] && (d || i[j].data) || void 0 !== c || "string" != typeof b) return j || (j = h ? a[g] = W.pop() || eb.guid++ : g), i[j] || (i[j] = h ? {} : {
                toJSON: eb.noop
            }), ("object" == typeof b || "function" == typeof b) && (d ? i[j] = eb.extend(i[j], b) : i[j].data = eb.extend(i[j].data, b)), f = i[j], d || (f.data || (f.data = {}), f = f.data), void 0 !== c && (f[eb.camelCase(b)] = c), "string" == typeof b ? (e = f[b], null == e && (e = f[eb.camelCase(b)])) : e = f, e
        }
    }

    function l(a, b, c) {
        if (eb.acceptData(a)) {
            var d, e, f = a.nodeType,
                g = f ? eb.cache : a,
                h = f ? a[eb.expando] : eb.expando;
            if (g[h]) {
                if (b && (d = c ? g[h] : g[h].data)) {
                    eb.isArray(b) ? b = b.concat(eb.map(b, eb.camelCase)) : b in d ? b = [b] : (b = eb.camelCase(b), b = b in d ? [b] : b.split(" ")), e = b.length;
                    for (; e--;) delete d[b[e]];
                    if (c ? !j(d) : !eb.isEmptyObject(d)) return
                }(c || (delete g[h].data, j(g[h]))) && (f ? eb.cleanData([a], !0) : cb.deleteExpando || g != g.window ? delete g[h] : g[h] = null)
            }
        }
    }

    function m() {
        return !0
    }

    function n() {
        return !1
    }

    function o() {
        try {
            return ob.activeElement
        } catch (a) {}
    }

    function p(a) {
        var b = Kb.split("|"),
            c = a.createDocumentFragment();
        if (c.createElement)
            for (; b.length;) c.createElement(b.pop());
        return c
    }

    function q(a, b) {
        var c, d, e = 0,
            f = typeof a.getElementsByTagName !== xb ? a.getElementsByTagName(b || "*") : typeof a.querySelectorAll !== xb ? a.querySelectorAll(b || "*") : void 0;
        if (!f)
            for (f = [], c = a.childNodes || a; null != (d = c[e]); e++) !b || eb.nodeName(d, b) ? f.push(d) : eb.merge(f, q(d, b));
        return void 0 === b || b && eb.nodeName(a, b) ? eb.merge([a], f) : f
    }

    function r(a) {
        Eb.test(a.type) && (a.defaultChecked = a.checked)
    }

    function s(a, b) {
        return eb.nodeName(a, "table") && eb.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }

    function t(a) {
        return a.type = (null !== eb.find.attr(a, "type")) + "/" + a.type, a
    }

    function u(a) {
        var b = Vb.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a
    }

    function v(a, b) {
        for (var c, d = 0; null != (c = a[d]); d++) eb._data(c, "globalEval", !b || eb._data(b[d], "globalEval"))
    }

    function w(a, b) {
        if (1 === b.nodeType && eb.hasData(a)) {
            var c, d, e, f = eb._data(a),
                g = eb._data(b, f),
                h = f.events;
            if (h) {
                delete g.handle, g.events = {};
                for (c in h)
                    for (d = 0, e = h[c].length; e > d; d++) eb.event.add(b, c, h[c][d])
            }
            g.data && (g.data = eb.extend({}, g.data))
        }
    }

    function x(a, b) {
        var c, d, e;
        if (1 === b.nodeType) {
            if (c = b.nodeName.toLowerCase(), !cb.noCloneEvent && b[eb.expando]) {
                e = eb._data(b);
                for (d in e.events) eb.removeEvent(b, d, e.handle);
                b.removeAttribute(eb.expando)
            }
            "script" === c && b.text !== a.text ? (t(b).text = a.text, u(b)) : "object" === c ? (b.parentNode && (b.outerHTML = a.outerHTML), cb.html5Clone && a.innerHTML && !eb.trim(b.innerHTML) && (b.innerHTML = a.innerHTML)) : "input" === c && Eb.test(a.type) ? (b.defaultChecked = b.checked = a.checked, b.value !== a.value && (b.value = a.value)) : "option" === c ? b.defaultSelected = b.selected = a.defaultSelected : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue)
        }
    }

    function y(b, c) {
        var d, e = eb(c.createElement(b)).appendTo(c.body),
            f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : eb.css(e[0], "display");
        return e.detach(), f
    }

    function z(a) {
        var b = ob,
            c = _b[a];
        return c || (c = y(a, b), "none" !== c && c || ($b = ($b || eb("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement), b = ($b[0].contentWindow || $b[0].contentDocument).document, b.write(), b.close1(), c = y(a, b), $b.detach()), _b[a] = c), c
    }

    function A(a, b) {
        return {
            get: function() {
                var c = a();
                if (null != c) return c ? void delete this.get : (this.get = b).apply(this, arguments)
            }
        }
    }

    function B(a, b) {
        if (b in a) return b;
        for (var c = b.charAt(0).toUpperCase() + b.slice(1), d = b, e = mc.length; e--;)
            if (b = mc[e] + c, b in a) return b;
        return d
    }

    function C(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) d = a[g], d.style && (f[g] = eb._data(d, "olddisplay"), c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && Cb(d) && (f[g] = eb._data(d, "olddisplay", z(d.nodeName)))) : (e = Cb(d), (c && "none" !== c || !e) && eb._data(d, "olddisplay", e ? c : eb.css(d, "display"))));
        for (g = 0; h > g; g++) d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"));
        return a
    }

    function D(a, b, c) {
        var d = ic.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
    }

    function E(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) "margin" === c && (g += eb.css(a, c + Bb[f], !0, e)), d ? ("content" === c && (g -= eb.css(a, "padding" + Bb[f], !0, e)), "margin" !== c && (g -= eb.css(a, "border" + Bb[f] + "Width", !0, e))) : (g += eb.css(a, "padding" + Bb[f], !0, e), "padding" !== c && (g += eb.css(a, "border" + Bb[f] + "Width", !0, e)));
        return g
    }

    function F(a, b, c) {
        var d = !0,
            e = "width" === b ? a.offsetWidth : a.offsetHeight,
            f = ac(a),
            g = cb.boxSizing && "border-box" === eb.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (e = bc(a, b, f), (0 > e || null == e) && (e = a.style[b]), dc.test(e)) return e;
            d = g && (cb.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0
        }
        return e + E(a, b, c || (g ? "border" : "content"), d, f) + "px"
    }

    function G(a, b, c, d, e) {
        return new G.prototype.init(a, b, c, d, e)
    }

    function H() {
        return setTimeout(function() {
            nc = void 0
        }), nc = eb.now()
    }

    function I(a, b) {
        var c, d = {
                height: a
            },
            e = 0;
        for (b = b ? 1 : 0; 4 > e; e += 2 - b) c = Bb[e], d["margin" + c] = d["padding" + c] = a;
        return b && (d.opacity = d.width = a), d
    }

    function J(a, b, c) {
        for (var d, e = (tc[b] || []).concat(tc["*"]), f = 0, g = e.length; g > f; f++)
            if (d = e[f].call(c, b, a)) return d
    }

    function K(a, b, c) {
        var d, e, f, g, h, i, j, k, l = this,
            m = {},
            n = a.style,
            o = a.nodeType && Cb(a),
            p = eb._data(a, "fxshow");
        c.queue || (h = eb._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, h.empty.fire = function() {
            h.unqueued || i()
        }), h.unqueued++, l.always(function() {
            l.always(function() {
                h.unqueued--, eb.queue(a, "fx").length || h.empty.fire()
            })
        })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [n.overflow, n.overflowX, n.overflowY], j = eb.css(a, "display"), k = "none" === j ? eb._data(a, "olddisplay") || z(a.nodeName) : j, "inline" === k && "none" === eb.css(a, "float") && (cb.inlineBlockNeedsLayout && "inline" !== z(a.nodeName) ? n.zoom = 1 : n.display = "inline-block")), c.overflow && (n.overflow = "hidden", cb.shrinkWrapBlocks() || l.always(function() {
            n.overflow = c.overflow[0], n.overflowX = c.overflow[1], n.overflowY = c.overflow[2]
        }));
        for (d in b)
            if (e = b[d], pc.exec(e)) {
                if (delete b[d], f = f || "toggle" === e, e === (o ? "hide" : "show")) {
                    if ("show" !== e || !p || void 0 === p[d]) continue;
                    o = !0
                }
                m[d] = p && p[d] || eb.style(a, d)
            } else j = void 0;
        if (eb.isEmptyObject(m)) "inline" === ("none" === j ? z(a.nodeName) : j) && (n.display = j);
        else {
            p ? "hidden" in p && (o = p.hidden) : p = eb._data(a, "fxshow", {}), f && (p.hidden = !o), o ? eb(a).show() : l.done(function() {
                eb(a).hide()
            }), l.done(function() {
                var b;
                eb._removeData(a, "fxshow");
                for (b in m) eb.style(a, b, m[b])
            });
            for (d in m) g = J(o ? p[d] : 0, d, l), d in p || (p[d] = g.start, o && (g.end = g.start, g.start = "width" === d || "height" === d ? 1 : 0))
        }
    }

    function L(a, b) {
        var c, d, e, f, g;
        for (c in a)
            if (d = eb.camelCase(c), e = b[d], f = a[c], eb.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = eb.cssHooks[d], g && "expand" in g) {
                f = g.expand(f), delete a[d];
                for (c in f) c in a || (a[c] = f[c], b[c] = e)
            } else b[d] = e
    }

    function M(a, b, c) {
        var d, e, f = 0,
            g = sc.length,
            h = eb.Deferred().always(function() {
                delete i.elem
            }),
            i = function() {
                if (e) return !1;
                for (var b = nc || H(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) j.tweens[g].run(f);
                return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(a, [j]), !1)
            },
            j = h.promise({
                elem: a,
                props: eb.extend({}, b),
                opts: eb.extend(!0, {
                    specialEasing: {}
                }, c),
                originalProperties: b,
                originalOptions: c,
                startTime: nc || H(),
                duration: c.duration,
                tweens: [],
                createTween: function(b, c) {
                    var d = eb.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                    return j.tweens.push(d), d
                },
                stop: function(b) {
                    var c = 0,
                        d = b ? j.tweens.length : 0;
                    if (e) return this;
                    for (e = !0; d > c; c++) j.tweens[c].run(1);
                    return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]), this
                }
            }),
            k = j.props;
        for (L(k, j.opts.specialEasing); g > f; f++)
            if (d = sc[f].call(j, a, k, j.opts)) return d;
        return eb.map(k, J, j), eb.isFunction(j.opts.start) && j.opts.start.call(a, j), eb.fx.timer(eb.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
    }

    function N(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0,
                f = b.toLowerCase().match(tb) || [];
            if (eb.isFunction(c))
                for (; d = f[e++];) "+" === d.charAt(0) ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c)
        }
    }

    function O(a, b, c, d) {
        function e(h) {
            var i;
            return f[h] = !0, eb.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || g || f[j] ? g ? !(i = j) : void 0 : (b.dataTypes.unshift(j), e(j), !1)
            }), i
        }
        var f = {},
            g = a === Rc;
        return e(b.dataTypes[0]) || !f["*"] && e("*")
    }

    function P(a, b) {
        var c, d, e = eb.ajaxSettings.flatOptions || {};
        for (d in b) void 0 !== b[d] && ((e[d] ? a : c || (c = {}))[d] = b[d]);
        return c && eb.extend(!0, a, c), a
    }

    function Q(a, b, c) {
        for (var d, e, f, g, h = a.contents, i = a.dataTypes;
            "*" === i[0];) i.shift(), void 0 === e && (e = a.mimeType || b.getResponseHeader("Content-Type"));
        if (e)
            for (g in h)
                if (h[g] && h[g].test(e)) {
                    i.unshift(g);
                    break
                }
        if (i[0] in c) f = i[0];
        else {
            for (g in c) {
                if (!i[0] || a.converters[g + " " + i[0]]) {
                    f = g;
                    break
                }
                d || (d = g)
            }
            f = f || d
        }
        return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0
    }

    function R(a, b, c, d) {
        var e, f, g, h, i, j = {},
            k = a.dataTypes.slice();
        if (k[1])
            for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        for (f = k.shift(); f;)
            if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift())
                if ("*" === f) f = i;
                else if ("*" !== i && i !== f) {
            if (g = j[i + " " + f] || j["* " + f], !g)
                for (e in j)
                    if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                        g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                        break
                    }
            if (g !== !0)
                if (g && a["throws"]) b = g(b);
                else try {
                    b = g(b)
                } catch (l) {
                    return {
                        state: "parsererror",
                        error: g ? l : "No conversion from " + i + " to " + f
                    }
                }
        }
        return {
            state: "success",
            data: b
        }
    }

    function S(a, b, c, d) {
        var e;
        if (eb.isArray(b)) eb.each(b, function(b, e) {
            c || Vc.test(a) ? d(a, e) : S(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d)
        });
        else if (c || "object" !== eb.type(b)) d(a, b);
        else
            for (e in b) S(a + "[" + e + "]", b[e], c, d)
    }

    function T() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }

    function U() {
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (b) {}
    }

    function V(a) {
        return eb.isWindow(a) ? a : 9 === a.nodeType ? a.defaultView || a.parentWindow : !1
    }
    var W = [],
        X = W.slice,
        Y = W.concat,
        Z = W.push,
        $ = W.indexOf,
        _ = {},
        ab = _.toString,
        bb = _.hasOwnProperty,
        cb = {},
        db = "1.11.1",
        eb = function(a, b) {
            return new eb.fn.init(a, b)
        },
        fb = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        gb = /^-ms-/,
        hb = /-([\da-z])/gi,
        ib = function(a, b) {
            return b.toUpperCase()
        };
    eb.fn = eb.prototype = {
        jquery: db,
        constructor: eb,
        selector: "",
        length: 0,
        toArray: function() {
            return X.call(this)
        },
        get: function(a) {
            return null != a ? 0 > a ? this[a + this.length] : this[a] : X.call(this)
        },
        pushStack: function(a) {
            var b = eb.merge(this.constructor(), a);
            return b.prevObject = this, b.context = this.context, b
        },
        each: function(a, b) {
            return eb.each(this, a, b)
        },
        map: function(a) {
            return this.pushStack(eb.map(this, function(b, c) {
                return a.call(b, c, b)
            }))
        },
        slice: function() {
            return this.pushStack(X.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(a) {
            var b = this.length,
                c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [this[c]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: Z,
        sort: W.sort,
        splice: W.splice
    }, eb.extend = eb.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {},
            h = 1,
            i = arguments.length,
            j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || eb.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++)
            if (null != (e = arguments[h]))
                for (d in e) a = g[d], c = e[d], g !== c && (j && c && (eb.isPlainObject(c) || (b = eb.isArray(c))) ? (b ? (b = !1, f = a && eb.isArray(a) ? a : []) : f = a && eb.isPlainObject(a) ? a : {}, g[d] = eb.extend(j, f, c)) : void 0 !== c && (g[d] = c));
        return g
    }, eb.extend({
        expando: "jQuery" + (db + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a)
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === eb.type(a)
        },
        isArray: Array.isArray || function(a) {
            return "array" === eb.type(a)
        },
        isWindow: function(a) {
            return null != a && a == a.window
        },
        isNumeric: function(a) {
            return !eb.isArray(a) && a - parseFloat(a) >= 0
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) return !1;
            return !0
        },
        isPlainObject: function(a) {
            var b;
            if (!a || "object" !== eb.type(a) || a.nodeType || eb.isWindow(a)) return !1;
            try {
                if (a.constructor && !bb.call(a, "constructor") && !bb.call(a.constructor.prototype, "isPrototypeOf")) return !1
            } catch (c) {
                return !1
            }
            if (cb.ownLast)
                for (b in a) return bb.call(a, b);
            for (b in a);
            return void 0 === b || bb.call(a, b)
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? _[ab.call(a)] || "object" : typeof a
        },
        globalEval: function(b) {
            b && eb.trim(b) && (a.execScript || function(b) {
                a.eval.call(a, b)
            })(b)
        },
        camelCase: function(a) {
            return a.replace(gb, "ms-").replace(hb, ib)
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
        },
        each: function(a, b, d) {
            var e, f = 0,
                g = a.length,
                h = c(a);
            if (d) {
                if (h)
                    for (; g > f && (e = b.apply(a[f], d), e !== !1); f++);
                else
                    for (f in a)
                        if (e = b.apply(a[f], d), e === !1) break
            } else if (h)
                for (; g > f && (e = b.call(a[f], f, a[f]), e !== !1); f++);
            else
                for (f in a)
                    if (e = b.call(a[f], f, a[f]), e === !1) break; return a
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(fb, "")
        },
        makeArray: function(a, b) {
            var d = b || [];
            return null != a && (c(Object(a)) ? eb.merge(d, "string" == typeof a ? [a] : a) : Z.call(d, a)), d
        },
        inArray: function(a, b, c) {
            var d;
            if (b) {
                if ($) return $.call(b, a, c);
                for (d = b.length, c = c ? 0 > c ? Math.max(0, d + c) : c : 0; d > c; c++)
                    if (c in b && b[c] === a) return c
            }
            return -1
        },
        merge: function(a, b) {
            for (var c = +b.length, d = 0, e = a.length; c > d;) a[e++] = b[d++];
            if (c !== c)
                for (; void 0 !== b[d];) a[e++] = b[d++];
            return a.length = e, a
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
            return e
        },
        map: function(a, b, d) {
            var e, f = 0,
                g = a.length,
                h = c(a),
                i = [];
            if (h)
                for (; g > f; f++) e = b(a[f], f, d), null != e && i.push(e);
            else
                for (f in a) e = b(a[f], f, d), null != e && i.push(e);
            return Y.apply([], i)
        },
        guid: 1,
        proxy: function(a, b) {
            var c, d, e;
            return "string" == typeof b && (e = a[b], b = a, a = e), eb.isFunction(a) ? (c = X.call(arguments, 2), d = function() {
                return a.apply(b || this, c.concat(X.call(arguments)))
            }, d.guid = a.guid = a.guid || eb.guid++, d) : void 0
        },
        now: function() {
            return +new Date
        },
        support: cb
    }), eb.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
        _["[object " + b + "]"] = b.toLowerCase()
    });
    var jb = function(a) {
        function b(a, b, c, d) {
            var e, f, g, h, i, j, l, n, o, p;
            if ((b ? b.ownerDocument || b : O) !== G && F(b), b = b || G, c = c || [], !a || "string" != typeof a) return c;
            if (1 !== (h = b.nodeType) && 9 !== h) return [];
            if (I && !d) {
                if (e = sb.exec(a))
                    if (g = e[1]) {
                        if (9 === h) {
                            if (f = b.getElementById(g), !f || !f.parentNode) return c;
                            if (f.id === g) return c.push(f), c
                        } else if (b.ownerDocument && (f = b.ownerDocument.getElementById(g)) && M(b, f) && f.id === g) return c.push(f), c
                    } else {
                        if (e[2]) return _.apply(c, b.getElementsByTagName(a)), c;
                        if ((g = e[3]) && v.getElementsByClassName && b.getElementsByClassName) return _.apply(c, b.getElementsByClassName(g)), c
                    }
                if (v.qsa && (!J || !J.test(a))) {
                    if (n = l = N, o = b, p = 9 === h && a, 1 === h && "object" !== b.nodeName.toLowerCase()) {
                        for (j = z(a), (l = b.getAttribute("id")) ? n = l.replace(ub, "\\$&") : b.setAttribute("id", n), n = "[id='" + n + "'] ", i = j.length; i--;) j[i] = n + m(j[i]);
                        o = tb.test(a) && k(b.parentNode) || b, p = j.join(",")
                    }
                    if (p) try {
                        return _.apply(c, o.querySelectorAll(p)), c
                    } catch (q) {} finally {
                        l || b.removeAttribute("id")
                    }
                }
            }
            return B(a.replace(ib, "$1"), b, c, d)
        }

        function c() {
            function a(c, d) {
                return b.push(c + " ") > w.cacheLength && delete a[b.shift()], a[c + " "] = d
            }
            var b = [];
            return a
        }

        function d(a) {
            return a[N] = !0, a
        }

        function e(a) {
            var b = G.createElement("div");
            try {
                return !!a(b)
            } catch (c) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null
            }
        }

        function f(a, b) {
            for (var c = a.split("|"), d = a.length; d--;) w.attrHandle[c[d]] = b
        }

        function g(a, b) {
            var c = b && a,
                d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || W) - (~a.sourceIndex || W);
            if (d) return d;
            if (c)
                for (; c = c.nextSibling;)
                    if (c === b) return -1;
            return a ? 1 : -1
        }

        function h(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a
            }
        }

        function i(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a
            }
        }

        function j(a) {
            return d(function(b) {
                return b = +b, d(function(c, d) {
                    for (var e, f = a([], c.length, b), g = f.length; g--;) c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                })
            })
        }

        function k(a) {
            return a && typeof a.getElementsByTagName !== V && a
        }

        function l() {}

        function m(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) d += a[b].value;
            return d
        }

        function n(a, b, c) {
            var d = b.dir,
                e = c && "parentNode" === d,
                f = Q++;
            return b.first ? function(b, c, f) {
                for (; b = b[d];)
                    if (1 === b.nodeType || e) return a(b, c, f)
            } : function(b, c, g) {
                var h, i, j = [P, f];
                if (g) {
                    for (; b = b[d];)
                        if ((1 === b.nodeType || e) && a(b, c, g)) return !0
                } else
                    for (; b = b[d];)
                        if (1 === b.nodeType || e) {
                            if (i = b[N] || (b[N] = {}), (h = i[d]) && h[0] === P && h[1] === f) return j[2] = h[2];
                            if (i[d] = j, j[2] = a(b, c, g)) return !0
                        }
            }
        }

        function o(a) {
            return a.length > 1 ? function(b, c, d) {
                for (var e = a.length; e--;)
                    if (!a[e](b, c, d)) return !1;
                return !0
            } : a[0]
        }

        function p(a, c, d) {
            for (var e = 0, f = c.length; f > e; e++) b(a, c[e], d);
            return d
        }

        function q(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++)(f = a[h]) && (!c || c(f, d, e)) && (g.push(f), j && b.push(h));
            return g
        }

        function r(a, b, c, e, f, g) {
            return e && !e[N] && (e = r(e)), f && !f[N] && (f = r(f, g)), d(function(d, g, h, i) {
                var j, k, l, m = [],
                    n = [],
                    o = g.length,
                    r = d || p(b || "*", h.nodeType ? [h] : h, []),
                    s = !a || !d && b ? r : q(r, m, a, h, i),
                    t = c ? f || (d ? a : o || e) ? [] : g : s;
                if (c && c(s, t, h, i), e)
                    for (j = q(t, n), e(j, [], h, i), k = j.length; k--;)(l = j[k]) && (t[n[k]] = !(s[n[k]] = l));
                if (d) {
                    if (f || a) {
                        if (f) {
                            for (j = [], k = t.length; k--;)(l = t[k]) && j.push(s[k] = l);
                            f(null, t = [], j, i)
                        }
                        for (k = t.length; k--;)(l = t[k]) && (j = f ? bb.call(d, l) : m[k]) > -1 && (d[j] = !(g[j] = l))
                    }
                } else t = q(t === g ? t.splice(o, t.length) : t), f ? f(null, g, t, i) : _.apply(g, t)
            })
        }

        function s(a) {
            for (var b, c, d, e = a.length, f = w.relative[a[0].type], g = f || w.relative[" "], h = f ? 1 : 0, i = n(function(a) {
                    return a === b
                }, g, !0), j = n(function(a) {
                    return bb.call(b, a) > -1
                }, g, !0), k = [function(a, c, d) {
                    return !f && (d || c !== C) || ((b = c).nodeType ? i(a, c, d) : j(a, c, d))
                }]; e > h; h++)
                if (c = w.relative[a[h].type]) k = [n(o(k), c)];
                else {
                    if (c = w.filter[a[h].type].apply(null, a[h].matches), c[N]) {
                        for (d = ++h; e > d && !w.relative[a[d].type]; d++);
                        return r(h > 1 && o(k), h > 1 && m(a.slice(0, h - 1).concat({
                            value: " " === a[h - 2].type ? "*" : ""
                        })).replace(ib, "$1"), c, d > h && s(a.slice(h, d)), e > d && s(a = a.slice(d)), e > d && m(a))
                    }
                    k.push(c)
                }
            return o(k)
        }

        function t(a, c) {
            var e = c.length > 0,
                f = a.length > 0,
                g = function(d, g, h, i, j) {
                    var k, l, m, n = 0,
                        o = "0",
                        p = d && [],
                        r = [],
                        s = C,
                        t = d || f && w.find.TAG("*", j),
                        u = P += null == s ? 1 : Math.random() || .1,
                        v = t.length;
                    for (j && (C = g !== G && g); o !== v && null != (k = t[o]); o++) {
                        if (f && k) {
                            for (l = 0; m = a[l++];)
                                if (m(k, g, h)) {
                                    i.push(k);
                                    break
                                }
                            j && (P = u)
                        }
                        e && ((k = !m && k) && n--, d && p.push(k))
                    }
                    if (n += o, e && o !== n) {
                        for (l = 0; m = c[l++];) m(p, r, g, h);
                        if (d) {
                            if (n > 0)
                                for (; o--;) p[o] || r[o] || (r[o] = Z.call(i));
                            r = q(r)
                        }
                        _.apply(i, r), j && !d && r.length > 0 && n + c.length > 1 && b.uniqueSort(i)
                    }
                    return j && (P = u, C = s), p
                };
            return e ? d(g) : g
        }
        var u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N = "sizzle" + -new Date,
            O = a.document,
            P = 0,
            Q = 0,
            R = c(),
            S = c(),
            T = c(),
            U = function(a, b) {
                return a === b && (E = !0), 0
            },
            V = "undefined",
            W = 1 << 31,
            X = {}.hasOwnProperty,
            Y = [],
            Z = Y.pop,
            $ = Y.push,
            _ = Y.push,
            ab = Y.slice,
            bb = Y.indexOf || function(a) {
                for (var b = 0, c = this.length; c > b; b++)
                    if (this[b] === a) return b;
                return -1
            },
            cb = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            db = "[\\x20\\t\\r\\n\\f]",
            eb = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            fb = eb.replace("w", "w#"),
            gb = "\\[" + db + "*(" + eb + ")(?:" + db + "*([*^$|!~]?=)" + db + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + fb + "))|)" + db + "*\\]",
            hb = ":(" + eb + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + gb + ")*)|.*)\\)|)",
            ib = new RegExp("^" + db + "+|((?:^|[^\\\\])(?:\\\\.)*)" + db + "+$", "g"),
            jb = new RegExp("^" + db + "*," + db + "*"),
            kb = new RegExp("^" + db + "*([>+~]|" + db + ")" + db + "*"),
            lb = new RegExp("=" + db + "*([^\\]'\"]*?)" + db + "*\\]", "g"),
            mb = new RegExp(hb),
            nb = new RegExp("^" + fb + "$"),
            ob = {
                ID: new RegExp("^#(" + eb + ")"),
                CLASS: new RegExp("^\\.(" + eb + ")"),
                TAG: new RegExp("^(" + eb.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + gb),
                PSEUDO: new RegExp("^" + hb),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + db + "*(even|odd|(([+-]|)(\\d*)n|)" + db + "*(?:([+-]|)" + db + "*(\\d+)|))" + db + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + cb + ")$", "i"),
                needsContext: new RegExp("^" + db + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + db + "*((?:-\\d)?\\d*)" + db + "*\\)|)(?=[^-]|$)", "i")
            },
            pb = /^(?:input|select|textarea|button)$/i,
            qb = /^h\d$/i,
            rb = /^[^{]+\{\s*\[native \w/,
            sb = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            tb = /[+~]/,
            ub = /'|\\/g,
            vb = new RegExp("\\\\([\\da-f]{1,6}" + db + "?|(" + db + ")|.)", "ig"),
            wb = function(a, b, c) {
                var d = "0x" + b - 65536;
                return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320)
            };
        try {
            _.apply(Y = ab.call(O.childNodes), O.childNodes), Y[O.childNodes.length].nodeType
        } catch (xb) {
            _ = {
                apply: Y.length ? function(a, b) {
                    $.apply(a, ab.call(b))
                } : function(a, b) {
                    for (var c = a.length, d = 0; a[c++] = b[d++];);
                    a.length = c - 1
                }
            }
        }
        v = b.support = {}, y = b.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1
        }, F = b.setDocument = function(a) {
            var b, c = a ? a.ownerDocument || a : O,
                d = c.defaultView;
            return c !== G && 9 === c.nodeType && c.documentElement ? (G = c, H = c.documentElement, I = !y(c), d && d !== d.top && (d.addEventListener ? d.addEventListener("unload", function() {
                F()
            }, !1) : d.attachEvent && d.attachEvent("onunload", function() {
                F()
            })), v.attributes = e(function(a) {
                return a.className = "i", !a.getAttribute("className")
            }), v.getElementsByTagName = e(function(a) {
                return a.appendChild(c.createComment("")), !a.getElementsByTagName("*").length
            }), v.getElementsByClassName = rb.test(c.getElementsByClassName) && e(function(a) {
                return a.innerHTML = "<div class='a'></div><div class='a i'></div>", a.firstChild.className = "i", 2 === a.getElementsByClassName("i").length
            }), v.getById = e(function(a) {
                return H.appendChild(a).id = N, !c.getElementsByName || !c.getElementsByName(N).length
            }), v.getById ? (w.find.ID = function(a, b) {
                if (typeof b.getElementById !== V && I) {
                    var c = b.getElementById(a);
                    return c && c.parentNode ? [c] : []
                }
            }, w.filter.ID = function(a) {
                var b = a.replace(vb, wb);
                return function(a) {
                    return a.getAttribute("id") === b
                }
            }) : (delete w.find.ID, w.filter.ID = function(a) {
                var b = a.replace(vb, wb);
                return function(a) {
                    var c = typeof a.getAttributeNode !== V && a.getAttributeNode("id");
                    return c && c.value === b
                }
            }), w.find.TAG = v.getElementsByTagName ? function(a, b) {
                return typeof b.getElementsByTagName !== V ? b.getElementsByTagName(a) : void 0
            } : function(a, b) {
                var c, d = [],
                    e = 0,
                    f = b.getElementsByTagName(a);
                if ("*" === a) {
                    for (; c = f[e++];) 1 === c.nodeType && d.push(c);
                    return d
                }
                return f
            }, w.find.CLASS = v.getElementsByClassName && function(a, b) {
                return typeof b.getElementsByClassName !== V && I ? b.getElementsByClassName(a) : void 0
            }, K = [], J = [], (v.qsa = rb.test(c.querySelectorAll)) && (e(function(a) {
                a.innerHTML = "<select msallowclip=''><option selected=''></option></select>", a.querySelectorAll("[msallowclip^='']").length && J.push("[*^$]=" + db + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || J.push("\\[" + db + "*(?:value|" + cb + ")"), a.querySelectorAll(":checked").length || J.push(":checked")
            }), e(function(a) {
                var b = c.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && J.push("name" + db + "*[*^$|!~]?="), a.querySelectorAll(":enabled").length || J.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), J.push(",.*:")
            })), (v.matchesSelector = rb.test(L = H.matches || H.webkitMatchesSelector || H.mozMatchesSelector || H.oMatchesSelector || H.msMatchesSelector)) && e(function(a) {
                v.disconnectedMatch = L.call(a, "div"), L.call(a, "[s!='']:x"), K.push("!=", hb)
            }), J = J.length && new RegExp(J.join("|")), K = K.length && new RegExp(K.join("|")), b = rb.test(H.compareDocumentPosition), M = b || rb.test(H.contains) ? function(a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a,
                    d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)))
            } : function(a, b) {
                if (b)
                    for (; b = b.parentNode;)
                        if (b === a) return !0;
                return !1
            }, U = b ? function(a, b) {
                if (a === b) return E = !0, 0;
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !v.sortDetached && b.compareDocumentPosition(a) === d ? a === c || a.ownerDocument === O && M(O, a) ? -1 : b === c || b.ownerDocument === O && M(O, b) ? 1 : D ? bb.call(D, a) - bb.call(D, b) : 0 : 4 & d ? -1 : 1)
            } : function(a, b) {
                if (a === b) return E = !0, 0;
                var d, e = 0,
                    f = a.parentNode,
                    h = b.parentNode,
                    i = [a],
                    j = [b];
                if (!f || !h) return a === c ? -1 : b === c ? 1 : f ? -1 : h ? 1 : D ? bb.call(D, a) - bb.call(D, b) : 0;
                if (f === h) return g(a, b);
                for (d = a; d = d.parentNode;) i.unshift(d);
                for (d = b; d = d.parentNode;) j.unshift(d);
                for (; i[e] === j[e];) e++;
                return e ? g(i[e], j[e]) : i[e] === O ? -1 : j[e] === O ? 1 : 0
            }, c) : G
        }, b.matches = function(a, c) {
            return b(a, null, null, c)
        }, b.matchesSelector = function(a, c) {
            if ((a.ownerDocument || a) !== G && F(a), c = c.replace(lb, "='$1']"), !(!v.matchesSelector || !I || K && K.test(c) || J && J.test(c))) try {
                var d = L.call(a, c);
                if (d || v.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d
            } catch (e) {}
            return b(c, G, null, [a]).length > 0
        }, b.contains = function(a, b) {
            return (a.ownerDocument || a) !== G && F(a), M(a, b)
        }, b.attr = function(a, b) {
            (a.ownerDocument || a) !== G && F(a);
            var c = w.attrHandle[b.toLowerCase()],
                d = c && X.call(w.attrHandle, b.toLowerCase()) ? c(a, b, !I) : void 0;
            return void 0 !== d ? d : v.attributes || !I ? a.getAttribute(b) : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
        }, b.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a)
        }, b.uniqueSort = function(a) {
            var b, c = [],
                d = 0,
                e = 0;
            if (E = !v.detectDuplicates, D = !v.sortStable && a.slice(0), a.sort(U), E) {
                for (; b = a[e++];) b === a[e] && (d = c.push(e));
                for (; d--;) a.splice(c[d], 1)
            }
            return D = null, a
        }, x = b.getText = function(a) {
            var b, c = "",
                d = 0,
                e = a.nodeType;
            if (e) {
                if (1 === e || 9 === e || 11 === e) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c += x(a)
                } else if (3 === e || 4 === e) return a.nodeValue
            } else
                for (; b = a[d++];) c += x(b);
            return c
        }, w = b.selectors = {
            cacheLength: 50,
            createPseudo: d,
            match: ob,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(vb, wb), a[3] = (a[3] || a[4] || a[5] || "").replace(vb, wb), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4)
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || b.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && b.error(a[0]), a
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return ob.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && mb.test(c) && (b = z(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3))
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(vb, wb).toLowerCase();
                    return "*" === a ? function() {
                        return !0
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b
                    }
                },
                CLASS: function(a) {
                    var b = R[a + " "];
                    return b || (b = new RegExp("(^|" + db + ")" + a + "(" + db + "|$)")) && R(a, function(a) {
                        return b.test("string" == typeof a.className && a.className || typeof a.getAttribute !== V && a.getAttribute("class") || "")
                    })
                },
                ATTR: function(a, c, d) {
                    return function(e) {
                        var f = b.attr(e, a);
                        return null == f ? "!=" === c : c ? (f += "", "=" === c ? f === d : "!=" === c ? f !== d : "^=" === c ? d && 0 === f.indexOf(d) : "*=" === c ? d && f.indexOf(d) > -1 : "$=" === c ? d && f.slice(-d.length) === d : "~=" === c ? (" " + f + " ").indexOf(d) > -1 : "|=" === c ? f === d || f.slice(0, d.length + 1) === d + "-" : !1) : !0
                    }
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3),
                        g = "last" !== a.slice(-4),
                        h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode
                    } : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling",
                            q = b.parentNode,
                            r = h && b.nodeName.toLowerCase(),
                            s = !i && !h;
                        if (q) {
                            if (f) {
                                for (; p;) {
                                    for (l = b; l = l[p];)
                                        if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) return !1;
                                    o = p = "only" === a && !o && "nextSibling"
                                }
                                return !0
                            }
                            if (o = [g ? q.firstChild : q.lastChild], g && s) {
                                for (k = q[N] || (q[N] = {}), j = k[a] || [], n = j[0] === P && j[1], m = j[0] === P && j[2], l = n && q.childNodes[n]; l = ++n && l && l[p] || (m = n = 0) || o.pop();)
                                    if (1 === l.nodeType && ++m && l === b) {
                                        k[a] = [P, n, m];
                                        break
                                    }
                            } else if (s && (j = (b[N] || (b[N] = {}))[a]) && j[0] === P) m = j[1];
                            else
                                for (;
                                    (l = ++n && l && l[p] || (m = n = 0) || o.pop()) && ((h ? l.nodeName.toLowerCase() !== r : 1 !== l.nodeType) || !++m || (s && ((l[N] || (l[N] = {}))[a] = [P, m]), l !== b)););
                            return m -= e, m === d || m % d === 0 && m / d >= 0
                        }
                    }
                },
                PSEUDO: function(a, c) {
                    var e, f = w.pseudos[a] || w.setFilters[a.toLowerCase()] || b.error("unsupported pseudo: " + a);
                    return f[N] ? f(c) : f.length > 1 ? (e = [a, a, "", c], w.setFilters.hasOwnProperty(a.toLowerCase()) ? d(function(a, b) {
                        for (var d, e = f(a, c), g = e.length; g--;) d = bb.call(a, e[g]), a[d] = !(b[d] = e[g])
                    }) : function(a) {
                        return f(a, 0, e)
                    }) : f
                }
            },
            pseudos: {
                not: d(function(a) {
                    var b = [],
                        c = [],
                        e = A(a.replace(ib, "$1"));
                    return e[N] ? d(function(a, b, c, d) {
                        for (var f, g = e(a, null, d, []), h = a.length; h--;)(f = g[h]) && (a[h] = !(b[h] = f))
                    }) : function(a, d, f) {
                        return b[0] = a, e(b, null, f, c), !c.pop()
                    }
                }),
                has: d(function(a) {
                    return function(c) {
                        return b(a, c).length > 0
                    }
                }),
                contains: d(function(a) {
                    return function(b) {
                        return (b.textContent || b.innerText || x(b)).indexOf(a) > -1
                    }
                }),
                lang: d(function(a) {
                    return nb.test(a || "") || b.error("unsupported lang: " + a), a = a.replace(vb, wb).toLowerCase(),
                        function(b) {
                            var c;
                            do
                                if (c = I ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-");
                            while ((b = b.parentNode) && 1 === b.nodeType);
                            return !1
                        }
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id
                },
                root: function(a) {
                    return a === H
                },
                focus: function(a) {
                    return a === G.activeElement && (!G.hasFocus || G.hasFocus()) && !!(a.type || a.href || ~a.tabIndex)
                },
                enabled: function(a) {
                    return a.disabled === !1
                },
                disabled: function(a) {
                    return a.disabled === !0
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex, a.selected === !0
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling)
                        if (a.nodeType < 6) return !1;
                    return !0
                },
                parent: function(a) {
                    return !w.pseudos.empty(a)
                },
                header: function(a) {
                    return qb.test(a.nodeName)
                },
                input: function(a) {
                    return pb.test(a.nodeName)
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase())
                },
                first: j(function() {
                    return [0]
                }),
                last: j(function(a, b) {
                    return [b - 1]
                }),
                eq: j(function(a, b, c) {
                    return [0 > c ? c + b : c]
                }),
                even: j(function(a, b) {
                    for (var c = 0; b > c; c += 2) a.push(c);
                    return a
                }),
                odd: j(function(a, b) {
                    for (var c = 1; b > c; c += 2) a.push(c);
                    return a
                }),
                lt: j(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; --d >= 0;) a.push(d);
                    return a
                }),
                gt: j(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; ++d < b;) a.push(d);
                    return a
                })
            }
        }, w.pseudos.nth = w.pseudos.eq;
        for (u in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) w.pseudos[u] = h(u);
        for (u in {
                submit: !0,
                reset: !0
            }) w.pseudos[u] = i(u);
        return l.prototype = w.filters = w.pseudos, w.setFilters = new l, z = b.tokenize = function(a, c) {
            var d, e, f, g, h, i, j, k = S[a + " "];
            if (k) return c ? 0 : k.slice(0);
            for (h = a, i = [], j = w.preFilter; h;) {
                (!d || (e = jb.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push(f = [])), d = !1, (e = kb.exec(h)) && (d = e.shift(), f.push({
                    value: d,
                    type: e[0].replace(ib, " ")
                }), h = h.slice(d.length));
                for (g in w.filter) !(e = ob[g].exec(h)) || j[g] && !(e = j[g](e)) || (d = e.shift(), f.push({
                    value: d,
                    type: g,
                    matches: e
                }), h = h.slice(d.length));
                if (!d) break
            }
            return c ? h.length : h ? b.error(a) : S(a, i).slice(0)
        }, A = b.compile = function(a, b) {
            var c, d = [],
                e = [],
                f = T[a + " "];
            if (!f) {
                for (b || (b = z(a)), c = b.length; c--;) f = s(b[c]), f[N] ? d.push(f) : e.push(f);
                f = T(a, t(e, d)), f.selector = a
            }
            return f
        }, B = b.select = function(a, b, c, d) {
            var e, f, g, h, i, j = "function" == typeof a && a,
                l = !d && z(a = j.selector || a);
            if (c = c || [], 1 === l.length) {
                if (f = l[0] = l[0].slice(0), f.length > 2 && "ID" === (g = f[0]).type && v.getById && 9 === b.nodeType && I && w.relative[f[1].type]) {
                    if (b = (w.find.ID(g.matches[0].replace(vb, wb), b) || [])[0], !b) return c;
                    j && (b = b.parentNode), a = a.slice(f.shift().value.length)
                }
                for (e = ob.needsContext.test(a) ? 0 : f.length; e-- && (g = f[e], !w.relative[h = g.type]);)
                    if ((i = w.find[h]) && (d = i(g.matches[0].replace(vb, wb), tb.test(f[0].type) && k(b.parentNode) || b))) {
                        if (f.splice(e, 1), a = d.length && m(f), !a) return _.apply(c, d), c;
                        break
                    }
            }
            return (j || A(a, l))(d, b, !I, c, tb.test(a) && k(b.parentNode) || b), c
        }, v.sortStable = N.split("").sort(U).join("") === N, v.detectDuplicates = !!E, F(), v.sortDetached = e(function(a) {
            return 1 & a.compareDocumentPosition(G.createElement("div"))
        }), e(function(a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href")
        }) || f("type|href|height|width", function(a, b, c) {
            return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2)
        }), v.attributes && e(function(a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value")
        }) || f("value", function(a, b, c) {
            return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue
        }), e(function(a) {
            return null == a.getAttribute("disabled")
        }) || f(cb, function(a, b, c) {
            var d;
            return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
        }), b
    }(a);
    eb.find = jb, eb.expr = jb.selectors, eb.expr[":"] = eb.expr.pseudos, eb.unique = jb.uniqueSort, eb.text = jb.getText, eb.isXMLDoc = jb.isXML, eb.contains = jb.contains;
    var kb = eb.expr.match.needsContext,
        lb = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        mb = /^.[^:#\[\.,]*$/;
    eb.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? eb.find.matchesSelector(d, a) ? [d] : [] : eb.find.matches(a, eb.grep(b, function(a) {
            return 1 === a.nodeType
        }))
    }, eb.fn.extend({
        find: function(a) {
            var b, c = [],
                d = this,
                e = d.length;
            if ("string" != typeof a) return this.pushStack(eb(a).filter(function() {
                for (b = 0; e > b; b++)
                    if (eb.contains(d[b], this)) return !0
            }));
            for (b = 0; e > b; b++) eb.find(a, d[b], c);
            return c = this.pushStack(e > 1 ? eb.unique(c) : c), c.selector = this.selector ? this.selector + " " + a : a, c
        },
        filter: function(a) {
            return this.pushStack(d(this, a || [], !1))
        },
        not: function(a) {
            return this.pushStack(d(this, a || [], !0))
        },
        is: function(a) {
            return !!d(this, "string" == typeof a && kb.test(a) ? eb(a) : a || [], !1).length
        }
    });
    var nb, ob = a.document,
        pb = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        qb = eb.fn.init = function(a, b) {
            var c, d;
            if (!a) return this;
            if ("string" == typeof a) {
                if (c = "<" === a.charAt(0) && ">" === a.charAt(a.length - 1) && a.length >= 3 ? [null, a, null] : pb.exec(a), !c || !c[1] && b) return !b || b.jquery ? (b || nb).find(a) : this.constructor(b).find(a);
                if (c[1]) {
                    if (b = b instanceof eb ? b[0] : b, eb.merge(this, eb.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : ob, !0)), lb.test(c[1]) && eb.isPlainObject(b))
                        for (c in b) eb.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
                    return this
                }
                if (d = ob.getElementById(c[2]), d && d.parentNode) {
                    if (d.id !== c[2]) return nb.find(a);
                    this.length = 1, this[0] = d
                }
                return this.context = ob, this.selector = a, this
            }
            return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : eb.isFunction(a) ? "undefined" != typeof nb.ready ? nb.ready(a) : a(eb) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), eb.makeArray(a, this))
        };
    qb.prototype = eb.fn, nb = eb(ob);
    var rb = /^(?:parents|prev(?:Until|All))/,
        sb = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    eb.extend({
        dir: function(a, b, c) {
            for (var d = [], e = a[b]; e && 9 !== e.nodeType && (void 0 === c || 1 !== e.nodeType || !eb(e).is(c));) 1 === e.nodeType && d.push(e), e = e[b];
            return d
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
            return c
        }
    }), eb.fn.extend({
        has: function(a) {
            var b, c = eb(a, this),
                d = c.length;
            return this.filter(function() {
                for (b = 0; d > b; b++)
                    if (eb.contains(this, c[b])) return !0
            })
        },
        closest: function(a, b) {
            for (var c, d = 0, e = this.length, f = [], g = kb.test(a) || "string" != typeof a ? eb(a, b || this.context) : 0; e > d; d++)
                for (c = this[d]; c && c !== b; c = c.parentNode)
                    if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && eb.find.matchesSelector(c, a))) {
                        f.push(c);
                        break
                    }
            return this.pushStack(f.length > 1 ? eb.unique(f) : f)
        },
        index: function(a) {
            return a ? "string" == typeof a ? eb.inArray(this[0], eb(a)) : eb.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(a, b) {
            return this.pushStack(eb.unique(eb.merge(this.get(), eb(a, b))))
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
        }
    }), eb.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null
        },
        parents: function(a) {
            return eb.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return eb.dir(a, "parentNode", c)
        },
        next: function(a) {
            return e(a, "nextSibling")
        },
        prev: function(a) {
            return e(a, "previousSibling")
        },
        nextAll: function(a) {
            return eb.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return eb.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return eb.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return eb.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return eb.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return eb.sibling(a.firstChild)
        },
        contents: function(a) {
            return eb.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : eb.merge([], a.childNodes)
        }
    }, function(a, b) {
        eb.fn[a] = function(c, d) {
            var e = eb.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = eb.filter(d, e)), this.length > 1 && (sb[a] || (e = eb.unique(e)), rb.test(a) && (e = e.reverse())), this.pushStack(e)
        }
    });
    var tb = /\S+/g,
        ub = {};
    eb.Callbacks = function(a) {
        a = "string" == typeof a ? ub[a] || f(a) : eb.extend({}, a);
        var b, c, d, e, g, h, i = [],
            j = !a.once && [],
            k = function(f) {
                for (c = a.memory && f, d = !0, g = h || 0, h = 0, e = i.length, b = !0; i && e > g; g++)
                    if (i[g].apply(f[0], f[1]) === !1 && a.stopOnFalse) {
                        c = !1;
                        break
                    }
                b = !1, i && (j ? j.length && k(j.shift()) : c ? i = [] : l.disable())
            },
            l = {
                add: function() {
                    if (i) {
                        var d = i.length;
                        ! function f(b) {
                            eb.each(b, function(b, c) {
                                var d = eb.type(c);
                                "function" === d ? a.unique && l.has(c) || i.push(c) : c && c.length && "string" !== d && f(c)
                            })
                        }(arguments), b ? e = i.length : c && (h = d, k(c))
                    }
                    return this
                },
                remove: function() {
                    return i && eb.each(arguments, function(a, c) {
                        for (var d;
                            (d = eb.inArray(c, i, d)) > -1;) i.splice(d, 1), b && (e >= d && e--, g >= d && g--)
                    }), this
                },
                has: function(a) {
                    return a ? eb.inArray(a, i) > -1 : !(!i || !i.length)
                },
                empty: function() {
                    return i = [], e = 0, this
                },
                disable: function() {
                    return i = j = c = void 0, this
                },
                disabled: function() {
                    return !i
                },
                lock: function() {
                    return j = void 0, c || l.disable(), this
                },
                locked: function() {
                    return !j
                },
                fireWith: function(a, c) {
                    return !i || d && !j || (c = c || [], c = [a, c.slice ? c.slice() : c], b ? j.push(c) : k(c)), this
                },
                fire: function() {
                    return l.fireWith(this, arguments), this
                },
                fired: function() {
                    return !!d
                }
            };
        return l
    }, eb.extend({
        Deferred: function(a) {
            var b = [
                    ["resolve", "done", eb.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", eb.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", eb.Callbacks("memory")]
                ],
                c = "pending",
                d = {
                    state: function() {
                        return c
                    },
                    always: function() {
                        return e.done(arguments).fail(arguments), this
                    },
                    then: function() {
                        var a = arguments;
                        return eb.Deferred(function(c) {
                            eb.each(b, function(b, f) {
                                var g = eb.isFunction(a[b]) && a[b];
                                e[f[1]](function() {
                                    var a = g && g.apply(this, arguments);
                                    a && eb.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments)
                                })
                            }), a = null
                        }).promise()
                    },
                    promise: function(a) {
                        return null != a ? eb.extend(a, d) : d
                    }
                },
                e = {};
            return d.pipe = d.then, eb.each(b, function(a, f) {
                var g = f[2],
                    h = f[3];
                d[f[1]] = g.add, h && g.add(function() {
                    c = h
                }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {
                    return e[f[0] + "With"](this === e ? d : this, arguments), this
                }, e[f[0] + "With"] = g.fireWith
            }), d.promise(e), a && a.call(e, e), e
        },
        when: function(a) {
            var b, c, d, e = 0,
                f = X.call(arguments),
                g = f.length,
                h = 1 !== g || a && eb.isFunction(a.promise) ? g : 0,
                i = 1 === h ? a : eb.Deferred(),
                j = function(a, c, d) {
                    return function(e) {
                        c[a] = this, d[a] = arguments.length > 1 ? X.call(arguments) : e, d === b ? i.notifyWith(c, d) : --h || i.resolveWith(c, d)
                    }
                };
            if (g > 1)
                for (b = new Array(g), c = new Array(g), d = new Array(g); g > e; e++) f[e] && eb.isFunction(f[e].promise) ? f[e].promise().done(j(e, d, f)).fail(i.reject).progress(j(e, c, b)) : --h;
            return h || i.resolveWith(d, f), i.promise()
        }
    });
    var vb;
    eb.fn.ready = function(a) {
        return eb.ready.promise().done(a), this
    }, eb.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? eb.readyWait++ : eb.ready(!0)
        },
        ready: function(a) {
            if (a === !0 ? !--eb.readyWait : !eb.isReady) {
                if (!ob.body) return setTimeout(eb.ready);
                eb.isReady = !0, a !== !0 && --eb.readyWait > 0 || (vb.resolveWith(ob, [eb]), eb.fn.triggerHandler && (eb(ob).triggerHandler("ready"), eb(ob).off("ready")))
            }
        }
    }), eb.ready.promise = function(b) {
        if (!vb)
            if (vb = eb.Deferred(), "complete" === ob.readyState) setTimeout(eb.ready);
            else if (ob.addEventListener) ob.addEventListener("DOMContentLoaded", h, !1), a.addEventListener("load", h, !1);
        else {
            ob.attachEvent("onreadystatechange", h), a.attachEvent("onload", h);
            var c = !1;
            try {
                c = null == a.frameElement && ob.documentElement
            } catch (d) {}
            c && c.doScroll && ! function e() {
                if (!eb.isReady) {
                    try {
                        c.doScroll("left")
                    } catch (a) {
                        return setTimeout(e, 50)
                    }
                    g(), eb.ready()
                }
            }()
        }
        return vb.promise(b)
    };
    var wb, xb = "undefined";
    for (wb in eb(cb)) break;
    cb.ownLast = "0" !== wb, cb.inlineBlockNeedsLayout = !1, eb(function() {
            var a, b, c, d;
            c = ob.getElementsByTagName("body")[0], c && c.style && (b = ob.createElement("div"), d = ob.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), typeof b.style.zoom !== xb && (b.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1", cb.inlineBlockNeedsLayout = a = 3 === b.offsetWidth, a && (c.style.zoom = 1)), c.removeChild(d))
        }),
        function() {
            var a = ob.createElement("div");
            if (null == cb.deleteExpando) {
                cb.deleteExpando = !0;
                try {
                    delete a.test
                } catch (b) {
                    cb.deleteExpando = !1
                }
            }
            a = null
        }(), eb.acceptData = function(a) {
            var b = eb.noData[(a.nodeName + " ").toLowerCase()],
                c = +a.nodeType || 1;
            return 1 !== c && 9 !== c ? !1 : !b || b !== !0 && a.getAttribute("classid") === b
        };
    var yb = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        zb = /([A-Z])/g;
    eb.extend({
        cache: {},
        noData: {
            "applet ": !0,
            "embed ": !0,
            "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        },
        hasData: function(a) {
            return a = a.nodeType ? eb.cache[a[eb.expando]] : a[eb.expando], !!a && !j(a)
        },
        data: function(a, b, c) {
            return k(a, b, c)
        },
        removeData: function(a, b) {
            return l(a, b)
        },
        _data: function(a, b, c) {
            return k(a, b, c, !0)
        },
        _removeData: function(a, b) {
            return l(a, b, !0)
        }
    }), eb.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0],
                g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = eb.data(f), 1 === f.nodeType && !eb._data(f, "parsedAttrs"))) {
                    for (c = g.length; c--;) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = eb.camelCase(d.slice(5)), i(f, d, e[d])));
                    eb._data(f, "parsedAttrs", !0)
                }
                return e
            }
            return "object" == typeof a ? this.each(function() {
                eb.data(this, a)
            }) : arguments.length > 1 ? this.each(function() {
                eb.data(this, a, b)
            }) : f ? i(f, a, eb.data(f, a)) : void 0
        },
        removeData: function(a) {
            return this.each(function() {
                eb.removeData(this, a)
            })
        }
    }), eb.extend({
        queue: function(a, b, c) {
            var d;
            return a ? (b = (b || "fx") + "queue", d = eb._data(a, b), c && (!d || eb.isArray(c) ? d = eb._data(a, b, eb.makeArray(c)) : d.push(c)), d || []) : void 0
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = eb.queue(a, b),
                d = c.length,
                e = c.shift(),
                f = eb._queueHooks(a, b),
                g = function() {
                    eb.dequeue(a, b)
                };
            "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire()
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return eb._data(a, c) || eb._data(a, c, {
                empty: eb.Callbacks("once memory").add(function() {
                    eb._removeData(a, b + "queue"), eb._removeData(a, c)
                })
            })
        }
    }), eb.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? eb.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                var c = eb.queue(this, a, b);
                eb._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && eb.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                eb.dequeue(this, a)
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, b) {
            var c, d = 1,
                e = eb.Deferred(),
                f = this,
                g = this.length,
                h = function() {
                    --d || e.resolveWith(f, [f])
                };
            for ("string" != typeof a && (b = a, a = void 0), a = a || "fx"; g--;) c = eb._data(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
            return h(), e.promise(b)
        }
    });
    var Ab = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        Bb = ["Top", "Right", "Bottom", "Left"],
        Cb = function(a, b) {
            return a = b || a, "none" === eb.css(a, "display") || !eb.contains(a.ownerDocument, a)
        },
        Db = eb.access = function(a, b, c, d, e, f, g) {
            var h = 0,
                i = a.length,
                j = null == c;
            if ("object" === eb.type(c)) {
                e = !0;
                for (h in c) eb.access(a, b, h, c[h], !0, f, g)
            } else if (void 0 !== d && (e = !0, eb.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function(a, b, c) {
                    return j.call(eb(a), c)
                })), b))
                for (; i > h; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
            return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
        },
        Eb = /^(?:checkbox|radio)$/i;
    ! function() {
        var a = ob.createElement("input"),
            b = ob.createElement("div"),
            c = ob.createDocumentFragment();
        if (b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", cb.leadingWhitespace = 3 === b.firstChild.nodeType, cb.tbody = !b.getElementsByTagName("tbody").length, cb.htmlSerialize = !!b.getElementsByTagName("link").length, cb.html5Clone = "<:nav></:nav>" !== ob.createElement("nav").cloneNode(!0).outerHTML, a.type = "checkbox", a.checked = !0, c.appendChild(a), cb.appendChecked = a.checked, b.innerHTML = "<textarea>x</textarea>", cb.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue, c.appendChild(b), b.innerHTML = "<input type='radio' checked='checked' name='t'/>", cb.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, cb.noCloneEvent = !0, b.attachEvent && (b.attachEvent("onclick", function() {
                cb.noCloneEvent = !1
            }), b.cloneNode(!0).click()), null == cb.deleteExpando) {
            cb.deleteExpando = !0;
            try {
                delete b.test
            } catch (d) {
                cb.deleteExpando = !1
            }
        }
    }(),
    function() {
        var b, c, d = ob.createElement("div");
        for (b in {
                submit: !0,
                change: !0,
                focusin: !0
            }) c = "on" + b, (cb[b + "Bubbles"] = c in a) || (d.setAttribute(c, "t"), cb[b + "Bubbles"] = d.attributes[c].expando === !1);
        d = null
    }();
    var Fb = /^(?:input|select|textarea)$/i,
        Gb = /^key/,
        Hb = /^(?:mouse|pointer|contextmenu)|click/,
        Ib = /^(?:focusinfocus|focusoutblur)$/,
        Jb = /^([^.]*)(?:\.(.+)|)$/;
    eb.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q = eb._data(a);
            if (q) {
                for (c.handler && (i = c, c = i.handler, e = i.selector), c.guid || (c.guid = eb.guid++), (g = q.events) || (g = q.events = {}), (k = q.handle) || (k = q.handle = function(a) {
                        return typeof eb === xb || a && eb.event.triggered === a.type ? void 0 : eb.event.dispatch.apply(k.elem, arguments)
                    }, k.elem = a), b = (b || "").match(tb) || [""], h = b.length; h--;) f = Jb.exec(b[h]) || [], n = p = f[1], o = (f[2] || "").split(".").sort(), n && (j = eb.event.special[n] || {}, n = (e ? j.delegateType : j.bindType) || n, j = eb.event.special[n] || {}, l = eb.extend({
                    type: n,
                    origType: p,
                    data: d,
                    handler: c,
                    guid: c.guid,
                    selector: e,
                    needsContext: e && eb.expr.match.needsContext.test(e),
                    namespace: o.join(".")
                }, i), (m = g[n]) || (m = g[n] = [], m.delegateCount = 0, j.setup && j.setup.call(a, d, o, k) !== !1 || (a.addEventListener ? a.addEventListener(n, k, !1) : a.attachEvent && a.attachEvent("on" + n, k))), j.add && (j.add.call(a, l), l.handler.guid || (l.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, l) : m.push(l), eb.event.global[n] = !0);
                a = null
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q = eb.hasData(a) && eb._data(a);
            if (q && (k = q.events)) {
                for (b = (b || "").match(tb) || [""], j = b.length; j--;)
                    if (h = Jb.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n) {
                        for (l = eb.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = k[n] || [], h = h[2] && new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)"), i = f = m.length; f--;) g = m[f], !e && p !== g.origType || c && c.guid !== g.guid || h && !h.test(g.namespace) || d && d !== g.selector && ("**" !== d || !g.selector) || (m.splice(f, 1), g.selector && m.delegateCount--, l.remove && l.remove.call(a, g));
                        i && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || eb.removeEvent(a, n, q.handle), delete k[n])
                    } else
                        for (n in k) eb.event.remove(a, n + b[j], c, d, !0);
                eb.isEmptyObject(k) && (delete q.handle, eb._removeData(a, "events"))
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, j, k, l, m = [d || ob],
                n = bb.call(b, "type") ? b.type : b,
                o = bb.call(b, "namespace") ? b.namespace.split(".") : [];
            if (h = k = d = d || ob, 3 !== d.nodeType && 8 !== d.nodeType && !Ib.test(n + eb.event.triggered) && (n.indexOf(".") >= 0 && (o = n.split("."), n = o.shift(), o.sort()), g = n.indexOf(":") < 0 && "on" + n, b = b[eb.expando] ? b : new eb.Event(n, "object" == typeof b && b), b.isTrigger = e ? 2 : 3, b.namespace = o.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = d), c = null == c ? [b] : eb.makeArray(c, [b]), j = eb.event.special[n] || {}, e || !j.trigger || j.trigger.apply(d, c) !== !1)) {
                if (!e && !j.noBubble && !eb.isWindow(d)) {
                    for (i = j.delegateType || n, Ib.test(i + n) || (h = h.parentNode); h; h = h.parentNode) m.push(h), k = h;
                    k === (d.ownerDocument || ob) && m.push(k.defaultView || k.parentWindow || a)
                }
                for (l = 0;
                    (h = m[l++]) && !b.isPropagationStopped();) b.type = l > 1 ? i : j.bindType || n, f = (eb._data(h, "events") || {})[b.type] && eb._data(h, "handle"), f && f.apply(h, c), f = g && h[g], f && f.apply && eb.acceptData(h) && (b.result = f.apply(h, c), b.result === !1 && b.preventDefault());
                if (b.type = n, !e && !b.isDefaultPrevented() && (!j._default || j._default.apply(m.pop(), c) === !1) && eb.acceptData(d) && g && d[n] && !eb.isWindow(d)) {
                    k = d[g], k && (d[g] = null), eb.event.triggered = n;
                    try {
                        d[n]()
                    } catch (p) {}
                    eb.event.triggered = void 0, k && (d[g] = k)
                }
                return b.result
            }
        },
        dispatch: function(a) {
            a = eb.event.fix(a);
            var b, c, d, e, f, g = [],
                h = X.call(arguments),
                i = (eb._data(this, "events") || {})[a.type] || [],
                j = eb.event.special[a.type] || {};
            if (h[0] = a, a.delegateTarget = this, !j.preDispatch || j.preDispatch.call(this, a) !== !1) {
                for (g = eb.event.handlers.call(this, a, i), b = 0;
                    (e = g[b++]) && !a.isPropagationStopped();)
                    for (a.currentTarget = e.elem, f = 0;
                        (d = e.handlers[f++]) && !a.isImmediatePropagationStopped();)(!a.namespace_re || a.namespace_re.test(d.namespace)) && (a.handleObj = d, a.data = d.data, c = ((eb.event.special[d.origType] || {}).handle || d.handler).apply(e.elem, h), void 0 !== c && (a.result = c) === !1 && (a.preventDefault(), a.stopPropagation()));
                return j.postDispatch && j.postDispatch.call(this, a), a.result
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [],
                h = b.delegateCount,
                i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type))
                for (; i != this; i = i.parentNode || this)
                    if (1 === i.nodeType && (i.disabled !== !0 || "click" !== a.type)) {
                        for (e = [], f = 0; h > f; f++) d = b[f], c = d.selector + " ", void 0 === e[c] && (e[c] = d.needsContext ? eb(c, this).index(i) >= 0 : eb.find(c, this, null, [i]).length), e[c] && e.push(d);
                        e.length && g.push({
                            elem: i,
                            handlers: e
                        })
                    }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }), g
        },
        fix: function(a) {
            if (a[eb.expando]) return a;
            var b, c, d, e = a.type,
                f = a,
                g = this.fixHooks[e];
            for (g || (this.fixHooks[e] = g = Hb.test(e) ? this.mouseHooks : Gb.test(e) ? this.keyHooks : {}), d = g.props ? this.props.concat(g.props) : this.props, a = new eb.Event(f), b = d.length; b--;) c = d[b], a[c] = f[c];
            return a.target || (a.target = f.srcElement || ob), 3 === a.target.nodeType && (a.target = a.target.parentNode), a.metaKey = !!a.metaKey, g.filter ? g.filter(a, f) : a
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {
                var c, d, e, f = b.button,
                    g = b.fromElement;
                return null == a.pageX && null != b.clientX && (d = a.target.ownerDocument || ob, e = d.documentElement, c = d.body, a.pageX = b.clientX + (e && e.scrollLeft || c && c.scrollLeft || 0) - (e && e.clientLeft || c && c.clientLeft || 0), a.pageY = b.clientY + (e && e.scrollTop || c && c.scrollTop || 0) - (e && e.clientTop || c && c.clientTop || 0)), !a.relatedTarget && g && (a.relatedTarget = g === a.target ? b.toElement : g), a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a
            }
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== o() && this.focus) try {
                        return this.focus(), !1
                    } catch (a) {}
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === o() && this.blur ? (this.blur(), !1) : void 0
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return eb.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : void 0
                },
                _default: function(a) {
                    return eb.nodeName(a.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result)
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = eb.extend(new eb.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? eb.event.trigger(e, null, b) : eb.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault()
        }
    }, eb.removeEvent = ob.removeEventListener ? function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    } : function(a, b, c) {
        var d = "on" + b;
        a.detachEvent && (typeof a[d] === xb && (a[d] = null), a.detachEvent(d, c))
    }, eb.Event = function(a, b) {
        return this instanceof eb.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? m : n) : this.type = a, b && eb.extend(this, b), this.timeStamp = a && a.timeStamp || eb.now(), void(this[eb.expando] = !0)) : new eb.Event(a, b)
    }, eb.Event.prototype = {
        isDefaultPrevented: n,
        isPropagationStopped: n,
        isImmediatePropagationStopped: n,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = m, a && (a.preventDefault ? a.preventDefault() : a.returnValue = !1)
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = m, a && (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = m, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), this.stopPropagation()
        }
    }, eb.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        eb.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this,
                    e = a.relatedTarget,
                    f = a.handleObj;
                return (!e || e !== d && !eb.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c
            }
        }
    }), cb.submitBubbles || (eb.event.special.submit = {
        setup: function() {
            return eb.nodeName(this, "form") ? !1 : void eb.event.add(this, "click._submit keypress._submit", function(a) {
                var b = a.target,
                    c = eb.nodeName(b, "input") || eb.nodeName(b, "button") ? b.form : void 0;
                c && !eb._data(c, "submitBubbles") && (eb.event.add(c, "submit._submit", function(a) {
                    a._submit_bubble = !0
                }), eb._data(c, "submitBubbles", !0))
            })
        },
        postDispatch: function(a) {
            a._submit_bubble && (delete a._submit_bubble, this.parentNode && !a.isTrigger && eb.event.simulate("submit", this.parentNode, a, !0))
        },
        teardown: function() {
            return eb.nodeName(this, "form") ? !1 : void eb.event.remove(this, "._submit")
        }
    }), cb.changeBubbles || (eb.event.special.change = {
        setup: function() {
            return Fb.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (eb.event.add(this, "propertychange._change", function(a) {
                "checked" === a.originalEvent.propertyName && (this._just_changed = !0)
            }), eb.event.add(this, "click._change", function(a) {
                this._just_changed && !a.isTrigger && (this._just_changed = !1), eb.event.simulate("change", this, a, !0)
            })), !1) : void eb.event.add(this, "beforeactivate._change", function(a) {
                var b = a.target;
                Fb.test(b.nodeName) && !eb._data(b, "changeBubbles") && (eb.event.add(b, "change._change", function(a) {
                    !this.parentNode || a.isSimulated || a.isTrigger || eb.event.simulate("change", this.parentNode, a, !0)
                }), eb._data(b, "changeBubbles", !0))
            })
        },
        handle: function(a) {
            var b = a.target;
            return this !== b || a.isSimulated || a.isTrigger || "radio" !== b.type && "checkbox" !== b.type ? a.handleObj.handler.apply(this, arguments) : void 0
        },
        teardown: function() {
            return eb.event.remove(this, "._change"), !Fb.test(this.nodeName)
        }
    }), cb.focusinBubbles || eb.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            eb.event.simulate(b, a.target, eb.event.fix(a), !0)
        };
        eb.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this,
                    e = eb._data(d, b);
                e || d.addEventListener(a, c, !0), eb._data(d, b, (e || 0) + 1)
            },
            teardown: function() {
                var d = this.ownerDocument || this,
                    e = eb._data(d, b) - 1;
                e ? eb._data(d, b, e) : (d.removeEventListener(a, c, !0), eb._removeData(d, b))
            }
        }
    }), eb.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = void 0);
                for (f in a) this.on(f, b, c, a[f], e);
                return this
            }
            if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, c = void 0) : (d = c, c = b, b = void 0)), d === !1) d = n;
            else if (!d) return this;
            return 1 === e && (g = d, d = function(a) {
                return eb().off(a), g.apply(this, arguments)
            }, d.guid = g.guid || (g.guid = eb.guid++)), this.each(function() {
                eb.event.add(this, a, d, c, b)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d = a.handleObj, eb(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this
            }
            return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = n), this.each(function() {
                eb.event.remove(this, a, c, b)
            })
        },
        trigger: function(a, b) {
            return this.each(function() {
                eb.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? eb.event.trigger(a, b, c, !0) : void 0
        }
    });
    var Kb = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        Lb = / jQuery\d+="(?:null|\d+)"/g,
        Mb = new RegExp("<(?:" + Kb + ")[\\s/>]", "i"),
        Nb = /^\s+/,
        Ob = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        Pb = /<([\w:]+)/,
        Qb = /<tbody/i,
        Rb = /<|&#?\w+;/,
        Sb = /<(?:script|style|link)/i,
        Tb = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Ub = /^$|\/(?:java|ecma)script/i,
        Vb = /^true\/(.*)/,
        Wb = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        Xb = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            area: [1, "<map>", "</map>"],
            param: [1, "<object>", "</object>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: cb.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
        },
        Yb = p(ob),
        Zb = Yb.appendChild(ob.createElement("div"));
    Xb.optgroup = Xb.option, Xb.tbody = Xb.tfoot = Xb.colgroup = Xb.caption = Xb.thead, Xb.th = Xb.td, eb.extend({
        clone: function(a, b, c) {
            var d, e, f, g, h, i = eb.contains(a.ownerDocument, a);
            if (cb.html5Clone || eb.isXMLDoc(a) || !Mb.test("<" + a.nodeName + ">") ? f = a.cloneNode(!0) : (Zb.innerHTML = a.outerHTML, Zb.removeChild(f = Zb.firstChild)), !(cb.noCloneEvent && cb.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || eb.isXMLDoc(a)))
                for (d = q(f), h = q(a), g = 0; null != (e = h[g]); ++g) d[g] && x(e, d[g]);
            if (b)
                if (c)
                    for (h = h || q(a), d = d || q(f), g = 0; null != (e = h[g]); g++) w(e, d[g]);
                else w(a, f);
            return d = q(f, "script"), d.length > 0 && v(d, !i && q(a, "script")), d = h = e = null, f
        },
        buildFragment: function(a, b, c, d) {
            for (var e, f, g, h, i, j, k, l = a.length, m = p(b), n = [], o = 0; l > o; o++)
                if (f = a[o], f || 0 === f)
                    if ("object" === eb.type(f)) eb.merge(n, f.nodeType ? [f] : f);
                    else if (Rb.test(f)) {
                for (h = h || m.appendChild(b.createElement("div")), i = (Pb.exec(f) || ["", ""])[1].toLowerCase(), k = Xb[i] || Xb._default, h.innerHTML = k[1] + f.replace(Ob, "<$1></$2>") + k[2], e = k[0]; e--;) h = h.lastChild;
                if (!cb.leadingWhitespace && Nb.test(f) && n.push(b.createTextNode(Nb.exec(f)[0])), !cb.tbody)
                    for (f = "table" !== i || Qb.test(f) ? "<table>" !== k[1] || Qb.test(f) ? 0 : h : h.firstChild, e = f && f.childNodes.length; e--;) eb.nodeName(j = f.childNodes[e], "tbody") && !j.childNodes.length && f.removeChild(j);
                for (eb.merge(n, h.childNodes), h.textContent = ""; h.firstChild;) h.removeChild(h.firstChild);
                h = m.lastChild
            } else n.push(b.createTextNode(f));
            for (h && m.removeChild(h), cb.appendChecked || eb.grep(q(n, "input"), r), o = 0; f = n[o++];)
                if ((!d || -1 === eb.inArray(f, d)) && (g = eb.contains(f.ownerDocument, f), h = q(m.appendChild(f), "script"), g && v(h), c))
                    for (e = 0; f = h[e++];) Ub.test(f.type || "") && c.push(f);
            return h = null, m
        },
        cleanData: function(a, b) {
            for (var c, d, e, f, g = 0, h = eb.expando, i = eb.cache, j = cb.deleteExpando, k = eb.event.special; null != (c = a[g]); g++)
                if ((b || eb.acceptData(c)) && (e = c[h], f = e && i[e])) {
                    if (f.events)
                        for (d in f.events) k[d] ? eb.event.remove(c, d) : eb.removeEvent(c, d, f.handle);
                    i[e] && (delete i[e], j ? delete c[h] : typeof c.removeAttribute !== xb ? c.removeAttribute(h) : c[h] = null, W.push(e))
                }
        }
    }), eb.fn.extend({
        text: function(a) {
            return Db(this, function(a) {
                return void 0 === a ? eb.text(this) : this.empty().append((this[0] && this[0].ownerDocument || ob).createTextNode(a))
            }, null, a, arguments.length)
        },
        append: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = s(this, a);
                    b.appendChild(a)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = s(this, a);
                    b.insertBefore(a, b.firstChild)
                }
            })
        },
        before: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this)
            })
        },
        after: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling)
            })
        },
        remove: function(a, b) {
            for (var c, d = a ? eb.filter(a, this) : this, e = 0; null != (c = d[e]); e++) b || 1 !== c.nodeType || eb.cleanData(q(c)), c.parentNode && (b && eb.contains(c.ownerDocument, c) && v(q(c, "script")), c.parentNode.removeChild(c));
            return this
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) {
                for (1 === a.nodeType && eb.cleanData(q(a, !1)); a.firstChild;) a.removeChild(a.firstChild);
                a.options && eb.nodeName(a, "select") && (a.options.length = 0)
            }
            return this
        },
        clone: function(a, b) {
            return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function() {
                return eb.clone(this, a, b)
            })
        },
        html: function(a) {
            return Db(this, function(a) {
                var b = this[0] || {},
                    c = 0,
                    d = this.length;
                if (void 0 === a) return 1 === b.nodeType ? b.innerHTML.replace(Lb, "") : void 0;
                if (!("string" != typeof a || Sb.test(a) || !cb.htmlSerialize && Mb.test(a) || !cb.leadingWhitespace && Nb.test(a) || Xb[(Pb.exec(a) || ["", ""])[1].toLowerCase()])) {
                    a = a.replace(Ob, "<$1></$2>");
                    try {
                        for (; d > c; c++) b = this[c] || {}, 1 === b.nodeType && (eb.cleanData(q(b, !1)), b.innerHTML = a);
                        b = 0
                    } catch (e) {}
                }
                b && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function() {
            var a = arguments[0];
            return this.domManip(arguments, function(b) {
                a = this.parentNode, eb.cleanData(q(this)), a && a.replaceChild(b, this)
            }), a && (a.length || a.nodeType) ? this : this.remove()
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, b) {
            a = Y.apply([], a);
            var c, d, e, f, g, h, i = 0,
                j = this.length,
                k = this,
                l = j - 1,
                m = a[0],
                n = eb.isFunction(m);
            if (n || j > 1 && "string" == typeof m && !cb.checkClone && Tb.test(m)) return this.each(function(c) {
                var d = k.eq(c);
                n && (a[0] = m.call(this, c, d.html())), d.domManip(a, b)
            });
            if (j && (h = eb.buildFragment(a, this[0].ownerDocument, !1, this), c = h.firstChild, 1 === h.childNodes.length && (h = c), c)) {
                for (f = eb.map(q(h, "script"), t), e = f.length; j > i; i++) d = h, i !== l && (d = eb.clone(d, !0, !0), e && eb.merge(f, q(d, "script"))), b.call(this[i], d, i);
                if (e)
                    for (g = f[f.length - 1].ownerDocument, eb.map(f, u), i = 0; e > i; i++) d = f[i], Ub.test(d.type || "") && !eb._data(d, "globalEval") && eb.contains(g, d) && (d.src ? eb._evalUrl && eb._evalUrl(d.src) : eb.globalEval((d.text || d.textContent || d.innerHTML || "").replace(Wb, "")));
                h = c = null
            }
            return this
        }
    }), eb.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        eb.fn[a] = function(a) {
            for (var c, d = 0, e = [], f = eb(a), g = f.length - 1; g >= d; d++) c = d === g ? this : this.clone(!0), eb(f[d])[b](c), Z.apply(e, c.get());
            return this.pushStack(e)
        }
    });
    var $b, _b = {};
    ! function() {
        var a;
        cb.shrinkWrapBlocks = function() {
            if (null != a) return a;
            a = !1;
            var b, c, d;
            return c = ob.getElementsByTagName("body")[0], c && c.style ? (b = ob.createElement("div"), d = ob.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), typeof b.style.zoom !== xb && (b.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1", b.appendChild(ob.createElement("div")).style.width = "5px", a = 3 !== b.offsetWidth), c.removeChild(d), a) : void 0
        }
    }();
    var ac, bc, cc = /^margin/,
        dc = new RegExp("^(" + Ab + ")(?!px)[a-z%]+$", "i"),
        ec = /^(top|right|bottom|left)$/;
    a.getComputedStyle ? (ac = function(a) {
            return a.ownerDocument.defaultView.getComputedStyle(a, null)
        }, bc = function(a, b, c) {
            var d, e, f, g, h = a.style;
            return c = c || ac(a), g = c ? c.getPropertyValue(b) || c[b] : void 0, c && ("" !== g || eb.contains(a.ownerDocument, a) || (g = eb.style(a, b)), dc.test(g) && cc.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 === g ? g : g + ""
        }) : ob.documentElement.currentStyle && (ac = function(a) {
            return a.currentStyle
        }, bc = function(a, b, c) {
            var d, e, f, g, h = a.style;
            return c = c || ac(a), g = c ? c[b] : void 0, null == g && h && h[b] && (g = h[b]), dc.test(g) && !ec.test(b) && (d = h.left, e = a.runtimeStyle, f = e && e.left, f && (e.left = a.currentStyle.left), h.left = "fontSize" === b ? "1em" : g, g = h.pixelLeft + "px", h.left = d, f && (e.left = f)), void 0 === g ? g : g + "" || "auto"
        }),
        function() {
            function b() {
                var b, c, d, e;
                c = ob.getElementsByTagName("body")[0], c && c.style && (b = ob.createElement("div"), d = ob.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), b.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", f = g = !1, i = !0, a.getComputedStyle && (f = "1%" !== (a.getComputedStyle(b, null) || {}).top, g = "4px" === (a.getComputedStyle(b, null) || {
                    width: "4px"
                }).width, e = b.appendChild(ob.createElement("div")), e.style.cssText = b.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", e.style.marginRight = e.style.width = "0", b.style.width = "1px", i = !parseFloat((a.getComputedStyle(e, null) || {}).marginRight)), b.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", e = b.getElementsByTagName("td"), e[0].style.cssText = "margin:0;border:0;padding:0;display:none", h = 0 === e[0].offsetHeight, h && (e[0].style.display = "", e[1].style.display = "none", h = 0 === e[0].offsetHeight), c.removeChild(d))
            }
            var c, d, e, f, g, h, i;
            c = ob.createElement("div"), c.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", e = c.getElementsByTagName("a")[0], d = e && e.style, d && (d.cssText = "float:left;opacity:.5", cb.opacity = "0.5" === d.opacity, cb.cssFloat = !!d.cssFloat, c.style.backgroundClip = "content-box", c.cloneNode(!0).style.backgroundClip = "", cb.clearCloneStyle = "content-box" === c.style.backgroundClip, cb.boxSizing = "" === d.boxSizing || "" === d.MozBoxSizing || "" === d.WebkitBoxSizing, eb.extend(cb, {
                reliableHiddenOffsets: function() {
                    return null == h && b(), h
                },
                boxSizingReliable: function() {
                    return null == g && b(), g
                },
                pixelPosition: function() {
                    return null == f && b(), f
                },
                reliableMarginRight: function() {
                    return null == i && b(), i
                }
            }))
        }(), eb.swap = function(a, b, c, d) {
            var e, f, g = {};
            for (f in b) g[f] = a.style[f], a.style[f] = b[f];
            e = c.apply(a, d || []);
            for (f in b) a.style[f] = g[f];
            return e
        };
    var fc = /alpha\([^)]*\)/i,
        gc = /opacity\s*=\s*([^)]*)/,
        hc = /^(none|table(?!-c[ea]).+)/,
        ic = new RegExp("^(" + Ab + ")(.*)$", "i"),
        jc = new RegExp("^([+-])=(" + Ab + ")", "i"),
        kc = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        lc = {
            letterSpacing: "0",
            fontWeight: "400"
        },
        mc = ["Webkit", "O", "Moz", "ms"];
    eb.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = bc(a, "opacity");
                        return "" === c ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": cb.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = eb.camelCase(b),
                    i = a.style;
                if (b = eb.cssProps[h] || (eb.cssProps[h] = B(i, h)), g = eb.cssHooks[b] || eb.cssHooks[h], void 0 === c) return g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b];
                if (f = typeof c, "string" === f && (e = jc.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(eb.css(a, b)), f = "number"), null != c && c === c && ("number" !== f || eb.cssNumber[h] || (c += "px"), cb.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), !(g && "set" in g && void 0 === (c = g.set(a, c, d))))) try {
                    i[b] = c
                } catch (j) {}
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = eb.camelCase(b);
            return b = eb.cssProps[h] || (eb.cssProps[h] = B(a.style, h)), g = eb.cssHooks[b] || eb.cssHooks[h], g && "get" in g && (f = g.get(a, !0, c)), void 0 === f && (f = bc(a, b, d)), "normal" === f && b in lc && (f = lc[b]), "" === c || c ? (e = parseFloat(f), c === !0 || eb.isNumeric(e) ? e || 0 : f) : f
        }
    }), eb.each(["height", "width"], function(a, b) {
        eb.cssHooks[b] = {
            get: function(a, c, d) {
                return c ? hc.test(eb.css(a, "display")) && 0 === a.offsetWidth ? eb.swap(a, kc, function() {
                    return F(a, b, d)
                }) : F(a, b, d) : void 0
            },
            set: function(a, c, d) {
                var e = d && ac(a);
                return D(a, c, d ? E(a, b, d, cb.boxSizing && "border-box" === eb.css(a, "boxSizing", !1, e), e) : 0)
            }
        }
    }), cb.opacity || (eb.cssHooks.opacity = {
        get: function(a, b) {
            return gc.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style,
                d = a.currentStyle,
                e = eb.isNumeric(b) ? "alpha(opacity=" + 100 * b + ")" : "",
                f = d && d.filter || c.filter || "";
            c.zoom = 1, (b >= 1 || "" === b) && "" === eb.trim(f.replace(fc, "")) && c.removeAttribute && (c.removeAttribute("filter"), "" === b || d && !d.filter) || (c.filter = fc.test(f) ? f.replace(fc, e) : f + " " + e)
        }
    }), eb.cssHooks.marginRight = A(cb.reliableMarginRight, function(a, b) {
        return b ? eb.swap(a, {
            display: "inline-block"
        }, bc, [a, "marginRight"]) : void 0
    }), eb.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        eb.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) e[a + Bb[d] + b] = f[d] || f[d - 2] || f[0];
                return e
            }
        }, cc.test(a) || (eb.cssHooks[a + b].set = D)
    }), eb.fn.extend({
        css: function(a, b) {
            return Db(this, function(a, b, c) {
                var d, e, f = {},
                    g = 0;
                if (eb.isArray(b)) {
                    for (d = ac(a), e = b.length; e > g; g++) f[b[g]] = eb.css(a, b[g], !1, d);
                    return f
                }
                return void 0 !== c ? eb.style(a, b, c) : eb.css(a, b)
            }, a, b, arguments.length > 1)
        },
        show: function() {
            return C(this, !0)
        },
        hide: function() {
            return C(this)
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                Cb(this) ? eb(this).show() : eb(this).hide()
            })
        }
    }), eb.Tween = G, G.prototype = {
        constructor: G,
        init: function(a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (eb.cssNumber[c] ? "" : "px")
        },
        cur: function() {
            var a = G.propHooks[this.prop];
            return a && a.get ? a.get(this) : G.propHooks._default.get(this)
        },
        run: function(a) {
            var b, c = G.propHooks[this.prop];
            return this.pos = b = this.options.duration ? eb.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : G.propHooks._default.set(this), this
        }
    }, G.prototype.init.prototype = G.prototype, G.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = eb.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0) : a.elem[a.prop]
            },
            set: function(a) {
                eb.fx.step[a.prop] ? eb.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[eb.cssProps[a.prop]] || eb.cssHooks[a.prop]) ? eb.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now
            }
        }
    }, G.propHooks.scrollTop = G.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    }, eb.easing = {
        linear: function(a) {
            return a
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2
        }
    }, eb.fx = G.prototype.init, eb.fx.step = {};
    var nc, oc, pc = /^(?:toggle|show|hide)$/,
        qc = new RegExp("^(?:([+-])=|)(" + Ab + ")([a-z%]*)$", "i"),
        rc = /queueHooks$/,
        sc = [K],
        tc = {
            "*": [function(a, b) {
                var c = this.createTween(a, b),
                    d = c.cur(),
                    e = qc.exec(b),
                    f = e && e[3] || (eb.cssNumber[a] ? "" : "px"),
                    g = (eb.cssNumber[a] || "px" !== f && +d) && qc.exec(eb.css(c.elem, a)),
                    h = 1,
                    i = 20;
                if (g && g[3] !== f) {
                    f = f || g[3], e = e || [], g = +d || 1;
                    do h = h || ".5", g /= h, eb.style(c.elem, a, g + f); while (h !== (h = c.cur() / d) && 1 !== h && --i)
                }
                return e && (g = c.start = +g || +d || 0, c.unit = f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]), c
            }]
        };
    eb.Animation = eb.extend(M, {
            tweener: function(a, b) {
                eb.isFunction(a) ? (b = a, a = ["*"]) : a = a.split(" ");
                for (var c, d = 0, e = a.length; e > d; d++) c = a[d], tc[c] = tc[c] || [], tc[c].unshift(b)
            },
            prefilter: function(a, b) {
                b ? sc.unshift(a) : sc.push(a)
            }
        }), eb.speed = function(a, b, c) {
            var d = a && "object" == typeof a ? eb.extend({}, a) : {
                complete: c || !c && b || eb.isFunction(a) && a,
                duration: a,
                easing: c && b || b && !eb.isFunction(b) && b
            };
            return d.duration = eb.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in eb.fx.speeds ? eb.fx.speeds[d.duration] : eb.fx.speeds._default, (null == d.queue || d.queue === !0) && (d.queue = "fx"), d.old = d.complete, d.complete = function() {
                eb.isFunction(d.old) && d.old.call(this), d.queue && eb.dequeue(this, d.queue)
            }, d
        }, eb.fn.extend({
            fadeTo: function(a, b, c, d) {
                return this.filter(Cb).css("opacity", 0).show().end().animate({
                    opacity: b
                }, a, c, d)
            },
            animate: function(a, b, c, d) {
                var e = eb.isEmptyObject(a),
                    f = eb.speed(b, c, d),
                    g = function() {
                        var b = M(this, eb.extend({}, a), f);
                        (e || eb._data(this, "finish")) && b.stop(!0)
                    };
                return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
            },
            stop: function(a, b, c) {
                var d = function(a) {
                    var b = a.stop;
                    delete a.stop, b(c)
                };
                return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function() {
                    var b = !0,
                        e = null != a && a + "queueHooks",
                        f = eb.timers,
                        g = eb._data(this);
                    if (e) g[e] && g[e].stop && d(g[e]);
                    else
                        for (e in g) g[e] && g[e].stop && rc.test(e) && d(g[e]);
                    for (e = f.length; e--;) f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));
                    (b || !c) && eb.dequeue(this, a)
                })
            },
            finish: function(a) {
                return a !== !1 && (a = a || "fx"), this.each(function() {
                    var b, c = eb._data(this),
                        d = c[a + "queue"],
                        e = c[a + "queueHooks"],
                        f = eb.timers,
                        g = d ? d.length : 0;
                    for (c.finish = !0, eb.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
                    for (b = 0; g > b; b++) d[b] && d[b].finish && d[b].finish.call(this);
                    delete c.finish
                })
            }
        }), eb.each(["toggle", "show", "hide"], function(a, b) {
            var c = eb.fn[b];
            eb.fn[b] = function(a, d, e) {
                return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(I(b, !0), a, d, e)
            }
        }), eb.each({
            slideDown: I("show"),
            slideUp: I("hide"),
            slideToggle: I("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(a, b) {
            eb.fn[a] = function(a, c, d) {
                return this.animate(b, a, c, d)
            }
        }), eb.timers = [], eb.fx.tick = function() {
            var a, b = eb.timers,
                c = 0;
            for (nc = eb.now(); c < b.length; c++) a = b[c], a() || b[c] !== a || b.splice(c--, 1);
            b.length || eb.fx.stop(), nc = void 0
        }, eb.fx.timer = function(a) {
            eb.timers.push(a), a() ? eb.fx.start() : eb.timers.pop()
        }, eb.fx.interval = 13, eb.fx.start = function() {
            oc || (oc = setInterval(eb.fx.tick, eb.fx.interval))
        }, eb.fx.stop = function() {
            clearInterval(oc), oc = null
        }, eb.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, eb.fn.delay = function(a, b) {
            return a = eb.fx ? eb.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        function() {
            var a, b, c, d, e;
            b = ob.createElement("div"), b.setAttribute("className", "t"), b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", d = b.getElementsByTagName("a")[0], c = ob.createElement("select"), e = c.appendChild(ob.createElement("option")), a = b.getElementsByTagName("input")[0], d.style.cssText = "top:1px", cb.getSetAttribute = "t" !== b.className, cb.style = /top/.test(d.getAttribute("style")), cb.hrefNormalized = "/a" === d.getAttribute("href"), cb.checkOn = !!a.value, cb.optSelected = e.selected, cb.enctype = !!ob.createElement("form").enctype, c.disabled = !0, cb.optDisabled = !e.disabled, a = ob.createElement("input"), a.setAttribute("value", ""), cb.input = "" === a.getAttribute("value"), a.value = "t", a.setAttribute("type", "radio"), cb.radioValue = "t" === a.value
        }();
    var uc = /\r/g;
    eb.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0]; {
                if (arguments.length) return d = eb.isFunction(a), this.each(function(c) {
                    var e;
                    1 === this.nodeType && (e = d ? a.call(this, c, eb(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : eb.isArray(e) && (e = eb.map(e, function(a) {
                        return null == a ? "" : a + ""
                    })), b = eb.valHooks[this.type] || eb.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e))
                });
                if (e) return b = eb.valHooks[e.type] || eb.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(uc, "") : null == c ? "" : c)
            }
        }
    }), eb.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = eb.find.attr(a, "value");
                    return null != b ? b : eb.trim(eb.text(a))
                }
            },
            select: {
                get: function(a) {
                    for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++)
                        if (c = d[i], !(!c.selected && i !== e || (cb.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && eb.nodeName(c.parentNode, "optgroup"))) {
                            if (b = eb(c).val(), f) return b;
                            g.push(b)
                        }
                    return g
                },
                set: function(a, b) {
                    for (var c, d, e = a.options, f = eb.makeArray(b), g = e.length; g--;)
                        if (d = e[g], eb.inArray(eb.valHooks.option.get(d), f) >= 0) try {
                            d.selected = c = !0
                        } catch (h) {
                            d.scrollHeight
                        } else d.selected = !1;
                    return c || (a.selectedIndex = -1), e
                }
            }
        }
    }), eb.each(["radio", "checkbox"], function() {
        eb.valHooks[this] = {
            set: function(a, b) {
                return eb.isArray(b) ? a.checked = eb.inArray(eb(a).val(), b) >= 0 : void 0
            }
        }, cb.checkOn || (eb.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" : a.value
        })
    });
    var vc, wc, xc = eb.expr.attrHandle,
        yc = /^(?:checked|selected)$/i,
        zc = cb.getSetAttribute,
        Ac = cb.input;
    eb.fn.extend({
        attr: function(a, b) {
            return Db(this, eb.attr, a, b, arguments.length > 1)
        },
        removeAttr: function(a) {
            return this.each(function() {
                eb.removeAttr(this, a)
            })
        }
    }), eb.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (a && 3 !== f && 8 !== f && 2 !== f) return typeof a.getAttribute === xb ? eb.prop(a, b, c) : (1 === f && eb.isXMLDoc(a) || (b = b.toLowerCase(), d = eb.attrHooks[b] || (eb.expr.match.bool.test(b) ? wc : vc)), void 0 === c ? d && "get" in d && null !== (e = d.get(a, b)) ? e : (e = eb.find.attr(a, b), null == e ? void 0 : e) : null !== c ? d && "set" in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""), c) : void eb.removeAttr(a, b))
        },
        removeAttr: function(a, b) {
            var c, d, e = 0,
                f = b && b.match(tb);
            if (f && 1 === a.nodeType)
                for (; c = f[e++];) d = eb.propFix[c] || c, eb.expr.match.bool.test(c) ? Ac && zc || !yc.test(c) ? a[d] = !1 : a[eb.camelCase("default-" + c)] = a[d] = !1 : eb.attr(a, c, ""), a.removeAttribute(zc ? c : d)
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!cb.radioValue && "radio" === b && eb.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b
                    }
                }
            }
        }
    }), wc = {
        set: function(a, b, c) {
            return b === !1 ? eb.removeAttr(a, c) : Ac && zc || !yc.test(c) ? a.setAttribute(!zc && eb.propFix[c] || c, c) : a[eb.camelCase("default-" + c)] = a[c] = !0, c
        }
    }, eb.each(eb.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = xc[b] || eb.find.attr;
        xc[b] = Ac && zc || !yc.test(b) ? function(a, b, d) {
            var e, f;
            return d || (f = xc[b], xc[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, xc[b] = f), e
        } : function(a, b, c) {
            return c ? void 0 : a[eb.camelCase("default-" + b)] ? b.toLowerCase() : null
        }
    }), Ac && zc || (eb.attrHooks.value = {
        set: function(a, b, c) {
            return eb.nodeName(a, "input") ? void(a.defaultValue = b) : vc && vc.set(a, b, c)
        }
    }), zc || (vc = {
        set: function(a, b, c) {
            var d = a.getAttributeNode(c);
            return d || a.setAttributeNode(d = a.ownerDocument.createAttribute(c)), d.value = b += "", "value" === c || b === a.getAttribute(c) ? b : void 0
        }
    }, xc.id = xc.name = xc.coords = function(a, b, c) {
        var d;
        return c ? void 0 : (d = a.getAttributeNode(b)) && "" !== d.value ? d.value : null
    }, eb.valHooks.button = {
        get: function(a, b) {
            var c = a.getAttributeNode(b);
            return c && c.specified ? c.value : void 0
        },
        set: vc.set
    }, eb.attrHooks.contenteditable = {
        set: function(a, b, c) {
            vc.set(a, "" === b ? !1 : b, c)
        }
    }, eb.each(["width", "height"], function(a, b) {
        eb.attrHooks[b] = {
            set: function(a, c) {
                return "" === c ? (a.setAttribute(b, "auto"), c) : void 0
            }
        }
    })), cb.style || (eb.attrHooks.style = {
        get: function(a) {
            return a.style.cssText || void 0
        },
        set: function(a, b) {
            return a.style.cssText = b + ""
        }
    });
    var Bc = /^(?:input|select|textarea|button|object)$/i,
        Cc = /^(?:a|area)$/i;
    eb.fn.extend({
        prop: function(a, b) {
            return Db(this, eb.prop, a, b, arguments.length > 1)
        },
        removeProp: function(a) {
            return a = eb.propFix[a] || a, this.each(function() {
                try {
                    this[a] = void 0, delete this[a]
                } catch (b) {}
            })
        }
    }), eb.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(a, b, c) {
            var d, e, f, g = a.nodeType;
            if (a && 3 !== g && 8 !== g && 2 !== g) return f = 1 !== g || !eb.isXMLDoc(a), f && (b = eb.propFix[b] || b, e = eb.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b]
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var b = eb.find.attr(a, "tabindex");
                    return b ? parseInt(b, 10) : Bc.test(a.nodeName) || Cc.test(a.nodeName) && a.href ? 0 : -1
                }
            }
        }
    }), cb.hrefNormalized || eb.each(["href", "src"], function(a, b) {
        eb.propHooks[b] = {
            get: function(a) {
                return a.getAttribute(b, 4)
            }
        }
    }), cb.optSelected || (eb.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex), null
        }
    }), eb.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        eb.propFix[this.toLowerCase()] = this
    }), cb.enctype || (eb.propFix.enctype = "encoding");
    var Dc = /[\t\r\n\f]/g;
    eb.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = "string" == typeof a && a;
            if (eb.isFunction(a)) return this.each(function(b) {
                eb(this).addClass(a.call(this, b, this.className))
            });
            if (j)
                for (b = (a || "").match(tb) || []; i > h; h++)
                    if (c = this[h], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(Dc, " ") : " ")) {
                        for (f = 0; e = b[f++];) d.indexOf(" " + e + " ") < 0 && (d += e + " ");
                        g = eb.trim(d), c.className !== g && (c.className = g)
                    }
            return this
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = 0 === arguments.length || "string" == typeof a && a;
            if (eb.isFunction(a)) return this.each(function(b) {
                eb(this).removeClass(a.call(this, b, this.className))
            });
            if (j)
                for (b = (a || "").match(tb) || []; i > h; h++)
                    if (c = this[h], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(Dc, " ") : "")) {
                        for (f = 0; e = b[f++];)
                            for (; d.indexOf(" " + e + " ") >= 0;) d = d.replace(" " + e + " ", " ");
                        g = a ? eb.trim(d) : "", c.className !== g && (c.className = g)
                    }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : this.each(eb.isFunction(a) ? function(c) {
                eb(this).toggleClass(a.call(this, c, this.className, b), b)
            } : function() {
                if ("string" === c)
                    for (var b, d = 0, e = eb(this), f = a.match(tb) || []; b = f[d++];) e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
                else(c === xb || "boolean" === c) && (this.className && eb._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : eb._data(this, "__className__") || "")
            })
        },
        hasClass: function(a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++)
                if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(Dc, " ").indexOf(b) >= 0) return !0;
            return !1
        }
    }), eb.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        eb.fn[b] = function(a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
        }
    }), eb.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c)
        }
    });
    var Ec = eb.now(),
        Fc = /\?/,
        Gc = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    eb.parseJSON = function(b) {
        if (a.JSON && a.JSON.parse) return a.JSON.parse(b + "");
        var c, d = null,
            e = eb.trim(b + "");
        return e && !eb.trim(e.replace(Gc, function(a, b, e, f) {
            return c && b && (d = 0), 0 === d ? a : (c = e || b, d += !f - !e, "")
        })) ? Function("return " + e)() : eb.error("Invalid JSON: " + b)
    }, eb.parseXML = function(b) {
        var c, d;
        if (!b || "string" != typeof b) return null;
        try {
            a.DOMParser ? (d = new DOMParser, c = d.parseFromString(b, "text/xml")) : (c = new ActiveXObject("Microsoft.XMLDOM"), c.async = "false", c.loadXML(b))
        } catch (e) {
            c = void 0
        }
        return c && c.documentElement && !c.getElementsByTagName("parsererror").length || eb.error("Invalid XML: " + b), c
    };
    var Hc, Ic, Jc = /#.*$/,
        Kc = /([?&])_=[^&]*/,
        Lc = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
        Mc = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        Nc = /^(?:GET|HEAD)$/,
        Oc = /^\/\//,
        Pc = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        Qc = {},
        Rc = {},
        Sc = "*/".concat("*");
    try {
        Ic = location.href
    } catch (Tc) {
        Ic = ob.createElement("a"), Ic.href = "", Ic = Ic.href
    }
    Hc = Pc.exec(Ic.toLowerCase()) || [], eb.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Ic,
            type: "GET",
            isLocal: Mc.test(Hc[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Sc,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": eb.parseJSON,
                "text xml": eb.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? P(P(a, eb.ajaxSettings), b) : P(eb.ajaxSettings, a)
        },
        ajaxPrefilter: N(Qc),
        ajaxTransport: N(Rc),
        ajax: function(a, b) {
            function c(a, b, c, d) {
                var e, k, r, s, u, w = b;
                2 !== t && (t = 2, h && clearTimeout(h), j = void 0, g = d || "", v.readyState = a > 0 ? 4 : 0, e = a >= 200 && 300 > a || 304 === a, c && (s = Q(l, v, c)), s = R(l, s, v, e), e ? (l.ifModified && (u = v.getResponseHeader("Last-Modified"), u && (eb.lastModified[f] = u), u = v.getResponseHeader("etag"), u && (eb.etag[f] = u)), 204 === a || "HEAD" === l.type ? w = "nocontent" : 304 === a ? w = "notmodified" : (w = s.state, k = s.data, r = s.error, e = !r)) : (r = w, (a || !w) && (w = "error", 0 > a && (a = 0))), v.status = a, v.statusText = (b || w) + "", e ? o.resolveWith(m, [k, w, v]) : o.rejectWith(m, [v, w, r]), v.statusCode(q), q = void 0, i && n.trigger(e ? "ajaxSuccess" : "ajaxError", [v, l, e ? k : r]), p.fireWith(m, [v, w]), i && (n.trigger("ajaxComplete", [v, l]), --eb.active || eb.event.trigger("ajaxStop")))
            }
            "object" == typeof a && (b = a, a = void 0), b = b || {};
            var d, e, f, g, h, i, j, k, l = eb.ajaxSetup({}, b),
                m = l.context || l,
                n = l.context && (m.nodeType || m.jquery) ? eb(m) : eb.event,
                o = eb.Deferred(),
                p = eb.Callbacks("once memory"),
                q = l.statusCode || {},
                r = {},
                s = {},
                t = 0,
                u = "canceled",
                v = {
                    readyState: 0,
                    getResponseHeader: function(a) {
                        var b;
                        if (2 === t) {
                            if (!k)
                                for (k = {}; b = Lc.exec(g);) k[b[1].toLowerCase()] = b[2];
                            b = k[a.toLowerCase()]
                        }
                        return null == b ? null : b
                    },
                    getAllResponseHeaders: function() {
                        return 2 === t ? g : null
                    },
                    setRequestHeader: function(a, b) {
                        var c = a.toLowerCase();
                        return t || (a = s[c] = s[c] || a, r[a] = b), this
                    },
                    overrideMimeType: function(a) {
                        return t || (l.mimeType = a), this
                    },
                    statusCode: function(a) {
                        var b;
                        if (a)
                            if (2 > t)
                                for (b in a) q[b] = [q[b], a[b]];
                            else v.always(a[v.status]);
                        return this
                    },
                    abort: function(a) {
                        var b = a || u;
                        return j && j.abort(b), c(0, b), this
                    }
                };
            if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, l.url = ((a || l.url || Ic) + "").replace(Jc, "").replace(Oc, Hc[1] + "//"), l.type = b.method || b.type || l.method || l.type, l.dataTypes = eb.trim(l.dataType || "*").toLowerCase().match(tb) || [""], null == l.crossDomain && (d = Pc.exec(l.url.toLowerCase()), l.crossDomain = !(!d || d[1] === Hc[1] && d[2] === Hc[2] && (d[3] || ("http:" === d[1] ? "80" : "443")) === (Hc[3] || ("http:" === Hc[1] ? "80" : "443")))), l.data && l.processData && "string" != typeof l.data && (l.data = eb.param(l.data, l.traditional)), O(Qc, l, b, v), 2 === t) return v;
            i = l.global, i && 0 === eb.active++ && eb.event.trigger("ajaxStart"), l.type = l.type.toUpperCase(), l.hasContent = !Nc.test(l.type), f = l.url, l.hasContent || (l.data && (f = l.url += (Fc.test(f) ? "&" : "?") + l.data, delete l.data), l.cache === !1 && (l.url = Kc.test(f) ? f.replace(Kc, "$1_=" + Ec++) : f + (Fc.test(f) ? "&" : "?") + "_=" + Ec++)), l.ifModified && (eb.lastModified[f] && v.setRequestHeader("If-Modified-Since", eb.lastModified[f]), eb.etag[f] && v.setRequestHeader("If-None-Match", eb.etag[f])), (l.data && l.hasContent && l.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", l.contentType), v.setRequestHeader("Accept", l.dataTypes[0] && l.accepts[l.dataTypes[0]] ? l.accepts[l.dataTypes[0]] + ("*" !== l.dataTypes[0] ? ", " + Sc + "; q=0.01" : "") : l.accepts["*"]);
            for (e in l.headers) v.setRequestHeader(e, l.headers[e]);
            if (l.beforeSend && (l.beforeSend.call(m, v, l) === !1 || 2 === t)) return v.abort();
            u = "abort";
            for (e in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) v[e](l[e]);
            if (j = O(Rc, l, b, v)) {
                v.readyState = 1, i && n.trigger("ajaxSend", [v, l]), l.async && l.timeout > 0 && (h = setTimeout(function() {
                    v.abort("timeout")
                }, l.timeout));
                try {
                    t = 1, j.send(r, c)
                } catch (w) {
                    if (!(2 > t)) throw w;
                    c(-1, w)
                }
            } else c(-1, "No Transport");
            return v
        },
        getJSON: function(a, b, c) {
            return eb.get(a, b, c, "json")
        },
        getScript: function(a, b) {
            return eb.get(a, void 0, b, "script")
        }
    }), eb.each(["get", "post"], function(a, b) {
        eb[b] = function(a, c, d, e) {
            return eb.isFunction(c) && (e = e || d, d = c, c = void 0), eb.ajax({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            })
        }
    }), eb.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(a, b) {
        eb.fn[b] = function(a) {
            return this.on(b, a)
        }
    }), eb._evalUrl = function(a) {
        return eb.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            "throws": !0
        })
    }, eb.fn.extend({
        wrapAll: function(a) {
            if (eb.isFunction(a)) return this.each(function(b) {
                eb(this).wrapAll(a.call(this, b))
            });
            if (this[0]) {
                var b = eb(a, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
                    for (var a = this; a.firstChild && 1 === a.firstChild.nodeType;) a = a.firstChild;
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return this.each(eb.isFunction(a) ? function(b) {
                eb(this).wrapInner(a.call(this, b))
            } : function() {
                var b = eb(this),
                    c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = eb.isFunction(a);
            return this.each(function(c) {
                eb(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                eb.nodeName(this, "body") || eb(this).replaceWith(this.childNodes)
            }).end()
        }
    }), eb.expr.filters.hidden = function(a) {
        return a.offsetWidth <= 0 && a.offsetHeight <= 0 || !cb.reliableHiddenOffsets() && "none" === (a.style && a.style.display || eb.css(a, "display"))
    }, eb.expr.filters.visible = function(a) {
        return !eb.expr.filters.hidden(a)
    };
    var Uc = /%20/g,
        Vc = /\[\]$/,
        Wc = /\r?\n/g,
        Xc = /^(?:submit|button|image|reset|file)$/i,
        Yc = /^(?:input|select|textarea|keygen)/i;
    eb.param = function(a, b) {
        var c, d = [],
            e = function(a, b) {
                b = eb.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
            };
        if (void 0 === b && (b = eb.ajaxSettings && eb.ajaxSettings.traditional), eb.isArray(a) || a.jquery && !eb.isPlainObject(a)) eb.each(a, function() {
            e(this.name, this.value)
        });
        else
            for (c in a) S(c, a[c], b, e);
        return d.join("&").replace(Uc, "+")
    }, eb.fn.extend({
        serialize: function() {
            return eb.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var a = eb.prop(this, "elements");
                return a ? eb.makeArray(a) : this
            }).filter(function() {
                var a = this.type;
                return this.name && !eb(this).is(":disabled") && Yc.test(this.nodeName) && !Xc.test(a) && (this.checked || !Eb.test(a))
            }).map(function(a, b) {
                var c = eb(this).val();
                return null == c ? null : eb.isArray(c) ? eb.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(Wc, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(Wc, "\r\n")
                }
            }).get()
        }
    }), eb.ajaxSettings.xhr = void 0 !== a.ActiveXObject ? function() {
        return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && T() || U()
    } : T;
    var Zc = 0,
        $c = {},
        _c = eb.ajaxSettings.xhr();
    a.ActiveXObject && eb(a).on("unload", function() {
        for (var a in $c) $c[a](void 0, !0)
    }), cb.cors = !!_c && "withCredentials" in _c, _c = cb.ajax = !!_c, _c && eb.ajaxTransport(function(a) {
        if (!a.crossDomain || cb.cors) {
            var b;
            return {
                send: function(c, d) {
                    var e, f = a.xhr(),
                        g = ++Zc;
                    if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields)
                        for (e in a.xhrFields) f[e] = a.xhrFields[e];
                    a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                    for (e in c) void 0 !== c[e] && f.setRequestHeader(e, c[e] + "");
                    f.send(a.hasContent && a.data || null), b = function(c, e) {
                        var h, i, j;
                        if (b && (e || 4 === f.readyState))
                            if (delete $c[g], b = void 0, f.onreadystatechange = eb.noop, e) 4 !== f.readyState && f.abort();
                            else {
                                j = {}, h = f.status, "string" == typeof f.responseText && (j.text = f.responseText);
                                try {
                                    i = f.statusText
                                } catch (k) {
                                    i = ""
                                }
                                h || !a.isLocal || a.crossDomain ? 1223 === h && (h = 204) : h = j.text ? 200 : 404
                            }
                        j && d(h, i, j, f.getAllResponseHeaders())
                    }, a.async ? 4 === f.readyState ? setTimeout(b) : f.onreadystatechange = $c[g] = b : b()
                },
                abort: function() {
                    b && b(void 0, !0)
                }
            }
        }
    }), eb.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {
                return eb.globalEval(a), a
            }
        }
    }), eb.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1)
    }), eb.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c = ob.head || eb("head")[0] || ob.documentElement;
            return {
                send: function(d, e) {
                    b = ob.createElement("script"), b.async = !0, a.scriptCharset && (b.charset = a.scriptCharset), b.src = a.url, b.onload = b.onreadystatechange = function(a, c) {
                        (c || !b.readyState || /loaded|complete/.test(b.readyState)) && (b.onload = b.onreadystatechange = null, b.parentNode && b.parentNode.removeChild(b), b = null, c || e(200, "success"))
                    }, c.insertBefore(b, c.firstChild)
                },
                abort: function() {
                    b && b.onload(void 0, !0)
                }
            }
        }
    });
    var ad = [],
        bd = /(=)\?(?=&|$)|\?\?/;
    eb.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = ad.pop() || eb.expando + "_" + Ec++;
            return this[a] = !0, a
        }
    }), eb.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (bd.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && bd.test(b.data) && "data");
        return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = eb.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(bd, "$1" + e) : b.jsonp !== !1 && (b.url += (Fc.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function() {
            return g || eb.error(e + " was not called"), g[0]
        }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
            g = arguments
        }, d.always(function() {
            a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, ad.push(e)), g && eb.isFunction(f) && f(g[0]), g = f = void 0
        }), "script") : void 0
    }), eb.parseHTML = function(a, b, c) {
        if (!a || "string" != typeof a) return null;
        "boolean" == typeof b && (c = b, b = !1), b = b || ob;
        var d = lb.exec(a),
            e = !c && [];
        return d ? [b.createElement(d[1])] : (d = eb.buildFragment([a], b, e), e && e.length && eb(e).remove(), eb.merge([], d.childNodes))
    };
    var cd = eb.fn.load;
    eb.fn.load = function(a, b, c) {
        if ("string" != typeof a && cd) return cd.apply(this, arguments);
        var d, e, f, g = this,
            h = a.indexOf(" ");
        return h >= 0 && (d = eb.trim(a.slice(h, a.length)), a = a.slice(0, h)), eb.isFunction(b) ? (c = b, b = void 0) : b && "object" == typeof b && (f = "POST"), g.length > 0 && eb.ajax({
            url: a,
            type: f,
            dataType: "html",
            data: b
        }).done(function(a) {
            e = arguments, g.html(d ? eb("<div>").append(eb.parseHTML(a)).find(d) : a)
        }).complete(c && function(a, b) {
            g.each(c, e || [a.responseText, b, a])
        }), this
    }, eb.expr.filters.animated = function(a) {
        return eb.grep(eb.timers, function(b) {
            return a === b.elem
        }).length
    };
    var dd = a.document.documentElement;
    eb.offset = {
        setOffset: function(a, b, c) {
            var d, e, f, g, h, i, j, k = eb.css(a, "position"),
                l = eb(a),
                m = {};
            "static" === k && (a.style.position = "relative"), h = l.offset(), f = eb.css(a, "top"), i = eb.css(a, "left"), j = ("absolute" === k || "fixed" === k) && eb.inArray("auto", [f, i]) > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), eb.isFunction(b) && (b = b.call(a, c, h)), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m)
        }
    }, eb.fn.extend({
        offset: function(a) {
            if (arguments.length) return void 0 === a ? this : this.each(function(b) {
                eb.offset.setOffset(this, a, b)
            });
            var b, c, d = {
                    top: 0,
                    left: 0
                },
                e = this[0],
                f = e && e.ownerDocument;
            if (f) return b = f.documentElement, eb.contains(b, e) ? (typeof e.getBoundingClientRect !== xb && (d = e.getBoundingClientRect()), c = V(f), {
                top: d.top + (c.pageYOffset || b.scrollTop) - (b.clientTop || 0),
                left: d.left + (c.pageXOffset || b.scrollLeft) - (b.clientLeft || 0)
            }) : d
        },
        position: function() {
            if (this[0]) {
                var a, b, c = {
                        top: 0,
                        left: 0
                    },
                    d = this[0];
                return "fixed" === eb.css(d, "position") ? b = d.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), eb.nodeName(a[0], "html") || (c = a.offset()), c.top += eb.css(a[0], "borderTopWidth", !0), c.left += eb.css(a[0], "borderLeftWidth", !0)), {
                    top: b.top - c.top - eb.css(d, "marginTop", !0),
                    left: b.left - c.left - eb.css(d, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var a = this.offsetParent || dd; a && !eb.nodeName(a, "html") && "static" === eb.css(a, "position");) a = a.offsetParent;
                return a || dd
            })
        }
    }), eb.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, b) {
        var c = /Y/.test(b);
        eb.fn[a] = function(d) {
            return Db(this, function(a, d, e) {
                var f = V(a);
                return void 0 === e ? f ? b in f ? f[b] : f.document.documentElement[d] : a[d] : void(f ? f.scrollTo(c ? eb(f).scrollLeft() : e, c ? e : eb(f).scrollTop()) : a[d] = e)
            }, a, d, arguments.length, null)
        }
    }), eb.each(["top", "left"], function(a, b) {
        eb.cssHooks[b] = A(cb.pixelPosition, function(a, c) {
            return c ? (c = bc(a, b), dc.test(c) ? eb(a).position()[b] + "px" : c) : void 0
        })
    }), eb.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        eb.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            eb.fn[d] = function(d, e) {
                var f = arguments.length && (c || "boolean" != typeof d),
                    g = c || (d === !0 || e === !0 ? "margin" : "border");
                return Db(this, function(b, c, d) {
                    var e;
                    return eb.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? eb.css(b, c, g) : eb.style(b, c, d, g)
                }, b, f ? d : void 0, f, null)
            }
        })
    }), eb.fn.size = function() {
        return this.length
    }, eb.fn.andSelf = eb.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
        return eb
    });
    var ed = a.jQuery,
        fd = a.$;
    return eb.noConflict = function(b) {
        return a.$ === eb && (a.$ = fd), b && a.jQuery === eb && (a.jQuery = ed), eb
    }, typeof b === xb && (a.jQuery = a.$ = eb), eb
}),
function(a, b) {
    function c(a, b) {
        var c = a.createElement("p"),
            d = a.getElementsByTagName("head")[0] || a.documentElement;
        return c.innerHTML = "x<style>" + b + "</style>", d.insertBefore(c.lastChild, d.firstChild)
    }

    function d() {
        var a = t.elements;
        return "string" == typeof a ? a.split(" ") : a
    }

    function e(a, b) {
        var c = t.elements;
        "string" != typeof c && (c = c.join(" ")), "string" != typeof a && (a = a.join(" ")), t.elements = c + " " + a, j(b)
    }

    function f(a) {
        var b = s[a[q]];
        return b || (b = {}, r++, a[q] = r, s[r] = b), b
    }

    function g(a, c, d) {
        if (c || (c = b), l) return c.createElement(a);
        d || (d = f(c));
        var e;
        return e = d.cache[a] ? d.cache[a].cloneNode() : p.test(a) ? (d.cache[a] = d.createElem(a)).cloneNode() : d.createElem(a), !e.canHaveChildren || o.test(a) || e.tagUrn ? e : d.frag.appendChild(e)
    }

    function h(a, c) {
        if (a || (a = b), l) return a.createDocumentFragment();
        c = c || f(a);
        for (var e = c.frag.cloneNode(), g = 0, h = d(), i = h.length; i > g; g++) e.createElement(h[g]);
        return e
    }

    function i(a, b) {
        b.cache || (b.cache = {}, b.createElem = a.createElement, b.createFrag = a.createDocumentFragment, b.frag = b.createFrag()), a.createElement = function(c) {
            return t.shivMethods ? g(c, a, b) : b.createElem(c)
        }, a.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + d().join().replace(/[\w\-:]+/g, function(a) {
            return b.createElem(a), b.frag.createElement(a), 'c("' + a + '")'
        }) + ");return n}")(t, b.frag)
    }

    function j(a) {
        a || (a = b);
        var d = f(a);
        return !t.shivCSS || k || d.hasCSS || (d.hasCSS = !!c(a, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")), l || i(a, d), a
    }
    var k, l, m = "3.7.2",
        n = a.html5 || {},
        o = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,
        p = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,
        q = "_html5shiv",
        r = 0,
        s = {};
    ! function() {
        try {
            var a = b.createElement("a");
            a.innerHTML = "<xyz></xyz>", k = "hidden" in a, l = 1 == a.childNodes.length || function() {
                b.createElement("a");
                var a = b.createDocumentFragment();
                return "undefined" == typeof a.cloneNode || "undefined" == typeof a.createDocumentFragment || "undefined" == typeof a.createElement
            }()
        } catch (c) {
            k = !0, l = !0
        }
    }();
    var t = {
        elements: n.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video",
        version: m,
        shivCSS: n.shivCSS !== !1,
        supportsUnknownElements: l,
        shivMethods: n.shivMethods !== !1,
        type: "default",
        shivDocument: j,
        createElement: g,
        createDocumentFragment: h,
        addElements: e
    };
    a.html5 = t, j(b)
}(this, document),
function() {
    var a = null;
    ! function(b) {
        function c(b) {
            if (c[b] !== f) return c[b];
            var d;
            if ("bug-string-char-index" == b) d = "a" != "a" [0];
            else if ("json" == b) d = c("json-stringify") && c("json-parse");
            else {
                var e;
                if ("json-stringify" == b) {
                    d = j.stringify;
                    var h = "function" == typeof d && k;
                    if (h) {
                        (e = function() {
                            return 1
                        }).toJSON = e;
                        try {
                            h = "0" === d(0) && "0" === d(new Number) && '""' == d(new String) && d(g) === f && d(f) === f && d() === f && "1" === d(e) && "[1]" == d([e]) && "[null]" == d([f]) && "null" == d(a) && "[null,null,null]" == d([f, g, a]) && '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}' == d({
                                a: [e, !0, !1, a, "\x00\b\n\f\r	"]
                            }) && "1" === d(a, e) && "[\n 1,\n 2\n]" == d([1, 2], a, 1) && '"-271821-04-20T00:00:00.000Z"' == d(new Date(-864e13)) && '"+275760-09-13T00:00:00.000Z"' == d(new Date(864e13)) && '"-000001-01-01T00:00:00.000Z"' == d(new Date(-621987552e5)) && '"1969-12-31T23:59:59.999Z"' == d(new Date(-1))
                        } catch (i) {
                            h = !1
                        }
                    }
                    d = h
                }
                if ("json-parse" == b) {
                    if (d = j.parse, "function" == typeof d) try {
                        if (0 === d("0") && !d(!1)) {
                            e = d('{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}');
                            var l = 5 == e.a.length && 1 === e.a[0];
                            if (l) {
                                try {
                                    l = !d('"	"')
                                } catch (m) {}
                                if (l) try {
                                    l = 1 !== d("01")
                                } catch (n) {}
                                if (l) try {
                                    l = 1 !== d("1.")
                                } catch (o) {}
                            }
                        }
                    } catch (p) {
                        l = !1
                    }
                    d = l
                }
            }
            return c[b] = !!d
        }
        var d, e, f, g = {}.toString,
            h = "function" == typeof define && define.amd,
            i = "object" == typeof JSON && JSON,
            j = "object" == typeof exports && exports && !exports.nodeType && exports;
        j && i ? (j.stringify = i.stringify, j.parse = i.parse) : j = b.JSON = i || {};
        var k = new Date(-0xc782b5b800cec);
        try {
            k = -109252 == k.getUTCFullYear() && 0 === k.getUTCMonth() && 1 === k.getUTCDate() && 10 == k.getUTCHours() && 37 == k.getUTCMinutes() && 6 == k.getUTCSeconds() && 708 == k.getUTCMilliseconds()
        } catch (l) {}
        if (!c("json")) {
            var m = c("bug-string-char-index");
            if (!k) var n = Math.floor,
                o = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
                p = function(a, b) {
                    return o[b] + 365 * (a - 1970) + n((a - 1969 + (b = +(b > 1))) / 4) - n((a - 1901 + b) / 100) + n((a - 1601 + b) / 400)
                };
            (d = {}.hasOwnProperty) || (d = function(b) {
                var c, e = {};
                return (e.__proto__ = a, e.__proto__ = {
                    toString: 1
                }, e).toString != g ? d = function(b) {
                    var c = this.__proto__,
                        b = b in (this.__proto__ = a, this);
                    return this.__proto__ = c, b
                } : (c = e.constructor, d = function(a) {
                    var b = (this.constructor || c).prototype;
                    return a in this && !(a in b && this[a] === b[a])
                }), e = a, d.call(this, b)
            });
            var q = {
                "boolean": 1,
                number: 1,
                string: 1,
                undefined: 1
            };
            if (e = function(b, c) {
                    var f, h, i, j = 0;
                    (f = function() {
                        this.valueOf = 0
                    }).prototype.valueOf = 0, h = new f;
                    for (i in h) d.call(h, i) && j++;
                    return f = h = a, j ? e = 2 == j ? function(a, b) {
                        var c, e = {},
                            f = "[object Function]" == g.call(a);
                        for (c in a) !(f && "prototype" == c) && !d.call(e, c) && (e[c] = 1) && d.call(a, c) && b(c)
                    } : function(a, b) {
                        var c, e, f = "[object Function]" == g.call(a);
                        for (c in a) !(f && "prototype" == c) && d.call(a, c) && !(e = "constructor" === c) && b(c);
                        (e || d.call(a, c = "constructor")) && b(c)
                    } : (h = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"], e = function(a, b) {
                        var c, e, f = "[object Function]" == g.call(a);
                        (e = !f) && (e = "function" != typeof a.constructor) && (e = typeof a.hasOwnProperty, e = "object" == e ? !!a.hasOwnProperty : !q[e]), e = e ? a.hasOwnProperty : d;
                        for (c in a) !(f && "prototype" == c) && e.call(a, c) && b(c);
                        for (f = h.length; c = h[--f]; e.call(a, c) && b(c));
                    }), e(b, c)
                }, !c("json-stringify")) {
                var r = {
                        92: "\\\\",
                        34: '\\"',
                        8: "\\b",
                        12: "\\f",
                        10: "\\n",
                        13: "\\r",
                        9: "\\t"
                    },
                    s = function(a, b) {
                        return ("000000" + (b || 0)).slice(-a)
                    },
                    t = function(a) {
                        var b, c = '"',
                            d = 0,
                            e = a.length,
                            f = e > 10 && m;
                        for (f && (b = a.split("")); e > d; d++) {
                            var g = a.charCodeAt(d);
                            switch (g) {
                                case 8:
                                case 9:
                                case 10:
                                case 12:
                                case 13:
                                case 34:
                                case 92:
                                    c += r[g];
                                    break;
                                default:
                                    if (32 > g) {
                                        c += "\\u00" + s(2, g.toString(16));
                                        break
                                    }
                                    c += f ? b[d] : m ? a.charAt(d) : a[d]
                            }
                        }
                        return c + '"'
                    },
                    u = function(b, c, h, i, j, k, l) {
                        var m, o, q, r, v, w, x, y, z;
                        try {
                            m = c[b]
                        } catch (A) {}
                        if ("object" == typeof m && m)
                            if (o = g.call(m), "[object Date]" != o || d.call(m, "toJSON")) "function" == typeof m.toJSON && ("[object Number]" != o && "[object String]" != o && "[object Array]" != o || d.call(m, "toJSON")) && (m = m.toJSON(b));
                            else if (m > -1 / 0 && 1 / 0 > m) {
                            if (p) {
                                for (r = n(m / 864e5), o = n(r / 365.2425) + 1970 - 1; p(o + 1, 0) <= r; o++);
                                for (q = n((r - p(o, 0)) / 30.42); p(o, q + 1) <= r; q++);
                                r = 1 + r - p(o, q), v = (m % 864e5 + 864e5) % 864e5, w = n(v / 36e5) % 24, x = n(v / 6e4) % 60, y = n(v / 1e3) % 60, v %= 1e3
                            } else o = m.getUTCFullYear(), q = m.getUTCMonth(), r = m.getUTCDate(), w = m.getUTCHours(), x = m.getUTCMinutes(), y = m.getUTCSeconds(), v = m.getUTCMilliseconds();
                            m = (0 >= o || o >= 1e4 ? (0 > o ? "-" : "+") + s(6, 0 > o ? -o : o) : s(4, o)) + "-" + s(2, q + 1) + "-" + s(2, r) + "T" + s(2, w) + ":" + s(2, x) + ":" + s(2, y) + "." + s(3, v) + "Z"
                        } else m = a;
                        if (h && (m = h.call(c, b, m)), m === a) return "null";
                        if (o = g.call(m), "[object Boolean]" == o) return "" + m;
                        if ("[object Number]" == o) return m > -1 / 0 && 1 / 0 > m ? "" + m : "null";
                        if ("[object String]" == o) return t("" + m);
                        if ("object" == typeof m) {
                            for (b = l.length; b--;)
                                if (l[b] === m) throw TypeError();
                            if (l.push(m), z = [], c = k, k += j, "[object Array]" == o) {
                                for (q = 0, b = m.length; b > q; q++) o = u(q, m, h, i, j, k, l), z.push(o === f ? "null" : o);
                                b = z.length ? j ? "[\n" + k + z.join(",\n" + k) + "\n" + c + "]" : "[" + z.join(",") + "]" : "[]"
                            } else e(i || m, function(a) {
                                var b = u(a, m, h, i, j, k, l);
                                b !== f && z.push(t(a) + ":" + (j ? " " : "") + b)
                            }), b = z.length ? j ? "{\n" + k + z.join(",\n" + k) + "\n" + c + "}" : "{" + z.join(",") + "}" : "{}";
                            return l.pop(), b
                        }
                    };
                j.stringify = function(a, b, c) {
                    var d, e, f, h;
                    if ("function" == typeof b || "object" == typeof b && b)
                        if ("[object Function]" == (h = g.call(b))) e = b;
                        else if ("[object Array]" == h) {
                        f = {};
                        for (var i, j = 0, k = b.length; k > j; i = b[j++], h = g.call(i), ("[object String]" == h || "[object Number]" == h) && (f[i] = 1));
                    }
                    if (c)
                        if ("[object Number]" == (h = g.call(c))) {
                            if ((c -= c % 1) > 0)
                                for (d = "", c > 10 && (c = 10); d.length < c; d += " ");
                        } else "[object String]" == h && (d = c.length <= 10 ? c : c.slice(0, 10));
                    return u("", (i = {}, i[""] = a, i), e, f, d, "", [])
                }
            }
            if (!c("json-parse")) {
                var v, w, x = String.fromCharCode,
                    y = {
                        92: "\\",
                        34: '"',
                        47: "/",
                        98: "\b",
                        116: "	",
                        110: "\n",
                        102: "\f",
                        114: "\r"
                    },
                    z = function() {
                        throw v = w = a, SyntaxError()
                    },
                    A = function() {
                        for (var b, c, d, e, f, g = w, h = g.length; h > v;) switch (f = g.charCodeAt(v)) {
                            case 9:
                            case 10:
                            case 13:
                            case 32:
                                v++;
                                break;
                            case 123:
                            case 125:
                            case 91:
                            case 93:
                            case 58:
                            case 44:
                                return b = m ? g.charAt(v) : g[v], v++, b;
                            case 34:
                                for (b = "@", v++; h > v;)
                                    if (f = g.charCodeAt(v), 32 > f) z();
                                    else if (92 == f) switch (f = g.charCodeAt(++v)) {
                                    case 92:
                                    case 34:
                                    case 47:
                                    case 98:
                                    case 116:
                                    case 110:
                                    case 102:
                                    case 114:
                                        b += y[f], v++;
                                        break;
                                    case 117:
                                        for (c = ++v, d = v + 4; d > v; v++) f = g.charCodeAt(v), f >= 48 && 57 >= f || f >= 97 && 102 >= f || f >= 65 && 70 >= f || z();
                                        b += x("0x" + g.slice(c, v));
                                        break;
                                    default:
                                        z()
                                } else {
                                    if (34 == f) break;
                                    for (f = g.charCodeAt(v), c = v; f >= 32 && 92 != f && 34 != f;) f = g.charCodeAt(++v);
                                    b += g.slice(c, v)
                                }
                                if (34 == g.charCodeAt(v)) return v++, b;
                                z();
                            default:
                                if (c = v, 45 == f && (e = !0, f = g.charCodeAt(++v)), f >= 48 && 57 >= f) {
                                    for (48 == f && (f = g.charCodeAt(v + 1), f >= 48 && 57 >= f) && z(); h > v && (f = g.charCodeAt(v), f >= 48 && 57 >= f); v++);
                                    if (46 == g.charCodeAt(v)) {
                                        for (d = ++v; h > d && (f = g.charCodeAt(d), f >= 48 && 57 >= f); d++);
                                        d == v && z(), v = d
                                    }
                                    if (f = g.charCodeAt(v), 101 == f || 69 == f) {
                                        for (f = g.charCodeAt(++v), (43 == f || 45 == f) && v++, d = v; h > d && (f = g.charCodeAt(d), f >= 48 && 57 >= f); d++);
                                        d == v && z(), v = d
                                    }
                                    return +g.slice(c, v)
                                }
                                if (e && z(), "true" == g.slice(v, v + 4)) return v += 4, !0;
                                if ("false" == g.slice(v, v + 5)) return v += 5, !1;
                                if ("null" == g.slice(v, v + 4)) return v += 4, a;
                                z()
                        }
                        return "$"
                    },
                    B = function(a) {
                        var b, c;
                        if ("$" == a && z(), "string" == typeof a) {
                            if ("@" == (m ? a.charAt(0) : a[0])) return a.slice(1);
                            if ("[" == a) {
                                for (b = []; a = A(), "]" != a; c || (c = !0)) c && ("," == a ? (a = A(), "]" == a && z()) : z()), "," == a && z(), b.push(B(a));
                                return b
                            }
                            if ("{" == a) {
                                for (b = {}; a = A(), "}" != a; c || (c = !0)) c && ("," == a ? (a = A(), "}" == a && z()) : z()), ("," == a || "string" != typeof a || "@" != (m ? a.charAt(0) : a[0]) || ":" != A()) && z(), b[a.slice(1)] = B(A());
                                return b
                            }
                            z()
                        }
                        return a
                    },
                    C = function(a, b, c) {
                        c = D(a, b, c), c === f ? delete a[b] : a[b] = c
                    },
                    D = function(a, b, c) {
                        var d, f = a[b];
                        if ("object" == typeof f && f)
                            if ("[object Array]" == g.call(f))
                                for (d = f.length; d--;) C(f, d, c);
                            else e(f, function(a) {
                                C(f, a, c)
                            });
                        return c.call(a, b, f)
                    };
                j.parse = function(b, c) {
                    var d, e;
                    return v = 0, w = "" + b, d = B(A()), "$" != A() && z(), v = w = a, c && "[object Function]" == g.call(c) ? D((e = {}, e[""] = d, e), "", c) : d
                }
            }
        }
        h && define(function() {
            return j
        })
    }(this)
}(), (window._gsQueue || (window._gsQueue = [])).push(function() {
        "use strict";
        window._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(a, b, c) {
                var d = [].slice,
                    e = function(a, b, d) {
                        c.call(this, a, b, d), this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._dirty = !0, this.render = e.prototype.render
                    },
                    f = function(a) {
                        return a.jquery || a.length && a !== window && a[0] && (a[0] === window || a[0].nodeType && a[0].style && !a.nodeType)
                    },
                    g = e.prototype = c.to({}, .1, {}),
                    h = [];
                e.version = "1.10.2", g.constructor = e, g.kill()._gc = !1, e.killTweensOf = e.killDelayedCallsTo = c.killTweensOf, e.getTweensOf = c.getTweensOf, e.ticker = c.ticker, g.invalidate = function() {
                    return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), c.prototype.invalidate.call(this)
                }, g.updateTo = function(a, b) {
                    var d, e = this.ratio;
                    b && this.timeline && this._startTime < this._timeline._time && (this._startTime = this._timeline._time, this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                    for (d in a) this.vars[d] = a[d];
                    if (this._initted)
                        if (b) this._initted = !1;
                        else if (this._notifyPluginsOfEnabled && this._firstPT && c._onPluginEvent("_onDisable", this), this._time / this._duration > .998) {
                        var f = this._time;
                        this.render(0, !0, !1), this._initted = !1, this.render(f, !0, !1)
                    } else if (this._time > 0) {
                        this._initted = !1, this._init();
                        for (var g, h = 1 / (1 - e), i = this._firstPT; i;) g = i.s + i.c, i.c *= h, i.s = g - i.c, i = i._next
                    }
                    return this
                }, g.render = function(a, b, c) {
                    var d, e, f, g, i, j, k, l = this._dirty ? this.totalDuration() : this._totalDuration,
                        m = this._time,
                        n = this._totalTime,
                        o = this._cycle;
                    if (a >= l ? (this._totalTime = l, this._cycle = this._repeat, this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = this._duration, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1), this._reversed || (d = !0, e = "onComplete"), 0 === this._duration && ((0 === a || 0 > this._rawPrevTime) && this._rawPrevTime !== a && (c = !0, this._rawPrevTime > 0 && (e = "onReverseComplete", b && (a = -1))), this._rawPrevTime = a)) : 1e-7 > a ? (this._totalTime = this._time = this._cycle = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== n || 0 === this._duration && this._rawPrevTime > 0) && (e = "onReverseComplete", d = this._reversed), 0 > a ? (this._active = !1, 0 === this._duration && (this._rawPrevTime >= 0 && (c = !0), this._rawPrevTime = a)) : this._initted || (c = !0)) : (this._totalTime = this._time = a, 0 !== this._repeat && (g = this._duration + this._repeatDelay, this._cycle = this._totalTime / g >> 0, 0 !== this._cycle && this._cycle === this._totalTime / g && this._cycle--, this._time = this._totalTime - this._cycle * g, this._yoyo && 0 !== (1 & this._cycle) && (this._time = this._duration - this._time), this._time > this._duration ? this._time = this._duration : 0 > this._time && (this._time = 0)), this._easeType ? (i = this._time / this._duration, j = this._easeType, k = this._easePower, (1 === j || 3 === j && i >= .5) && (i = 1 - i), 3 === j && (i *= 2), 1 === k ? i *= i : 2 === k ? i *= i * i : 3 === k ? i *= i * i * i : 4 === k && (i *= i * i * i * i), this.ratio = 1 === j ? 1 - i : 2 === j ? i : .5 > this._time / this._duration ? i / 2 : 1 - i / 2) : this.ratio = this._ease.getRatio(this._time / this._duration)), m === this._time && !c) return void(n !== this._totalTime && this._onUpdate && (b || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || h)));
                    if (!this._initted) {
                        if (this._init(), !this._initted) return;
                        this._time && !d ? this.ratio = this._ease.getRatio(this._time / this._duration) : d && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                    }
                    for (this._active || !this._paused && this._time !== m && a >= 0 && (this._active = !0), 0 === n && (this._startAt && (a >= 0 ? this._startAt.render(a, b, c) : e || (e = "_dummyGS")), this.vars.onStart && (0 !== this._totalTime || 0 === this._duration) && (b || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || h))), f = this._firstPT; f;) f.f ? f.t[f.p](f.c * this.ratio + f.s) : f.t[f.p] = f.c * this.ratio + f.s, f = f._next;
                    this._onUpdate && (0 > a && this._startAt && this._startAt.render(a, b, c), b || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || h)), this._cycle !== o && (b || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || h)), e && (this._gc || (0 > a && this._startAt && !this._onUpdate && this._startAt.render(a, b, c), d && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[e] && this.vars[e].apply(this.vars[e + "Scope"] || this, this.vars[e + "Params"] || h)))
                }, e.to = function(a, b, c) {
                    return new e(a, b, c)
                }, e.from = function(a, b, c) {
                    return c.runBackwards = !0, c.immediateRender = 0 != c.immediateRender, new e(a, b, c)
                }, e.fromTo = function(a, b, c, d) {
                    return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, new e(a, b, d)
                }, e.staggerTo = e.allTo = function(a, b, g, i, j, k, l) {
                    i = i || 0;
                    var m, n, o, p, q = g.delay || 0,
                        r = [],
                        s = function() {
                            g.onComplete && g.onComplete.apply(g.onCompleteScope || this, arguments), j.apply(l || this, k || h)
                        };
                    for (a instanceof Array || ("string" == typeof a && (a = c.selector(a) || a), f(a) && (a = d.call(a, 0))), m = a.length, o = 0; m > o; o++) {
                        n = {};
                        for (p in g) n[p] = g[p];
                        n.delay = q, o === m - 1 && j && (n.onComplete = s), r[o] = new e(a[o], b, n), q += i
                    }
                    return r
                }, e.staggerFrom = e.allFrom = function(a, b, c, d, f, g, h) {
                    return c.runBackwards = !0, c.immediateRender = 0 != c.immediateRender, e.staggerTo(a, b, c, d, f, g, h)
                }, e.staggerFromTo = e.allFromTo = function(a, b, c, d, f, g, h, i) {
                    return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, e.staggerTo(a, b, d, f, g, h, i)
                }, e.delayedCall = function(a, b, c, d, f) {
                    return new e(b, 0, {
                        delay: a,
                        onComplete: b,
                        onCompleteParams: c,
                        onCompleteScope: d,
                        onReverseComplete: b,
                        onReverseCompleteParams: c,
                        onReverseCompleteScope: d,
                        immediateRender: !1,
                        useFrames: f,
                        overwrite: 0
                    })
                }, e.set = function(a, b) {
                    return new e(a, 0, b)
                }, e.isTweening = function(a) {
                    for (var b, d = c.getTweensOf(a), e = d.length; --e > -1;)
                        if (b = d[e], b._active || b._startTime === b._timeline._time && b._timeline._active) return !0;
                    return !1
                };
                var i = function(a, b) {
                        for (var d = [], e = 0, f = a._first; f;) f instanceof c ? d[e++] = f : (b && (d[e++] = f), d = d.concat(i(f, b)), e = d.length), f = f._next;
                        return d
                    },
                    j = e.getAllTweens = function(b) {
                        return i(a._rootTimeline, b).concat(i(a._rootFramesTimeline, b))
                    };
                e.killAll = function(a, c, d, e) {
                    null == c && (c = !0), null == d && (d = !0);
                    var f, g, h, i = j(0 != e),
                        k = i.length,
                        l = c && d && e;
                    for (h = 0; k > h; h++) g = i[h], (l || g instanceof b || (f = g.target === g.vars.onComplete) && d || c && !f) && (a ? g.totalTime(g.totalDuration()) : g._enabled(!1, !1))
                }, e.killChildTweensOf = function(a, b) {
                    if (null != a) {
                        var g, h, i, j, k, l = c._tweenLookup;
                        if ("string" == typeof a && (a = c.selector(a) || a), f(a) && (a = d(a, 0)), a instanceof Array)
                            for (j = a.length; --j > -1;) e.killChildTweensOf(a[j], b);
                        else {
                            g = [];
                            for (i in l)
                                for (h = l[i].target.parentNode; h;) h === a && (g = g.concat(l[i].tweens)), h = h.parentNode;
                            for (k = g.length, j = 0; k > j; j++) b && g[j].totalTime(g[j].totalDuration()), g[j]._enabled(!1, !1)
                        }
                    }
                };
                var k = function(a, c, d, e) {
                    c = c !== !1, d = d !== !1, e = e !== !1;
                    for (var f, g, h = j(e), i = c && d && e, k = h.length; --k > -1;) g = h[k], (i || g instanceof b || (f = g.target === g.vars.onComplete) && d || c && !f) && g.paused(a)
                };
                return e.pauseAll = function(a, b, c) {
                    k(!0, a, b, c)
                }, e.resumeAll = function(a, b, c) {
                    k(!1, a, b, c)
                }, e.globalTimeScale = function(b) {
                    var d = a._rootTimeline,
                        e = c.ticker.time;
                    return arguments.length ? (b = b || 1e-6, d._startTime = e - (e - d._startTime) * d._timeScale / b, d = a._rootFramesTimeline, e = c.ticker.frame, d._startTime = e - (e - d._startTime) * d._timeScale / b, d._timeScale = a._rootTimeline._timeScale = b, b) : d._timeScale
                }, g.progress = function(a) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration()
                }, g.totalProgress = function(a) {
                    return arguments.length ? this.totalTime(this.totalDuration() * a, !1) : this._totalTime / this.totalDuration()
                }, g.time = function(a, b) {
                    return arguments.length ? (this._dirty && this.totalDuration(), a > this._duration && (a = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? a = this._duration - a + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(a, b)) : this._time
                }, g.duration = function(b) {
                    return arguments.length ? a.prototype.duration.call(this, b) : this._duration
                }, g.totalDuration = function(a) {
                    return arguments.length ? -1 === this._repeat ? this : this.duration((a - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat, this._dirty = !1), this._totalDuration)
                }, g.repeat = function(a) {
                    return arguments.length ? (this._repeat = a, this._uncache(!0)) : this._repeat
                }, g.repeatDelay = function(a) {
                    return arguments.length ? (this._repeatDelay = a, this._uncache(!0)) : this._repeatDelay
                }, g.yoyo = function(a) {
                    return arguments.length ? (this._yoyo = a, this) : this._yoyo
                }, e
            }, !0), window._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(a, b, c) {
                var d = function(a) {
                        b.call(this, a), this._labels = {}, this.autoRemoveChildren = this.vars.autoRemoveChildren === !0, this.smoothChildTiming = this.vars.smoothChildTiming === !0, this._sortChildren = !0, this._onUpdate = this.vars.onUpdate;
                        var c, d, e = this.vars;
                        for (d in e) c = e[d], c instanceof Array && -1 !== c.join("").indexOf("{self}") && (e[d] = this._swapSelfInParams(c));
                        e.tweens instanceof Array && this.add(e.tweens, 0, e.align, e.stagger)
                    },
                    e = [],
                    f = function(a) {
                        var b, c = {};
                        for (b in a) c[b] = a[b];
                        return c
                    },
                    g = function(a, b, c, d) {
                        a._timeline.pause(a._startTime), b && b.apply(d || a._timeline, c || e)
                    },
                    h = e.slice,
                    i = d.prototype = new b;
                return d.version = "1.10.2", i.constructor = d, i.kill()._gc = !1, i.to = function(a, b, d, e) {
                    return b ? this.add(new c(a, b, d), e) : this.set(a, d, e)
                }, i.from = function(a, b, d, e) {
                    return this.add(c.from(a, b, d), e)
                }, i.fromTo = function(a, b, d, e, f) {
                    return b ? this.add(c.fromTo(a, b, d, e), f) : this.set(a, e, f)
                }, i.staggerTo = function(a, b, e, g, i, j, k, l) {
                    var m, n = new d({
                        onComplete: j,
                        onCompleteParams: k,
                        onCompleteScope: l
                    });
                    for ("string" == typeof a && (a = c.selector(a) || a), !(a instanceof Array) && a.length && a !== window && a[0] && (a[0] === window || a[0].nodeType && a[0].style && !a.nodeType) && (a = h.call(a, 0)), g = g || 0, m = 0; a.length > m; m++) e.startAt && (e.startAt = f(e.startAt)), n.to(a[m], b, f(e), m * g);
                    return this.add(n, i)
                }, i.staggerFrom = function(a, b, c, d, e, f, g, h) {
                    return c.immediateRender = 0 != c.immediateRender, c.runBackwards = !0, this.staggerTo(a, b, c, d, e, f, g, h)
                }, i.staggerFromTo = function(a, b, c, d, e, f, g, h, i) {
                    return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, this.staggerTo(a, b, d, e, f, g, h, i)
                }, i.call = function(a, b, d, e) {
                    return this.add(c.delayedCall(0, a, b, d), e)
                }, i.set = function(a, b, d) {
                    return d = this._parseTimeOrLabel(d, 0, !0), null == b.immediateRender && (b.immediateRender = d === this._time && !this._paused), this.add(new c(a, 0, b), d)
                }, d.exportRoot = function(a, b) {
                    a = a || {}, null == a.smoothChildTiming && (a.smoothChildTiming = !0);
                    var e, f, g = new d(a),
                        h = g._timeline;
                    for (null == b && (b = !0), h._remove(g, !0), g._startTime = 0, g._rawPrevTime = g._time = g._totalTime = h._time, e = h._first; e;) f = e._next, b && e instanceof c && e.target === e.vars.onComplete || g.add(e, e._startTime - e._delay), e = f;
                    return h.add(g, 0), g
                }, i.add = function(e, f, g, h) {
                    var i, j, k, l, m;
                    if ("number" != typeof f && (f = this._parseTimeOrLabel(f, 0, !0, e)), !(e instanceof a)) {
                        if (e instanceof Array) {
                            for (g = g || "normal", h = h || 0, i = f, j = e.length, k = 0; j > k; k++)(l = e[k]) instanceof Array && (l = new d({
                                tweens: l
                            })), this.add(l, i), "string" != typeof l && "function" != typeof l && ("sequence" === g ? i = l._startTime + l.totalDuration() / l._timeScale : "start" === g && (l._startTime -= l.delay())), i += h;
                            return this._uncache(!0)
                        }
                        if ("string" == typeof e) return this.addLabel(e, f);
                        if ("function" != typeof e) throw "Cannot add " + e + " into the timeline; it is neither a tween, timeline, function, nor a string.";
                        e = c.delayedCall(0, e)
                    }
                    if (b.prototype.add.call(this, e, f), this._gc && !this._paused && this._time === this._duration && this._time < this.duration())
                        for (m = this; m._gc && m._timeline;) m._timeline.smoothChildTiming ? m.totalTime(m._totalTime, !0) : m._enabled(!0, !1), m = m._timeline;
                    return this
                }, i.remove = function(b) {
                    if (b instanceof a) return this._remove(b, !1);
                    if (b instanceof Array) {
                        for (var c = b.length; --c > -1;) this.remove(b[c]);
                        return this
                    }
                    return "string" == typeof b ? this.removeLabel(b) : this.kill(null, b)
                }, i._remove = function(a, c) {
                    return b.prototype._remove.call(this, a, c), this._last ? this._time > this._last._startTime && (this._time = this.duration(), this._totalTime = this._totalDuration) : this._time = this._totalTime = 0, this
                }, i.append = function(a, b) {
                    return this.add(a, this._parseTimeOrLabel(null, b, !0, a))
                }, i.insert = i.insertMultiple = function(a, b, c, d) {
                    return this.add(a, b || 0, c, d)
                }, i.appendMultiple = function(a, b, c, d) {
                    return this.add(a, this._parseTimeOrLabel(null, b, !0, a), c, d)
                }, i.addLabel = function(a, b) {
                    return this._labels[a] = this._parseTimeOrLabel(b), this
                }, i.addPause = function(a, b, c, d) {
                    return this.call(g, ["{self}", b, c, d], this, a)
                }, i.removeLabel = function(a) {
                    return delete this._labels[a], this
                }, i.getLabelTime = function(a) {
                    return null != this._labels[a] ? this._labels[a] : -1
                }, i._parseTimeOrLabel = function(b, c, d, e) {
                    var f;
                    if (e instanceof a && e.timeline === this) this.remove(e);
                    else if (e instanceof Array)
                        for (f = e.length; --f > -1;) e[f] instanceof a && e[f].timeline === this && this.remove(e[f]);
                    if ("string" == typeof c) return this._parseTimeOrLabel(c, d && "number" == typeof b && null == this._labels[c] ? b - this.duration() : 0, d);
                    if (c = c || 0, "string" != typeof b || !isNaN(b) && null == this._labels[b]) null == b && (b = this.duration());
                    else {
                        if (f = b.indexOf("="), -1 === f) return null == this._labels[b] ? d ? this._labels[b] = this.duration() + c : c : this._labels[b] + c;
                        c = parseInt(b.charAt(f - 1) + "1", 10) * Number(b.substr(f + 1)), b = f > 1 ? this._parseTimeOrLabel(b.substr(0, f - 1), 0, d) : this.duration()
                    }
                    return Number(b) + c
                }, i.seek = function(a, b) {
                    return this.totalTime("number" == typeof a ? a : this._parseTimeOrLabel(a), b !== !1)
                }, i.stop = function() {
                    return this.paused(!0)
                }, i.gotoAndPlay = function(a, b) {
                    return this.play(a, b)
                }, i.gotoAndStop = function(a, b) {
                    return this.pause(a, b)
                }, i.render = function(a, b, c) {
                    this._gc && this._enabled(!0, !1);
                    var d, f, g, h, i, j = this._dirty ? this.totalDuration() : this._totalDuration,
                        k = this._time,
                        l = this._startTime,
                        m = this._timeScale,
                        n = this._paused;
                    if (a >= j ? (this._totalTime = this._time = j, this._reversed || this._hasPausedChild() || (f = !0, h = "onComplete", 0 === this._duration && (0 === a || 0 > this._rawPrevTime) && this._rawPrevTime !== a && this._first && (i = !0, this._rawPrevTime > 0 && (h = "onReverseComplete"))), this._rawPrevTime = a, a = j + 1e-6) : 1e-7 > a ? (this._totalTime = this._time = 0, (0 !== k || 0 === this._duration && this._rawPrevTime > 0) && (h = "onReverseComplete", f = this._reversed), 0 > a ? (this._active = !1, 0 === this._duration && this._rawPrevTime >= 0 && this._first && (i = !0), this._rawPrevTime = a) : (this._rawPrevTime = a, a = 0, this._initted || (i = !0))) : this._totalTime = this._time = this._rawPrevTime = a, this._time !== k && this._first || c || i) {
                        if (this._initted || (this._initted = !0), this._active || !this._paused && this._time !== k && a > 0 && (this._active = !0), 0 === k && this.vars.onStart && 0 !== this._time && (b || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || e)), this._time >= k)
                            for (d = this._first; d && (g = d._next, !this._paused || n);)(d._active || d._startTime <= this._time && !d._paused && !d._gc) && (d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)), d = g;
                        else
                            for (d = this._last; d && (g = d._prev, !this._paused || n);)(d._active || k >= d._startTime && !d._paused && !d._gc) && (d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)), d = g;
                        this._onUpdate && (b || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || e)), h && (this._gc || (l === this._startTime || m !== this._timeScale) && (0 === this._time || j >= this.totalDuration()) && (f && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[h] && this.vars[h].apply(this.vars[h + "Scope"] || this, this.vars[h + "Params"] || e)))
                    }
                }, i._hasPausedChild = function() {
                    for (var a = this._first; a;) {
                        if (a._paused || a instanceof d && a._hasPausedChild()) return !0;
                        a = a._next
                    }
                    return !1
                }, i.getChildren = function(a, b, d, e) {
                    e = e || -9999999999;
                    for (var f = [], g = this._first, h = 0; g;) e > g._startTime || (g instanceof c ? b !== !1 && (f[h++] = g) : (d !== !1 && (f[h++] = g), a !== !1 && (f = f.concat(g.getChildren(!0, b, d)), h = f.length))), g = g._next;
                    return f
                }, i.getTweensOf = function(a, b) {
                    for (var d = c.getTweensOf(a), e = d.length, f = [], g = 0; --e > -1;)(d[e].timeline === this || b && this._contains(d[e])) && (f[g++] = d[e]);
                    return f
                }, i._contains = function(a) {
                    for (var b = a.timeline; b;) {
                        if (b === this) return !0;
                        b = b.timeline
                    }
                    return !1
                }, i.shiftChildren = function(a, b, c) {
                    c = c || 0;
                    for (var d, e = this._first, f = this._labels; e;) e._startTime >= c && (e._startTime += a), e = e._next;
                    if (b)
                        for (d in f) f[d] >= c && (f[d] += a);
                    return this._uncache(!0)
                }, i._kill = function(a, b) {
                    if (!a && !b) return this._enabled(!1, !1);
                    for (var c = b ? this.getTweensOf(b) : this.getChildren(!0, !0, !1), d = c.length, e = !1; --d > -1;) c[d]._kill(a, b) && (e = !0);
                    return e
                }, i.clear = function(a) {
                    var b = this.getChildren(!1, !0, !0),
                        c = b.length;
                    for (this._time = this._totalTime = 0; --c > -1;) b[c]._enabled(!1, !1);
                    return a !== !1 && (this._labels = {}), this._uncache(!0)
                }, i.invalidate = function() {
                    for (var a = this._first; a;) a.invalidate(), a = a._next;
                    return this
                }, i._enabled = function(a, c) {
                    if (a === this._gc)
                        for (var d = this._first; d;) d._enabled(a, !0), d = d._next;
                    return b.prototype._enabled.call(this, a, c)
                }, i.progress = function(a) {
                    return arguments.length ? this.totalTime(this.duration() * a, !1) : this._time / this.duration()
                }, i.duration = function(a) {
                    return arguments.length ? (0 !== this.duration() && 0 !== a && this.timeScale(this._duration / a), this) : (this._dirty && this.totalDuration(), this._duration)
                }, i.totalDuration = function(a) {
                    if (!arguments.length) {
                        if (this._dirty) {
                            for (var b, c, d = 0, e = this._last, f = 999999999999; e;) b = e._prev, e._dirty && e.totalDuration(), e._startTime > f && this._sortChildren && !e._paused ? this.add(e, e._startTime - e._delay) : f = e._startTime, 0 > e._startTime && !e._paused && (d -= e._startTime, this._timeline.smoothChildTiming && (this._startTime += e._startTime / this._timeScale), this.shiftChildren(-e._startTime, !1, -9999999999), f = 0), c = e._startTime + e._totalDuration / e._timeScale, c > d && (d = c), e = b;
                            this._duration = this._totalDuration = d, this._dirty = !1
                        }
                        return this._totalDuration
                    }
                    return 0 !== this.totalDuration() && 0 !== a && this.timeScale(this._totalDuration / a), this
                }, i.usesFrames = function() {
                    for (var b = this._timeline; b._timeline;) b = b._timeline;
                    return b === a._rootFramesTimeline
                }, i.rawTime = function() {
                    return this._paused || 0 !== this._totalTime && this._totalTime !== this._totalDuration ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale
                }, d
            }, !0), window._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(a, b, c) {
                var d = function(b) {
                        a.call(this, b), this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._dirty = !0
                    },
                    e = [],
                    f = new c(null, null, 1, 0),
                    g = function(a) {
                        for (; a;) {
                            if (a._paused) return !0;
                            a = a._timeline
                        }
                        return !1
                    },
                    h = d.prototype = new a;
                return h.constructor = d, h.kill()._gc = !1, d.version = "1.10.2", h.invalidate = function() {
                    return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), a.prototype.invalidate.call(this)
                }, h.addCallback = function(a, c, d, e) {
                    return this.add(b.delayedCall(0, a, d, e), c)
                }, h.removeCallback = function(a, b) {
                    if (a)
                        if (null == b) this._kill(null, a);
                        else
                            for (var c = this.getTweensOf(a, !1), d = c.length, e = this._parseTimeOrLabel(b); --d > -1;) c[d]._startTime === e && c[d]._enabled(!1, !1);
                    return this
                }, h.tweenTo = function(a, c) {
                    c = c || {};
                    var d, g, h = {
                        ease: f,
                        overwrite: 2,
                        useFrames: this.usesFrames(),
                        immediateRender: !1
                    };
                    for (d in c) h[d] = c[d];
                    return h.time = this._parseTimeOrLabel(a), g = new b(this, Math.abs(Number(h.time) - this._time) / this._timeScale || .001, h), h.onStart = function() {
                        g.target.paused(!0), g.vars.time !== g.target.time() && g.duration(Math.abs(g.vars.time - g.target.time()) / g.target._timeScale), c.onStart && c.onStart.apply(c.onStartScope || g, c.onStartParams || e)
                    }, g
                }, h.tweenFromTo = function(a, b, c) {
                    c = c || {}, a = this._parseTimeOrLabel(a), c.startAt = {
                        onComplete: this.seek,
                        onCompleteParams: [a],
                        onCompleteScope: this
                    }, c.immediateRender = c.immediateRender !== !1;
                    var d = this.tweenTo(b, c);
                    return d.duration(Math.abs(d.vars.time - a) / this._timeScale || .001)
                }, h.render = function(a, b, c) {
                    this._gc && this._enabled(!0, !1);
                    var d, f, g, h, i, j, k = this._dirty ? this.totalDuration() : this._totalDuration,
                        l = this._duration,
                        m = this._time,
                        n = this._totalTime,
                        o = this._startTime,
                        p = this._timeScale,
                        q = this._rawPrevTime,
                        r = this._paused,
                        s = this._cycle;
                    if (a >= k ? (this._locked || (this._totalTime = k, this._cycle = this._repeat), this._reversed || this._hasPausedChild() || (f = !0, h = "onComplete", 0 === l && (0 === a || 0 > this._rawPrevTime) && this._rawPrevTime !== a && this._first && (i = !0, this._rawPrevTime > 0 && (h = "onReverseComplete"))), this._rawPrevTime = a, this._yoyo && 0 !== (1 & this._cycle) ? this._time = a = 0 : (this._time = l, a = l + 1e-6)) : 1e-7 > a ? (this._locked || (this._totalTime = this._cycle = 0), this._time = 0, (0 !== m || 0 === l && this._rawPrevTime > 0 && !this._locked) && (h = "onReverseComplete", f = this._reversed), 0 > a ? (this._active = !1, 0 === l && this._rawPrevTime >= 0 && this._first && (i = !0), this._rawPrevTime = a) : (this._rawPrevTime = a, a = 0, this._initted || (i = !0))) : (this._time = this._rawPrevTime = a, this._locked || (this._totalTime = a, 0 !== this._repeat && (j = l + this._repeatDelay, this._cycle = this._totalTime / j >> 0, 0 !== this._cycle && this._cycle === this._totalTime / j && this._cycle--, this._time = this._totalTime - this._cycle * j, this._yoyo && 0 !== (1 & this._cycle) && (this._time = l - this._time), this._time > l ? (this._time = l, a = l + 1e-6) : 0 > this._time ? this._time = a = 0 : a = this._time))), this._cycle !== s && !this._locked) {
                        var t = this._yoyo && 0 !== (1 & s),
                            u = t === (this._yoyo && 0 !== (1 & this._cycle)),
                            v = this._totalTime,
                            w = this._cycle,
                            x = this._rawPrevTime,
                            y = this._time;
                        if (this._totalTime = s * l, s > this._cycle ? t = !t : this._totalTime += l, this._time = m, this._rawPrevTime = 0 === l ? q - 1e-5 : q, this._cycle = s, this._locked = !0, m = t ? 0 : l, this.render(m, b, 0 === l), b || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || e), u && (m = t ? l + 1e-6 : -1e-6, this.render(m, !0, !1)), this._locked = !1, this._paused && !r) return;
                        this._time = y, this._totalTime = v, this._cycle = w, this._rawPrevTime = x
                    }
                    if (!(this._time !== m && this._first || c || i)) return void(n !== this._totalTime && this._onUpdate && (b || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || e)));
                    if (this._initted || (this._initted = !0), this._active || !this._paused && this._totalTime !== n && a > 0 && (this._active = !0), 0 === n && this.vars.onStart && 0 !== this._totalTime && (b || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || e)), this._time >= m)
                        for (d = this._first; d && (g = d._next, !this._paused || r);)(d._active || d._startTime <= this._time && !d._paused && !d._gc) && (d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)), d = g;
                    else
                        for (d = this._last; d && (g = d._prev, !this._paused || r);)(d._active || m >= d._startTime && !d._paused && !d._gc) && (d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)), d = g;
                    this._onUpdate && (b || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || e)), h && (this._locked || this._gc || (o === this._startTime || p !== this._timeScale) && (0 === this._time || k >= this.totalDuration()) && (f && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[h] && this.vars[h].apply(this.vars[h + "Scope"] || this, this.vars[h + "Params"] || e)))
                }, h.getActive = function(a, b, c) {
                    null == a && (a = !0), null == b && (b = !0), null == c && (c = !1);
                    var d, e, f = [],
                        h = this.getChildren(a, b, c),
                        i = 0,
                        j = h.length;
                    for (d = 0; j > d; d++) e = h[d], e._paused || e._timeline._time >= e._startTime && e._timeline._time < e._startTime + e._totalDuration / e._timeScale && (g(e._timeline) || (f[i++] = e));
                    return f
                }, h.getLabelAfter = function(a) {
                    a || 0 !== a && (a = this._time);
                    var b, c = this.getLabelsArray(),
                        d = c.length;
                    for (b = 0; d > b; b++)
                        if (c[b].time > a) return c[b].name;
                    return null
                }, h.getLabelBefore = function(a) {
                    null == a && (a = this._time);
                    for (var b = this.getLabelsArray(), c = b.length; --c > -1;)
                        if (a > b[c].time) return b[c].name;
                    return null
                }, h.getLabelsArray = function() {
                    var a, b = [],
                        c = 0;
                    for (a in this._labels) b[c++] = {
                        time: this._labels[a],
                        name: a
                    };
                    return b.sort(function(a, b) {
                        return a.time - b.time
                    }), b
                }, h.progress = function(a) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration()
                }, h.totalProgress = function(a) {
                    return arguments.length ? this.totalTime(this.totalDuration() * a, !1) : this._totalTime / this.totalDuration()
                }, h.totalDuration = function(b) {
                    return arguments.length ? -1 === this._repeat ? this : this.duration((b - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (a.prototype.totalDuration.call(this), this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), this._totalDuration)
                }, h.time = function(a, b) {
                    return arguments.length ? (this._dirty && this.totalDuration(), a > this._duration && (a = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? a = this._duration - a + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(a, b)) : this._time
                }, h.repeat = function(a) {
                    return arguments.length ? (this._repeat = a, this._uncache(!0)) : this._repeat
                }, h.repeatDelay = function(a) {
                    return arguments.length ? (this._repeatDelay = a, this._uncache(!0)) : this._repeatDelay
                }, h.yoyo = function(a) {
                    return arguments.length ? (this._yoyo = a, this) : this._yoyo
                }, h.currentLabel = function(a) {
                    return arguments.length ? this.seek(a, !0) : this.getLabelBefore(this._time + 1e-8)
                }, d
            }, !0),
            function() {
                var a = 180 / Math.PI,
                    b = Math.PI / 180,
                    c = [],
                    d = [],
                    e = [],
                    f = {},
                    g = function(a, b, c, d) {
                        this.a = a, this.b = b, this.c = c, this.d = d, this.da = d - a, this.ca = c - a, this.ba = b - a
                    },
                    h = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
                    i = function(a, b, c, d) {
                        var e = {
                                a: a
                            },
                            f = {},
                            g = {},
                            h = {
                                c: d
                            },
                            i = (a + b) / 2,
                            j = (b + c) / 2,
                            k = (c + d) / 2,
                            l = (i + j) / 2,
                            m = (j + k) / 2,
                            n = (m - l) / 8;
                        return e.b = i + (a - i) / 4, f.b = l + n, e.c = f.a = (e.b + f.b) / 2, f.c = g.a = (l + m) / 2, g.b = m - n, h.b = k + (d - k) / 4, g.c = h.a = (g.b + h.b) / 2, [e, f, g, h]
                    },
                    j = function(a, b, f, g, h) {
                        var j, k, l, m, n, o, p, q, r, s, t, u, v, w = a.length - 1,
                            x = 0,
                            y = a[0].a;
                        for (j = 0; w > j; j++) n = a[x], k = n.a, l = n.d, m = a[x + 1].d, h ? (t = c[j], u = d[j], v = .25 * (u + t) * b / (g ? .5 : e[j] || .5), o = l - (l - k) * (g ? .5 * b : 0 !== t ? v / t : 0), p = l + (m - l) * (g ? .5 * b : 0 !== u ? v / u : 0), q = l - (o + ((p - o) * (3 * t / (t + u) + .5) / 4 || 0))) : (o = l - .5 * (l - k) * b, p = l + .5 * (m - l) * b, q = l - (o + p) / 2), o += q, p += q, n.c = r = o, n.b = 0 !== j ? y : y = n.a + .6 * (n.c - n.a), n.da = l - k, n.ca = r - k, n.ba = y - k, f ? (s = i(k, y, r, l), a.splice(x, 1, s[0], s[1], s[2], s[3]), x += 4) : x++, y = p;
                        n = a[x], n.b = y, n.c = y + .4 * (n.d - y), n.da = n.d - n.a, n.ca = n.c - n.a, n.ba = y - n.a, f && (s = i(n.a, y, n.c, n.d), a.splice(x, 1, s[0], s[1], s[2], s[3]))
                    },
                    k = function(a, b, e, f) {
                        var h, i, j, k, l, m, n = [];
                        if (f)
                            for (a = [f].concat(a), i = a.length; --i > -1;) "string" == typeof(m = a[i][b]) && "=" === m.charAt(1) && (a[i][b] = f[b] + Number(m.charAt(0) + m.substr(2)));
                        if (h = a.length - 2, 0 > h) return n[0] = new g(a[0][b], 0, 0, a[-1 > h ? 0 : 1][b]), n;
                        for (i = 0; h > i; i++) j = a[i][b], k = a[i + 1][b], n[i] = new g(j, 0, 0, k), e && (l = a[i + 2][b], c[i] = (c[i] || 0) + (k - j) * (k - j), d[i] = (d[i] || 0) + (l - k) * (l - k));
                        return n[i] = new g(a[i][b], 0, 0, a[i + 1][b]), n
                    },
                    l = function(a, b, g, i, l, m) {
                        var n, o, p, q, r, s, t, u, v = {},
                            w = [],
                            x = m || a[0];
                        l = "string" == typeof l ? "," + l + "," : h, null == b && (b = 1);
                        for (o in a[0]) w.push(o);
                        if (a.length > 1) {
                            for (u = a[a.length - 1], t = !0, n = w.length; --n > -1;)
                                if (o = w[n], Math.abs(x[o] - u[o]) > .05) {
                                    t = !1;
                                    break
                                }
                            t && (a = a.concat(), m && a.unshift(m), a.push(a[1]), m = a[a.length - 3])
                        }
                        for (c.length = d.length = e.length = 0, n = w.length; --n > -1;) o = w[n], f[o] = -1 !== l.indexOf("," + o + ","), v[o] = k(a, o, f[o], m);
                        for (n = c.length; --n > -1;) c[n] = Math.sqrt(c[n]), d[n] = Math.sqrt(d[n]);
                        if (!i) {
                            for (n = w.length; --n > -1;)
                                if (f[o])
                                    for (p = v[w[n]], s = p.length - 1, q = 0; s > q; q++) r = p[q + 1].da / d[q] + p[q].da / c[q], e[q] = (e[q] || 0) + r * r;
                            for (n = e.length; --n > -1;) e[n] = Math.sqrt(e[n])
                        }
                        for (n = w.length, q = g ? 4 : 1; --n > -1;) o = w[n], p = v[o], j(p, b, g, i, f[o]), t && (p.splice(0, q), p.splice(p.length - q, q));
                        return v
                    },
                    m = function(a, b, c) {
                        b = b || "soft";
                        var d, e, f, h, i, j, k, l, m, n, o, p = {},
                            q = "cubic" === b ? 3 : 2,
                            r = "soft" === b,
                            s = [];
                        if (r && c && (a = [c].concat(a)), null == a || q + 1 > a.length) throw "invalid Bezier data";
                        for (m in a[0]) s.push(m);
                        for (j = s.length; --j > -1;) {
                            for (m = s[j], p[m] = i = [], n = 0, l = a.length, k = 0; l > k; k++) d = null == c ? a[k][m] : "string" == typeof(o = a[k][m]) && "=" === o.charAt(1) ? c[m] + Number(o.charAt(0) + o.substr(2)) : Number(o), r && k > 1 && l - 1 > k && (i[n++] = (d + i[n - 2]) / 2), i[n++] = d;
                            for (l = n - q + 1, n = 0, k = 0; l > k; k += q) d = i[k], e = i[k + 1], f = i[k + 2], h = 2 === q ? 0 : i[k + 3], i[n++] = o = 3 === q ? new g(d, e, f, h) : new g(d, (2 * e + d) / 3, (2 * e + f) / 3, f);
                            i.length = n
                        }
                        return p
                    },
                    n = function(a, b, c) {
                        for (var d, e, f, g, h, i, j, k, l, m, n, o = 1 / c, p = a.length; --p > -1;)
                            for (m = a[p], f = m.a, g = m.d - f, h = m.c - f, i = m.b - f, d = e = 0, k = 1; c >= k; k++) j = o * k, l = 1 - j, d = e - (e = (j * j * g + 3 * l * (j * h + l * i)) * j), n = p * c + k - 1, b[n] = (b[n] || 0) + d * d
                    },
                    o = function(a, b) {
                        b = b >> 0 || 6;
                        var c, d, e, f, g = [],
                            h = [],
                            i = 0,
                            j = 0,
                            k = b - 1,
                            l = [],
                            m = [];
                        for (c in a) n(a[c], g, b);
                        for (e = g.length, d = 0; e > d; d++) i += Math.sqrt(g[d]), f = d % b, m[f] = i, f === k && (j += i, f = d / b >> 0, l[f] = m, h[f] = j, i = 0, m = []);
                        return {
                            length: j,
                            lengths: h,
                            segments: l
                        }
                    },
                    p = window._gsDefine.plugin({
                        propName: "bezier",
                        priority: -1,
                        API: 2,
                        global: !0,
                        init: function(a, b, c) {
                            this._target = a, b instanceof Array && (b = {
                                values: b
                            }), this._func = {}, this._round = {}, this._props = [], this._timeRes = null == b.timeResolution ? 6 : parseInt(b.timeResolution, 10);
                            var d, e, f, g, h, i = b.values || [],
                                j = {},
                                k = i[0],
                                n = b.autoRotate || c.vars.orientToBezier;
                            this._autoRotate = n ? n instanceof Array ? n : [
                                ["x", "y", "rotation", n === !0 ? 0 : Number(n) || 0]
                            ] : null;
                            for (d in k) this._props.push(d);
                            for (f = this._props.length; --f > -1;) d = this._props[f], this._overwriteProps.push(d), e = this._func[d] = "function" == typeof a[d], j[d] = e ? a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)]() : parseFloat(a[d]), h || j[d] !== i[0][d] && (h = j);
                            if (this._beziers = "cubic" !== b.type && "quadratic" !== b.type && "soft" !== b.type ? l(i, isNaN(b.curviness) ? 1 : b.curviness, !1, "thruBasic" === b.type, b.correlate, h) : m(i, b.type, j), this._segCount = this._beziers[d].length, this._timeRes) {
                                var p = o(this._beziers, this._timeRes);
                                this._length = p.length, this._lengths = p.lengths, this._segments = p.segments, this._l1 = this._li = this._s1 = this._si = 0, this._l2 = this._lengths[0], this._curSeg = this._segments[0], this._s2 = this._curSeg[0], this._prec = 1 / this._curSeg.length
                            }
                            if (n = this._autoRotate)
                                for (n[0] instanceof Array || (this._autoRotate = n = [n]), f = n.length; --f > -1;)
                                    for (g = 0; 3 > g; g++) d = n[f][g], this._func[d] = "function" == typeof a[d] ? a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)] : !1;
                            return !0
                        },
                        set: function(b) {
                            var c, d, e, f, g, h, i, j, k, l, m = this._segCount,
                                n = this._func,
                                o = this._target;
                            if (this._timeRes) {
                                if (k = this._lengths, l = this._curSeg, b *= this._length, e = this._li, b > this._l2 && m - 1 > e) {
                                    for (j = m - 1; j > e && b >= (this._l2 = k[++e]););
                                    this._l1 = k[e - 1], this._li = e, this._curSeg = l = this._segments[e], this._s2 = l[this._s1 = this._si = 0]
                                } else if (this._l1 > b && e > 0) {
                                    for (; e > 0 && (this._l1 = k[--e]) >= b;);
                                    0 === e && this._l1 > b ? this._l1 = 0 : e++, this._l2 = k[e], this._li = e, this._curSeg = l = this._segments[e], this._s1 = l[(this._si = l.length - 1) - 1] || 0, this._s2 = l[this._si]
                                }
                                if (c = e, b -= this._l1, e = this._si, b > this._s2 && l.length - 1 > e) {
                                    for (j = l.length - 1; j > e && b >= (this._s2 = l[++e]););
                                    this._s1 = l[e - 1], this._si = e
                                } else if (this._s1 > b && e > 0) {
                                    for (; e > 0 && (this._s1 = l[--e]) >= b;);
                                    0 === e && this._s1 > b ? this._s1 = 0 : e++, this._s2 = l[e], this._si = e
                                }
                                h = (e + (b - this._s1) / (this._s2 - this._s1)) * this._prec
                            } else c = 0 > b ? 0 : b >= 1 ? m - 1 : m * b >> 0, h = (b - c * (1 / m)) * m;
                            for (d = 1 - h, e = this._props.length; --e > -1;) f = this._props[e], g = this._beziers[f][c], i = (h * h * g.da + 3 * d * (h * g.ca + d * g.ba)) * h + g.a, this._round[f] && (i = i + (i > 0 ? .5 : -.5) >> 0), n[f] ? o[f](i) : o[f] = i;
                            if (this._autoRotate) {
                                var p, q, r, s, t, u, v, w = this._autoRotate;
                                for (e = w.length; --e > -1;) f = w[e][2], u = w[e][3] || 0, v = w[e][4] === !0 ? 1 : a, g = this._beziers[w[e][0]], p = this._beziers[w[e][1]], g && p && (g = g[c], p = p[c], q = g.a + (g.b - g.a) * h, s = g.b + (g.c - g.b) * h, q += (s - q) * h, s += (g.c + (g.d - g.c) * h - s) * h, r = p.a + (p.b - p.a) * h, t = p.b + (p.c - p.b) * h, r += (t - r) * h, t += (p.c + (p.d - p.c) * h - t) * h, i = Math.atan2(t - r, s - q) * v + u, n[f] ? o[f](i) : o[f] = i)
                            }
                        }
                    }),
                    q = p.prototype;
                p.bezierThrough = l, p.cubicToQuadratic = i, p._autoCSS = !0, p.quadraticToCubic = function(a, b, c) {
                    return new g(a, (2 * b + a) / 3, (2 * b + c) / 3, c)
                }, p._cssRegister = function() {
                    var a = window._gsDefine.globals.CSSPlugin;
                    if (a) {
                        var c = a._internals,
                            d = c._parseToProxy,
                            e = c._setPluginRatio,
                            f = c.CSSPropTween;
                        c._registerComplexSpecialProp("bezier", {
                            parser: function(a, c, g, h, i, j) {
                                c instanceof Array && (c = {
                                    values: c
                                }), j = new p;
                                var k, l, m, n = c.values,
                                    o = n.length - 1,
                                    q = [],
                                    r = {};
                                if (0 > o) return i;
                                for (k = 0; o >= k; k++) m = d(a, n[k], h, i, j, o !== k), q[k] = m.end;
                                for (l in c) r[l] = c[l];
                                return r.values = q, i = new f(a, "bezier", 0, 0, m.pt, 2), i.data = m, i.plugin = j, i.setRatio = e, 0 === r.autoRotate && (r.autoRotate = !0), !r.autoRotate || r.autoRotate instanceof Array || (k = r.autoRotate === !0 ? 0 : Number(r.autoRotate) * b, r.autoRotate = null != m.end.left ? [
                                    ["left", "top", "rotation", k, !0]
                                ] : null != m.end.x ? [
                                    ["x", "y", "rotation", k, !0]
                                ] : !1), r.autoRotate && (h._transform || h._enableTransforms(!1), m.autoRotate = h._target._gsTransform), j._onInitTween(m.proxy, r, h._tween), i
                            }
                        })
                    }
                }, q._roundProps = function(a, b) {
                    for (var c = this._overwriteProps, d = c.length; --d > -1;)(a[c[d]] || a.bezier || a.bezierThrough) && (this._round[c[d]] = b)
                }, q._kill = function(a) {
                    var b, c, d = this._props;
                    for (b in this._beziers)
                        if (b in a)
                            for (delete this._beziers[b], delete this._func[b], c = d.length; --c > -1;) d[c] === b && d.splice(c, 1);
                    return this._super._kill.call(this, a)
                }
            }(), window._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(a, b) {
                var c, d, e, f, g = function() {
                        a.call(this, "css"), this._overwriteProps.length = 0, this.setRatio = g.prototype.setRatio
                    },
                    h = {},
                    i = g.prototype = new a("css");
                i.constructor = g, g.version = "1.10.2", g.API = 2, g.defaultTransformPerspective = 0, i = "px", g.suffixMap = {
                    top: i,
                    right: i,
                    bottom: i,
                    left: i,
                    width: i,
                    height: i,
                    fontSize: i,
                    padding: i,
                    margin: i,
                    perspective: i
                };
                var j, k, l, m, n, o, p = /(?:\d|\-\d|\.\d|\-\.\d)+/g,
                    q = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
                    r = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
                    s = /[^\d\-\.]/g,
                    t = /(?:\d|\-|\+|=|#|\.)*/g,
                    u = /opacity *= *([^)]*)/,
                    v = /opacity:([^;]*)/,
                    w = /alpha\(opacity *=.+?\)/i,
                    x = /^(rgb|hsl)/,
                    y = /([A-Z])/g,
                    z = /-([a-z])/gi,
                    A = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
                    B = function(a, b) {
                        return b.toUpperCase()
                    },
                    C = /(?:Left|Right|Width)/i,
                    D = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
                    E = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
                    F = /,(?=[^\)]*(?:\(|$))/gi,
                    G = Math.PI / 180,
                    H = 180 / Math.PI,
                    I = {},
                    J = document,
                    K = J.createElement("div"),
                    L = J.createElement("img"),
                    M = g._internals = {
                        _specialProps: h
                    },
                    N = navigator.userAgent,
                    O = function() {
                        var a, b = N.indexOf("Android"),
                            c = J.createElement("div");
                        return l = -1 !== N.indexOf("Safari") && -1 === N.indexOf("Chrome") && (-1 === b || Number(N.substr(b + 8, 1)) > 3), n = l && 6 > Number(N.substr(N.indexOf("Version/") + 8, 1)), m = -1 !== N.indexOf("Firefox"), /MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(N), o = parseFloat(RegExp.$1), c.innerHTML = "<a style='top:1px;opacity:.55;'>a</a>", a = c.getElementsByTagName("a")[0], a ? /^0.55/.test(a.style.opacity) : !1
                    }(),
                    P = function(a) {
                        return u.test("string" == typeof a ? a : (a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                    },
                    Q = function(a) {
                        window.console && console.log(a)
                    },
                    R = "",
                    S = "",
                    T = function(a, b) {
                        b = b || K;
                        var c, d, e = b.style;
                        if (void 0 !== e[a]) return a;
                        for (a = a.charAt(0).toUpperCase() + a.substr(1), c = ["O", "Moz", "ms", "Ms", "Webkit"], d = 5; --d > -1 && void 0 === e[c[d] + a];);
                        return d >= 0 ? (S = 3 === d ? "ms" : c[d], R = "-" + S.toLowerCase() + "-", S + a) : null
                    },
                    U = J.defaultView ? J.defaultView.getComputedStyle : function() {},
                    V = g.getStyle = function(a, b, c, d, e) {
                        var f;
                        return O || "opacity" !== b ? (!d && a.style[b] ? f = a.style[b] : (c = c || U(a, null)) ? (a = c.getPropertyValue(b.replace(y, "-$1").toLowerCase()), f = a || c.length ? a : c[b]) : a.currentStyle && (f = a.currentStyle[b]), null == e || f && "none" !== f && "auto" !== f && "auto auto" !== f ? f : e) : P(a)
                    },
                    W = function(a, b, c, d, e) {
                        if ("px" === d || !d) return c;
                        if ("auto" === d || !c) return 0;
                        var f, g = C.test(b),
                            h = a,
                            i = K.style,
                            j = 0 > c;
                        return j && (c = -c), "%" === d && -1 !== b.indexOf("border") ? f = c / 100 * (g ? a.clientWidth : a.clientHeight) : (i.cssText = "border-style:solid; border-width:0; position:absolute; line-height:0;", "%" !== d && h.appendChild ? i[g ? "borderLeftWidth" : "borderTopWidth"] = c + d : (h = a.parentNode || J.body, i[g ? "width" : "height"] = c + d), h.appendChild(K), f = parseFloat(K[g ? "offsetWidth" : "offsetHeight"]), h.removeChild(K), 0 !== f || e || (f = W(a, b, c, d, !0))), j ? -f : f
                    },
                    X = function(a, b, c) {
                        if ("absolute" !== V(a, "position", c)) return 0;
                        var d = "left" === b ? "Left" : "Top",
                            e = V(a, "margin" + d, c);
                        return a["offset" + d] - (W(a, b, parseFloat(e), e.replace(t, "")) || 0)
                    },
                    Y = function(a, b) {
                        var c, d, e = {};
                        if (b = b || U(a, null))
                            if (c = b.length)
                                for (; --c > -1;) e[b[c].replace(z, B)] = b.getPropertyValue(b[c]);
                            else
                                for (c in b) e[c] = b[c];
                        else if (b = a.currentStyle || a.style)
                            for (c in b) e[c.replace(z, B)] = b[c];
                        return O || (e.opacity = P(a)), d = xb(a, b, !1), e.rotation = d.rotation * H, e.skewX = d.skewX * H, e.scaleX = d.scaleX, e.scaleY = d.scaleY, e.x = d.x, e.y = d.y, wb && (e.z = d.z, e.rotationX = d.rotationX * H, e.rotationY = d.rotationY * H, e.scaleZ = d.scaleZ), e.filters && delete e.filters, e
                    },
                    Z = function(a, b, c, d, e) {
                        var f, g, h, i = {},
                            j = a.style;
                        for (g in c) "cssText" !== g && "length" !== g && isNaN(g) && (b[g] !== (f = c[g]) || e && e[g]) && -1 === g.indexOf("Origin") && ("number" == typeof f || "string" == typeof f) && (i[g] = "auto" !== f || "left" !== g && "top" !== g ? "" !== f && "auto" !== f && "none" !== f || "string" != typeof b[g] || "" === b[g].replace(s, "") ? f : 0 : X(a, g), void 0 !== j[g] && (h = new lb(j, g, j[g], h)));
                        if (d)
                            for (g in d) "className" !== g && (i[g] = d[g]);
                        return {
                            difs: i,
                            firstMPT: h
                        }
                    },
                    $ = {
                        width: ["Left", "Right"],
                        height: ["Top", "Bottom"]
                    },
                    _ = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
                    ab = function(a, b, c) {
                        var d = parseFloat("width" === b ? a.offsetWidth : a.offsetHeight),
                            e = $[b],
                            f = e.length;
                        for (c = c || U(a, null); --f > -1;) d -= parseFloat(V(a, "padding" + e[f], c, !0)) || 0, d -= parseFloat(V(a, "border" + e[f] + "Width", c, !0)) || 0;
                        return d
                    },
                    bb = function(a, b) {
                        (null == a || "" === a || "auto" === a || "auto auto" === a) && (a = "0 0");
                        var c = a.split(" "),
                            d = -1 !== a.indexOf("left") ? "0%" : -1 !== a.indexOf("right") ? "100%" : c[0],
                            e = -1 !== a.indexOf("top") ? "0%" : -1 !== a.indexOf("bottom") ? "100%" : c[1];
                        return null == e ? e = "0" : "center" === e && (e = "50%"), ("center" === d || isNaN(parseFloat(d)) && -1 === (d + "").indexOf("=")) && (d = "50%"), b && (b.oxp = -1 !== d.indexOf("%"), b.oyp = -1 !== e.indexOf("%"), b.oxr = "=" === d.charAt(1), b.oyr = "=" === e.charAt(1), b.ox = parseFloat(d.replace(s, "")), b.oy = parseFloat(e.replace(s, ""))), d + " " + e + (c.length > 2 ? " " + c[2] : "")
                    },
                    cb = function(a, b) {
                        return "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) : parseFloat(a) - parseFloat(b)
                    },
                    db = function(a, b) {
                        return null == a ? b : "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * Number(a.substr(2)) + b : parseFloat(a)
                    },
                    eb = function(a, b, c, d) {
                        var e, f, g, h, i = 1e-6;
                        return null == a ? h = b : "number" == typeof a ? h = a * G : (e = 2 * Math.PI, f = a.split("_"), g = Number(f[0].replace(s, "")) * (-1 === a.indexOf("rad") ? G : 1) - ("=" === a.charAt(1) ? 0 : b), f.length && (d && (d[c] = b + g), -1 !== a.indexOf("short") && (g %= e, g !== g % (e / 2) && (g = 0 > g ? g + e : g - e)), -1 !== a.indexOf("_cw") && 0 > g ? g = (g + 9999999999 * e) % e - (0 | g / e) * e : -1 !== a.indexOf("ccw") && g > 0 && (g = (g - 9999999999 * e) % e - (0 | g / e) * e)), h = b + g), i > h && h > -i && (h = 0), h
                    },
                    fb = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0]
                    },
                    gb = function(a, b, c) {
                        return a = 0 > a ? a + 1 : a > 1 ? a - 1 : a, 0 | 255 * (1 > 6 * a ? b + 6 * (c - b) * a : .5 > a ? c : 2 > 3 * a ? b + 6 * (c - b) * (2 / 3 - a) : b) + .5
                    },
                    hb = function(a) {
                        var b, c, d, e, f, g;
                        return a && "" !== a ? "number" == typeof a ? [a >> 16, 255 & a >> 8, 255 & a] : ("," === a.charAt(a.length - 1) && (a = a.substr(0, a.length - 1)), fb[a] ? fb[a] : "#" === a.charAt(0) ? (4 === a.length && (b = a.charAt(1), c = a.charAt(2), d = a.charAt(3), a = "#" + b + b + c + c + d + d), a = parseInt(a.substr(1), 16), [a >> 16, 255 & a >> 8, 255 & a]) : "hsl" === a.substr(0, 3) ? (a = a.match(p), e = Number(a[0]) % 360 / 360, f = Number(a[1]) / 100, g = Number(a[2]) / 100, c = .5 >= g ? g * (f + 1) : g + f - g * f, b = 2 * g - c, a.length > 3 && (a[3] = Number(a[3])), a[0] = gb(e + 1 / 3, b, c), a[1] = gb(e, b, c), a[2] = gb(e - 1 / 3, b, c), a) : (a = a.match(p) || fb.transparent, a[0] = Number(a[0]), a[1] = Number(a[1]), a[2] = Number(a[2]), a.length > 3 && (a[3] = Number(a[3])), a)) : fb.black
                    },
                    ib = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";
                for (i in fb) ib += "|" + i + "\\b";
                ib = RegExp(ib + ")", "gi");
                var jb = function(a, b, c, d) {
                        if (null == a) return function(a) {
                            return a
                        };
                        var e, f = b ? (a.match(ib) || [""])[0] : "",
                            g = a.split(f).join("").match(r) || [],
                            h = a.substr(0, a.indexOf(g[0])),
                            i = ")" === a.charAt(a.length - 1) ? ")" : "",
                            j = -1 !== a.indexOf(" ") ? " " : ",",
                            k = g.length,
                            l = k > 0 ? g[0].replace(p, "") : "";
                        return k ? e = b ? function(a) {
                            var b, m, n, o;
                            if ("number" == typeof a) a += l;
                            else if (d && F.test(a)) {
                                for (o = a.replace(F, "|").split("|"), n = 0; o.length > n; n++) o[n] = e(o[n]);
                                return o.join(",")
                            }
                            if (b = (a.match(ib) || [f])[0], m = a.split(b).join("").match(r) || [], n = m.length, k > n--)
                                for (; k > ++n;) m[n] = c ? m[0 | (n - 1) / 2] : g[n];
                            return h + m.join(j) + j + b + i + (-1 !== a.indexOf("inset") ? " inset" : "")
                        } : function(a) {
                            var b, f, m;
                            if ("number" == typeof a) a += l;
                            else if (d && F.test(a)) {
                                for (f = a.replace(F, "|").split("|"), m = 0; f.length > m; m++) f[m] = e(f[m]);
                                return f.join(",")
                            }
                            if (b = a.match(r) || [], m = b.length, k > m--)
                                for (; k > ++m;) b[m] = c ? b[0 | (m - 1) / 2] : g[m];
                            return h + b.join(j) + i
                        } : function(a) {
                            return a
                        }
                    },
                    kb = function(a) {
                        return a = a.split(","),
                            function(b, c, d, e, f, g, h) {
                                var i, j = (c + "").split(" ");
                                for (h = {}, i = 0; 4 > i; i++) h[a[i]] = j[i] = j[i] || j[(i - 1) / 2 >> 0];
                                return e.parse(b, h, f, g)
                            }
                    },
                    lb = (M._setPluginRatio = function(a) {
                        this.plugin.setRatio(a);
                        for (var b, c, d, e, f = this.data, g = f.proxy, h = f.firstMPT, i = 1e-6; h;) b = g[h.v], h.r ? b = b > 0 ? 0 | b + .5 : 0 | b - .5 : i > b && b > -i && (b = 0), h.t[h.p] = b, h = h._next;
                        if (f.autoRotate && (f.autoRotate.rotation = g.rotation), 1 === a)
                            for (h = f.firstMPT; h;) {
                                if (c = h.t, c.type) {
                                    if (1 === c.type) {
                                        for (e = c.xs0 + c.s + c.xs1, d = 1; c.l > d; d++) e += c["xn" + d] + c["xs" + (d + 1)];
                                        c.e = e
                                    }
                                } else c.e = c.s + c.xs0;
                                h = h._next
                            }
                    }, function(a, b, c, d, e) {
                        this.t = a, this.p = b, this.v = c, this.r = e, d && (d._prev = this, this._next = d)
                    }),
                    mb = (M._parseToProxy = function(a, b, c, d, e, f) {
                        var g, h, i, j, k, l = d,
                            m = {},
                            n = {},
                            o = c._transform,
                            p = I;
                        for (c._transform = null, I = b, d = k = c.parse(a, b, d, e), I = p, f && (c._transform = o, l && (l._prev = null, l._prev && (l._prev._next = null))); d && d !== l;) {
                            if (1 >= d.type && (h = d.p, n[h] = d.s + d.c, m[h] = d.s, f || (j = new lb(d, "s", h, j, d.r), d.c = 0), 1 === d.type))
                                for (g = d.l; --g > 0;) i = "xn" + g, h = d.p + "_" + i, n[h] = d.data[i], m[h] = d[i], f || (j = new lb(d, i, h, j, d.rxp[i]));
                            d = d._next
                        }
                        return {
                            proxy: m,
                            end: n,
                            firstMPT: j,
                            pt: k
                        }
                    }, M.CSSPropTween = function(a, b, d, e, g, h, i, j, k, l, m) {
                        this.t = a, this.p = b, this.s = d, this.c = e, this.n = i || b, a instanceof mb || f.push(this.n), this.r = j, this.type = h || 0, k && (this.pr = k, c = !0), this.b = void 0 === l ? d : l, this.e = void 0 === m ? d + e : m, g && (this._next = g, g._prev = this)
                    }),
                    nb = g.parseComplex = function(a, b, c, d, e, f, g, h, i, k) {
                        c = c || f || "", g = new mb(a, b, 0, 0, g, k ? 2 : 1, null, !1, h, c, d), d += "";
                        var l, m, n, o, r, s, t, u, v, w, y, z, A = c.split(", ").join(",").split(" "),
                            B = d.split(", ").join(",").split(" "),
                            C = A.length,
                            D = j !== !1;
                        for ((-1 !== d.indexOf(",") || -1 !== c.indexOf(",")) && (A = A.join(" ").replace(F, ", ").split(" "), B = B.join(" ").replace(F, ", ").split(" "), C = A.length), C !== B.length && (A = (f || "").split(" "), C = A.length), g.plugin = i, g.setRatio = k, l = 0; C > l; l++)
                            if (o = A[l], r = B[l], u = parseFloat(o), u || 0 === u) g.appendXtra("", u, cb(r, u), r.replace(q, ""), D && -1 !== r.indexOf("px"), !0);
                            else if (e && ("#" === o.charAt(0) || fb[o] || x.test(o))) z = "," === r.charAt(r.length - 1) ? ")," : ")", o = hb(o), r = hb(r), v = o.length + r.length > 6, v && !O && 0 === r[3] ? (g["xs" + g.l] += g.l ? " transparent" : "transparent", g.e = g.e.split(B[l]).join("transparent")) : (O || (v = !1), g.appendXtra(v ? "rgba(" : "rgb(", o[0], r[0] - o[0], ",", !0, !0).appendXtra("", o[1], r[1] - o[1], ",", !0).appendXtra("", o[2], r[2] - o[2], v ? "," : z, !0), v && (o = 4 > o.length ? 1 : o[3], g.appendXtra("", o, (4 > r.length ? 1 : r[3]) - o, z, !1)));
                        else if (s = o.match(p)) {
                            if (t = r.match(q), !t || t.length !== s.length) return g;
                            for (n = 0, m = 0; s.length > m; m++) y = s[m], w = o.indexOf(y, n), g.appendXtra(o.substr(n, w - n), Number(y), cb(t[m], y), "", D && "px" === o.substr(w + y.length, 2), 0 === m), n = w + y.length;
                            g["xs" + g.l] += o.substr(n)
                        } else g["xs" + g.l] += g.l ? " " + o : o;
                        if (-1 !== d.indexOf("=") && g.data) {
                            for (z = g.xs0 + g.data.s, l = 1; g.l > l; l++) z += g["xs" + l] + g.data["xn" + l];
                            g.e = z + g["xs" + l]
                        }
                        return g.l || (g.type = -1, g.xs0 = g.e), g.xfirst || g
                    },
                    ob = 9;
                for (i = mb.prototype, i.l = i.pr = 0; --ob > 0;) i["xn" + ob] = 0, i["xs" + ob] = "";
                i.xs0 = "", i._next = i._prev = i.xfirst = i.data = i.plugin = i.setRatio = i.rxp = null, i.appendXtra = function(a, b, c, d, e, f) {
                    var g = this,
                        h = g.l;
                    return g["xs" + h] += f && h ? " " + a : a || "", c || 0 === h || g.plugin ? (g.l++, g.type = g.setRatio ? 2 : 1, g["xs" + g.l] = d || "", h > 0 ? (g.data["xn" + h] = b + c, g.rxp["xn" + h] = e, g["xn" + h] = b, g.plugin || (g.xfirst = new mb(g, "xn" + h, b, c, g.xfirst || g, 0, g.n, e, g.pr), g.xfirst.xs0 = 0), g) : (g.data = {
                        s: b + c
                    }, g.rxp = {}, g.s = b, g.c = c, g.r = e, g)) : (g["xs" + h] += b + (d || ""), g)
                };
                var pb = function(a, b) {
                        b = b || {}, this.p = b.prefix ? T(a) || a : a, h[a] = h[this.p] = this, this.format = b.formatter || jb(b.defaultValue, b.color, b.collapsible, b.multi), b.parser && (this.parse = b.parser), this.clrs = b.color, this.multi = b.multi, this.keyword = b.keyword, this.dflt = b.defaultValue, this.pr = b.priority || 0
                    },
                    qb = M._registerComplexSpecialProp = function(a, b, c) {
                        "object" != typeof b && (b = {
                            parser: c
                        });
                        var d, e, f = a.split(","),
                            g = b.defaultValue;
                        for (c = c || [g], d = 0; f.length > d; d++) b.prefix = 0 === d && b.prefix, b.defaultValue = c[d] || g, e = new pb(f[d], b)
                    },
                    rb = function(a) {
                        if (!h[a]) {
                            var b = a.charAt(0).toUpperCase() + a.substr(1) + "Plugin";
                            qb(a, {
                                parser: function(a, c, d, e, f, g, i) {
                                    var j = (window.GreenSockGlobals || window).com.greensock.plugins[b];
                                    return j ? (j._cssRegister(), h[d].parse(a, c, d, e, f, g, i)) : (Q("Error: " + b + " js file not loaded."), f)
                                }
                            })
                        }
                    };
                i = pb.prototype, i.parseComplex = function(a, b, c, d, e, f) {
                    var g, h, i, j, k, l, m = this.keyword;
                    if (this.multi && (F.test(c) || F.test(b) ? (h = b.replace(F, "|").split("|"), i = c.replace(F, "|").split("|")) : m && (h = [b], i = [c])), i) {
                        for (j = i.length > h.length ? i.length : h.length, g = 0; j > g; g++) b = h[g] = h[g] || this.dflt, c = i[g] = i[g] || this.dflt, m && (k = b.indexOf(m), l = c.indexOf(m), k !== l && (c = -1 === l ? i : h, c[g] += " " + m));
                        b = h.join(", "), c = i.join(", ")
                    }
                    return nb(a, this.p, b, c, this.clrs, this.dflt, d, this.pr, e, f)
                }, i.parse = function(a, b, c, d, f, g) {
                    return this.parseComplex(a.style, this.format(V(a, this.p, e, !1, this.dflt)), this.format(b), f, g)
                }, g.registerSpecialProp = function(a, b, c) {
                    qb(a, {
                        parser: function(a, d, e, f, g, h) {
                            var i = new mb(a, e, 0, 0, g, 2, e, !1, c);
                            return i.plugin = h, i.setRatio = b(a, d, f._tween, e), i
                        },
                        priority: c
                    })
                };
                var sb = "scaleX,scaleY,scaleZ,x,y,z,skewX,rotation,rotationX,rotationY,perspective".split(","),
                    tb = T("transform"),
                    ub = R + "transform",
                    vb = T("transformOrigin"),
                    wb = null !== T("perspective"),
                    xb = function(a, b, c, d) {
                        if (a._gsTransform && c && !d) return a._gsTransform;
                        var e, f, h, i, j, k, l, m, n, o, p, q, r, s = c ? a._gsTransform || {
                                skewY: 0
                            } : {
                                skewY: 0
                            },
                            t = 0 > s.scaleX,
                            u = 2e-5,
                            v = 1e5,
                            w = -Math.PI + 1e-4,
                            x = Math.PI - 1e-4,
                            y = wb ? parseFloat(V(a, vb, b, !1, "0 0 0").split(" ")[2]) || s.zOrigin || 0 : 0;
                        for (tb ? e = V(a, ub, b, !0) : a.currentStyle && (e = a.currentStyle.filter.match(D), e = e && 4 === e.length ? [e[0].substr(4), Number(e[2].substr(4)), Number(e[1].substr(4)), e[3].substr(4), s.x || 0, s.y || 0].join(",") : ""), f = (e || "").match(/(?:\-|\b)[\d\-\.e]+\b/gi) || [], h = f.length; --h > -1;) i = Number(f[h]), f[h] = (j = i - (i |= 0)) ? (0 | j * v + (0 > j ? -.5 : .5)) / v + i : i;
                        if (16 === f.length) {
                            var z = f[8],
                                A = f[9],
                                B = f[10],
                                C = f[12],
                                E = f[13],
                                F = f[14];
                            if (s.zOrigin && (F = -s.zOrigin, C = z * F - f[12], E = A * F - f[13], F = B * F + s.zOrigin - f[14]), !c || d || null == s.rotationX) {
                                var G, H, I, J, K, L, M, N = f[0],
                                    O = f[1],
                                    P = f[2],
                                    Q = f[3],
                                    R = f[4],
                                    S = f[5],
                                    T = f[6],
                                    U = f[7],
                                    W = f[11],
                                    X = s.rotationX = Math.atan2(T, B),
                                    Y = w > X || X > x;
                                X && (J = Math.cos(-X), K = Math.sin(-X), G = R * J + z * K, H = S * J + A * K, I = T * J + B * K, z = R * -K + z * J, A = S * -K + A * J, B = T * -K + B * J, W = U * -K + W * J, R = G, S = H, T = I), X = s.rotationY = Math.atan2(z, N), X && (L = w > X || X > x, J = Math.cos(-X), K = Math.sin(-X), G = N * J - z * K, H = O * J - A * K, I = P * J - B * K, A = O * K + A * J, B = P * K + B * J, W = Q * K + W * J, N = G, O = H, P = I), X = s.rotation = Math.atan2(O, S), X && (M = w > X || X > x, J = Math.cos(-X), K = Math.sin(-X), N = N * J + R * K, H = O * J + S * K, S = O * -K + S * J, T = P * -K + T * J, O = H), M && Y ? s.rotation = s.rotationX = 0 : M && L ? s.rotation = s.rotationY = 0 : L && Y && (s.rotationY = s.rotationX = 0), s.scaleX = (0 | Math.sqrt(N * N + O * O) * v + .5) / v, s.scaleY = (0 | Math.sqrt(S * S + A * A) * v + .5) / v, s.scaleZ = (0 | Math.sqrt(T * T + B * B) * v + .5) / v, s.skewX = 0, s.perspective = W ? 1 / (0 > W ? -W : W) : 0, s.x = C, s.y = E, s.z = F
                            }
                        } else if (!(wb && !d && f.length && s.x === f[4] && s.y === f[5] && (s.rotationX || s.rotationY) || void 0 !== s.x && "none" === V(a, "display", b))) {
                            var Z = f.length >= 6,
                                $ = Z ? f[0] : 1,
                                _ = f[1] || 0,
                                ab = f[2] || 0,
                                bb = Z ? f[3] : 1;
                            s.x = f[4] || 0, s.y = f[5] || 0, k = Math.sqrt($ * $ + _ * _), l = Math.sqrt(bb * bb + ab * ab), m = $ || _ ? Math.atan2(_, $) : s.rotation || 0, n = ab || bb ? Math.atan2(ab, bb) + m : s.skewX || 0, o = k - Math.abs(s.scaleX || 0), p = l - Math.abs(s.scaleY || 0), Math.abs(n) > Math.PI / 2 && Math.abs(n) < 1.5 * Math.PI && (t ? (k *= -1, n += 0 >= m ? Math.PI : -Math.PI, m += 0 >= m ? Math.PI : -Math.PI) : (l *= -1, n += 0 >= n ? Math.PI : -Math.PI)), q = (m - s.rotation) % Math.PI, r = (n - s.skewX) % Math.PI, (void 0 === s.skewX || o > u || -u > o || p > u || -u > p || q > w && x > q && !1 | q * v || r > w && x > r && !1 | r * v) && (s.scaleX = k, s.scaleY = l, s.rotation = m, s.skewX = n), wb && (s.rotationX = s.rotationY = s.z = 0, s.perspective = parseFloat(g.defaultTransformPerspective) || 0, s.scaleZ = 1)
                        }
                        s.zOrigin = y;
                        for (h in s) u > s[h] && s[h] > -u && (s[h] = 0);
                        return c && (a._gsTransform = s), s
                    },
                    yb = function(a) {
                        var b, c, d = this.data,
                            e = -d.rotation,
                            f = e + d.skewX,
                            g = 1e5,
                            h = (0 | Math.cos(e) * d.scaleX * g) / g,
                            i = (0 | Math.sin(e) * d.scaleX * g) / g,
                            j = (0 | Math.sin(f) * -d.scaleY * g) / g,
                            k = (0 | Math.cos(f) * d.scaleY * g) / g,
                            l = this.t.style,
                            m = this.t.currentStyle;
                        if (m) {
                            c = i, i = -j, j = -c, b = m.filter, l.filter = "";
                            var n, p, q = this.t.offsetWidth,
                                r = this.t.offsetHeight,
                                s = "absolute" !== m.position,
                                v = "progid:DXImageTransform.Microsoft.Matrix(M11=" + h + ", M12=" + i + ", M21=" + j + ", M22=" + k,
                                w = d.x,
                                x = d.y;
                            if (null != d.ox && (n = (d.oxp ? .01 * q * d.ox : d.ox) - q / 2, p = (d.oyp ? .01 * r * d.oy : d.oy) - r / 2, w += n - (n * h + p * i), x += p - (n * j + p * k)), s) n = q / 2, p = r / 2, v += ", Dx=" + (n - (n * h + p * i) + w) + ", Dy=" + (p - (n * j + p * k) + x) + ")";
                            else {
                                var y, z, A, B = 8 > o ? 1 : -1;
                                for (n = d.ieOffsetX || 0, p = d.ieOffsetY || 0, d.ieOffsetX = Math.round((q - ((0 > h ? -h : h) * q + (0 > i ? -i : i) * r)) / 2 + w), d.ieOffsetY = Math.round((r - ((0 > k ? -k : k) * r + (0 > j ? -j : j) * q)) / 2 + x), ob = 0; 4 > ob; ob++) z = _[ob], y = m[z], c = -1 !== y.indexOf("px") ? parseFloat(y) : W(this.t, z, parseFloat(y), y.replace(t, "")) || 0, A = c !== d[z] ? 2 > ob ? -d.ieOffsetX : -d.ieOffsetY : 2 > ob ? n - d.ieOffsetX : p - d.ieOffsetY, l[z] = (d[z] = Math.round(c - A * (0 === ob || 2 === ob ? 1 : B))) + "px";
                                v += ", sizingMethod='auto expand')"
                            }
                            l.filter = -1 !== b.indexOf("DXImageTransform.Microsoft.Matrix(") ? b.replace(E, v) : v + " " + b, (0 === a || 1 === a) && 1 === h && 0 === i && 0 === j && 1 === k && (s && -1 === v.indexOf("Dx=0, Dy=0") || u.test(b) && 100 !== parseFloat(RegExp.$1) || -1 === b.indexOf("gradient(") && l.removeAttribute("filter"))
                        }
                    },
                    zb = function() {
                        var a, b, c, d, e, f, g, h, i, j, k, l, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C = this.data,
                            D = this.t.style,
                            E = C.rotation,
                            F = C.scaleX,
                            G = C.scaleY,
                            H = C.scaleZ;
                        if (m && (z = D.top ? "top" : D.bottom ? "bottom" : parseFloat(V(this.t, "top", null, !1)) ? "bottom" : "top", v = V(this.t, z, null, !1), A = parseFloat(v) || 0, B = v.substr((A + "").length) || "px", C._ffFix = !C._ffFix, D[z] = (C._ffFix ? A + .05 : A - .05) + B), E || C.skewX) t = Math.cos(E), u = Math.sin(E), a = t, e = u, C.skewX && (E -= C.skewX, t = Math.cos(E), u = Math.sin(E)), b = -u, f = t;
                        else {
                            if (!C.rotationY && !C.rotationX && 1 === H) return void(D[tb] = "translate3d(" + C.x + "px," + C.y + "px," + C.z + "px)" + (1 !== F || 1 !== G ? " scale(" + F + "," + G + ")" : ""));
                            a = f = 1, b = e = 0
                        }
                        k = 1, c = d = g = h = i = j = l = n = o = 0, q = C.perspective, p = q ? -1 / q : 0, r = C.zOrigin, s = 1e5, E = C.rotationY, E && (t = Math.cos(E), u = Math.sin(E), i = k * -u, n = p * -u, c = a * u, g = e * u, k *= t, p *= t, a *= t, e *= t), E = C.rotationX, E && (t = Math.cos(E), u = Math.sin(E), v = b * t + c * u, w = f * t + g * u, x = j * t + k * u, y = o * t + p * u, c = b * -u + c * t, g = f * -u + g * t, k = j * -u + k * t, p = o * -u + p * t, b = v, f = w, j = x, o = y), 1 !== H && (c *= H, g *= H, k *= H, p *= H), 1 !== G && (b *= G, f *= G, j *= G, o *= G), 1 !== F && (a *= F, e *= F, i *= F, n *= F), r && (l -= r, d = c * l, h = g * l, l = k * l + r), d = (v = (d += C.x) - (d |= 0)) ? (0 | v * s + (0 > v ? -.5 : .5)) / s + d : d, h = (v = (h += C.y) - (h |= 0)) ? (0 | v * s + (0 > v ? -.5 : .5)) / s + h : h, l = (v = (l += C.z) - (l |= 0)) ? (0 | v * s + (0 > v ? -.5 : .5)) / s + l : l, D[tb] = "matrix3d(" + [(0 | a * s) / s, (0 | e * s) / s, (0 | i * s) / s, (0 | n * s) / s, (0 | b * s) / s, (0 | f * s) / s, (0 | j * s) / s, (0 | o * s) / s, (0 | c * s) / s, (0 | g * s) / s, (0 | k * s) / s, (0 | p * s) / s, d, h, l, q ? 1 + -l / q : 1].join(",") + ")"
                    },
                    Ab = function() {
                        var a, b, c, d, e, f, g, h, i, j = this.data,
                            k = this.t,
                            l = k.style;
                        m && (a = l.top ? "top" : l.bottom ? "bottom" : parseFloat(V(k, "top", null, !1)) ? "bottom" : "top", b = V(k, a, null, !1), c = parseFloat(b) || 0, d = b.substr((c + "").length) || "px", j._ffFix = !j._ffFix, l[a] = (j._ffFix ? c + .05 : c - .05) + d), j.rotation || j.skewX ? (e = j.rotation, f = e - j.skewX, g = 1e5, h = j.scaleX * g, i = j.scaleY * g, l[tb] = "matrix(" + (0 | Math.cos(e) * h) / g + "," + (0 | Math.sin(e) * h) / g + "," + (0 | Math.sin(f) * -i) / g + "," + (0 | Math.cos(f) * i) / g + "," + j.x + "," + j.y + ")") : l[tb] = "matrix(" + j.scaleX + ",0,0," + j.scaleY + "," + j.x + "," + j.y + ")"
                    };
                qb("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D", {
                    parser: function(a, b, c, d, f, g, h) {
                        if (d._transform) return f;
                        var i, j, k, l, m, n, o, p = d._transform = xb(a, e, !0, h.parseTransform),
                            q = a.style,
                            r = 1e-6,
                            s = sb.length,
                            t = h,
                            u = {};
                        if ("string" == typeof t.transform && tb) k = q.cssText, q[tb] = t.transform, q.display = "block", i = xb(a, null, !1), q.cssText = k;
                        else if ("object" == typeof t) {
                            if (i = {
                                    scaleX: db(null != t.scaleX ? t.scaleX : t.scale, p.scaleX),
                                    scaleY: db(null != t.scaleY ? t.scaleY : t.scale, p.scaleY),
                                    scaleZ: db(null != t.scaleZ ? t.scaleZ : t.scale, p.scaleZ),
                                    x: db(t.x, p.x),
                                    y: db(t.y, p.y),
                                    z: db(t.z, p.z),
                                    perspective: db(t.transformPerspective, p.perspective)
                                }, o = t.directionalRotation, null != o)
                                if ("object" == typeof o)
                                    for (k in o) t[k] = o[k];
                                else t.rotation = o;
                            i.rotation = eb("rotation" in t ? t.rotation : "shortRotation" in t ? t.shortRotation + "_short" : "rotationZ" in t ? t.rotationZ : p.rotation * H, p.rotation, "rotation", u), wb && (i.rotationX = eb("rotationX" in t ? t.rotationX : "shortRotationX" in t ? t.shortRotationX + "_short" : p.rotationX * H || 0, p.rotationX, "rotationX", u), i.rotationY = eb("rotationY" in t ? t.rotationY : "shortRotationY" in t ? t.shortRotationY + "_short" : p.rotationY * H || 0, p.rotationY, "rotationY", u)), i.skewX = null == t.skewX ? p.skewX : eb(t.skewX, p.skewX), i.skewY = null == t.skewY ? p.skewY : eb(t.skewY, p.skewY), (j = i.skewY - p.skewY) && (i.skewX += j, i.rotation += j)
                        }
                        for (null != t.force3D && (p.force3D = t.force3D, n = !0), m = p.force3D || p.z || p.rotationX || p.rotationY || i.z || i.rotationX || i.rotationY || i.perspective, m || null == t.scale || (i.scaleZ = 1); --s > -1;) c = sb[s], l = i[c] - p[c], (l > r || -r > l || null != I[c]) && (n = !0, f = new mb(p, c, p[c], l, f), c in u && (f.e = u[c]), f.xs0 = 0, f.plugin = g, d._overwriteProps.push(f.n));
                        return l = t.transformOrigin, (l || wb && m && p.zOrigin) && (tb ? (n = !0, c = vb, l = (l || V(a, c, e, !1, "50% 50%")) + "", f = new mb(q, c, 0, 0, f, -1, "transformOrigin"), f.b = q[c], f.plugin = g, wb ? (k = p.zOrigin, l = l.split(" "), p.zOrigin = (l.length > 2 && (0 === k || "0px" !== l[2]) ? parseFloat(l[2]) : k) || 0, f.xs0 = f.e = q[c] = l[0] + " " + (l[1] || "50%") + " 0px", f = new mb(p, "zOrigin", 0, 0, f, -1, f.n), f.b = k, f.xs0 = f.e = p.zOrigin) : f.xs0 = f.e = q[c] = l) : bb(l + "", p)), n && (d._transformType = m || 3 === this._transformType ? 3 : 2), f
                    },
                    prefix: !0
                }), qb("boxShadow", {
                    defaultValue: "0px 0px 0px 0px #999",
                    prefix: !0,
                    color: !0,
                    multi: !0,
                    keyword: "inset"
                }), qb("borderRadius", {
                    defaultValue: "0px",
                    parser: function(a, b, c, f, g) {
                        b = this.format(b);
                        var h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
                            y = a.style;
                        for (p = parseFloat(a.offsetWidth), q = parseFloat(a.offsetHeight), h = b.split(" "), i = 0; x.length > i; i++) this.p.indexOf("border") && (x[i] = T(x[i])), l = k = V(a, x[i], e, !1, "0px"), -1 !== l.indexOf(" ") && (k = l.split(" "), l = k[0], k = k[1]), m = j = h[i], n = parseFloat(l), s = l.substr((n + "").length), t = "=" === m.charAt(1), t ? (o = parseInt(m.charAt(0) + "1", 10), m = m.substr(2), o *= parseFloat(m), r = m.substr((o + "").length - (0 > o ? 1 : 0)) || "") : (o = parseFloat(m), r = m.substr((o + "").length)), "" === r && (r = d[c] || s), r !== s && (u = W(a, "borderLeft", n, s), v = W(a, "borderTop", n, s), "%" === r ? (l = 100 * (u / p) + "%", k = 100 * (v / q) + "%") : "em" === r ? (w = W(a, "borderLeft", 1, "em"), l = u / w + "em", k = v / w + "em") : (l = u + "px", k = v + "px"), t && (m = parseFloat(l) + o + r, j = parseFloat(k) + o + r)), g = nb(y, x[i], l + " " + k, m + " " + j, !1, "0px", g);
                        return g
                    },
                    prefix: !0,
                    formatter: jb("0px 0px 0px 0px", !1, !0)
                }), qb("backgroundPosition", {
                    defaultValue: "0 0",
                    parser: function(a, b, c, d, f, g) {
                        var h, i, j, k, l, m, n = "background-position",
                            p = e || U(a, null),
                            q = this.format((p ? o ? p.getPropertyValue(n + "-x") + " " + p.getPropertyValue(n + "-y") : p.getPropertyValue(n) : a.currentStyle.backgroundPositionX + " " + a.currentStyle.backgroundPositionY) || "0 0"),
                            r = this.format(b);
                        if (-1 !== q.indexOf("%") != (-1 !== r.indexOf("%")) && (m = V(a, "backgroundImage").replace(A, ""), m && "none" !== m)) {
                            for (h = q.split(" "), i = r.split(" "), L.setAttribute("src", m), j = 2; --j > -1;) q = h[j], k = -1 !== q.indexOf("%"), k !== (-1 !== i[j].indexOf("%")) && (l = 0 === j ? a.offsetWidth - L.width : a.offsetHeight - L.height, h[j] = k ? parseFloat(q) / 100 * l + "px" : 100 * (parseFloat(q) / l) + "%");
                            q = h.join(" ")
                        }
                        return this.parseComplex(a.style, q, r, f, g)
                    },
                    formatter: bb
                }), qb("backgroundSize", {
                    defaultValue: "0 0",
                    formatter: bb
                }), qb("perspective", {
                    defaultValue: "0px",
                    prefix: !0
                }), qb("perspectiveOrigin", {
                    defaultValue: "50% 50%",
                    prefix: !0
                }), qb("transformStyle", {
                    prefix: !0
                }), qb("backfaceVisibility", {
                    prefix: !0
                }), qb("margin", {
                    parser: kb("marginTop,marginRight,marginBottom,marginLeft")
                }), qb("padding", {
                    parser: kb("paddingTop,paddingRight,paddingBottom,paddingLeft")
                }), qb("clip", {
                    defaultValue: "rect(0px,0px,0px,0px)",
                    parser: function(a, b, c, d, f, g) {
                        var h, i, j;
                        return 9 > o ? (i = a.currentStyle, j = 8 > o ? " " : ",", h = "rect(" + i.clipTop + j + i.clipRight + j + i.clipBottom + j + i.clipLeft + ")", b = this.format(b).split(",").join(j)) : (h = this.format(V(a, this.p, e, !1, this.dflt)), b = this.format(b)), this.parseComplex(a.style, h, b, f, g)
                    }
                }), qb("textShadow", {
                    defaultValue: "0px 0px 0px #999",
                    color: !0,
                    multi: !0
                }), qb("autoRound,strictUnits", {
                    parser: function(a, b, c, d, e) {
                        return e
                    }
                }), qb("border", {
                    defaultValue: "0px solid #000",
                    parser: function(a, b, c, d, f, g) {
                        return this.parseComplex(a.style, this.format(V(a, "borderTopWidth", e, !1, "0px") + " " + V(a, "borderTopStyle", e, !1, "solid") + " " + V(a, "borderTopColor", e, !1, "#000")), this.format(b), f, g)
                    },
                    color: !0,
                    formatter: function(a) {
                        var b = a.split(" ");
                        return b[0] + " " + (b[1] || "solid") + " " + (a.match(ib) || ["#000"])[0]
                    }
                }), qb("float,cssFloat,styleFloat", {
                    parser: function(a, b, c, d, e) {
                        var f = a.style,
                            g = "cssFloat" in f ? "cssFloat" : "styleFloat";
                        return new mb(f, g, 0, 0, e, -1, c, !1, 0, f[g], b)
                    }
                });
                var Bb = function(a) {
                    var b, c = this.t,
                        d = c.filter || V(this.data, "filter"),
                        e = 0 | this.s + this.c * a;
                    100 === e && (-1 === d.indexOf("atrix(") && -1 === d.indexOf("radient(") ? (c.removeAttribute("filter"), b = !V(this.data, "filter")) : (c.filter = d.replace(w, ""), b = !0)), b || (this.xn1 && (c.filter = d = d || "alpha(opacity=" + e + ")"), -1 === d.indexOf("opacity") ? 0 === e && this.xn1 || (c.filter += " alpha(opacity=" + e + ")") : c.filter = d.replace(u, "opacity=" + e))
                };
                qb("opacity,alpha,autoAlpha", {
                    defaultValue: "1",
                    parser: function(a, b, c, d, f, g) {
                        var h = parseFloat(V(a, "opacity", e, !1, "1")),
                            i = a.style,
                            j = "autoAlpha" === c;
                        return b = parseFloat(b), j && 1 === h && "hidden" === V(a, "visibility", e) && 0 !== b && (h = 0), O ? f = new mb(i, "opacity", h, b - h, f) : (f = new mb(i, "opacity", 100 * h, 100 * (b - h), f), f.xn1 = j ? 1 : 0, i.zoom = 1, f.type = 2, f.b = "alpha(opacity=" + f.s + ")", f.e = "alpha(opacity=" + (f.s + f.c) + ")", f.data = a, f.plugin = g, f.setRatio = Bb), j && (f = new mb(i, "visibility", 0, 0, f, -1, null, !1, 0, 0 !== h ? "inherit" : "hidden", 0 === b ? "hidden" : "inherit"), f.xs0 = "inherit", d._overwriteProps.push(f.n)), f
                    }
                });
                var Cb = function(a, b) {
                        b && (a.removeProperty ? a.removeProperty(b.replace(y, "-$1").toLowerCase()) : a.removeAttribute(b))
                    },
                    Db = function(a) {
                        if (this.t._gsClassPT = this, 1 === a || 0 === a) {
                            this.t.className = 0 === a ? this.b : this.e;
                            for (var b = this.data, c = this.t.style; b;) b.v ? c[b.p] = b.v : Cb(c, b.p), b = b._next;
                            1 === a && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                        } else this.t.className !== this.e && (this.t.className = this.e)
                    };
                qb("className", {
                    parser: function(a, b, d, f, g, h, i) {
                        var j, k, l, m, n, o = a.className,
                            p = a.style.cssText;
                        if (g = f._classNamePT = new mb(a, d, 0, 0, g, 2), g.setRatio = Db, g.pr = -11, c = !0, g.b = o, k = Y(a, e), l = a._gsClassPT) {
                            for (m = {}, n = l.data; n;) m[n.p] = 1, n = n._next;
                            l.setRatio(1)
                        }
                        return a._gsClassPT = g, g.e = "=" !== b.charAt(1) ? b : o.replace(RegExp("\\s*\\b" + b.substr(2) + "\\b"), "") + ("+" === b.charAt(0) ? " " + b.substr(2) : ""), f._tween._duration && (a.className = g.e, j = Z(a, k, Y(a), i, m), a.className = o, g.data = j.firstMPT, a.style.cssText = p, g = g.xfirst = f.parse(a, j.difs, g, h)), g
                    }
                });
                var Eb = function(a) {
                    if ((1 === a || 0 === a) && this.data._totalTime === this.data._totalDuration) {
                        if ("all" === this.e) return this.t.style.cssText = "", void(this.t._gsTransform && delete this.t._gsTransform);
                        for (var b, c = this.t.style, d = this.e.split(","), e = d.length, f = h.transform.parse; --e > -1;) b = d[e], h[b] && (b = h[b].parse === f ? tb : h[b].p), Cb(c, b)
                    }
                };
                for (qb("clearProps", {
                        parser: function(a, b, d, e, f) {
                            return f = new mb(a, d, 0, 0, f, 2), f.setRatio = Eb, f.e = b, f.pr = -10, f.data = e._tween, c = !0, f
                        }
                    }), i = "bezier,throwProps,physicsProps,physics2D".split(","), ob = i.length; ob--;) rb(i[ob]);
                i = g.prototype, i._firstPT = null, i._onInitTween = function(a, b, h) {
                    if (!a.nodeType) return !1;
                    this._target = a, this._tween = h, this._vars = b, j = b.autoRound, c = !1, d = b.suffixMap || g.suffixMap, e = U(a, ""), f = this._overwriteProps;
                    var i, m, o, p, q, r, s, t, u, w = a.style;
                    if (k && "" === w.zIndex && (i = V(a, "zIndex", e), ("auto" === i || "" === i) && (w.zIndex = 0)), "string" == typeof b && (p = w.cssText, i = Y(a, e), w.cssText = p + ";" + b, i = Z(a, i, Y(a)).difs, !O && v.test(b) && (i.opacity = parseFloat(RegExp.$1)), b = i, w.cssText = p), this._firstPT = m = this.parse(a, b, null), this._transformType) {
                        for (u = 3 === this._transformType, tb ? l && (k = !0, "" === w.zIndex && (s = V(a, "zIndex", e), ("auto" === s || "" === s) && (w.zIndex = 0)), n && (w.WebkitBackfaceVisibility = this._vars.WebkitBackfaceVisibility || (u ? "visible" : "hidden"))) : w.zoom = 1, o = m; o && o._next;) o = o._next;
                        t = new mb(a, "transform", 0, 0, null, 2), this._linkCSSP(t, null, o), t.setRatio = u && wb ? zb : tb ? Ab : yb, t.data = this._transform || xb(a, e, !0), f.pop()
                    }
                    if (c) {
                        for (; m;) {
                            for (r = m._next, o = p; o && o.pr > m.pr;) o = o._next;
                            (m._prev = o ? o._prev : q) ? m._prev._next = m: p = m, (m._next = o) ? o._prev = m : q = m, m = r
                        }
                        this._firstPT = p
                    }
                    return !0
                }, i.parse = function(a, b, c, f) {
                    var g, i, k, l, m, n, o, p, q, r, s = a.style;
                    for (g in b) n = b[g], i = h[g], i ? c = i.parse(a, n, g, this, c, f, b) : (m = V(a, g, e) + "", q = "string" == typeof n, "color" === g || "fill" === g || "stroke" === g || -1 !== g.indexOf("Color") || q && x.test(n) ? (q || (n = hb(n), n = (n.length > 3 ? "rgba(" : "rgb(") + n.join(",") + ")"), c = nb(s, g, m, n, !0, "transparent", c, 0, f)) : !q || -1 === n.indexOf(" ") && -1 === n.indexOf(",") ? (k = parseFloat(m), o = k || 0 === k ? m.substr((k + "").length) : "", ("" === m || "auto" === m) && ("width" === g || "height" === g ? (k = ab(a, g, e), o = "px") : "left" === g || "top" === g ? (k = X(a, g, e), o = "px") : (k = "opacity" !== g ? 0 : 1, o = "")), r = q && "=" === n.charAt(1), r ? (l = parseInt(n.charAt(0) + "1", 10), n = n.substr(2), l *= parseFloat(n), p = n.replace(t, "")) : (l = parseFloat(n), p = q ? n.substr((l + "").length) || "" : ""), "" === p && (p = d[g] || o), n = l || 0 === l ? (r ? l + k : l) + p : b[g], o !== p && "" !== p && (l || 0 === l) && (k || 0 === k) && (k = W(a, g, k, o), "%" === p ? (k /= W(a, g, 100, "%") / 100, k > 100 && (k = 100), b.strictUnits !== !0 && (m = k + "%")) : "em" === p ? k /= W(a, g, 1, "em") : (l = W(a, g, l, p), p = "px"), r && (l || 0 === l) && (n = l + k + p)), r && (l += k), !k && 0 !== k || !l && 0 !== l ? void 0 !== s[g] && (n || "NaN" != n + "" && null != n) ? (c = new mb(s, g, l || k || 0, 0, c, -1, g, !1, 0, m, n), c.xs0 = "none" !== n || "display" !== g && -1 === g.indexOf("Style") ? n : m) : Q("invalid " + g + " tween value: " + b[g]) : (c = new mb(s, g, k, l - k, c, 0, g, j !== !1 && ("px" === p || "zIndex" === g), 0, m, n), c.xs0 = p)) : c = nb(s, g, m, n, !0, null, c, 0, f)), f && c && !c.plugin && (c.plugin = f);
                    return c
                }, i.setRatio = function(a) {
                    var b, c, d, e = this._firstPT,
                        f = 1e-6;
                    if (1 !== a || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                        if (a || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
                            for (; e;) {
                                if (b = e.c * a + e.s, e.r ? b = b > 0 ? 0 | b + .5 : 0 | b - .5 : f > b && b > -f && (b = 0), e.type)
                                    if (1 === e.type)
                                        if (d = e.l, 2 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2;
                                        else if (3 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3;
                                else if (4 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4;
                                else if (5 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4 + e.xn4 + e.xs5;
                                else {
                                    for (c = e.xs0 + b + e.xs1, d = 1; e.l > d; d++) c += e["xn" + d] + e["xs" + (d + 1)];
                                    e.t[e.p] = c
                                } else -1 === e.type ? e.t[e.p] = e.xs0 : e.setRatio && e.setRatio(a);
                                else e.t[e.p] = b + e.xs0;
                                e = e._next
                            } else
                                for (; e;) 2 !== e.type ? e.t[e.p] = e.b : e.setRatio(a), e = e._next;
                        else
                            for (; e;) 2 !== e.type ? e.t[e.p] = e.e : e.setRatio(a), e = e._next
                }, i._enableTransforms = function(a) {
                    this._transformType = a || 3 === this._transformType ? 3 : 2, this._transform = this._transform || xb(this._target, e, !0)
                }, i._linkCSSP = function(a, b, c, d) {
                    return a && (b && (b._prev = a), a._next && (a._next._prev = a._prev), a._prev ? a._prev._next = a._next : this._firstPT === a && (this._firstPT = a._next, d = !0), c ? c._next = a : d || null !== this._firstPT || (this._firstPT = a), a._next = b, a._prev = c), a
                }, i._kill = function(b) {
                    var c, d, e, f = b;
                    if (b.autoAlpha || b.alpha) {
                        f = {};
                        for (d in b) f[d] = b[d];
                        f.opacity = 1, f.autoAlpha && (f.visibility = 1)
                    }
                    return b.className && (c = this._classNamePT) && (e = c.xfirst, e && e._prev ? this._linkCSSP(e._prev, c._next, e._prev._prev) : e === this._firstPT && (this._firstPT = c._next), c._next && this._linkCSSP(c._next, c._next._next, e._prev), this._classNamePT = null), a.prototype._kill.call(this, f)
                };
                var Fb = function(a, b, c) {
                    var d, e, f, g;
                    if (a.slice)
                        for (e = a.length; --e > -1;) Fb(a[e], b, c);
                    else
                        for (d = a.childNodes, e = d.length; --e > -1;) f = d[e], g = f.type, f.style && (b.push(Y(f)), c && c.push(f)), 1 !== g && 9 !== g && 11 !== g || !f.childNodes.length || Fb(f, b, c)
                };
                return g.cascadeTo = function(a, c, d) {
                    var e, f, g, h = b.to(a, c, d),
                        i = [h],
                        j = [],
                        k = [],
                        l = [],
                        m = b._internals.reservedProps;
                    for (a = h._targets || h.target, Fb(a, j, l), h.render(c, !0), Fb(a, k), h.render(0, !0), h._enabled(!0), e = l.length; --e > -1;)
                        if (f = Z(l[e], j[e], k[e]), f.firstMPT) {
                            f = f.difs;
                            for (g in d) m[g] && (f[g] = d[g]);
                            i.push(b.to(l[e], c, f))
                        }
                    return i
                }, a.activate([g]), g
            }, !0),
            function() {
                var a = window._gsDefine.plugin({
                        propName: "roundProps",
                        priority: -1,
                        API: 2,
                        init: function(a, b, c) {
                            return this._tween = c, !0
                        }
                    }),
                    b = a.prototype;
                b._onInitAllProps = function() {
                    for (var a, b, c, d = this._tween, e = d.vars.roundProps instanceof Array ? d.vars.roundProps : d.vars.roundProps.split(","), f = e.length, g = {}, h = d._propLookup.roundProps; --f > -1;) g[e[f]] = 1;
                    for (f = e.length; --f > -1;)
                        for (a = e[f], b = d._firstPT; b;) c = b._next, b.pg ? b.t._roundProps(g, !0) : b.n === a && (this._add(b.t, a, b.s, b.c), c && (c._prev = b._prev), b._prev ? b._prev._next = c : d._firstPT === b && (d._firstPT = c), b._next = b._prev = null, d._propLookup[a] = h), b = c;
                    return !1
                }, b._add = function(a, b, c, d) {
                    this._addTween(a, b, c, c + d, b, !0), this._overwriteProps.push(b)
                }
            }(), window._gsDefine.plugin({
                propName: "attr",
                API: 2,
                init: function(a, b) {
                    var c;
                    if ("function" != typeof a.setAttribute) return !1;
                    this._target = a, this._proxy = {};
                    for (c in b) this._addTween(this._proxy, c, parseFloat(a.getAttribute(c)), b[c], c) && this._overwriteProps.push(c);
                    return !0
                },
                set: function(a) {
                    this._super.setRatio.call(this, a);
                    for (var b, c = this._overwriteProps, d = c.length; --d > -1;) b = c[d], this._target.setAttribute(b, this._proxy[b] + "")
                }
            }), window._gsDefine.plugin({
                propName: "directionalRotation",
                API: 2,
                init: function(a, b) {
                    "object" != typeof b && (b = {
                        rotation: b
                    }), this.finals = {};
                    var c, d, e, f, g, h, i = b.useRadians === !0 ? 2 * Math.PI : 360,
                        j = 1e-6;
                    for (c in b) "useRadians" !== c && (h = (b[c] + "").split("_"), d = h[0], e = parseFloat("function" != typeof a[c] ? a[c] : a[c.indexOf("set") || "function" != typeof a["get" + c.substr(3)] ? c : "get" + c.substr(3)]()), f = this.finals[c] = "string" == typeof d && "=" === d.charAt(1) ? e + parseInt(d.charAt(0) + "1", 10) * Number(d.substr(2)) : Number(d) || 0, g = f - e, h.length && (d = h.join("_"), -1 !== d.indexOf("short") && (g %= i, g !== g % (i / 2) && (g = 0 > g ? g + i : g - i)), -1 !== d.indexOf("_cw") && 0 > g ? g = (g + 9999999999 * i) % i - (0 | g / i) * i : -1 !== d.indexOf("ccw") && g > 0 && (g = (g - 9999999999 * i) % i - (0 | g / i) * i)), (g > j || -j > g) && (this._addTween(a, c, e, e + g, c), this._overwriteProps.push(c)));
                    return !0
                },
                set: function(a) {
                    var b;
                    if (1 !== a) this._super.setRatio.call(this, a);
                    else
                        for (b = this._firstPT; b;) b.f ? b.t[b.p](this.finals[b.p]) : b.t[b.p] = this.finals[b.p], b = b._next
                }
            })._autoCSS = !0, window._gsDefine("easing.Back", ["easing.Ease"], function(a) {
                var b, c, d, e = window.GreenSockGlobals || window,
                    f = e.com.greensock,
                    g = 2 * Math.PI,
                    h = Math.PI / 2,
                    i = f._class,
                    j = function(b, c) {
                        var d = i("easing." + b, function() {}, !0),
                            e = d.prototype = new a;
                        return e.constructor = d, e.getRatio = c, d
                    },
                    k = a.register || function() {},
                    l = function(a, b, c, d) {
                        var e = i("easing." + a, {
                            easeOut: new b,
                            easeIn: new c,
                            easeInOut: new d
                        }, !0);
                        return k(e, a), e
                    },
                    m = function(a, b, c) {
                        this.t = a, this.v = b, c && (this.next = c, c.prev = this, this.c = c.v - b, this.gap = c.t - a)
                    },
                    n = function(b, c) {
                        var d = i("easing." + b, function(a) {
                                this._p1 = a || 0 === a ? a : 1.70158, this._p2 = 1.525 * this._p1
                            }, !0),
                            e = d.prototype = new a;
                        return e.constructor = d, e.getRatio = c, e.config = function(a) {
                            return new d(a)
                        }, d
                    },
                    o = l("Back", n("BackOut", function(a) {
                        return (a -= 1) * a * ((this._p1 + 1) * a + this._p1) + 1
                    }), n("BackIn", function(a) {
                        return a * a * ((this._p1 + 1) * a - this._p1)
                    }), n("BackInOut", function(a) {
                        return 1 > (a *= 2) ? .5 * a * a * ((this._p2 + 1) * a - this._p2) : .5 * ((a -= 2) * a * ((this._p2 + 1) * a + this._p2) + 2)
                    })),
                    p = i("easing.SlowMo", function(a, b, c) {
                        b = b || 0 === b ? b : .7, null == a ? a = .7 : a > 1 && (a = 1), this._p = 1 !== a ? b : 0, this._p1 = (1 - a) / 2, this._p2 = a, this._p3 = this._p1 + this._p2, this._calcEnd = c === !0
                    }, !0),
                    q = p.prototype = new a;
                return q.constructor = p, q.getRatio = function(a) {
                    var b = a + (.5 - a) * this._p;
                    return this._p1 > a ? this._calcEnd ? 1 - (a = 1 - a / this._p1) * a : b - (a = 1 - a / this._p1) * a * a * a * b : a > this._p3 ? this._calcEnd ? 1 - (a = (a - this._p3) / this._p1) * a : b + (a - b) * (a = (a - this._p3) / this._p1) * a * a * a : this._calcEnd ? 1 : b
                }, p.ease = new p(.7, .7), q.config = p.config = function(a, b, c) {
                    return new p(a, b, c)
                }, b = i("easing.SteppedEase", function(a) {
                    a = a || 1, this._p1 = 1 / a, this._p2 = a + 1
                }, !0), q = b.prototype = new a, q.constructor = b, q.getRatio = function(a) {
                    return 0 > a ? a = 0 : a >= 1 && (a = .999999999), (this._p2 * a >> 0) * this._p1
                }, q.config = b.config = function(a) {
                    return new b(a)
                }, c = i("easing.RoughEase", function(b) {
                    b = b || {};
                    for (var c, d, e, f, g, h, i = b.taper || "none", j = [], k = 0, l = 0 | (b.points || 20), n = l, o = b.randomize !== !1, p = b.clamp === !0, q = b.template instanceof a ? b.template : null, r = "number" == typeof b.strength ? .4 * b.strength : .4; --n > -1;) c = o ? Math.random() : 1 / l * n, d = q ? q.getRatio(c) : c, "none" === i ? e = r : "out" === i ? (f = 1 - c, e = f * f * r) : "in" === i ? e = c * c * r : .5 > c ? (f = 2 * c, e = .5 * f * f * r) : (f = 2 * (1 - c), e = .5 * f * f * r), o ? d += Math.random() * e - .5 * e : n % 2 ? d += .5 * e : d -= .5 * e, p && (d > 1 ? d = 1 : 0 > d && (d = 0)), j[k++] = {
                        x: c,
                        y: d
                    };
                    for (j.sort(function(a, b) {
                            return a.x - b.x
                        }), h = new m(1, 1, null), n = l; --n > -1;) g = j[n], h = new m(g.x, g.y, h);
                    this._prev = new m(0, 0, 0 !== h.t ? h : h.next)
                }, !0), q = c.prototype = new a, q.constructor = c, q.getRatio = function(a) {
                    var b = this._prev;
                    if (a > b.t) {
                        for (; b.next && a >= b.t;) b = b.next;
                        b = b.prev
                    } else
                        for (; b.prev && b.t >= a;) b = b.prev;
                    return this._prev = b, b.v + (a - b.t) / b.gap * b.c
                }, q.config = function(a) {
                    return new c(a)
                }, c.ease = new c, l("Bounce", j("BounceOut", function(a) {
                    return 1 / 2.75 > a ? 7.5625 * a * a : 2 / 2.75 > a ? 7.5625 * (a -= 1.5 / 2.75) * a + .75 : 2.5 / 2.75 > a ? 7.5625 * (a -= 2.25 / 2.75) * a + .9375 : 7.5625 * (a -= 2.625 / 2.75) * a + .984375
                }), j("BounceIn", function(a) {
                    return 1 / 2.75 > (a = 1 - a) ? 1 - 7.5625 * a * a : 2 / 2.75 > a ? 1 - (7.5625 * (a -= 1.5 / 2.75) * a + .75) : 2.5 / 2.75 > a ? 1 - (7.5625 * (a -= 2.25 / 2.75) * a + .9375) : 1 - (7.5625 * (a -= 2.625 / 2.75) * a + .984375)
                }), j("BounceInOut", function(a) {
                    var b = .5 > a;
                    return a = b ? 1 - 2 * a : 2 * a - 1, a = 1 / 2.75 > a ? 7.5625 * a * a : 2 / 2.75 > a ? 7.5625 * (a -= 1.5 / 2.75) * a + .75 : 2.5 / 2.75 > a ? 7.5625 * (a -= 2.25 / 2.75) * a + .9375 : 7.5625 * (a -= 2.625 / 2.75) * a + .984375, b ? .5 * (1 - a) : .5 * a + .5
                })), l("Circ", j("CircOut", function(a) {
                    return Math.sqrt(1 - (a -= 1) * a)
                }), j("CircIn", function(a) {
                    return -(Math.sqrt(1 - a * a) - 1)
                }), j("CircInOut", function(a) {
                    return 1 > (a *= 2) ? -.5 * (Math.sqrt(1 - a * a) - 1) : .5 * (Math.sqrt(1 - (a -= 2) * a) + 1)
                })), d = function(b, c, d) {
                    var e = i("easing." + b, function(a, b) {
                            this._p1 = a || 1, this._p2 = b || d, this._p3 = this._p2 / g * (Math.asin(1 / this._p1) || 0)
                        }, !0),
                        f = e.prototype = new a;
                    return f.constructor = e, f.getRatio = c, f.config = function(a, b) {
                        return new e(a, b)
                    }, e
                }, l("Elastic", d("ElasticOut", function(a) {
                    return this._p1 * Math.pow(2, -10 * a) * Math.sin((a - this._p3) * g / this._p2) + 1
                }, .3), d("ElasticIn", function(a) {
                    return -(this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * g / this._p2))
                }, .3), d("ElasticInOut", function(a) {
                    return 1 > (a *= 2) ? -.5 * this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * g / this._p2) : .5 * this._p1 * Math.pow(2, -10 * (a -= 1)) * Math.sin((a - this._p3) * g / this._p2) + 1
                }, .45)), l("Expo", j("ExpoOut", function(a) {
                    return 1 - Math.pow(2, -10 * a)
                }), j("ExpoIn", function(a) {
                    return Math.pow(2, 10 * (a - 1)) - .001
                }), j("ExpoInOut", function(a) {
                    return 1 > (a *= 2) ? .5 * Math.pow(2, 10 * (a - 1)) : .5 * (2 - Math.pow(2, -10 * (a - 1)))
                })), l("Sine", j("SineOut", function(a) {
                    return Math.sin(a * h)
                }), j("SineIn", function(a) {
                    return -Math.cos(a * h) + 1
                }), j("SineInOut", function(a) {
                    return -.5 * (Math.cos(Math.PI * a) - 1)
                })), i("easing.EaseLookup", {
                    find: function(b) {
                        return a.map[b]
                    }
                }, !0), k(e.SlowMo, "SlowMo", "ease,"), k(c, "RoughEase", "ease,"), k(b, "SteppedEase", "ease,"), o
            }, !0)
    }),
    function(a) {
        "use strict";
        var b, c, d, e, f, g = a.GreenSockGlobals || a,
            h = function(a) {
                var b, c = a.split("."),
                    d = g;
                for (b = 0; c.length > b; b++) d[c[b]] = d = d[c[b]] || {};
                return d
            },
            i = h("com.greensock"),
            j = [].slice,
            k = function() {},
            l = {},
            m = function(b, c, d, e) {
                this.sc = l[b] ? l[b].sc : [], l[b] = this, this.gsClass = null, this.func = d;
                var f = [];
                this.check = function(i) {
                    for (var j, k, n, o, p = c.length, q = p; --p > -1;)(j = l[c[p]] || new m(c[p], [])).gsClass ? (f[p] = j.gsClass, q--) : i && j.sc.push(this);
                    if (0 === q && d)
                        for (k = ("com.greensock." + b).split("."), n = k.pop(), o = h(k.join("."))[n] = this.gsClass = d.apply(d, f), e && (g[n] = o, "function" == typeof define && define.amd ? define((a.GreenSockAMDPath ? a.GreenSockAMDPath + "/" : "") + b.split(".").join("/"), [], function() {
                                return o
                            }) : "undefined" != typeof module && module.exports && (module.exports = o)), p = 0; this.sc.length > p; p++) this.sc[p].check()
                }, this.check(!0)
            },
            n = a._gsDefine = function(a, b, c, d) {
                return new m(a, b, c, d)
            },
            o = i._class = function(a, b, c) {
                return b = b || function() {}, n(a, [], function() {
                    return b
                }, c), b
            };
        n.globals = g;
        var p = [0, 0, 1, 1],
            q = [],
            r = o("easing.Ease", function(a, b, c, d) {
                this._func = a, this._type = c || 0, this._power = d || 0, this._params = b ? p.concat(b) : p
            }, !0),
            s = r.map = {},
            t = r.register = function(a, b, c, d) {
                for (var e, f, g, h, j = b.split(","), k = j.length, l = (c || "easeIn,easeOut,easeInOut").split(","); --k > -1;)
                    for (f = j[k], e = d ? o("easing." + f, null, !0) : i.easing[f] || {}, g = l.length; --g > -1;) h = l[g], s[f + "." + h] = s[h + f] = e[h] = a.getRatio ? a : a[h] || new a
            };
        for (d = r.prototype, d._calcEnd = !1, d.getRatio = function(a) {
                if (this._func) return this._params[0] = a, this._func.apply(null, this._params);
                var b = this._type,
                    c = this._power,
                    d = 1 === b ? 1 - a : 2 === b ? a : .5 > a ? 2 * a : 2 * (1 - a);
                return 1 === c ? d *= d : 2 === c ? d *= d * d : 3 === c ? d *= d * d * d : 4 === c && (d *= d * d * d * d), 1 === b ? 1 - d : 2 === b ? d : .5 > a ? d / 2 : 1 - d / 2
            }, b = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"], c = b.length; --c > -1;) d = b[c] + ",Power" + c, t(new r(null, null, 1, c), d, "easeOut", !0), t(new r(null, null, 2, c), d, "easeIn" + (0 === c ? ",easeNone" : "")), t(new r(null, null, 3, c), d, "easeInOut");
        s.linear = i.easing.Linear.easeIn, s.swing = i.easing.Quad.easeInOut;
        var u = o("events.EventDispatcher", function(a) {
            this._listeners = {}, this._eventTarget = a || this
        });
        d = u.prototype, d.addEventListener = function(a, b, c, d, g) {
            g = g || 0;
            var h, i, j = this._listeners[a],
                k = 0;
            for (null == j && (this._listeners[a] = j = []), i = j.length; --i > -1;) h = j[i], h.c === b && h.s === c ? j.splice(i, 1) : 0 === k && g > h.pr && (k = i + 1);
            j.splice(k, 0, {
                c: b,
                s: c,
                up: d,
                pr: g
            }), this !== e || f || e.wake()
        }, d.removeEventListener = function(a, b) {
            var c, d = this._listeners[a];
            if (d)
                for (c = d.length; --c > -1;)
                    if (d[c].c === b) return void d.splice(c, 1)
        }, d.dispatchEvent = function(a) {
            var b, c, d, e = this._listeners[a];
            if (e)
                for (b = e.length, c = this._eventTarget; --b > -1;) d = e[b], d.up ? d.c.call(d.s || c, {
                    type: a,
                    target: c
                }) : d.c.call(d.s || c)
        };
        var v = a.requestAnimationFrame,
            w = a.cancelAnimationFrame,
            x = Date.now || function() {
                return (new Date).getTime()
            },
            y = x();
        for (b = ["ms", "moz", "webkit", "o"], c = b.length; --c > -1 && !v;) v = a[b[c] + "RequestAnimationFrame"], w = a[b[c] + "CancelAnimationFrame"] || a[b[c] + "CancelRequestAnimationFrame"];
        o("Ticker", function(a, b) {
            var c, d, g, h, i, j = this,
                l = x(),
                m = b !== !1 && v,
                n = function(a) {
                    y = x(), j.time = (y - l) / 1e3;
                    var b, e = j.time - i;
                    (!c || e > 0 || a === !0) && (j.frame++, i += e + (e >= h ? .004 : h - e), b = !0), a !== !0 && (g = d(n)), b && j.dispatchEvent("tick")
                };
            u.call(j), this.time = this.frame = 0, this.tick = function() {
                n(!0)
            }, this.sleep = function() {
                null != g && (m && w ? w(g) : clearTimeout(g), d = k, g = null, j === e && (f = !1))
            }, this.wake = function() {
                null !== g && j.sleep(), d = 0 === c ? k : m && v ? v : function(a) {
                    return setTimeout(a, 0 | 1e3 * (i - j.time) + 1)
                }, j === e && (f = !0), n(2)
            }, this.fps = function(a) {
                return arguments.length ? (c = a, h = 1 / (c || 60), i = this.time + h, void j.wake()) : c
            }, this.useRAF = function(a) {
                return arguments.length ? (j.sleep(), m = a, void j.fps(c)) : m
            }, j.fps(a), setTimeout(function() {
                m && (!g || 5 > j.frame) && j.useRAF(!1)
            }, 1500)
        }), d = i.Ticker.prototype = new i.events.EventDispatcher, d.constructor = i.Ticker;
        var z = o("core.Animation", function(a, b) {
            if (this.vars = b = b || {}, this._duration = this._totalDuration = a || 0, this._delay = Number(b.delay) || 0, this._timeScale = 1, this._active = b.immediateRender === !0, this.data = b.data, this._reversed = b.reversed === !0, M) {
                f || e.wake();
                var c = this.vars.useFrames ? L : M;
                c.add(this, c._time), this.vars.paused && this.paused(!0)
            }
        });
        e = z.ticker = new i.Ticker, d = z.prototype, d._dirty = d._gc = d._initted = d._paused = !1, d._totalTime = d._time = 0, d._rawPrevTime = -1, d._next = d._last = d._onUpdate = d._timeline = d.timeline = null, d._paused = !1;
        var A = function() {
            x() - y > 2e3 && e.wake(), setTimeout(A, 2e3)
        };
        A(), d.play = function(a, b) {
            return arguments.length && this.seek(a, b), this.reversed(!1).paused(!1)
        }, d.pause = function(a, b) {
            return arguments.length && this.seek(a, b), this.paused(!0)
        }, d.resume = function(a, b) {
            return arguments.length && this.seek(a, b), this.paused(!1)
        }, d.seek = function(a, b) {
            return this.totalTime(Number(a), b !== !1)
        }, d.restart = function(a, b) {
            return this.reversed(!1).paused(!1).totalTime(a ? -this._delay : 0, b !== !1, !0)
        }, d.reverse = function(a, b) {
            return arguments.length && this.seek(a || this.totalDuration(), b), this.reversed(!0).paused(!1)
        }, d.render = function() {}, d.invalidate = function() {
            return this
        }, d._enabled = function(a, b) {
            return f || e.wake(), this._gc = !a, this._active = a && !this._paused && this._totalTime > 0 && this._totalTime < this._totalDuration, b !== !0 && (a && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !a && this.timeline && this._timeline._remove(this, !0)), !1
        }, d._kill = function() {
            return this._enabled(!1, !1)
        }, d.kill = function(a, b) {
            return this._kill(a, b), this
        }, d._uncache = function(a) {
            for (var b = a ? this : this.timeline; b;) b._dirty = !0, b = b.timeline;
            return this
        }, d._swapSelfInParams = function(a) {
            for (var b = a.length, c = a.concat(); --b > -1;) "{self}" === a[b] && (c[b] = this);
            return c
        }, d.eventCallback = function(a, b, c, d) {
            if ("on" === (a || "").substr(0, 2)) {
                var e = this.vars;
                if (1 === arguments.length) return e[a];
                null == b ? delete e[a] : (e[a] = b, e[a + "Params"] = c instanceof Array && -1 !== c.join("").indexOf("{self}") ? this._swapSelfInParams(c) : c, e[a + "Scope"] = d), "onUpdate" === a && (this._onUpdate = b)
            }
            return this
        }, d.delay = function(a) {
            return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + a - this._delay), this._delay = a, this) : this._delay
        }, d.duration = function(a) {
            return arguments.length ? (this._duration = this._totalDuration = a, this._uncache(!0), this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== a && this.totalTime(this._totalTime * (a / this._duration), !0), this) : (this._dirty = !1, this._duration)
        }, d.totalDuration = function(a) {
            return this._dirty = !1, arguments.length ? this.duration(a) : this._totalDuration
        }, d.time = function(a, b) {
            return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(a > this._duration ? this._duration : a, b)) : this._time
        }, d.totalTime = function(a, b, c) {
            if (f || e.wake(), !arguments.length) return this._totalTime;
            if (this._timeline) {
                if (0 > a && !c && (a += this.totalDuration()), this._timeline.smoothChildTiming) {
                    this._dirty && this.totalDuration();
                    var d = this._totalDuration,
                        g = this._timeline;
                    if (a > d && !c && (a = d), this._startTime = (this._paused ? this._pauseTime : g._time) - (this._reversed ? d - a : a) / this._timeScale, g._dirty || this._uncache(!1), g._timeline)
                        for (; g._timeline;) g._timeline._time !== (g._startTime + g._totalTime) / g._timeScale && g.totalTime(g._totalTime, !0), g = g._timeline
                }
                this._gc && this._enabled(!0, !1), this._totalTime !== a && this.render(a, b, !1)
            }
            return this
        }, d.startTime = function(a) {
            return arguments.length ? (a !== this._startTime && (this._startTime = a, this.timeline && this.timeline._sortChildren && this.timeline.add(this, a - this._delay)), this) : this._startTime
        }, d.timeScale = function(a) {
            if (!arguments.length) return this._timeScale;
            if (a = a || 1e-6, this._timeline && this._timeline.smoothChildTiming) {
                var b = this._pauseTime,
                    c = b || 0 === b ? b : this._timeline.totalTime();
                this._startTime = c - (c - this._startTime) * this._timeScale / a
            }
            return this._timeScale = a, this._uncache(!1)
        }, d.reversed = function(a) {
            return arguments.length ? (a != this._reversed && (this._reversed = a, this.totalTime(this._totalTime, !0)), this) : this._reversed
        }, d.paused = function(a) {
            if (!arguments.length) return this._paused;
            if (a != this._paused && this._timeline) {
                f || a || e.wake();
                var b = this._timeline,
                    c = b.rawTime(),
                    d = c - this._pauseTime;
                !a && b.smoothChildTiming && (this._startTime += d, this._uncache(!1)), this._pauseTime = a ? c : null, this._paused = a, this._active = !a && this._totalTime > 0 && this._totalTime < this._totalDuration, a || 0 === d || 0 === this._duration || this.render(b.smoothChildTiming ? this._totalTime : (c - this._startTime) / this._timeScale, !0, !0)
            }
            return this._gc && !a && this._enabled(!0, !1), this
        };
        var B = o("core.SimpleTimeline", function(a) {
            z.call(this, 0, a), this.autoRemoveChildren = this.smoothChildTiming = !0
        });
        d = B.prototype = new z, d.constructor = B, d.kill()._gc = !1, d._first = d._last = null, d._sortChildren = !1, d.add = d.insert = function(a, b) {
            var c, d;
            if (a._startTime = Number(b || 0) + a._delay, a._paused && this !== a._timeline && (a._pauseTime = a._startTime + (this.rawTime() - a._startTime) / a._timeScale), a.timeline && a.timeline._remove(a, !0), a.timeline = a._timeline = this, a._gc && a._enabled(!0, !0), c = this._last, this._sortChildren)
                for (d = a._startTime; c && c._startTime > d;) c = c._prev;
            return c ? (a._next = c._next, c._next = a) : (a._next = this._first, this._first = a), a._next ? a._next._prev = a : this._last = a, a._prev = c, this._timeline && this._uncache(!0), this
        }, d._remove = function(a, b) {
            return a.timeline === this && (b || a._enabled(!1, !0), a.timeline = null, a._prev ? a._prev._next = a._next : this._first === a && (this._first = a._next), a._next ? a._next._prev = a._prev : this._last === a && (this._last = a._prev), this._timeline && this._uncache(!0)), this
        }, d.render = function(a, b, c) {
            var d, e = this._first;
            for (this._totalTime = this._time = this._rawPrevTime = a; e;) d = e._next, (e._active || a >= e._startTime && !e._paused) && (e._reversed ? e.render((e._dirty ? e.totalDuration() : e._totalDuration) - (a - e._startTime) * e._timeScale, b, c) : e.render((a - e._startTime) * e._timeScale, b, c)), e = d
        }, d.rawTime = function() {
            return f || e.wake(), this._totalTime
        };
        var C = o("TweenLite", function(b, c, d) {
                if (z.call(this, c, d), this.render = C.prototype.render, null == b) throw "Cannot tween a null target.";
                this.target = b = "string" != typeof b ? b : C.selector(b) || b;
                var e, f, g, h = b.jquery || b.length && b !== a && b[0] && (b[0] === a || b[0].nodeType && b[0].style && !b.nodeType),
                    i = this.vars.overwrite;
                if (this._overwrite = i = null == i ? K[C.defaultOverwrite] : "number" == typeof i ? i >> 0 : K[i], (h || b instanceof Array) && "number" != typeof b[0])
                    for (this._targets = g = j.call(b, 0), this._propLookup = [], this._siblings = [], e = 0; g.length > e; e++) f = g[e], f ? "string" != typeof f ? f.length && f !== a && f[0] && (f[0] === a || f[0].nodeType && f[0].style && !f.nodeType) ? (g.splice(e--, 1), this._targets = g = g.concat(j.call(f, 0))) : (this._siblings[e] = N(f, this, !1), 1 === i && this._siblings[e].length > 1 && O(f, this, null, 1, this._siblings[e])) : (f = g[e--] = C.selector(f), "string" == typeof f && g.splice(e + 1, 1)) : g.splice(e--, 1);
                else this._propLookup = {}, this._siblings = N(b, this, !1), 1 === i && this._siblings.length > 1 && O(b, this, null, 1, this._siblings);
                (this.vars.immediateRender || 0 === c && 0 === this._delay && this.vars.immediateRender !== !1) && this.render(-this._delay, !1, !0)
            }, !0),
            D = function(b) {
                return b.length && b !== a && b[0] && (b[0] === a || b[0].nodeType && b[0].style && !b.nodeType)
            },
            E = function(a, b) {
                var c, d = {};
                for (c in a) J[c] || c in b && "x" !== c && "y" !== c && "width" !== c && "height" !== c && "className" !== c && "border" !== c || !(!G[c] || G[c] && G[c]._autoCSS) || (d[c] = a[c], delete a[c]);
                a.css = d
            };
        d = C.prototype = new z, d.constructor = C, d.kill()._gc = !1, d.ratio = 0, d._firstPT = d._targets = d._overwrittenProps = d._startAt = null, d._notifyPluginsOfEnabled = !1, C.version = "1.10.2", C.defaultEase = d._ease = new r(null, null, 1, 1), C.defaultOverwrite = "auto", C.ticker = e, C.autoSleep = !0, C.selector = a.$ || a.jQuery || function(b) {
            return a.$ ? (C.selector = a.$, a.$(b)) : a.document ? a.document.getElementById("#" === b.charAt(0) ? b.substr(1) : b) : b
        };
        var F = C._internals = {},
            G = C._plugins = {},
            H = C._tweenLookup = {},
            I = 0,
            J = F.reservedProps = {
                ease: 1,
                delay: 1,
                overwrite: 1,
                onComplete: 1,
                onCompleteParams: 1,
                onCompleteScope: 1,
                useFrames: 1,
                runBackwards: 1,
                startAt: 1,
                onUpdate: 1,
                onUpdateParams: 1,
                onUpdateScope: 1,
                onStart: 1,
                onStartParams: 1,
                onStartScope: 1,
                onReverseComplete: 1,
                onReverseCompleteParams: 1,
                onReverseCompleteScope: 1,
                onRepeat: 1,
                onRepeatParams: 1,
                onRepeatScope: 1,
                easeParams: 1,
                yoyo: 1,
                immediateRender: 1,
                repeat: 1,
                repeatDelay: 1,
                data: 1,
                paused: 1,
                reversed: 1,
                autoCSS: 1
            },
            K = {
                none: 0,
                all: 1,
                auto: 2,
                concurrent: 3,
                allOnStart: 4,
                preexisting: 5,
                "true": 1,
                "false": 0
            },
            L = z._rootFramesTimeline = new B,
            M = z._rootTimeline = new B;
        M._startTime = e.time, L._startTime = e.frame, M._active = L._active = !0, z._updateRoot = function() {
            if (M.render((e.time - M._startTime) * M._timeScale, !1, !1), L.render((e.frame - L._startTime) * L._timeScale, !1, !1), !(e.frame % 120)) {
                var a, b, c;
                for (c in H) {
                    for (b = H[c].tweens, a = b.length; --a > -1;) b[a]._gc && b.splice(a, 1);
                    0 === b.length && delete H[c]
                }
                if (c = M._first, (!c || c._paused) && C.autoSleep && !L._first && 1 === e._listeners.tick.length) {
                    for (; c && c._paused;) c = c._next;
                    c || e.sleep()
                }
            }
        }, e.addEventListener("tick", z._updateRoot);
        var N = function(a, b, c) {
                var d, e, f = a._gsTweenID;
                if (H[f || (a._gsTweenID = f = "t" + I++)] || (H[f] = {
                        target: a,
                        tweens: []
                    }), b && (d = H[f].tweens, d[e = d.length] = b, c))
                    for (; --e > -1;) d[e] === b && d.splice(e, 1);
                return H[f].tweens
            },
            O = function(a, b, c, d, e) {
                var f, g, h, i;
                if (1 === d || d >= 4) {
                    for (i = e.length, f = 0; i > f; f++)
                        if ((h = e[f]) !== b) h._gc || h._enabled(!1, !1) && (g = !0);
                        else if (5 === d) break;
                    return g
                }
                var j, k = b._startTime + 1e-10,
                    l = [],
                    m = 0,
                    n = 0 === b._duration;
                for (f = e.length; --f > -1;)(h = e[f]) === b || h._gc || h._paused || (h._timeline !== b._timeline ? (j = j || P(b, 0, n), 0 === P(h, j, n) && (l[m++] = h)) : k >= h._startTime && h._startTime + h.totalDuration() / h._timeScale + 1e-10 > k && ((n || !h._initted) && 2e-10 >= k - h._startTime || (l[m++] = h)));
                for (f = m; --f > -1;) h = l[f], 2 === d && h._kill(c, a) && (g = !0), (2 !== d || !h._firstPT && h._initted) && h._enabled(!1, !1) && (g = !0);
                return g
            },
            P = function(a, b, c) {
                for (var d = a._timeline, e = d._timeScale, f = a._startTime, g = 1e-10; d._timeline;) {
                    if (f += d._startTime, e *= d._timeScale, d._paused) return -100;
                    d = d._timeline
                }
                return f /= e, f > b ? f - b : c && f === b || !a._initted && 2 * g > f - b ? g : (f += a.totalDuration() / a._timeScale / e) > b + g ? 0 : f - b - g
            };
        d._init = function() {
            var a, b, c, d, e = this.vars,
                f = this._overwrittenProps,
                g = this._duration,
                h = e.immediateRender,
                i = e.ease;
            if (e.startAt) {
                if (this._startAt && this._startAt.render(-1, !0), e.startAt.overwrite = 0, e.startAt.immediateRender = !0, this._startAt = C.to(this.target, 0, e.startAt), h)
                    if (this._time > 0) this._startAt = null;
                    else if (0 !== g) return
            } else if (e.runBackwards && e.immediateRender && 0 !== g)
                if (this._startAt) this._startAt.render(-1, !0), this._startAt = null;
                else if (0 === this._time) {
                c = {};
                for (d in e) J[d] && "autoCSS" !== d || (c[d] = e[d]);
                return c.overwrite = 0, void(this._startAt = C.to(this.target, 0, c))
            }
            if (this._ease = i ? i instanceof r ? e.easeParams instanceof Array ? i.config.apply(i, e.easeParams) : i : "function" == typeof i ? new r(i, e.easeParams) : s[i] || C.defaultEase : C.defaultEase, this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets)
                for (a = this._targets.length; --a > -1;) this._initProps(this._targets[a], this._propLookup[a] = {}, this._siblings[a], f ? f[a] : null) && (b = !0);
            else b = this._initProps(this.target, this._propLookup, this._siblings, f);
            if (b && C._onPluginEvent("_onInitAllProps", this), f && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)), e.runBackwards)
                for (c = this._firstPT; c;) c.s += c.c, c.c = -c.c, c = c._next;
            this._onUpdate = e.onUpdate, this._initted = !0
        }, d._initProps = function(b, c, d, e) {
            var f, g, h, i, j, k;
            if (null == b) return !1;
            this.vars.css || b.style && b !== a && b.nodeType && G.css && this.vars.autoCSS !== !1 && E(this.vars, b);
            for (f in this.vars) {
                if (k = this.vars[f], J[f]) k instanceof Array && -1 !== k.join("").indexOf("{self}") && (this.vars[f] = k = this._swapSelfInParams(k, this));
                else if (G[f] && (i = new G[f])._onInitTween(b, this.vars[f], this)) {
                    for (this._firstPT = j = {
                            _next: this._firstPT,
                            t: i,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: !0,
                            n: f,
                            pg: !0,
                            pr: i._priority
                        }, g = i._overwriteProps.length; --g > -1;) c[i._overwriteProps[g]] = this._firstPT;
                    (i._priority || i._onInitAllProps) && (h = !0), (i._onDisable || i._onEnable) && (this._notifyPluginsOfEnabled = !0)
                } else this._firstPT = c[f] = j = {
                    _next: this._firstPT,
                    t: b,
                    p: f,
                    f: "function" == typeof b[f],
                    n: f,
                    pg: !1,
                    pr: 0
                }, j.s = j.f ? b[f.indexOf("set") || "function" != typeof b["get" + f.substr(3)] ? f : "get" + f.substr(3)]() : parseFloat(b[f]), j.c = "string" == typeof k && "=" === k.charAt(1) ? parseInt(k.charAt(0) + "1", 10) * Number(k.substr(2)) : Number(k) - j.s || 0;
                j && j._next && (j._next._prev = j)
            }
            return e && this._kill(e, b) ? this._initProps(b, c, d, e) : this._overwrite > 1 && this._firstPT && d.length > 1 && O(b, this, c, this._overwrite, d) ? (this._kill(c, b), this._initProps(b, c, d, e)) : h
        }, d.render = function(a, b, c) {
            var d, e, f, g = this._time;
            if (a >= this._duration) this._totalTime = this._time = this._duration, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (d = !0, e = "onComplete"), 0 === this._duration && ((0 === a || 0 > this._rawPrevTime) && this._rawPrevTime !== a && (c = !0, this._rawPrevTime > 0 && (e = "onReverseComplete", b && (a = -1))), this._rawPrevTime = a);
            else if (1e-7 > a) this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== g || 0 === this._duration && this._rawPrevTime > 0) && (e = "onReverseComplete", d = this._reversed), 0 > a ? (this._active = !1, 0 === this._duration && (this._rawPrevTime >= 0 && (c = !0), this._rawPrevTime = a)) : this._initted || (c = !0);
            else if (this._totalTime = this._time = a, this._easeType) {
                var h = a / this._duration,
                    i = this._easeType,
                    j = this._easePower;
                (1 === i || 3 === i && h >= .5) && (h = 1 - h), 3 === i && (h *= 2), 1 === j ? h *= h : 2 === j ? h *= h * h : 3 === j ? h *= h * h * h : 4 === j && (h *= h * h * h * h), this.ratio = 1 === i ? 1 - h : 2 === i ? h : .5 > a / this._duration ? h / 2 : 1 - h / 2
            } else this.ratio = this._ease.getRatio(a / this._duration);
            if (this._time !== g || c) {
                if (!this._initted) {
                    if (this._init(), !this._initted) return;
                    this._time && !d ? this.ratio = this._ease.getRatio(this._time / this._duration) : d && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                }
                for (this._active || !this._paused && this._time !== g && a >= 0 && (this._active = !0), 0 === g && (this._startAt && (a >= 0 ? this._startAt.render(a, b, c) : e || (e = "_dummyGS")), this.vars.onStart && (0 !== this._time || 0 === this._duration) && (b || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || q))), f = this._firstPT; f;) f.f ? f.t[f.p](f.c * this.ratio + f.s) : f.t[f.p] = f.c * this.ratio + f.s, f = f._next;
                this._onUpdate && (0 > a && this._startAt && this._startAt.render(a, b, c), b || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || q)), e && (this._gc || (0 > a && this._startAt && !this._onUpdate && this._startAt.render(a, b, c), d && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[e] && this.vars[e].apply(this.vars[e + "Scope"] || this, this.vars[e + "Params"] || q)))
            }
        }, d._kill = function(a, b) {
            if ("all" === a && (a = null), null == a && (null == b || b === this.target)) return this._enabled(!1, !1);
            b = "string" != typeof b ? b || this._targets || this.target : C.selector(b) || b;
            var c, d, e, f, g, h, i, j;
            if ((b instanceof Array || D(b)) && "number" != typeof b[0])
                for (c = b.length; --c > -1;) this._kill(a, b[c]) && (h = !0);
            else {
                if (this._targets) {
                    for (c = this._targets.length; --c > -1;)
                        if (b === this._targets[c]) {
                            g = this._propLookup[c] || {}, this._overwrittenProps = this._overwrittenProps || [], d = this._overwrittenProps[c] = a ? this._overwrittenProps[c] || {} : "all";
                            break
                        }
                } else {
                    if (b !== this.target) return !1;
                    g = this._propLookup, d = this._overwrittenProps = a ? this._overwrittenProps || {} : "all"
                }
                if (g) {
                    i = a || g, j = a !== d && "all" !== d && a !== g && (null == a || a._tempKill !== !0);
                    for (e in i)(f = g[e]) && (f.pg && f.t._kill(i) && (h = !0), f.pg && 0 !== f.t._overwriteProps.length || (f._prev ? f._prev._next = f._next : f === this._firstPT && (this._firstPT = f._next), f._next && (f._next._prev = f._prev), f._next = f._prev = null), delete g[e]), j && (d[e] = 1);
                    !this._firstPT && this._initted && this._enabled(!1, !1)
                }
            }
            return h
        }, d.invalidate = function() {
            return this._notifyPluginsOfEnabled && C._onPluginEvent("_onDisable", this), this._firstPT = null, this._overwrittenProps = null, this._onUpdate = null, this._startAt = null, this._initted = this._active = this._notifyPluginsOfEnabled = !1, this._propLookup = this._targets ? {} : [], this
        }, d._enabled = function(a, b) {
            if (f || e.wake(), a && this._gc) {
                var c, d = this._targets;
                if (d)
                    for (c = d.length; --c > -1;) this._siblings[c] = N(d[c], this, !0);
                else this._siblings = N(this.target, this, !0)
            }
            return z.prototype._enabled.call(this, a, b), this._notifyPluginsOfEnabled && this._firstPT ? C._onPluginEvent(a ? "_onEnable" : "_onDisable", this) : !1
        }, C.to = function(a, b, c) {
            return new C(a, b, c)
        }, C.from = function(a, b, c) {
            return c.runBackwards = !0, c.immediateRender = 0 != c.immediateRender, new C(a, b, c)
        }, C.fromTo = function(a, b, c, d) {
            return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, new C(a, b, d)
        }, C.delayedCall = function(a, b, c, d, e) {
            return new C(b, 0, {
                delay: a,
                onComplete: b,
                onCompleteParams: c,
                onCompleteScope: d,
                onReverseComplete: b,
                onReverseCompleteParams: c,
                onReverseCompleteScope: d,
                immediateRender: !1,
                useFrames: e,
                overwrite: 0
            })
        }, C.set = function(a, b) {
            return new C(a, 0, b)
        }, C.killTweensOf = C.killDelayedCallsTo = function(a, b) {
            for (var c = C.getTweensOf(a), d = c.length; --d > -1;) c[d]._kill(b, a)
        }, C.getTweensOf = function(a) {
            if (null == a) return [];
            a = "string" != typeof a ? a : C.selector(a) || a;
            var b, c, d, e;
            if ((a instanceof Array || D(a)) && "number" != typeof a[0]) {
                for (b = a.length, c = []; --b > -1;) c = c.concat(C.getTweensOf(a[b]));
                for (b = c.length; --b > -1;)
                    for (e = c[b], d = b; --d > -1;) e === c[d] && c.splice(b, 1)
            } else
                for (c = N(a).concat(), b = c.length; --b > -1;) c[b]._gc && c.splice(b, 1);
            return c
        };
        var Q = o("plugins.TweenPlugin", function(a, b) {
            this._overwriteProps = (a || "").split(","), this._propName = this._overwriteProps[0], this._priority = b || 0, this._super = Q.prototype
        }, !0);
        if (d = Q.prototype, Q.version = "1.10.1", Q.API = 2, d._firstPT = null, d._addTween = function(a, b, c, d, e, f) {
                var g, h;
                return null != d && (g = "number" == typeof d || "=" !== d.charAt(1) ? Number(d) - c : parseInt(d.charAt(0) + "1", 10) * Number(d.substr(2))) ? (this._firstPT = h = {
                    _next: this._firstPT,
                    t: a,
                    p: b,
                    s: c,
                    c: g,
                    f: "function" == typeof a[b],
                    n: e || b,
                    r: f
                }, h._next && (h._next._prev = h), h) : void 0
            }, d.setRatio = function(a) {
                for (var b, c = this._firstPT, d = 1e-6; c;) b = c.c * a + c.s, c.r ? b = 0 | b + (b > 0 ? .5 : -.5) : d > b && b > -d && (b = 0), c.f ? c.t[c.p](b) : c.t[c.p] = b, c = c._next
            }, d._kill = function(a) {
                var b, c = this._overwriteProps,
                    d = this._firstPT;
                if (null != a[this._propName]) this._overwriteProps = [];
                else
                    for (b = c.length; --b > -1;) null != a[c[b]] && c.splice(b, 1);
                for (; d;) null != a[d.n] && (d._next && (d._next._prev = d._prev), d._prev ? (d._prev._next = d._next, d._prev = null) : this._firstPT === d && (this._firstPT = d._next)), d = d._next;
                return !1
            }, d._roundProps = function(a, b) {
                for (var c = this._firstPT; c;)(a[this._propName] || null != c.n && a[c.n.split(this._propName + "_").join("")]) && (c.r = b), c = c._next
            }, C._onPluginEvent = function(a, b) {
                var c, d, e, f, g, h = b._firstPT;
                if ("_onInitAllProps" === a) {
                    for (; h;) {
                        for (g = h._next, d = e; d && d.pr > h.pr;) d = d._next;
                        (h._prev = d ? d._prev : f) ? h._prev._next = h: e = h, (h._next = d) ? d._prev = h : f = h, h = g
                    }
                    h = b._firstPT = e
                }
                for (; h;) h.pg && "function" == typeof h.t[a] && h.t[a]() && (c = !0), h = h._next;
                return c
            }, Q.activate = function(a) {
                for (var b = a.length; --b > -1;) a[b].API === Q.API && (G[(new a[b])._propName] = a[b]);
                return !0
            }, n.plugin = function(a) {
                if (!(a && a.propName && a.init && a.API)) throw "illegal plugin definition.";
                var b, c = a.propName,
                    d = a.priority || 0,
                    e = a.overwriteProps,
                    f = {
                        init: "_onInitTween",
                        set: "setRatio",
                        kill: "_kill",
                        round: "_roundProps",
                        initAll: "_onInitAllProps"
                    },
                    g = o("plugins." + c.charAt(0).toUpperCase() + c.substr(1) + "Plugin", function() {
                        Q.call(this, c, d), this._overwriteProps = e || []
                    }, a.global === !0),
                    h = g.prototype = new Q(c);
                h.constructor = g, g.API = a.API;
                for (b in f) "function" == typeof a[b] && (h[f[b]] = a[b]);
                return g.version = a.version, Q.activate([g]), g
            }, b = a._gsQueue) {
            for (c = 0; b.length > c; c++) b[c]();
            for (d in l) l[d].func || a.console.log("GSAP encountered missing dependency: com.greensock." + d)
        }
        f = !1
    }(window), ! function(a) {
        var b, c, d = "0.4.2",
            e = "hasOwnProperty",
            f = /[\.\/]/,
            g = /\s*,\s*/,
            h = "*",
            i = function(a, b) {
                return a - b
            },
            j = {
                n: {}
            },
            k = function() {
                for (var a = 0, b = this.length; b > a; a++)
                    if ("undefined" != typeof this[a]) return this[a]
            },
            l = function() {
                for (var a = this.length; --a;)
                    if ("undefined" != typeof this[a]) return this[a]
            },
            m = function(a, d) {
                a = String(a);
                var e, f = c,
                    g = Array.prototype.slice.call(arguments, 2),
                    h = m.listeners(a),
                    j = 0,
                    n = [],
                    o = {},
                    p = [],
                    q = b;
                p.firstDefined = k, p.lastDefined = l, b = a, c = 0;
                for (var r = 0, s = h.length; s > r; r++) "zIndex" in h[r] && (n.push(h[r].zIndex), h[r].zIndex < 0 && (o[h[r].zIndex] = h[r]));
                for (n.sort(i); n[j] < 0;)
                    if (e = o[n[j++]], p.push(e.apply(d, g)), c) return c = f, p;
                for (r = 0; s > r; r++)
                    if (e = h[r], "zIndex" in e)
                        if (e.zIndex == n[j]) {
                            if (p.push(e.apply(d, g)), c) break;
                            do
                                if (j++, e = o[n[j]], e && p.push(e.apply(d, g)), c) break;
                            while (e)
                        } else o[e.zIndex] = e;
                else if (p.push(e.apply(d, g)), c) break;
                return c = f, b = q, p
            };
        m._events = j, m.listeners = function(a) {
            var b, c, d, e, g, i, k, l, m = a.split(f),
                n = j,
                o = [n],
                p = [];
            for (e = 0, g = m.length; g > e; e++) {
                for (l = [], i = 0, k = o.length; k > i; i++)
                    for (n = o[i].n, c = [n[m[e]], n[h]], d = 2; d--;) b = c[d], b && (l.push(b), p = p.concat(b.f || []));
                o = l
            }
            return p
        }, m.on = function(a, b) {
            if (a = String(a), "function" != typeof b) return function() {};
            for (var c = a.split(g), d = 0, e = c.length; e > d; d++) ! function(a) {
                for (var c, d = a.split(f), e = j, g = 0, h = d.length; h > g; g++) e = e.n, e = e.hasOwnProperty(d[g]) && e[d[g]] || (e[d[g]] = {
                    n: {}
                });
                for (e.f = e.f || [], g = 0, h = e.f.length; h > g; g++)
                    if (e.f[g] == b) {
                        c = !0;
                        break
                    }!c && e.f.push(b)
            }(c[d]);
            return function(a) {
                +a == +a && (b.zIndex = +a)
            }
        }, m.f = function(a) {
            var b = [].slice.call(arguments, 1);
            return function() {
                m.apply(null, [a, null].concat(b).concat([].slice.call(arguments, 0)))
            }
        }, m.stop = function() {
            c = 1
        }, m.nt = function(a) {
            return a ? new RegExp("(?:\\.|\\/|^)" + a + "(?:\\.|\\/|$)").test(b) : b
        }, m.nts = function() {
            return b.split(f)
        }, m.off = m.unbind = function(a, b) {
            if (!a) return void(m._events = j = {
                n: {}
            });
            var c = a.split(g);
            if (c.length > 1)
                for (var d = 0, i = c.length; i > d; d++) m.off(c[d], b);
            else {
                c = a.split(f);
                var k, l, n, d, i, o, p, q = [j];
                for (d = 0, i = c.length; i > d; d++)
                    for (o = 0; o < q.length; o += n.length - 2) {
                        if (n = [o, 1], k = q[o].n, c[d] != h) k[c[d]] && n.push(k[c[d]]);
                        else
                            for (l in k) k[e](l) && n.push(k[l]);
                        q.splice.apply(q, n)
                    }
                for (d = 0, i = q.length; i > d; d++)
                    for (k = q[d]; k.n;) {
                        if (b) {
                            if (k.f) {
                                for (o = 0, p = k.f.length; p > o; o++)
                                    if (k.f[o] == b) {
                                        k.f.splice(o, 1);
                                        break
                                    }!k.f.length && delete k.f
                            }
                            for (l in k.n)
                                if (k.n[e](l) && k.n[l].f) {
                                    var r = k.n[l].f;
                                    for (o = 0, p = r.length; p > o; o++)
                                        if (r[o] == b) {
                                            r.splice(o, 1);
                                            break
                                        }!r.length && delete k.n[l].f
                                }
                        } else {
                            delete k.f;
                            for (l in k.n) k.n[e](l) && k.n[l].f && delete k.n[l].f
                        }
                        k = k.n
                    }
            }
        }, m.once = function(a, b) {
            var c = function() {
                return m.unbind(a, c), b.apply(this, arguments)
            };
            return m.on(a, c)
        }, m.version = d, m.toString = function() {
            return "You are running Eve " + d
        }, "undefined" != typeof module && module.exports ? module.exports = m : "function" == typeof define && define.amd ? define("eve", [], function() {
            return m
        }) : a.eve = m
    }(this),
    function(a, b) {
        "function" == typeof define && define.amd ? define(["eve"], function(c) {
            return b(a, c)
        }) : b(a, a.eve)
    }(this, function(a, b) {
        var c = function(b) {
                var c = {},
                    d = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame || a.oRequestAnimationFrame || a.msRequestAnimationFrame || function(a) {
                        setTimeout(a, 16)
                    },
                    e = Array.isArray || function(a) {
                        return a instanceof Array || "[object Array]" == Object.prototype.toString.call(a)
                    },
                    f = 0,
                    g = "M" + (+new Date).toString(36),
                    h = function() {
                        return g + (f++).toString(36)
                    },
                    i = Date.now || function() {
                        return +new Date
                    },
                    j = function(a) {
                        var b = this;
                        if (null == a) return b.s;
                        var c = b.s - a;
                        b.b += b.dur * c, b.B += b.dur * c, b.s = a
                    },
                    k = function(a) {
                        var b = this;
                        return null == a ? b.spd : void(b.spd = a)
                    },
                    l = function(a) {
                        var b = this;
                        return null == a ? b.dur : (b.s = b.s * a / b.dur, void(b.dur = a))
                    },
                    m = function() {
                        var a = this;
                        delete c[a.id], a.update(), b("mina.stop." + a.id, a)
                    },
                    n = function() {
                        var a = this;
                        a.pdif || (delete c[a.id], a.update(), a.pdif = a.get() - a.b)
                    },
                    o = function() {
                        var a = this;
                        a.pdif && (a.b = a.get() - a.pdif, delete a.pdif, c[a.id] = a)
                    },
                    p = function() {
                        var a, b = this;
                        if (e(b.start)) {
                            a = [];
                            for (var c = 0, d = b.start.length; d > c; c++) a[c] = +b.start[c] + (b.end[c] - b.start[c]) * b.easing(b.s)
                        } else a = +b.start + (b.end - b.start) * b.easing(b.s);
                        b.set(a)
                    },
                    q = function() {
                        var a = 0;
                        for (var e in c)
                            if (c.hasOwnProperty(e)) {
                                var f = c[e],
                                    g = f.get();
                                a++, f.s = (g - f.b) / (f.dur / f.spd), f.s >= 1 && (delete c[e], f.s = 1, a--, function(a) {
                                    setTimeout(function() {
                                        b("mina.finish." + a.id, a)
                                    })
                                }(f)), f.update()
                            }
                        a && d(q)
                    },
                    r = function(a, b, e, f, g, i, s) {
                        var t = {
                            id: h(),
                            start: a,
                            end: b,
                            b: e,
                            s: 0,
                            dur: f - e,
                            spd: 1,
                            get: g,
                            set: i,
                            easing: s || r.linear,
                            status: j,
                            speed: k,
                            duration: l,
                            stop: m,
                            pause: n,
                            resume: o,
                            update: p
                        };
                        c[t.id] = t;
                        var u, v = 0;
                        for (u in c)
                            if (c.hasOwnProperty(u) && (v++, 2 == v)) break;
                        return 1 == v && d(q), t
                    };
                return r.time = i, r.getById = function(a) {
                    return c[a] || null
                }, r.linear = function(a) {
                    return a
                }, r.easeout = function(a) {
                    return Math.pow(a, 1.7)
                }, r.easein = function(a) {
                    return Math.pow(a, .48)
                }, r.easeinout = function(a) {
                    if (1 == a) return 1;
                    if (0 == a) return 0;
                    var b = .48 - a / 1.04,
                        c = Math.sqrt(.1734 + b * b),
                        d = c - b,
                        e = Math.pow(Math.abs(d), 1 / 3) * (0 > d ? -1 : 1),
                        f = -c - b,
                        g = Math.pow(Math.abs(f), 1 / 3) * (0 > f ? -1 : 1),
                        h = e + g + .5;
                    return 3 * (1 - h) * h * h + h * h * h
                }, r.backin = function(a) {
                    if (1 == a) return 1;
                    var b = 1.70158;
                    return a * a * ((b + 1) * a - b)
                }, r.backout = function(a) {
                    if (0 == a) return 0;
                    a -= 1;
                    var b = 1.70158;
                    return a * a * ((b + 1) * a + b) + 1
                }, r.elastic = function(a) {
                    return a == !!a ? a : Math.pow(2, -10 * a) * Math.sin(2 * (a - .075) * Math.PI / .3) + 1
                }, r.bounce = function(a) {
                    var b, c = 7.5625,
                        d = 2.75;
                    return 1 / d > a ? b = c * a * a : 2 / d > a ? (a -= 1.5 / d, b = c * a * a + .75) : 2.5 / d > a ? (a -= 2.25 / d, b = c * a * a + .9375) : (a -= 2.625 / d, b = c * a * a + .984375), b
                }, a.mina = r, r
            }("undefined" == typeof b ? function() {} : b),
            d = function() {
                function d(a, b) {
                    if (a) {
                        if (a.tagName) return y(a);
                        if (f(a, "array") && d.set) return d.set.apply(d, a);
                        if (a instanceof u) return a;
                        if (null == b) return a = z.doc.querySelector(a), y(a)
                    }
                    return a = null == a ? "100%" : a, b = null == b ? "100%" : b, new x(a, b)
                }

                function e(a, b) {
                    if (b) {
                        if ("#text" == a && (a = z.doc.createTextNode(b.text || "")), "string" == typeof a && (a = e(a)), "string" == typeof b) return "xlink:" == b.substring(0, 6) ? a.getAttributeNS(W, b.substring(6)) : "xml:" == b.substring(0, 4) ? a.getAttributeNS(X, b.substring(4)) : a.getAttribute(b);
                        for (var c in b)
                            if (b[A](c)) {
                                var d = B(b[c]);
                                d ? "xlink:" == c.substring(0, 6) ? a.setAttributeNS(W, c.substring(6), d) : "xml:" == c.substring(0, 4) ? a.setAttributeNS(X, c.substring(4), d) : a.setAttribute(c, d) : a.removeAttribute(c)
                            }
                    } else a = z.doc.createElementNS(X, a);
                    return a
                }

                function f(a, b) {
                    return b = B.prototype.toLowerCase.call(b), "finite" == b ? isFinite(a) : "array" == b && (a instanceof Array || Array.isArray && Array.isArray(a)) ? !0 : "null" == b && null === a || b == typeof a && null !== a || "object" == b && a === Object(a) || L.call(a).slice(8, -1).toLowerCase() == b
                }

                function h(a) {
                    if ("function" == typeof a || Object(a) !== a) return a;
                    var b = new a.constructor;
                    for (var c in a) a[A](c) && (b[c] = h(a[c]));
                    return b
                }

                function i(a, b) {
                    for (var c = 0, d = a.length; d > c; c++)
                        if (a[c] === b) return a.push(a.splice(c, 1)[0])
                }

                function j(a, b, c) {
                    function d() {
                        var e = Array.prototype.slice.call(arguments, 0),
                            f = e.join("␀"),
                            g = d.cache = d.cache || {},
                            h = d.count = d.count || [];
                        return g[A](f) ? (i(h, f), c ? c(g[f]) : g[f]) : (h.length >= 1e3 && delete g[h.shift()], h.push(f), g[f] = a.apply(b, e), c ? c(g[f]) : g[f])
                    }
                    return d
                }

                function k(a, b, c, d, e, f) {
                    if (null == e) {
                        var g = a - c,
                            h = b - d;
                        return g || h ? (180 + 180 * E.atan2(-h, -g) / I + 360) % 360 : 0
                    }
                    return k(a, b, e, f) - k(c, d, e, f)
                }

                function l(a) {
                    return a % 360 * I / 180
                }

                function m(a) {
                    return 180 * a / I % 360
                }

                function n(a) {
                    var b = [];
                    return a = a.replace(/(?:^|\s)(\w+)\(([^)]+)\)/g, function(a, c, d) {
                        return d = d.split(/\s*,\s*|\s+/), "rotate" == c && 1 == d.length && d.push(0, 0), "scale" == c && (d.length > 2 ? d = d.slice(0, 2) : 2 == d.length && d.push(0, 0), 1 == d.length && d.push(d[0], 0, 0)), b.push("skewX" == c ? ["m", 1, 0, E.tan(l(d[0])), 1, 0, 0] : "skewY" == c ? ["m", 1, E.tan(l(d[0])), 0, 1, 0, 0] : [c.charAt(0)].concat(d)), a
                    }), b
                }

                function o(a, b) {
                    var c = eb(a),
                        e = new d.Matrix;
                    if (c)
                        for (var f = 0, g = c.length; g > f; f++) {
                            var h, i, j, k, l, m = c[f],
                                n = m.length,
                                o = B(m[0]).toLowerCase(),
                                p = m[0] != o,
                                q = p ? e.invert() : 0;
                            "t" == o && 2 == n ? e.translate(m[1], 0) : "t" == o && 3 == n ? p ? (h = q.x(0, 0), i = q.y(0, 0), j = q.x(m[1], m[2]), k = q.y(m[1], m[2]), e.translate(j - h, k - i)) : e.translate(m[1], m[2]) : "r" == o ? 2 == n ? (l = l || b, e.rotate(m[1], l.x + l.width / 2, l.y + l.height / 2)) : 4 == n && (p ? (j = q.x(m[2], m[3]), k = q.y(m[2], m[3]), e.rotate(m[1], j, k)) : e.rotate(m[1], m[2], m[3])) : "s" == o ? 2 == n || 3 == n ? (l = l || b, e.scale(m[1], m[n - 1], l.x + l.width / 2, l.y + l.height / 2)) : 4 == n ? p ? (j = q.x(m[2], m[3]), k = q.y(m[2], m[3]), e.scale(m[1], m[1], j, k)) : e.scale(m[1], m[1], m[2], m[3]) : 5 == n && (p ? (j = q.x(m[3], m[4]), k = q.y(m[3], m[4]), e.scale(m[1], m[2], j, k)) : e.scale(m[1], m[2], m[3], m[4])) : "m" == o && 7 == n && e.add(m[1], m[2], m[3], m[4], m[5], m[6])
                        }
                    return e
                }

                function p(a, b) {
                    if (null == b) {
                        var c = !0;
                        if (b = a.node.getAttribute("linearGradient" == a.type || "radialGradient" == a.type ? "gradientTransform" : "pattern" == a.type ? "patternTransform" : "transform"), !b) return new d.Matrix;
                        b = n(b)
                    } else b = d._.rgTransform.test(b) ? B(b).replace(/\.{3}|\u2026/g, a._.transform || J) : n(b), f(b, "array") && (b = d.path ? d.path.toString.call(b) : B(b)), a._.transform = b;
                    var e = o(b, a.getBBox(1));
                    return c ? e : void(a.matrix = e)
                }

                function q(a) {
                    var b = a.node.ownerSVGElement && y(a.node.ownerSVGElement) || a.node.parentNode && y(a.node.parentNode) || d.select("svg") || d(0, 0),
                        c = b.select("defs"),
                        e = null == c ? !1 : c.node;
                    return e || (e = w("defs", b.node).node), e
                }

                function r(a) {
                    return a.node.ownerSVGElement && y(a.node.ownerSVGElement) || d.select("svg")
                }

                function s(a, b, c) {
                    function d(a) {
                        if (null == a) return J;
                        if (a == +a) return a;
                        e(j, {
                            width: a
                        });
                        try {
                            return j.getBBox().width
                        } catch (b) {
                            return 0
                        }
                    }

                    function f(a) {
                        if (null == a) return J;
                        if (a == +a) return a;
                        e(j, {
                            height: a
                        });
                        try {
                            return j.getBBox().height
                        } catch (b) {
                            return 0
                        }
                    }

                    function g(d, e) {
                        null == b ? i[d] = e(a.attr(d) || 0) : d == b && (i = e(null == c ? a.attr(d) || 0 : c))
                    }
                    var h = r(a).node,
                        i = {},
                        j = h.querySelector(".svg---mgr");
                    switch (j || (j = e("rect"), e(j, {
                        x: -9e9,
                        y: -9e9,
                        width: 10,
                        height: 10,
                        "class": "svg---mgr",
                        fill: "none"
                    }), h.appendChild(j)), a.type) {
                        case "rect":
                            g("rx", d), g("ry", f);
                        case "image":
                            g("width", d), g("height", f);
                        case "text":
                            g("x", d), g("y", f);
                            break;
                        case "circle":
                            g("cx", d), g("cy", f), g("r", d);
                            break;
                        case "ellipse":
                            g("cx", d), g("cy", f), g("rx", d), g("ry", f);
                            break;
                        case "line":
                            g("x1", d), g("x2", d), g("y1", f), g("y2", f);
                            break;
                        case "marker":
                            g("refX", d), g("markerWidth", d), g("refY", f), g("markerHeight", f);
                            break;
                        case "radialGradient":
                            g("fx", d), g("fy", f);
                            break;
                        case "tspan":
                            g("dx", d), g("dy", f);
                            break;
                        default:
                            g(b, d)
                    }
                    return h.removeChild(j), i
                }

                function t(a) {
                    f(a, "array") || (a = Array.prototype.slice.call(arguments, 0));
                    for (var b = 0, c = 0, d = this.node; this[b];) delete this[b++];
                    for (b = 0; b < a.length; b++) "set" == a[b].type ? a[b].forEach(function(a) {
                        d.appendChild(a.node)
                    }) : d.appendChild(a[b].node);
                    var e = d.childNodes;
                    for (b = 0; b < e.length; b++) this[c++] = y(e[b]);
                    return this
                }

                function u(a) {
                    if (a.snap in Y) return Y[a.snap];
                    var b, c = this.id = V();
                    try {
                        b = a.ownerSVGElement
                    } catch (d) {}
                    if (this.node = a, b && (this.paper = new x(b)), this.type = a.tagName, this.anims = {}, this._ = {
                            transform: []
                        }, a.snap = c, Y[c] = this, "g" == this.type && (this.add = t), this.type in {
                            g: 1,
                            mask: 1,
                            pattern: 1
                        })
                        for (var e in x.prototype) x.prototype[A](e) && (this[e] = x.prototype[e])
                }

                function v(a) {
                    this.node = a
                }

                function w(a, b) {
                    var c = e(a);
                    b.appendChild(c);
                    var d = y(c);
                    return d
                }

                function x(a, b) {
                    var c, d, f, g = x.prototype;
                    if (a && "svg" == a.tagName) {
                        if (a.snap in Y) return Y[a.snap];
                        var h = a.ownerDocument;
                        c = new u(a), d = a.getElementsByTagName("desc")[0], f = a.getElementsByTagName("defs")[0], d || (d = e("desc"), d.appendChild(h.createTextNode("Created with Snap")), c.node.appendChild(d)), f || (f = e("defs"), c.node.appendChild(f)), c.defs = f;
                        for (var i in g) g[A](i) && (c[i] = g[i]);
                        c.paper = c.root = c
                    } else c = w("svg", z.doc.body), e(c.node, {
                        height: b,
                        version: 1.1,
                        width: a,
                        xmlns: X
                    });
                    return c
                }

                function y(a) {
                    return a ? a instanceof u || a instanceof v ? a : a.tagName && "svg" == a.tagName.toLowerCase() ? new x(a) : a.tagName && "object" == a.tagName.toLowerCase() && "image/svg+xml" == a.type ? new x(a.contentDocument.getElementsByTagName("svg")[0]) : new u(a) : a
                }
                d.version = "0.3.0", d.toString = function() {
                    return "Snap v" + this.version
                }, d._ = {};
                var z = {
                    win: a,
                    doc: a.document
                };
                d._.glob = z;
                var A = "hasOwnProperty",
                    B = String,
                    C = parseFloat,
                    D = parseInt,
                    E = Math,
                    F = E.max,
                    G = E.min,
                    H = E.abs,
                    I = (E.pow, E.PI),
                    J = (E.round, ""),
                    K = " ",
                    L = Object.prototype.toString,
                    M = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\))\s*$/i,
                    N = "	\n\f\r   ᠎             　\u2028\u2029",
                    O = (d._.separator = new RegExp("[," + N + "]+"), new RegExp("[" + N + "]", "g"), new RegExp("[" + N + "]*,[" + N + "]*")),
                    P = {
                        hs: 1,
                        rg: 1
                    },
                    Q = new RegExp("([a-z])[" + N + ",]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[" + N + "]*,?[" + N + "]*)+)", "ig"),
                    R = new RegExp("([rstm])[" + N + ",]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[" + N + "]*,?[" + N + "]*)+)", "ig"),
                    S = new RegExp("(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[" + N + "]*,?[" + N + "]*", "ig"),
                    T = 0,
                    U = "S" + (+new Date).toString(36),
                    V = function() {
                        return U + (T++).toString(36)
                    },
                    W = "http://www.w3.org/1999/xlink",
                    X = "http://www.w3.org/2000/svg",
                    Y = {},
                    Z = d.url = function(a) {
                        return "url('#" + a + "')"
                    };
                d._.$ = e, d._.id = V, d.format = function() {
                    var a = /\{([^\}]+)\}/g,
                        b = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,
                        c = function(a, c, d) {
                            var e = d;
                            return c.replace(b, function(a, b, c, d, f) {
                                b = b || d, e && (b in e && (e = e[b]), "function" == typeof e && f && (e = e()))
                            }), e = (null == e || e == d ? a : e) + ""
                        };
                    return function(b, d) {
                        return B(b).replace(a, function(a, b) {
                            return c(a, b, d)
                        })
                    }
                }(), d._.clone = h, d._.cacher = j, d.rad = l, d.deg = m, d.angle = k, d.is = f, d.snapTo = function(a, b, c) {
                    if (c = f(c, "finite") ? c : 10, f(a, "array")) {
                        for (var d = a.length; d--;)
                            if (H(a[d] - b) <= c) return a[d]
                    } else {
                        a = +a;
                        var e = b % a;
                        if (c > e) return b - e;
                        if (e > a - c) return b - e + a
                    }
                    return b
                }, d.getRGB = j(function(a) {
                    if (!a || (a = B(a)).indexOf("-") + 1) return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        error: 1,
                        toString: bb
                    };
                    if ("none" == a) return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        toString: bb
                    };
                    if (!(P[A](a.toLowerCase().substring(0, 2)) || "#" == a.charAt()) && (a = $(a)), !a) return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        error: 1,
                        toString: bb
                    };
                    var b, c, e, g, h, i, j = a.match(M);
                    return j ? (j[2] && (e = D(j[2].substring(5), 16), c = D(j[2].substring(3, 5), 16), b = D(j[2].substring(1, 3), 16)), j[3] && (e = D((h = j[3].charAt(3)) + h, 16), c = D((h = j[3].charAt(2)) + h, 16), b = D((h = j[3].charAt(1)) + h, 16)), j[4] && (i = j[4].split(O), b = C(i[0]), "%" == i[0].slice(-1) && (b *= 2.55), c = C(i[1]), "%" == i[1].slice(-1) && (c *= 2.55), e = C(i[2]), "%" == i[2].slice(-1) && (e *= 2.55), "rgba" == j[1].toLowerCase().slice(0, 4) && (g = C(i[3])), i[3] && "%" == i[3].slice(-1) && (g /= 100)), j[5] ? (i = j[5].split(O), b = C(i[0]), "%" == i[0].slice(-1) && (b /= 100), c = C(i[1]), "%" == i[1].slice(-1) && (c /= 100), e = C(i[2]), "%" == i[2].slice(-1) && (e /= 100), ("deg" == i[0].slice(-3) || "°" == i[0].slice(-1)) && (b /= 360), "hsba" == j[1].toLowerCase().slice(0, 4) && (g = C(i[3])), i[3] && "%" == i[3].slice(-1) && (g /= 100), d.hsb2rgb(b, c, e, g)) : j[6] ? (i = j[6].split(O), b = C(i[0]), "%" == i[0].slice(-1) && (b /= 100), c = C(i[1]), "%" == i[1].slice(-1) && (c /= 100), e = C(i[2]), "%" == i[2].slice(-1) && (e /= 100), ("deg" == i[0].slice(-3) || "°" == i[0].slice(-1)) && (b /= 360), "hsla" == j[1].toLowerCase().slice(0, 4) && (g = C(i[3])), i[3] && "%" == i[3].slice(-1) && (g /= 100), d.hsl2rgb(b, c, e, g)) : (b = G(E.round(b), 255), c = G(E.round(c), 255), e = G(E.round(e), 255), g = G(F(g, 0), 1), j = {
                        r: b,
                        g: c,
                        b: e,
                        toString: bb
                    }, j.hex = "#" + (16777216 | e | c << 8 | b << 16).toString(16).slice(1), j.opacity = f(g, "finite") ? g : 1, j)) : {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        error: 1,
                        toString: bb
                    }
                }, d), d.hsb = j(function(a, b, c) {
                    return d.hsb2rgb(a, b, c).hex
                }), d.hsl = j(function(a, b, c) {
                    return d.hsl2rgb(a, b, c).hex
                }), d.rgb = j(function(a, b, c, d) {
                    if (f(d, "finite")) {
                        var e = E.round;
                        return "rgba(" + [e(a), e(b), e(c), +d.toFixed(2)] + ")"
                    }
                    return "#" + (16777216 | c | b << 8 | a << 16).toString(16).slice(1)
                });
                var $ = function(a) {
                        var b = z.doc.getElementsByTagName("head")[0] || z.doc.getElementsByTagName("svg")[0],
                            c = "rgb(255, 0, 0)";
                        return ($ = j(function(a) {
                            if ("red" == a.toLowerCase()) return c;
                            b.style.color = c, b.style.color = a;
                            var d = z.doc.defaultView.getComputedStyle(b, J).getPropertyValue("color");
                            return d == c ? null : d
                        }))(a)
                    },
                    _ = function() {
                        return "hsb(" + [this.h, this.s, this.b] + ")"
                    },
                    ab = function() {
                        return "hsl(" + [this.h, this.s, this.l] + ")"
                    },
                    bb = function() {
                        return 1 == this.opacity || null == this.opacity ? this.hex : "rgba(" + [this.r, this.g, this.b, this.opacity] + ")"
                    },
                    cb = function(a, b, c) {
                        if (null == b && f(a, "object") && "r" in a && "g" in a && "b" in a && (c = a.b, b = a.g, a = a.r), null == b && f(a, string)) {
                            var e = d.getRGB(a);
                            a = e.r, b = e.g, c = e.b
                        }
                        return (a > 1 || b > 1 || c > 1) && (a /= 255, b /= 255, c /= 255), [a, b, c]
                    },
                    db = function(a, b, c, e) {
                        a = E.round(255 * a), b = E.round(255 * b), c = E.round(255 * c);
                        var g = {
                            r: a,
                            g: b,
                            b: c,
                            opacity: f(e, "finite") ? e : 1,
                            hex: d.rgb(a, b, c),
                            toString: bb
                        };
                        return f(e, "finite") && (g.opacity = e), g
                    };
                d.color = function(a) {
                    var b;
                    return f(a, "object") && "h" in a && "s" in a && "b" in a ? (b = d.hsb2rgb(a), a.r = b.r, a.g = b.g, a.b = b.b, a.opacity = 1, a.hex = b.hex) : f(a, "object") && "h" in a && "s" in a && "l" in a ? (b = d.hsl2rgb(a), a.r = b.r, a.g = b.g, a.b = b.b, a.opacity = 1, a.hex = b.hex) : (f(a, "string") && (a = d.getRGB(a)), f(a, "object") && "r" in a && "g" in a && "b" in a && !("error" in a) ? (b = d.rgb2hsl(a), a.h = b.h, a.s = b.s, a.l = b.l, b = d.rgb2hsb(a), a.v = b.b) : (a = {
                        hex: "none"
                    }, a.r = a.g = a.b = a.h = a.s = a.v = a.l = -1, a.error = 1)), a.toString = bb, a
                }, d.hsb2rgb = function(a, b, c, d) {
                    f(a, "object") && "h" in a && "s" in a && "b" in a && (c = a.b, b = a.s, a = a.h, d = a.o), a *= 360;
                    var e, g, h, i, j;
                    return a = a % 360 / 60, j = c * b, i = j * (1 - H(a % 2 - 1)), e = g = h = c - j, a = ~~a, e += [j, i, 0, 0, i, j][a], g += [i, j, j, i, 0, 0][a], h += [0, 0, i, j, j, i][a], db(e, g, h, d)
                }, d.hsl2rgb = function(a, b, c, d) {
                    f(a, "object") && "h" in a && "s" in a && "l" in a && (c = a.l, b = a.s, a = a.h), (a > 1 || b > 1 || c > 1) && (a /= 360, b /= 100, c /= 100), a *= 360;
                    var e, g, h, i, j;
                    return a = a % 360 / 60, j = 2 * b * (.5 > c ? c : 1 - c), i = j * (1 - H(a % 2 - 1)), e = g = h = c - j / 2, a = ~~a, e += [j, i, 0, 0, i, j][a], g += [i, j, j, i, 0, 0][a], h += [0, 0, i, j, j, i][a], db(e, g, h, d)
                }, d.rgb2hsb = function(a, b, c) {
                    c = cb(a, b, c), a = c[0], b = c[1], c = c[2];
                    var d, e, f, g;
                    return f = F(a, b, c), g = f - G(a, b, c), d = 0 == g ? null : f == a ? (b - c) / g : f == b ? (c - a) / g + 2 : (a - b) / g + 4, d = (d + 360) % 6 * 60 / 360, e = 0 == g ? 0 : g / f, {
                        h: d,
                        s: e,
                        b: f,
                        toString: _
                    }
                }, d.rgb2hsl = function(a, b, c) {
                    c = cb(a, b, c), a = c[0], b = c[1], c = c[2];
                    var d, e, f, g, h, i;
                    return g = F(a, b, c), h = G(a, b, c), i = g - h, d = 0 == i ? null : g == a ? (b - c) / i : g == b ? (c - a) / i + 2 : (a - b) / i + 4, d = (d + 360) % 6 * 60 / 360, f = (g + h) / 2, e = 0 == i ? 0 : .5 > f ? i / (2 * f) : i / (2 - 2 * f), {
                        h: d,
                        s: e,
                        l: f,
                        toString: ab
                    }
                }, d.parsePathString = function(a) {
                    if (!a) return null;
                    var b = d.path(a);
                    if (b.arr) return d.path.clone(b.arr);
                    var c = {
                            a: 7,
                            c: 6,
                            o: 2,
                            h: 1,
                            l: 2,
                            m: 2,
                            r: 4,
                            q: 4,
                            s: 4,
                            t: 2,
                            v: 1,
                            u: 3,
                            z: 0
                        },
                        e = [];
                    return f(a, "array") && f(a[0], "array") && (e = d.path.clone(a)), e.length || B(a).replace(Q, function(a, b, d) {
                        var f = [],
                            g = b.toLowerCase();
                        if (d.replace(S, function(a, b) {
                                b && f.push(+b)
                            }), "m" == g && f.length > 2 && (e.push([b].concat(f.splice(0, 2))), g = "l", b = "m" == b ? "l" : "L"), "o" == g && 1 == f.length && e.push([b, f[0]]), "r" == g) e.push([b].concat(f));
                        else
                            for (; f.length >= c[g] && (e.push([b].concat(f.splice(0, c[g]))), c[g]););
                    }), e.toString = d.path.toString, b.arr = d.path.clone(e), e
                };
                var eb = d.parseTransformString = function(a) {
                    if (!a) return null;
                    var b = [];
                    return f(a, "array") && f(a[0], "array") && (b = d.path.clone(a)), b.length || B(a).replace(R, function(a, c, d) {
                        var e = [];
                        c.toLowerCase(), d.replace(S, function(a, b) {
                            b && e.push(+b)
                        }), b.push([c].concat(e))
                    }), b.toString = d.path.toString, b
                };
                d._.svgTransform2string = n, d._.rgTransform = new RegExp("^[a-z][" + N + "]*-?\\.?\\d", "i"), d._.transform2matrix = o, d._unit2px = s, z.doc.contains || z.doc.compareDocumentPosition ? function(a, b) {
                        var c = 9 == a.nodeType ? a.documentElement : a,
                            d = b && b.parentNode;
                        return a == d || !(!d || 1 != d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)))
                    } : function(a, b) {
                        if (b)
                            for (; b;)
                                if (b = b.parentNode, b == a) return !0;
                        return !1
                    }, d._.getSomeDefs = q, d._.getSomeSVG = r, d.select = function(a) {
                        return y(z.doc.querySelector(a))
                    }, d.selectAll = function(a) {
                        for (var b = z.doc.querySelectorAll(a), c = (d.set || Array)(), e = 0; e < b.length; e++) c.push(y(b[e]));
                        return c
                    }, setInterval(function() {
                        for (var a in Y)
                            if (Y[A](a)) {
                                var b = Y[a],
                                    c = b.node;
                                ("svg" != b.type && !c.ownerSVGElement || "svg" == b.type && (!c.parentNode || "ownerSVGElement" in c.parentNode && !c.ownerSVGElement)) && delete Y[a]
                            }
                    }, 1e4),
                    function(a) {
                        function g(a) {
                            function b(a, b) {
                                var c = e(a.node, b);
                                c = c && c.match(g), c = c && c[2], c && "#" == c.charAt() && (c = c.substring(1), c && (i[c] = (i[c] || []).concat(function(c) {
                                    var d = {};
                                    d[b] = Z(c), e(a.node, d)
                                })))
                            }

                            function c(a) {
                                var b = e(a.node, "xlink:href");
                                b && "#" == b.charAt() && (b = b.substring(1), b && (i[b] = (i[b] || []).concat(function(b) {
                                    a.attr("xlink:href", "#" + b)
                                })))
                            }
                            for (var d, f = a.selectAll("*"), g = /^\s*url\(("|'|)(.*)\1\)\s*$/, h = [], i = {}, j = 0, k = f.length; k > j; j++) {
                                d = f[j], b(d, "fill"), b(d, "stroke"), b(d, "filter"), b(d, "mask"), b(d, "clip-path"), c(d);
                                var l = e(d.node, "id");
                                l && (e(d.node, {
                                    id: d.id
                                }), h.push({
                                    old: l,
                                    id: d.id
                                }))
                            }
                            for (j = 0, k = h.length; k > j; j++) {
                                var m = i[h[j].old];
                                if (m)
                                    for (var n = 0, o = m.length; o > n; n++) m[n](h[j].id)
                            }
                        }

                        function h(a, b, c) {
                            return function(d) {
                                var e = d.slice(a, b);
                                return 1 == e.length && (e = e[0]), c ? c(e) : e
                            }
                        }

                        function i(a) {
                            return function() {
                                var b = a ? "<" + this.type : "",
                                    c = this.node.attributes,
                                    d = this.node.childNodes;
                                if (a)
                                    for (var e = 0, f = c.length; f > e; e++) b += " " + c[e].name + '="' + c[e].value.replace(/"/g, '\\"') + '"';
                                if (d.length) {
                                    for (a && (b += ">"), e = 0, f = d.length; f > e; e++) 3 == d[e].nodeType ? b += d[e].nodeValue : 1 == d[e].nodeType && (b += y(d[e]).toString());
                                    a && (b += "</" + this.type + ">")
                                } else a && (b += "/>");
                                return b
                            }
                        }
                        a.attr = function(a, c) {
                            var d = this;
                            if (d.node, !a) return d;
                            if (f(a, "string")) {
                                if (!(arguments.length > 1)) return b("snap.util.getattr." + a, d).firstDefined();
                                var e = {};
                                e[a] = c, a = e
                            }
                            for (var g in a) a[A](g) && b("snap.util.attr." + g, d, a[g]);
                            return d
                        }, a.getBBox = function(a) {
                            if (!d.Matrix || !d.path) return this.node.getBBox();
                            var b = this,
                                c = new d.Matrix;
                            if (b.removed) return d._.box();
                            for (;
                                "use" == b.type;)
                                if (a || (c = c.add(b.transform().localMatrix.translate(b.attr("x") || 0, b.attr("y") || 0))), b.original) b = b.original;
                                else {
                                    var e = b.attr("xlink:href");
                                    b = b.original = b.node.ownerDocument.getElementById(e.substring(e.indexOf("#") + 1))
                                }
                            var f = b._,
                                g = d.path.get[b.type] || d.path.get.deflt;
                            try {
                                return a ? (f.bboxwt = g ? d.path.getBBox(b.realPath = g(b)) : d._.box(b.node.getBBox()), d._.box(f.bboxwt)) : (b.realPath = g(b), b.matrix = b.transform().localMatrix, f.bbox = d.path.getBBox(d.path.map(b.realPath, c.add(b.matrix))), d._.box(f.bbox))
                            } catch (h) {
                                return d._.box()
                            }
                        };
                        var j = function() {
                            return this.string
                        };
                        a.transform = function(a) {
                            var b = this._;
                            if (null == a) {
                                for (var c, f = this, g = new d.Matrix(this.node.getCTM()), h = p(this), i = [h], k = new d.Matrix, l = h.toTransformString(), m = B(h) == B(this.matrix) ? B(b.transform) : l;
                                    "svg" != f.type && (f = f.parent());) i.push(p(f));
                                for (c = i.length; c--;) k.add(i[c]);
                                return {
                                    string: m,
                                    globalMatrix: g,
                                    totalMatrix: k,
                                    localMatrix: h,
                                    diffMatrix: g.clone().add(h.invert()),
                                    global: g.toTransformString(),
                                    total: k.toTransformString(),
                                    local: l,
                                    toString: j
                                }
                            }
                            return a instanceof d.Matrix ? this.matrix = a : p(this, a), this.node && ("linearGradient" == this.type || "radialGradient" == this.type ? e(this.node, {
                                gradientTransform: this.matrix
                            }) : "pattern" == this.type ? e(this.node, {
                                patternTransform: this.matrix
                            }) : e(this.node, {
                                transform: this.matrix
                            })), this
                        }, a.parent = function() {
                            return y(this.node.parentNode)
                        }, a.append = a.add = function(a) {
                            if (a) {
                                if ("set" == a.type) {
                                    var b = this;
                                    return a.forEach(function(a) {
                                        b.add(a)
                                    }), this
                                }
                                a = y(a), this.node.appendChild(a.node), a.paper = this.paper
                            }
                            return this
                        }, a.appendTo = function(a) {
                            return a && (a = y(a), a.append(this)), this
                        }, a.prepend = function(a) {
                            if (a) {
                                if ("set" == a.type) {
                                    var b, c = this;
                                    return a.forEach(function(a) {
                                        b ? b.after(a) : c.prepend(a), b = a
                                    }), this
                                }
                                a = y(a);
                                var d = a.parent();
                                this.node.insertBefore(a.node, this.node.firstChild), this.add && this.add(), a.paper = this.paper, this.parent() && this.parent().add(), d && d.add()
                            }
                            return this
                        }, a.prependTo = function(a) {
                            return a = y(a), a.prepend(this), this
                        }, a.before = function(a) {
                            if ("set" == a.type) {
                                var b = this;
                                return a.forEach(function(a) {
                                    var c = a.parent();
                                    b.node.parentNode.insertBefore(a.node, b.node), c && c.add()
                                }), this.parent().add(), this
                            }
                            a = y(a);
                            var c = a.parent();
                            return this.node.parentNode.insertBefore(a.node, this.node), this.parent() && this.parent().add(), c && c.add(), a.paper = this.paper, this
                        }, a.after = function(a) {
                            a = y(a);
                            var b = a.parent();
                            return this.node.nextSibling ? this.node.parentNode.insertBefore(a.node, this.node.nextSibling) : this.node.parentNode.appendChild(a.node), this.parent() && this.parent().add(), b && b.add(), a.paper = this.paper, this
                        }, a.insertBefore = function(a) {
                            a = y(a);
                            var b = this.parent();
                            return a.node.parentNode.insertBefore(this.node, a.node), this.paper = a.paper, b && b.add(), a.parent() && a.parent().add(), this
                        }, a.insertAfter = function(a) {
                            a = y(a);
                            var b = this.parent();
                            return a.node.parentNode.insertBefore(this.node, a.node.nextSibling), this.paper = a.paper, b && b.add(), a.parent() && a.parent().add(), this
                        }, a.remove = function() {
                            var a = this.parent();
                            return this.node.parentNode && this.node.parentNode.removeChild(this.node), delete this.paper, this.removed = !0, a && a.add(), this
                        }, a.select = function(a) {
                            return y(this.node.querySelector(a))
                        }, a.selectAll = function(a) {
                            for (var b = this.node.querySelectorAll(a), c = (d.set || Array)(), e = 0; e < b.length; e++) c.push(y(b[e]));
                            return c
                        }, a.asPX = function(a, b) {
                            return null == b && (b = this.attr(a)), +s(this, a, b)
                        }, a.use = function() {
                            var a, b = this.node.id;
                            return b || (b = this.id, e(this.node, {
                                id: b
                            })), a = "linearGradient" == this.type || "radialGradient" == this.type || "pattern" == this.type ? w(this.type, this.node.parentNode) : w("use", this.node.parentNode), e(a.node, {
                                "xlink:href": "#" + b
                            }), a.original = this, a
                        };
                        var k = /\S+/g;
                        a.addClass = function(a) {
                            var b, c, d, e, f = (a || "").match(k) || [],
                                g = this.node,
                                h = g.className.baseVal,
                                i = h.match(k) || [];
                            if (f.length) {
                                for (b = 0; d = f[b++];) c = i.indexOf(d), ~c || i.push(d);
                                e = i.join(" "), h != e && (g.className.baseVal = e)
                            }
                            return this
                        }, a.removeClass = function(a) {
                            var b, c, d, e, f = (a || "").match(k) || [],
                                g = this.node,
                                h = g.className.baseVal,
                                i = h.match(k) || [];
                            if (i.length) {
                                for (b = 0; d = f[b++];) c = i.indexOf(d), ~c && i.splice(c, 1);
                                e = i.join(" "), h != e && (g.className.baseVal = e)
                            }
                            return this
                        }, a.hasClass = function(a) {
                            var b = this.node,
                                c = b.className.baseVal,
                                d = c.match(k) || [];
                            return !!~d.indexOf(a)
                        }, a.toggleClass = function(a, b) {
                            if (null != b) return b ? this.addClass(a) : this.removeClass(a);
                            var c, d, e, f, g = (a || "").match(k) || [],
                                h = this.node,
                                i = h.className.baseVal,
                                j = i.match(k) || [];
                            for (c = 0; e = g[c++];) d = j.indexOf(e), ~d ? j.splice(d, 1) : j.push(e);
                            return f = j.join(" "), i != f && (h.className.baseVal = f), this
                        }, a.clone = function() {
                            var a = y(this.node.cloneNode(!0));
                            return e(a.node, "id") && e(a.node, {
                                id: a.id
                            }), g(a), a.insertAfter(this), a
                        }, a.toDefs = function() {
                            var a = q(this);
                            return a.appendChild(this.node), this
                        }, a.pattern = a.toPattern = function(a, b, c, d) {
                            var g = w("pattern", q(this));
                            return null == a && (a = this.getBBox()), f(a, "object") && "x" in a && (b = a.y, c = a.width, d = a.height, a = a.x), e(g.node, {
                                x: a,
                                y: b,
                                width: c,
                                height: d,
                                patternUnits: "userSpaceOnUse",
                                id: g.id,
                                viewBox: [a, b, c, d].join(" ")
                            }), g.node.appendChild(this.node), g
                        }, a.marker = function(a, b, c, d, g, h) {
                            var i = w("marker", q(this));
                            return null == a && (a = this.getBBox()), f(a, "object") && "x" in a && (b = a.y, c = a.width, d = a.height, g = a.refX || a.cx, h = a.refY || a.cy, a = a.x), e(i.node, {
                                viewBox: [a, b, c, d].join(K),
                                markerWidth: c,
                                markerHeight: d,
                                orient: "auto",
                                refX: g || 0,
                                refY: h || 0,
                                id: i.id
                            }), i.node.appendChild(this.node), i
                        };
                        var l = function(a, b, d, e) {
                            "function" != typeof d || d.length || (e = d, d = c.linear), this.attr = a, this.dur = b, d && (this.easing = d), e && (this.callback = e)
                        };
                        d._.Animation = l, d.animation = function(a, b, c, d) {
                            return new l(a, b, c, d)
                        }, a.inAnim = function() {
                            var a = this,
                                b = [];
                            for (var c in a.anims) a.anims[A](c) && ! function(a) {
                                b.push({
                                    anim: new l(a._attrs, a.dur, a.easing, a._callback),
                                    mina: a,
                                    curStatus: a.status(),
                                    status: function(b) {
                                        return a.status(b)
                                    },
                                    stop: function() {
                                        a.stop()
                                    }
                                })
                            }(a.anims[c]);
                            return b
                        }, d.animate = function(a, d, e, f, g, h) {
                            "function" != typeof g || g.length || (h = g, g = c.linear);
                            var i = c.time(),
                                j = c(a, d, i, i + f, c.time, e, g);
                            return h && b.once("mina.finish." + j.id, h), j
                        }, a.stop = function() {
                            for (var a = this.inAnim(), b = 0, c = a.length; c > b; b++) a[b].stop();
                            return this
                        }, a.animate = function(a, d, e, g) {
                            "function" != typeof e || e.length || (g = e, e = c.linear), a instanceof l && (g = a.callback, e = a.easing, d = e.dur, a = a.attr);
                            var i, j, k, m, n = [],
                                o = [],
                                p = {},
                                q = this;
                            for (var r in a)
                                if (a[A](r)) {
                                    q.equal ? (m = q.equal(r, B(a[r])), i = m.from, j = m.to, k = m.f) : (i = +q.attr(r), j = +a[r]);
                                    var s = f(i, "array") ? i.length : 1;
                                    p[r] = h(n.length, n.length + s, k), n = n.concat(i), o = o.concat(j)
                                }
                            var t = c.time(),
                                u = c(n, o, t, t + d, c.time, function(a) {
                                    var b = {};
                                    for (var c in p) p[A](c) && (b[c] = p[c](a));
                                    q.attr(b)
                                }, e);
                            return q.anims[u.id] = u, u._attrs = a, u._callback = g, b("snap.animcreated." + q.id, u), b.once("mina.finish." + u.id, function() {
                                delete q.anims[u.id], g && g.call(q)
                            }), b.once("mina.stop." + u.id, function() {
                                delete q.anims[u.id]
                            }), q
                        };
                        var m = {};
                        a.data = function(a, c) {
                            var e = m[this.id] = m[this.id] || {};
                            if (0 == arguments.length) return b("snap.data.get." + this.id, this, e, null), e;
                            if (1 == arguments.length) {
                                if (d.is(a, "object")) {
                                    for (var f in a) a[A](f) && this.data(f, a[f]);
                                    return this
                                }
                                return b("snap.data.get." + this.id, this, e[a], a), e[a]
                            }
                            return e[a] = c, b("snap.data.set." + this.id, this, c, a), this
                        }, a.removeData = function(a) {
                            return null == a ? m[this.id] = {} : m[this.id] && delete m[this.id][a], this
                        }, a.outerSVG = a.toString = i(1), a.innerSVG = i()
                    }(u.prototype), d.parse = function(a) {
                        var b = z.doc.createDocumentFragment(),
                            c = !0,
                            d = z.doc.createElement("div");
                        if (a = B(a), a.match(/^\s*<\s*svg(?:\s|>)/) || (a = "<svg>" + a + "</svg>", c = !1), d.innerHTML = a, a = d.getElementsByTagName("svg")[0])
                            if (c) b = a;
                            else
                                for (; a.firstChild;) b.appendChild(a.firstChild);
                        return d.innerHTML = J, new v(b)
                    }, v.prototype.select = u.prototype.select, v.prototype.selectAll = u.prototype.selectAll, d.fragment = function() {
                        for (var a = Array.prototype.slice.call(arguments, 0), b = z.doc.createDocumentFragment(), c = 0, e = a.length; e > c; c++) {
                            var f = a[c];
                            f.node && f.node.nodeType && b.appendChild(f.node), f.nodeType && b.appendChild(f), "string" == typeof f && b.appendChild(d.parse(f).node)
                        }
                        return new v(b)
                    }, d._.make = w, d._.wrap = y, x.prototype.el = function(a, b) {
                        var c = w(a, this.node);
                        return b && c.attr(b), c
                    }, b.on("snap.util.getattr", function() {
                        var a = b.nt();
                        a = a.substring(a.lastIndexOf(".") + 1);
                        var c = a.replace(/[A-Z]/g, function(a) {
                            return "-" + a.toLowerCase()
                        });
                        return fb[A](c) ? this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(c) : e(this.node, a)
                    });
                var fb = {
                    "alignment-baseline": 0,
                    "baseline-shift": 0,
                    clip: 0,
                    "clip-path": 0,
                    "clip-rule": 0,
                    color: 0,
                    "color-interpolation": 0,
                    "color-interpolation-filters": 0,
                    "color-profile": 0,
                    "color-rendering": 0,
                    cursor: 0,
                    direction: 0,
                    display: 0,
                    "dominant-baseline": 0,
                    "enable-background": 0,
                    fill: 0,
                    "fill-opacity": 0,
                    "fill-rule": 0,
                    filter: 0,
                    "flood-color": 0,
                    "flood-opacity": 0,
                    font: 0,
                    "font-family": 0,
                    "font-size": 0,
                    "font-size-adjust": 0,
                    "font-stretch": 0,
                    "font-style": 0,
                    "font-variant": 0,
                    "font-weight": 0,
                    "glyph-orientation-horizontal": 0,
                    "glyph-orientation-vertical": 0,
                    "image-rendering": 0,
                    kerning: 0,
                    "letter-spacing": 0,
                    "lighting-color": 0,
                    marker: 0,
                    "marker-end": 0,
                    "marker-mid": 0,
                    "marker-start": 0,
                    mask: 0,
                    opacity: 0,
                    overflow: 0,
                    "pointer-events": 0,
                    "shape-rendering": 0,
                    "stop-color": 0,
                    "stop-opacity": 0,
                    stroke: 0,
                    "stroke-dasharray": 0,
                    "stroke-dashoffset": 0,
                    "stroke-linecap": 0,
                    "stroke-linejoin": 0,
                    "stroke-miterlimit": 0,
                    "stroke-opacity": 0,
                    "stroke-width": 0,
                    "text-anchor": 0,
                    "text-decoration": 0,
                    "text-rendering": 0,
                    "unicode-bidi": 0,
                    visibility: 0,
                    "word-spacing": 0,
                    "writing-mode": 0
                };
                b.on("snap.util.attr", function(a) {
                        var c = b.nt(),
                            d = {};
                        c = c.substring(c.lastIndexOf(".") + 1), d[c] = a;
                        var f = c.replace(/-(\w)/gi, function(a, b) {
                                return b.toUpperCase()
                            }),
                            g = c.replace(/[A-Z]/g, function(a) {
                                return "-" + a.toLowerCase()
                            });
                        fb[A](g) ? this.node.style[f] = null == a ? J : a : e(this.node, d)
                    }),
                    function() {}(x.prototype), d.ajax = function(a, c, d, e) {
                        var g = new XMLHttpRequest,
                            h = V();
                        if (g) {
                            if (f(c, "function")) e = d, d = c, c = null;
                            else if (f(c, "object")) {
                                var i = [];
                                for (var j in c) c.hasOwnProperty(j) && i.push(encodeURIComponent(j) + "=" + encodeURIComponent(c[j]));
                                c = i.join("&")
                            }
                            return g.open(c ? "POST" : "GET", a, !0), c && (g.setRequestHeader("X-Requested-With", "XMLHttpRequest"), g.setRequestHeader("Content-type", "application/x-www-form-urlencoded")), d && (b.once("snap.ajax." + h + ".0", d), b.once("snap.ajax." + h + ".200", d), b.once("snap.ajax." + h + ".304", d)), g.onreadystatechange = function() {
                                4 == g.readyState && b("snap.ajax." + h + "." + g.status, e, g)
                            }, 4 == g.readyState ? g : (g.send(c), g)
                        }
                    }, d.load = function(a, b, c) {
                        d.ajax(a, function(a) {
                            var e = d.parse(a.responseText);
                            c ? b.call(c, e) : b(e)
                        })
                    };
                var gb = function(a) {
                    var b = a.getBoundingClientRect(),
                        c = a.ownerDocument,
                        d = c.body,
                        e = c.documentElement,
                        f = e.clientTop || d.clientTop || 0,
                        h = e.clientLeft || d.clientLeft || 0,
                        i = b.top + (g.win.pageYOffset || e.scrollTop || d.scrollTop) - f,
                        j = b.left + (g.win.pageXOffset || e.scrollLeft || d.scrollLeft) - h;
                    return {
                        y: i,
                        x: j
                    }
                };
                return d.getElementByPoint = function(a, b) {
                    var c = this,
                        d = (c.canvas, z.doc.elementFromPoint(a, b));
                    if (z.win.opera && "svg" == d.tagName) {
                        var e = gb(d),
                            f = d.createSVGRect();
                        f.x = a - e.x, f.y = b - e.y, f.width = f.height = 1;
                        var g = d.getIntersectionList(f, null);
                        g.length && (d = g[g.length - 1])
                    }
                    return d ? y(d) : null
                }, d.plugin = function(a) {
                    a(d, u, x, z, v)
                }, z.win.Snap = d, d
            }();
        return d.plugin(function(a) {
            function b(a, b, d, e, f, g) {
                return null == b && "[object SVGMatrix]" == c.call(a) ? (this.a = a.a, this.b = a.b, this.c = a.c, this.d = a.d, this.e = a.e, void(this.f = a.f)) : void(null != a ? (this.a = +a, this.b = +b, this.c = +d, this.d = +e, this.e = +f, this.f = +g) : (this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.e = 0, this.f = 0))
            }
            var c = Object.prototype.toString,
                d = String,
                e = Math,
                f = "";
            ! function(c) {
                function g(a) {
                    return a[0] * a[0] + a[1] * a[1]
                }

                function h(a) {
                    var b = e.sqrt(g(a));
                    a[0] && (a[0] /= b), a[1] && (a[1] /= b)
                }
                c.add = function(a, c, d, e, f, g) {
                    var h, i, j, k, l = [
                            [],
                            [],
                            []
                        ],
                        m = [
                            [this.a, this.c, this.e],
                            [this.b, this.d, this.f],
                            [0, 0, 1]
                        ],
                        n = [
                            [a, d, f],
                            [c, e, g],
                            [0, 0, 1]
                        ];
                    for (a && a instanceof b && (n = [
                            [a.a, a.c, a.e],
                            [a.b, a.d, a.f],
                            [0, 0, 1]
                        ]), h = 0; 3 > h; h++)
                        for (i = 0; 3 > i; i++) {
                            for (k = 0, j = 0; 3 > j; j++) k += m[h][j] * n[j][i];
                            l[h][i] = k
                        }
                    return this.a = l[0][0], this.b = l[1][0], this.c = l[0][1], this.d = l[1][1], this.e = l[0][2], this.f = l[1][2], this
                }, c.invert = function() {
                    var a = this,
                        c = a.a * a.d - a.b * a.c;
                    return new b(a.d / c, -a.b / c, -a.c / c, a.a / c, (a.c * a.f - a.d * a.e) / c, (a.b * a.e - a.a * a.f) / c)
                }, c.clone = function() {
                    return new b(this.a, this.b, this.c, this.d, this.e, this.f)
                }, c.translate = function(a, b) {
                    return this.add(1, 0, 0, 1, a, b)
                }, c.scale = function(a, b, c, d) {
                    return null == b && (b = a), (c || d) && this.add(1, 0, 0, 1, c, d), this.add(a, 0, 0, b, 0, 0), (c || d) && this.add(1, 0, 0, 1, -c, -d), this
                }, c.rotate = function(b, c, d) {
                    b = a.rad(b), c = c || 0, d = d || 0;
                    var f = +e.cos(b).toFixed(9),
                        g = +e.sin(b).toFixed(9);
                    return this.add(f, g, -g, f, c, d), this.add(1, 0, 0, 1, -c, -d)
                }, c.x = function(a, b) {
                    return a * this.a + b * this.c + this.e
                }, c.y = function(a, b) {
                    return a * this.b + b * this.d + this.f
                }, c.get = function(a) {
                    return +this[d.fromCharCode(97 + a)].toFixed(4)
                }, c.toString = function() {
                    return "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")"
                }, c.offset = function() {
                    return [this.e.toFixed(4), this.f.toFixed(4)]
                }, c.determinant = function() {
                    return this.a * this.d - this.b * this.c
                }, c.split = function() {
                    var b = {};
                    b.dx = this.e, b.dy = this.f;
                    var c = [
                        [this.a, this.c],
                        [this.b, this.d]
                    ];
                    b.scalex = e.sqrt(g(c[0])), h(c[0]), b.shear = c[0][0] * c[1][0] + c[0][1] * c[1][1], c[1] = [c[1][0] - c[0][0] * b.shear, c[1][1] - c[0][1] * b.shear], b.scaley = e.sqrt(g(c[1])), h(c[1]), b.shear /= b.scaley, this.determinant() < 0 && (b.scalex = -b.scalex);
                    var d = -c[0][1],
                        f = c[1][1];
                    return 0 > f ? (b.rotate = a.deg(e.acos(f)), 0 > d && (b.rotate = 360 - b.rotate)) : b.rotate = a.deg(e.asin(d)), b.isSimple = !(+b.shear.toFixed(9) || b.scalex.toFixed(9) != b.scaley.toFixed(9) && b.rotate), b.isSuperSimple = !+b.shear.toFixed(9) && b.scalex.toFixed(9) == b.scaley.toFixed(9) && !b.rotate, b.noRotation = !+b.shear.toFixed(9) && !b.rotate, b
                }, c.toTransformString = function(a) {
                    var b = a || this.split();
                    return +b.shear.toFixed(9) ? "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)] : (b.scalex = +b.scalex.toFixed(4), b.scaley = +b.scaley.toFixed(4), b.rotate = +b.rotate.toFixed(4), (b.dx || b.dy ? "t" + [+b.dx.toFixed(4), +b.dy.toFixed(4)] : f) + (1 != b.scalex || 1 != b.scaley ? "s" + [b.scalex, b.scaley, 0, 0] : f) + (b.rotate ? "r" + [+b.rotate.toFixed(4), 0, 0] : f))
                }
            }(b.prototype), a.Matrix = b, a.matrix = function(a, c, d, e, f, g) {
                return new b(a, c, d, e, f, g)
            }
        }), d.plugin(function(a, c, d, e, f) {
            function g(d) {
                return function(e) {
                    if (b.stop(), e instanceof f && 1 == e.node.childNodes.length && ("radialGradient" == e.node.firstChild.tagName || "linearGradient" == e.node.firstChild.tagName || "pattern" == e.node.firstChild.tagName) && (e = e.node.firstChild, n(this).appendChild(e), e = l(e)), e instanceof c)
                        if ("radialGradient" == e.type || "linearGradient" == e.type || "pattern" == e.type) {
                            e.node.id || p(e.node, {
                                id: e.id
                            });
                            var g = q(e.node.id)
                        } else g = e.attr(d);
                    else if (g = a.color(e), g.error) {
                        var h = a(n(this).ownerSVGElement).gradient(e);
                        h ? (h.node.id || p(h.node, {
                            id: h.id
                        }), g = q(h.node.id)) : g = e
                    } else g = r(g);
                    var i = {};
                    i[d] = g, p(this.node, i), this.node.style[d] = t
                }
            }

            function h(a) {
                b.stop(), a == +a && (a += "px"), this.node.style.fontSize = a
            }

            function i(a) {
                for (var b = [], c = a.childNodes, d = 0, e = c.length; e > d; d++) {
                    var f = c[d];
                    3 == f.nodeType && b.push(f.nodeValue), "tspan" == f.tagName && b.push(1 == f.childNodes.length && 3 == f.firstChild.nodeType ? f.firstChild.nodeValue : i(f))
                }
                return b
            }

            function j() {
                return b.stop(), this.node.style.fontSize
            }
            var k = a._.make,
                l = a._.wrap,
                m = a.is,
                n = a._.getSomeDefs,
                o = /^url\(#?([^)]+)\)$/,
                p = a._.$,
                q = a.url,
                r = String,
                s = a._.separator,
                t = "";
            b.on("snap.util.attr.mask", function(a) {
                    if (a instanceof c || a instanceof f) {
                        if (b.stop(), a instanceof f && 1 == a.node.childNodes.length && (a = a.node.firstChild, n(this).appendChild(a), a = l(a)), "mask" == a.type) var d = a;
                        else d = k("mask", n(this)), d.node.appendChild(a.node);
                        !d.node.id && p(d.node, {
                            id: d.id
                        }), p(this.node, {
                            mask: q(d.id)
                        })
                    }
                }),
                function(a) {
                    b.on("snap.util.attr.clip", a), b.on("snap.util.attr.clip-path", a), b.on("snap.util.attr.clipPath", a)
                }(function(a) {
                    if (a instanceof c || a instanceof f) {
                        if (b.stop(), "clipPath" == a.type) var d = a;
                        else d = k("clipPath", n(this)), d.node.appendChild(a.node), !d.node.id && p(d.node, {
                            id: d.id
                        });
                        p(this.node, {
                            "clip-path": q(d.id)
                        })
                    }
                }), b.on("snap.util.attr.fill", g("fill")), b.on("snap.util.attr.stroke", g("stroke"));
            var u = /^([lr])(?:\(([^)]*)\))?(.*)$/i;
            b.on("snap.util.grad.parse", function(a) {
                    a = r(a);
                    var b = a.match(u);
                    if (!b) return null;
                    var c = b[1],
                        d = b[2],
                        e = b[3];
                    return d = d.split(/\s*,\s*/).map(function(a) {
                        return +a == a ? +a : a
                    }), 1 == d.length && 0 == d[0] && (d = []), e = e.split("-"), e = e.map(function(a) {
                        a = a.split(":");
                        var b = {
                            color: a[0]
                        };
                        return a[1] && (b.offset = parseFloat(a[1])), b
                    }), {
                        type: c,
                        params: d,
                        stops: e
                    }
                }), b.on("snap.util.attr.d", function(c) {
                    b.stop(), m(c, "array") && m(c[0], "array") && (c = a.path.toString.call(c)), c = r(c), c.match(/[ruo]/i) && (c = a.path.toAbsolute(c)), p(this.node, {
                        d: c
                    })
                })(-1), b.on("snap.util.attr.#text", function(a) {
                    b.stop(), a = r(a);
                    for (var c = e.doc.createTextNode(a); this.node.firstChild;) this.node.removeChild(this.node.firstChild);
                    this.node.appendChild(c)
                })(-1), b.on("snap.util.attr.path", function(a) {
                    b.stop(), this.attr({
                        d: a
                    })
                })(-1), b.on("snap.util.attr.class", function(a) {
                    b.stop(), this.node.className.baseVal = a
                })(-1), b.on("snap.util.attr.viewBox", function(a) {
                    var c;
                    c = m(a, "object") && "x" in a ? [a.x, a.y, a.width, a.height].join(" ") : m(a, "array") ? a.join(" ") : a, p(this.node, {
                        viewBox: c
                    }), b.stop()
                })(-1), b.on("snap.util.attr.transform", function(a) {
                    this.transform(a), b.stop()
                })(-1), b.on("snap.util.attr.r", function(a) {
                    "rect" == this.type && (b.stop(), p(this.node, {
                        rx: a,
                        ry: a
                    }))
                })(-1), b.on("snap.util.attr.textpath", function(a) {
                    if (b.stop(), "text" == this.type) {
                        var d, e, f;
                        if (!a && this.textPath) {
                            for (e = this.textPath; e.node.firstChild;) this.node.appendChild(e.node.firstChild);
                            return e.remove(), void delete this.textPath
                        }
                        if (m(a, "string")) {
                            var g = n(this),
                                h = l(g.parentNode).path(a);
                            g.appendChild(h.node), d = h.id, h.attr({
                                id: d
                            })
                        } else a = l(a), a instanceof c && (d = a.attr("id"), d || (d = a.id, a.attr({
                            id: d
                        })));
                        if (d)
                            if (e = this.textPath, f = this.node, e) e.attr({
                                "xlink:href": "#" + d
                            });
                            else {
                                for (e = p("textPath", {
                                        "xlink:href": "#" + d
                                    }); f.firstChild;) e.appendChild(f.firstChild);
                                f.appendChild(e), this.textPath = l(e)
                            }
                    }
                })(-1), b.on("snap.util.attr.text", function(a) {
                    if ("text" == this.type) {
                        for (var c = this.node, d = function(a) {
                                var b = p("tspan");
                                if (m(a, "array"))
                                    for (var c = 0; c < a.length; c++) b.appendChild(d(a[c]));
                                else b.appendChild(e.doc.createTextNode(a));
                                return b.normalize && b.normalize(), b
                            }; c.firstChild;) c.removeChild(c.firstChild);
                        for (var f = d(a); f.firstChild;) c.appendChild(f.firstChild)
                    }
                    b.stop()
                })(-1), b.on("snap.util.attr.fontSize", h)(-1), b.on("snap.util.attr.font-size", h)(-1), b.on("snap.util.getattr.transform", function() {
                    return b.stop(), this.transform()
                })(-1), b.on("snap.util.getattr.textpath", function() {
                    return b.stop(), this.textPath
                })(-1),
                function() {
                    function c(c) {
                        return function() {
                            b.stop();
                            var d = e.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue("marker-" + c);
                            return "none" == d ? d : a(e.doc.getElementById(d.match(o)[1]))
                        }
                    }

                    function d(a) {
                        return function(c) {
                            b.stop();
                            var d = "marker" + a.charAt(0).toUpperCase() + a.substring(1);
                            if ("" == c || !c) return void(this.node.style[d] = "none");
                            if ("marker" == c.type) {
                                var e = c.node.id;
                                return e || p(c.node, {
                                    id: c.id
                                }), void(this.node.style[d] = q(e))
                            }
                        }
                    }
                    b.on("snap.util.getattr.marker-end", c("end"))(-1), b.on("snap.util.getattr.markerEnd", c("end"))(-1), b.on("snap.util.getattr.marker-start", c("start"))(-1), b.on("snap.util.getattr.markerStart", c("start"))(-1), b.on("snap.util.getattr.marker-mid", c("mid"))(-1), b.on("snap.util.getattr.markerMid", c("mid"))(-1), b.on("snap.util.attr.marker-end", d("end"))(-1), b.on("snap.util.attr.markerEnd", d("end"))(-1), b.on("snap.util.attr.marker-start", d("start"))(-1), b.on("snap.util.attr.markerStart", d("start"))(-1), b.on("snap.util.attr.marker-mid", d("mid"))(-1), b.on("snap.util.attr.markerMid", d("mid"))(-1)
                }(), b.on("snap.util.getattr.r", function() {
                    return "rect" == this.type && p(this.node, "rx") == p(this.node, "ry") ? (b.stop(), p(this.node, "rx")) : void 0
                })(-1), b.on("snap.util.getattr.text", function() {
                    if ("text" == this.type || "tspan" == this.type) {
                        b.stop();
                        var a = i(this.node);
                        return 1 == a.length ? a[0] : a
                    }
                })(-1), b.on("snap.util.getattr.#text", function() {
                    return this.node.textContent
                })(-1), b.on("snap.util.getattr.viewBox", function() {
                    b.stop();
                    var c = p(this.node, "viewBox");
                    return c ? (c = c.split(s), a._.box(+c[0], +c[1], +c[2], +c[3])) : void 0
                })(-1), b.on("snap.util.getattr.points", function() {
                    var a = p(this.node, "points");
                    return b.stop(), a ? a.split(s) : void 0
                })(-1), b.on("snap.util.getattr.path", function() {
                    var a = p(this.node, "d");
                    return b.stop(), a
                })(-1), b.on("snap.util.getattr.class", function() {
                    return this.node.className.baseVal
                })(-1), b.on("snap.util.getattr.fontSize", j)(-1), b.on("snap.util.getattr.font-size", j)(-1)
        }), d.plugin(function() {
            function a(a) {
                return a
            }

            function c(a) {
                return function(b) {
                    return +b.toFixed(3) + a
                }
            }
            var d = {
                    "+": function(a, b) {
                        return a + b
                    },
                    "-": function(a, b) {
                        return a - b
                    },
                    "/": function(a, b) {
                        return a / b
                    },
                    "*": function(a, b) {
                        return a * b
                    }
                },
                e = String,
                f = /[a-z]+$/i,
                g = /^\s*([+\-\/*])\s*=\s*([\d.eE+\-]+)\s*([^\d\s]+)?\s*$/;
            b.on("snap.util.attr", function(a) {
                var c = e(a).match(g);
                if (c) {
                    var h = b.nt(),
                        i = h.substring(h.lastIndexOf(".") + 1),
                        j = this.attr(i),
                        k = {};
                    b.stop();
                    var l = c[3] || "",
                        m = j.match(f),
                        n = d[c[1]];
                    if (m && m == l ? a = n(parseFloat(j), +c[2]) : (j = this.asPX(i), a = n(this.asPX(i), this.asPX(i, c[2] + l))), isNaN(j) || isNaN(a)) return;
                    k[i] = a, this.attr(k)
                }
            })(-10), b.on("snap.util.equal", function(h, i) {
                var j = e(this.attr(h) || ""),
                    k = e(i).match(g);
                if (k) {
                    b.stop();
                    var l = k[3] || "",
                        m = j.match(f),
                        n = d[k[1]];
                    return m && m == l ? {
                        from: parseFloat(j),
                        to: n(parseFloat(j), +k[2]),
                        f: c(m)
                    } : (j = this.asPX(h), {
                        from: j,
                        to: n(j, this.asPX(h, k[2] + l)),
                        f: a
                    })
                }
            })(-10)
        }), d.plugin(function(a, c, d, e) {
            var f = d.prototype,
                g = a.is;
            f.rect = function(a, b, c, d, e, f) {
                var h;
                return null == f && (f = e), g(a, "object") && "[object Object]" == a ? h = a : null != a && (h = {
                    x: a,
                    y: b,
                    width: c,
                    height: d
                }, null != e && (h.rx = e, h.ry = f)), this.el("rect", h)
            }, f.circle = function(a, b, c) {
                var d;
                return g(a, "object") && "[object Object]" == a ? d = a : null != a && (d = {
                    cx: a,
                    cy: b,
                    r: c
                }), this.el("circle", d)
            };
            var h = function() {
                function a() {
                    this.parentNode.removeChild(this)
                }
                return function(b, c) {
                    var d = e.doc.createElement("img"),
                        f = e.doc.body;
                    d.style.cssText = "position:absolute;left:-9999em;top:-9999em", d.onload = function() {
                        c.call(d), d.onload = d.onerror = null, f.removeChild(d)
                    }, d.onerror = a, f.appendChild(d), d.src = b
                }
            }();
            f.image = function(b, c, d, e, f) {
                    var i = this.el("image");
                    if (g(b, "object") && "src" in b) i.attr(b);
                    else if (null != b) {
                        var j = {
                            "xlink:href": b,
                            preserveAspectRatio: "none"
                        };
                        null != c && null != d && (j.x = c, j.y = d), null != e && null != f ? (j.width = e, j.height = f) : h(b, function() {
                            a._.$(i.node, {
                                width: this.offsetWidth,
                                height: this.offsetHeight
                            })
                        }), a._.$(i.node, j)
                    }
                    return i
                }, f.ellipse = function(a, b, c, d) {
                    var e;
                    return g(a, "object") && "[object Object]" == a ? e = a : null != a && (e = {
                        cx: a,
                        cy: b,
                        rx: c,
                        ry: d
                    }), this.el("ellipse", e)
                }, f.path = function(a) {
                    var b;
                    return g(a, "object") && !g(a, "array") ? b = a : a && (b = {
                        d: a
                    }), this.el("path", b)
                }, f.group = f.g = function(a) {
                    var b = this.el("g");
                    return 1 == arguments.length && a && !a.type ? b.attr(a) : arguments.length && b.add(Array.prototype.slice.call(arguments, 0)), b
                }, f.svg = function(a, b, c, d, e, f, h, i) {
                    var j = {};
                    return g(a, "object") && null == b ? j = a : (null != a && (j.x = a), null != b && (j.y = b), null != c && (j.width = c), null != d && (j.height = d), null != e && null != f && null != h && null != i && (j.viewBox = [e, f, h, i])), this.el("svg", j)
                }, f.mask = function(a) {
                    var b = this.el("mask");
                    return 1 == arguments.length && a && !a.type ? b.attr(a) : arguments.length && b.add(Array.prototype.slice.call(arguments, 0)), b
                }, f.ptrn = function(a, b, c, d, e, f, h, i) {
                    if (g(a, "object")) var j = a;
                    else arguments.length ? (j = {}, null != a && (j.x = a), null != b && (j.y = b), null != c && (j.width = c), null != d && (j.height = d), null != e && null != f && null != h && null != i && (j.viewBox = [e, f, h, i])) : j = {
                        patternUnits: "userSpaceOnUse"
                    };
                    return this.el("pattern", j)
                }, f.use = function(a) {
                    return null != a ? (make("use", this.node), a instanceof c && (a.attr("id") || a.attr({
                        id: ID()
                    }), a = a.attr("id")), this.el("use", {
                        "xlink:href": a
                    })) : c.prototype.use.call(this)
                }, f.text = function(a, b, c) {
                    var d = {};
                    return g(a, "object") ? d = a : null != a && (d = {
                        x: a,
                        y: b,
                        text: c || ""
                    }), this.el("text", d)
                }, f.line = function(a, b, c, d) {
                    var e = {};
                    return g(a, "object") ? e = a : null != a && (e = {
                        x1: a,
                        x2: c,
                        y1: b,
                        y2: d
                    }), this.el("line", e)
                }, f.polyline = function(a) {
                    arguments.length > 1 && (a = Array.prototype.slice.call(arguments, 0));
                    var b = {};
                    return g(a, "object") && !g(a, "array") ? b = a : null != a && (b = {
                        points: a
                    }), this.el("polyline", b)
                }, f.polygon = function(a) {
                    arguments.length > 1 && (a = Array.prototype.slice.call(arguments, 0));
                    var b = {};
                    return g(a, "object") && !g(a, "array") ? b = a : null != a && (b = {
                        points: a
                    }), this.el("polygon", b)
                },
                function() {
                    function c() {
                        return this.selectAll("stop")
                    }

                    function d(b, c) {
                        var d = j("stop"),
                            e = {
                                offset: +c + "%"
                            };
                        return b = a.color(b), e["stop-color"] = b.hex, b.opacity < 1 && (e["stop-opacity"] = b.opacity), j(d, e), this.node.appendChild(d), this
                    }

                    function e() {
                        if ("linearGradient" == this.type) {
                            var b = j(this.node, "x1") || 0,
                                c = j(this.node, "x2") || 1,
                                d = j(this.node, "y1") || 0,
                                e = j(this.node, "y2") || 0;
                            return a._.box(b, d, math.abs(c - b), math.abs(e - d))
                        }
                        var f = this.node.cx || .5,
                            g = this.node.cy || .5,
                            h = this.node.r || 0;
                        return a._.box(f - h, g - h, 2 * h, 2 * h)
                    }

                    function g(a, c) {
                        function d(a, b) {
                            for (var c = (b - l) / (a - m), d = m; a > d; d++) g[d].offset = +(+l + c * (d - m)).toFixed(2);
                            m = a, l = b
                        }
                        var e, f = b("snap.util.grad.parse", null, c).firstDefined();
                        if (!f) return null;
                        f.params.unshift(a), e = "l" == f.type.toLowerCase() ? h.apply(0, f.params) : i.apply(0, f.params), f.type != f.type.toLowerCase() && j(e.node, {
                            gradientUnits: "userSpaceOnUse"
                        });
                        var g = f.stops,
                            k = g.length,
                            l = 0,
                            m = 0;
                        k--;
                        for (var n = 0; k > n; n++) "offset" in g[n] && d(n, g[n].offset);
                        for (g[k].offset = g[k].offset || 100, d(k, g[k].offset), n = 0; k >= n; n++) {
                            var o = g[n];
                            e.addStop(o.color, o.offset)
                        }
                        return e
                    }

                    function h(b, f, g, h, i) {
                        var k = a._.make("linearGradient", b);
                        return k.stops = c, k.addStop = d, k.getBBox = e, null != f && j(k.node, {
                            x1: f,
                            y1: g,
                            x2: h,
                            y2: i
                        }), k
                    }

                    function i(b, f, g, h, i, k) {
                        var l = a._.make("radialGradient", b);
                        return l.stops = c, l.addStop = d, l.getBBox = e, null != f && j(l.node, {
                            cx: f,
                            cy: g,
                            r: h
                        }), null != i && null != k && j(l.node, {
                            fx: i,
                            fy: k
                        }), l
                    }
                    var j = a._.$;
                    f.gradient = function(a) {
                        return g(this.defs, a)
                    }, f.gradientLinear = function(a, b, c, d) {
                        return h(this.defs, a, b, c, d)
                    }, f.gradientRadial = function(a, b, c, d, e) {
                        return i(this.defs, a, b, c, d, e)
                    }, f.toString = function() {
                        var b, c = this.node.ownerDocument,
                            d = c.createDocumentFragment(),
                            e = c.createElement("div"),
                            f = this.node.cloneNode(!0);
                        return d.appendChild(e), e.appendChild(f), a._.$(f, {
                            xmlns: "http://www.w3.org/2000/svg"
                        }), b = e.innerHTML, d.removeChild(d.firstChild), b
                    }, f.clear = function() {
                        for (var a, b = this.node.firstChild; b;) a = b.nextSibling, "defs" != b.tagName ? b.parentNode.removeChild(b) : f.clear.call({
                            node: b
                        }), b = a
                    }
                }()
        }), d.plugin(function(a, b) {
            function c(a) {
                var b = c.ps = c.ps || {};
                return b[a] ? b[a].sleep = 100 : b[a] = {
                    sleep: 100
                }, setTimeout(function() {
                    for (var c in b) b[K](c) && c != a && (b[c].sleep--, !b[c].sleep && delete b[c])
                }), b[a]
            }

            function d(a, b, c, d) {
                return null == a && (a = b = c = d = 0), null == b && (b = a.y, c = a.width, d = a.height, a = a.x), {
                    x: a,
                    y: b,
                    width: c,
                    w: c,
                    height: d,
                    h: d,
                    x2: a + c,
                    y2: b + d,
                    cx: a + c / 2,
                    cy: b + d / 2,
                    r1: N.min(c, d) / 2,
                    r2: N.max(c, d) / 2,
                    r0: N.sqrt(c * c + d * d) / 2,
                    path: w(a, b, c, d),
                    vb: [a, b, c, d].join(" ")
                }
            }

            function e() {
                return this.join(",").replace(L, "$1")
            }

            function f(a) {
                var b = J(a);
                return b.toString = e, b
            }

            function g(a, b, c, d, e, f, g, h, j) {
                return null == j ? n(a, b, c, d, e, f, g, h) : i(a, b, c, d, e, f, g, h, o(a, b, c, d, e, f, g, h, j))
            }

            function h(c, d) {
                function e(a) {
                    return +(+a).toFixed(3)
                }
                return a._.cacher(function(a, f, h) {
                    a instanceof b && (a = a.attr("d")), a = E(a);
                    for (var j, k, l, m, n, o = "", p = {}, q = 0, r = 0, s = a.length; s > r; r++) {
                        if (l = a[r], "M" == l[0]) j = +l[1], k = +l[2];
                        else {
                            if (m = g(j, k, l[1], l[2], l[3], l[4], l[5], l[6]), q + m > f) {
                                if (d && !p.start) {
                                    if (n = g(j, k, l[1], l[2], l[3], l[4], l[5], l[6], f - q), o += ["C" + e(n.start.x), e(n.start.y), e(n.m.x), e(n.m.y), e(n.x), e(n.y)], h) return o;
                                    p.start = o, o = ["M" + e(n.x), e(n.y) + "C" + e(n.n.x), e(n.n.y), e(n.end.x), e(n.end.y), e(l[5]), e(l[6])].join(), q += m, j = +l[5], k = +l[6];
                                    continue
                                }
                                if (!c && !d) return n = g(j, k, l[1], l[2], l[3], l[4], l[5], l[6], f - q)
                            }
                            q += m, j = +l[5], k = +l[6]
                        }
                        o += l.shift() + l
                    }
                    return p.end = o, n = c ? q : d ? p : i(j, k, l[0], l[1], l[2], l[3], l[4], l[5], 1)
                }, null, a._.clone)
            }

            function i(a, b, c, d, e, f, g, h, i) {
                var j = 1 - i,
                    k = R(j, 3),
                    l = R(j, 2),
                    m = i * i,
                    n = m * i,
                    o = k * a + 3 * l * i * c + 3 * j * i * i * e + n * g,
                    p = k * b + 3 * l * i * d + 3 * j * i * i * f + n * h,
                    q = a + 2 * i * (c - a) + m * (e - 2 * c + a),
                    r = b + 2 * i * (d - b) + m * (f - 2 * d + b),
                    s = c + 2 * i * (e - c) + m * (g - 2 * e + c),
                    t = d + 2 * i * (f - d) + m * (h - 2 * f + d),
                    u = j * a + i * c,
                    v = j * b + i * d,
                    w = j * e + i * g,
                    x = j * f + i * h,
                    y = 90 - 180 * N.atan2(q - s, r - t) / O;
                return {
                    x: o,
                    y: p,
                    m: {
                        x: q,
                        y: r
                    },
                    n: {
                        x: s,
                        y: t
                    },
                    start: {
                        x: u,
                        y: v
                    },
                    end: {
                        x: w,
                        y: x
                    },
                    alpha: y
                }
            }

            function j(b, c, e, f, g, h, i, j) {
                a.is(b, "array") || (b = [b, c, e, f, g, h, i, j]);
                var k = D.apply(null, b);
                return d(k.min.x, k.min.y, k.max.x - k.min.x, k.max.y - k.min.y)
            }

            function k(a, b, c) {
                return b >= a.x && b <= a.x + a.width && c >= a.y && c <= a.y + a.height
            }

            function l(a, b) {
                return a = d(a), b = d(b), k(b, a.x, a.y) || k(b, a.x2, a.y) || k(b, a.x, a.y2) || k(b, a.x2, a.y2) || k(a, b.x, b.y) || k(a, b.x2, b.y) || k(a, b.x, b.y2) || k(a, b.x2, b.y2) || (a.x < b.x2 && a.x > b.x || b.x < a.x2 && b.x > a.x) && (a.y < b.y2 && a.y > b.y || b.y < a.y2 && b.y > a.y)
            }

            function m(a, b, c, d, e) {
                var f = -3 * b + 9 * c - 9 * d + 3 * e,
                    g = a * f + 6 * b - 12 * c + 6 * d;
                return a * g - 3 * b + 3 * c
            }

            function n(a, b, c, d, e, f, g, h, i) {
                null == i && (i = 1), i = i > 1 ? 1 : 0 > i ? 0 : i;
                for (var j = i / 2, k = 12, l = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816], n = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472], o = 0, p = 0; k > p; p++) {
                    var q = j * l[p] + j,
                        r = m(q, a, c, e, g),
                        s = m(q, b, d, f, h),
                        t = r * r + s * s;
                    o += n[p] * N.sqrt(t)
                }
                return j * o
            }

            function o(a, b, c, d, e, f, g, h, i) {
                if (!(0 > i || n(a, b, c, d, e, f, g, h) < i)) {
                    var j, k = 1,
                        l = k / 2,
                        m = k - l,
                        o = .01;
                    for (j = n(a, b, c, d, e, f, g, h, m); S(j - i) > o;) l /= 2, m += (i > j ? 1 : -1) * l, j = n(a, b, c, d, e, f, g, h, m);
                    return m
                }
            }

            function p(a, b, c, d, e, f, g, h) {
                if (!(Q(a, c) < P(e, g) || P(a, c) > Q(e, g) || Q(b, d) < P(f, h) || P(b, d) > Q(f, h))) {
                    var i = (a * d - b * c) * (e - g) - (a - c) * (e * h - f * g),
                        j = (a * d - b * c) * (f - h) - (b - d) * (e * h - f * g),
                        k = (a - c) * (f - h) - (b - d) * (e - g);
                    if (k) {
                        var l = i / k,
                            m = j / k,
                            n = +l.toFixed(2),
                            o = +m.toFixed(2);
                        if (!(n < +P(a, c).toFixed(2) || n > +Q(a, c).toFixed(2) || n < +P(e, g).toFixed(2) || n > +Q(e, g).toFixed(2) || o < +P(b, d).toFixed(2) || o > +Q(b, d).toFixed(2) || o < +P(f, h).toFixed(2) || o > +Q(f, h).toFixed(2))) return {
                            x: l,
                            y: m
                        }
                    }
                }
            }

            function q(a, b, c) {
                var d = j(a),
                    e = j(b);
                if (!l(d, e)) return c ? 0 : [];
                for (var f = n.apply(0, a), g = n.apply(0, b), h = ~~(f / 8), k = ~~(g / 8), m = [], o = [], q = {}, r = c ? 0 : [], s = 0; h + 1 > s; s++) {
                    var t = i.apply(0, a.concat(s / h));
                    m.push({
                        x: t.x,
                        y: t.y,
                        t: s / h
                    })
                }
                for (s = 0; k + 1 > s; s++) t = i.apply(0, b.concat(s / k)), o.push({
                    x: t.x,
                    y: t.y,
                    t: s / k
                });
                for (s = 0; h > s; s++)
                    for (var u = 0; k > u; u++) {
                        var v = m[s],
                            w = m[s + 1],
                            x = o[u],
                            y = o[u + 1],
                            z = S(w.x - v.x) < .001 ? "y" : "x",
                            A = S(y.x - x.x) < .001 ? "y" : "x",
                            B = p(v.x, v.y, w.x, w.y, x.x, x.y, y.x, y.y);
                        if (B) {
                            if (q[B.x.toFixed(4)] == B.y.toFixed(4)) continue;
                            q[B.x.toFixed(4)] = B.y.toFixed(4);
                            var C = v.t + S((B[z] - v[z]) / (w[z] - v[z])) * (w.t - v.t),
                                D = x.t + S((B[A] - x[A]) / (y[A] - x[A])) * (y.t - x.t);
                            C >= 0 && 1 >= C && D >= 0 && 1 >= D && (c ? r++ : r.push({
                                x: B.x,
                                y: B.y,
                                t1: C,
                                t2: D
                            }))
                        }
                    }
                return r
            }

            function r(a, b) {
                return t(a, b)
            }

            function s(a, b) {
                return t(a, b, 1)
            }

            function t(a, b, c) {
                a = E(a), b = E(b);
                for (var d, e, f, g, h, i, j, k, l, m, n = c ? 0 : [], o = 0, p = a.length; p > o; o++) {
                    var r = a[o];
                    if ("M" == r[0]) d = h = r[1], e = i = r[2];
                    else {
                        "C" == r[0] ? (l = [d, e].concat(r.slice(1)), d = l[6], e = l[7]) : (l = [d, e, d, e, h, i, h, i], d = h, e = i);
                        for (var s = 0, t = b.length; t > s; s++) {
                            var u = b[s];
                            if ("M" == u[0]) f = j = u[1], g = k = u[2];
                            else {
                                "C" == u[0] ? (m = [f, g].concat(u.slice(1)), f = m[6], g = m[7]) : (m = [f, g, f, g, j, k, j, k], f = j, g = k);
                                var v = q(l, m, c);
                                if (c) n += v;
                                else {
                                    for (var w = 0, x = v.length; x > w; w++) v[w].segment1 = o, v[w].segment2 = s, v[w].bez1 = l, v[w].bez2 = m;
                                    n = n.concat(v)
                                }
                            }
                        }
                    }
                }
                return n
            }

            function u(a, b, c) {
                var d = v(a);
                return k(d, b, c) && t(a, [
                    ["M", b, c],
                    ["H", d.x2 + 10]
                ], 1) % 2 == 1
            }

            function v(a) {
                var b = c(a);
                if (b.bbox) return J(b.bbox);
                if (!a) return d();
                a = E(a);
                for (var e, f = 0, g = 0, h = [], i = [], j = 0, k = a.length; k > j; j++)
                    if (e = a[j], "M" == e[0]) f = e[1], g = e[2], h.push(f), i.push(g);
                    else {
                        var l = D(f, g, e[1], e[2], e[3], e[4], e[5], e[6]);
                        h = h.concat(l.min.x, l.max.x), i = i.concat(l.min.y, l.max.y), f = e[5], g = e[6]
                    }
                var m = P.apply(0, h),
                    n = P.apply(0, i),
                    o = Q.apply(0, h),
                    p = Q.apply(0, i),
                    q = d(m, n, o - m, p - n);
                return b.bbox = J(q), q
            }

            function w(a, b, c, d, f) {
                if (f) return [
                    ["M", +a + +f, b],
                    ["l", c - 2 * f, 0],
                    ["a", f, f, 0, 0, 1, f, f],
                    ["l", 0, d - 2 * f],
                    ["a", f, f, 0, 0, 1, -f, f],
                    ["l", 2 * f - c, 0],
                    ["a", f, f, 0, 0, 1, -f, -f],
                    ["l", 0, 2 * f - d],
                    ["a", f, f, 0, 0, 1, f, -f],
                    ["z"]
                ];
                var g = [
                    ["M", a, b],
                    ["l", c, 0],
                    ["l", 0, d],
                    ["l", -c, 0],
                    ["z"]
                ];
                return g.toString = e, g
            }

            function x(a, b, c, d, f) {
                if (null == f && null == d && (d = c), a = +a, b = +b, c = +c, d = +d, null != f) var g = Math.PI / 180,
                    h = a + c * Math.cos(-d * g),
                    i = a + c * Math.cos(-f * g),
                    j = b + c * Math.sin(-d * g),
                    k = b + c * Math.sin(-f * g),
                    l = [
                        ["M", h, j],
                        ["A", c, c, 0, +(f - d > 180), 0, i, k]
                    ];
                else l = [
                    ["M", a, b],
                    ["m", 0, -d],
                    ["a", c, d, 0, 1, 1, 0, 2 * d],
                    ["a", c, d, 0, 1, 1, 0, -2 * d],
                    ["z"]
                ];
                return l.toString = e, l
            }

            function y(b) {
                var d = c(b),
                    g = String.prototype.toLowerCase;
                if (d.rel) return f(d.rel);
                a.is(b, "array") && a.is(b && b[0], "array") || (b = a.parsePathString(b));
                var h = [],
                    i = 0,
                    j = 0,
                    k = 0,
                    l = 0,
                    m = 0;
                "M" == b[0][0] && (i = b[0][1], j = b[0][2], k = i, l = j, m++, h.push(["M", i, j]));
                for (var n = m, o = b.length; o > n; n++) {
                    var p = h[n] = [],
                        q = b[n];
                    if (q[0] != g.call(q[0])) switch (p[0] = g.call(q[0]), p[0]) {
                        case "a":
                            p[1] = q[1], p[2] = q[2], p[3] = q[3], p[4] = q[4], p[5] = q[5], p[6] = +(q[6] - i).toFixed(3), p[7] = +(q[7] - j).toFixed(3);
                            break;
                        case "v":
                            p[1] = +(q[1] - j).toFixed(3);
                            break;
                        case "m":
                            k = q[1], l = q[2];
                        default:
                            for (var r = 1, s = q.length; s > r; r++) p[r] = +(q[r] - (r % 2 ? i : j)).toFixed(3)
                    } else {
                        p = h[n] = [], "m" == q[0] && (k = q[1] + i, l = q[2] + j);
                        for (var t = 0, u = q.length; u > t; t++) h[n][t] = q[t]
                    }
                    var v = h[n].length;
                    switch (h[n][0]) {
                        case "z":
                            i = k, j = l;
                            break;
                        case "h":
                            i += +h[n][v - 1];
                            break;
                        case "v":
                            j += +h[n][v - 1];
                            break;
                        default:
                            i += +h[n][v - 2], j += +h[n][v - 1]
                    }
                }
                return h.toString = e, d.rel = f(h), h
            }

            function z(b) {
                var d = c(b);
                if (d.abs) return f(d.abs);
                if (I(b, "array") && I(b && b[0], "array") || (b = a.parsePathString(b)), !b || !b.length) return [
                    ["M", 0, 0]
                ];
                var g, h = [],
                    i = 0,
                    j = 0,
                    k = 0,
                    l = 0,
                    m = 0;
                "M" == b[0][0] && (i = +b[0][1], j = +b[0][2], k = i, l = j, m++, h[0] = ["M", i, j]);
                for (var n, o, p = 3 == b.length && "M" == b[0][0] && "R" == b[1][0].toUpperCase() && "Z" == b[2][0].toUpperCase(), q = m, r = b.length; r > q; q++) {
                    if (h.push(n = []), o = b[q], g = o[0], g != g.toUpperCase()) switch (n[0] = g.toUpperCase(), n[0]) {
                            case "A":
                                n[1] = o[1], n[2] = o[2], n[3] = o[3], n[4] = o[4], n[5] = o[5], n[6] = +o[6] + i, n[7] = +o[7] + j;
                                break;
                            case "V":
                                n[1] = +o[1] + j;
                                break;
                            case "H":
                                n[1] = +o[1] + i;
                                break;
                            case "R":
                                for (var s = [i, j].concat(o.slice(1)), t = 2, u = s.length; u > t; t++) s[t] = +s[t] + i, s[++t] = +s[t] + j;
                                h.pop(), h = h.concat(G(s, p));
                                break;
                            case "O":
                                h.pop(), s = x(i, j, o[1], o[2]), s.push(s[0]), h = h.concat(s);
                                break;
                            case "U":
                                h.pop(), h = h.concat(x(i, j, o[1], o[2], o[3])), n = ["U"].concat(h[h.length - 1].slice(-2));
                                break;
                            case "M":
                                k = +o[1] + i, l = +o[2] + j;
                            default:
                                for (t = 1, u = o.length; u > t; t++) n[t] = +o[t] + (t % 2 ? i : j)
                        } else if ("R" == g) s = [i, j].concat(o.slice(1)), h.pop(), h = h.concat(G(s, p)), n = ["R"].concat(o.slice(-2));
                        else if ("O" == g) h.pop(), s = x(i, j, o[1], o[2]), s.push(s[0]), h = h.concat(s);
                    else if ("U" == g) h.pop(), h = h.concat(x(i, j, o[1], o[2], o[3])), n = ["U"].concat(h[h.length - 1].slice(-2));
                    else
                        for (var v = 0, w = o.length; w > v; v++) n[v] = o[v];
                    if (g = g.toUpperCase(), "O" != g) switch (n[0]) {
                        case "Z":
                            i = +k, j = +l;
                            break;
                        case "H":
                            i = n[1];
                            break;
                        case "V":
                            j = n[1];
                            break;
                        case "M":
                            k = n[n.length - 2], l = n[n.length - 1];
                        default:
                            i = n[n.length - 2], j = n[n.length - 1]
                    }
                }
                return h.toString = e, d.abs = f(h), h
            }

            function A(a, b, c, d) {
                return [a, b, c, d, c, d]
            }

            function B(a, b, c, d, e, f) {
                var g = 1 / 3,
                    h = 2 / 3;
                return [g * a + h * c, g * b + h * d, g * e + h * c, g * f + h * d, e, f]
            }

            function C(b, c, d, e, f, g, h, i, j, k) {
                var l, m = 120 * O / 180,
                    n = O / 180 * (+f || 0),
                    o = [],
                    p = a._.cacher(function(a, b, c) {
                        var d = a * N.cos(c) - b * N.sin(c),
                            e = a * N.sin(c) + b * N.cos(c);
                        return {
                            x: d,
                            y: e
                        }
                    });
                if (k) y = k[0], z = k[1], w = k[2], x = k[3];
                else {
                    l = p(b, c, -n), b = l.x, c = l.y, l = p(i, j, -n), i = l.x, j = l.y;
                    var q = (N.cos(O / 180 * f), N.sin(O / 180 * f), (b - i) / 2),
                        r = (c - j) / 2,
                        s = q * q / (d * d) + r * r / (e * e);
                    s > 1 && (s = N.sqrt(s), d = s * d, e = s * e);
                    var t = d * d,
                        u = e * e,
                        v = (g == h ? -1 : 1) * N.sqrt(S((t * u - t * r * r - u * q * q) / (t * r * r + u * q * q))),
                        w = v * d * r / e + (b + i) / 2,
                        x = v * -e * q / d + (c + j) / 2,
                        y = N.asin(((c - x) / e).toFixed(9)),
                        z = N.asin(((j - x) / e).toFixed(9));
                    y = w > b ? O - y : y, z = w > i ? O - z : z, 0 > y && (y = 2 * O + y), 0 > z && (z = 2 * O + z), h && y > z && (y -= 2 * O), !h && z > y && (z -= 2 * O)
                }
                var A = z - y;
                if (S(A) > m) {
                    var B = z,
                        D = i,
                        E = j;
                    z = y + m * (h && z > y ? 1 : -1), i = w + d * N.cos(z), j = x + e * N.sin(z), o = C(i, j, d, e, f, 0, h, D, E, [z, B, w, x])
                }
                A = z - y;
                var F = N.cos(y),
                    G = N.sin(y),
                    H = N.cos(z),
                    I = N.sin(z),
                    J = N.tan(A / 4),
                    K = 4 / 3 * d * J,
                    L = 4 / 3 * e * J,
                    M = [b, c],
                    P = [b + K * G, c - L * F],
                    Q = [i + K * I, j - L * H],
                    R = [i, j];
                if (P[0] = 2 * M[0] - P[0], P[1] = 2 * M[1] - P[1], k) return [P, Q, R].concat(o);
                o = [P, Q, R].concat(o).join().split(",");
                for (var T = [], U = 0, V = o.length; V > U; U++) T[U] = U % 2 ? p(o[U - 1], o[U], n).y : p(o[U], o[U + 1], n).x;
                return T
            }

            function D(a, b, c, d, e, f, g, h) {
                for (var i, j, k, l, m, n, o, p, q = [], r = [
                        [],
                        []
                    ], s = 0; 2 > s; ++s)
                    if (0 == s ? (j = 6 * a - 12 * c + 6 * e, i = -3 * a + 9 * c - 9 * e + 3 * g, k = 3 * c - 3 * a) : (j = 6 * b - 12 * d + 6 * f, i = -3 * b + 9 * d - 9 * f + 3 * h, k = 3 * d - 3 * b), S(i) < 1e-12) {
                        if (S(j) < 1e-12) continue;
                        l = -k / j, l > 0 && 1 > l && q.push(l)
                    } else o = j * j - 4 * k * i, p = N.sqrt(o), 0 > o || (m = (-j + p) / (2 * i), m > 0 && 1 > m && q.push(m), n = (-j - p) / (2 * i), n > 0 && 1 > n && q.push(n));
                for (var t, u = q.length, v = u; u--;) l = q[u], t = 1 - l, r[0][u] = t * t * t * a + 3 * t * t * l * c + 3 * t * l * l * e + l * l * l * g, r[1][u] = t * t * t * b + 3 * t * t * l * d + 3 * t * l * l * f + l * l * l * h;
                return r[0][v] = a, r[1][v] = b, r[0][v + 1] = g, r[1][v + 1] = h, r[0].length = r[1].length = v + 2, {
                    min: {
                        x: P.apply(0, r[0]),
                        y: P.apply(0, r[1])
                    },
                    max: {
                        x: Q.apply(0, r[0]),
                        y: Q.apply(0, r[1])
                    }
                }
            }

            function E(a, b) {
                var d = !b && c(a);
                if (!b && d.curve) return f(d.curve);
                for (var e = z(a), g = b && z(b), h = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null
                    }, i = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null
                    }, j = (function(a, b, c) {
                        var d, e;
                        if (!a) return ["C", b.x, b.y, b.x, b.y, b.x, b.y];
                        switch (!(a[0] in {
                            T: 1,
                            Q: 1
                        }) && (b.qx = b.qy = null), a[0]) {
                            case "M":
                                b.X = a[1], b.Y = a[2];
                                break;
                            case "A":
                                a = ["C"].concat(C.apply(0, [b.x, b.y].concat(a.slice(1))));
                                break;
                            case "S":
                                "C" == c || "S" == c ? (d = 2 * b.x - b.bx, e = 2 * b.y - b.by) : (d = b.x, e = b.y), a = ["C", d, e].concat(a.slice(1));
                                break;
                            case "T":
                                "Q" == c || "T" == c ? (b.qx = 2 * b.x - b.qx, b.qy = 2 * b.y - b.qy) : (b.qx = b.x, b.qy = b.y), a = ["C"].concat(B(b.x, b.y, b.qx, b.qy, a[1], a[2]));
                                break;
                            case "Q":
                                b.qx = a[1], b.qy = a[2], a = ["C"].concat(B(b.x, b.y, a[1], a[2], a[3], a[4]));
                                break;
                            case "L":
                                a = ["C"].concat(A(b.x, b.y, a[1], a[2]));
                                break;
                            case "H":
                                a = ["C"].concat(A(b.x, b.y, a[1], b.y));
                                break;
                            case "V":
                                a = ["C"].concat(A(b.x, b.y, b.x, a[1]));
                                break;
                            case "Z":
                                a = ["C"].concat(A(b.x, b.y, b.X, b.Y))
                        }
                        return a
                    }), k = function(a, b) {
                        if (a[b].length > 7) {
                            a[b].shift();
                            for (var c = a[b]; c.length;) m[b] = "A", g && (n[b] = "A"), a.splice(b++, 0, ["C"].concat(c.splice(0, 6)));
                            a.splice(b, 1), r = Q(e.length, g && g.length || 0)
                        }
                    }, l = function(a, b, c, d, f) {
                        a && b && "M" == a[f][0] && "M" != b[f][0] && (b.splice(f, 0, ["M", d.x, d.y]), c.bx = 0, c.by = 0, c.x = a[f][1], c.y = a[f][2], r = Q(e.length, g && g.length || 0))
                    }, m = [], n = [], o = "", p = "", q = 0, r = Q(e.length, g && g.length || 0); r > q; q++) {
                    e[q] && (o = e[q][0]), "C" != o && (m[q] = o, q && (p = m[q - 1])), e[q] = j(e[q], h, p), "A" != m[q] && "C" == o && (m[q] = "C"), k(e, q), g && (g[q] && (o = g[q][0]), "C" != o && (n[q] = o, q && (p = n[q - 1])), g[q] = j(g[q], i, p), "A" != n[q] && "C" == o && (n[q] = "C"), k(g, q)), l(e, g, h, i, q), l(g, e, i, h, q);
                    var s = e[q],
                        t = g && g[q],
                        u = s.length,
                        v = g && t.length;
                    h.x = s[u - 2], h.y = s[u - 1], h.bx = M(s[u - 4]) || h.x, h.by = M(s[u - 3]) || h.y, i.bx = g && (M(t[v - 4]) || i.x), i.by = g && (M(t[v - 3]) || i.y), i.x = g && t[v - 2], i.y = g && t[v - 1]
                }
                return g || (d.curve = f(e)), g ? [e, g] : e
            }

            function F(a, b) {
                if (!b) return a;
                var c, d, e, f, g, h, i;
                for (a = E(a), e = 0, g = a.length; g > e; e++)
                    for (i = a[e], f = 1, h = i.length; h > f; f += 2) c = b.x(i[f], i[f + 1]), d = b.y(i[f], i[f + 1]), i[f] = c, i[f + 1] = d;
                return a
            }

            function G(a, b) {
                for (var c = [], d = 0, e = a.length; e - 2 * !b > d; d += 2) {
                    var f = [{
                        x: +a[d - 2],
                        y: +a[d - 1]
                    }, {
                        x: +a[d],
                        y: +a[d + 1]
                    }, {
                        x: +a[d + 2],
                        y: +a[d + 3]
                    }, {
                        x: +a[d + 4],
                        y: +a[d + 5]
                    }];
                    b ? d ? e - 4 == d ? f[3] = {
                        x: +a[0],
                        y: +a[1]
                    } : e - 2 == d && (f[2] = {
                        x: +a[0],
                        y: +a[1]
                    }, f[3] = {
                        x: +a[2],
                        y: +a[3]
                    }) : f[0] = {
                        x: +a[e - 2],
                        y: +a[e - 1]
                    } : e - 4 == d ? f[3] = f[2] : d || (f[0] = {
                        x: +a[d],
                        y: +a[d + 1]
                    }), c.push(["C", (-f[0].x + 6 * f[1].x + f[2].x) / 6, (-f[0].y + 6 * f[1].y + f[2].y) / 6, (f[1].x + 6 * f[2].x - f[3].x) / 6, (f[1].y + 6 * f[2].y - f[3].y) / 6, f[2].x, f[2].y])
                }
                return c
            }
            var H = b.prototype,
                I = a.is,
                J = a._.clone,
                K = "hasOwnProperty",
                L = /,?([a-z]),?/gi,
                M = parseFloat,
                N = Math,
                O = N.PI,
                P = N.min,
                Q = N.max,
                R = N.pow,
                S = N.abs,
                T = h(1),
                U = h(),
                V = h(0, 1),
                W = a._unit2px,
                X = {
                    path: function(a) {
                        return a.attr("path")
                    },
                    circle: function(a) {
                        var b = W(a);
                        return x(b.cx, b.cy, b.r)
                    },
                    ellipse: function(a) {
                        var b = W(a);
                        return x(b.cx || 0, b.cy || 0, b.rx, b.ry)
                    },
                    rect: function(a) {
                        var b = W(a);
                        return w(b.x || 0, b.y || 0, b.width, b.height, b.rx, b.ry)
                    },
                    image: function(a) {
                        var b = W(a);
                        return w(b.x || 0, b.y || 0, b.width, b.height)
                    },
                    line: function(a) {
                        return "M" + [a.attr("x1") || 0, a.attr("y1") || 0, a.attr("x2"), a.attr("y2")]
                    },
                    polyline: function(a) {
                        return "M" + a.attr("points")
                    },
                    polygon: function(a) {
                        return "M" + a.attr("points") + "z"
                    },
                    deflt: function(a) {
                        var b = a.node.getBBox();
                        return w(b.x, b.y, b.width, b.height)
                    }
                };
            a.path = c, a.path.getTotalLength = T, a.path.getPointAtLength = U, a.path.getSubpath = function(a, b, c) {
                if (this.getTotalLength(a) - c < 1e-6) return V(a, b).end;
                var d = V(a, c, 1);
                return b ? V(d, b).end : d
            }, H.getTotalLength = function() {
                return this.node.getTotalLength ? this.node.getTotalLength() : void 0
            }, H.getPointAtLength = function(a) {
                return U(this.attr("d"), a)
            }, H.getSubpath = function(b, c) {
                return a.path.getSubpath(this.attr("d"), b, c)
            }, a._.box = d, a.path.findDotsAtSegment = i, a.path.bezierBBox = j, a.path.isPointInsideBBox = k, a.path.isBBoxIntersect = l, a.path.intersection = r, a.path.intersectionNumber = s, a.path.isPointInside = u, a.path.getBBox = v, a.path.get = X, a.path.toRelative = y, a.path.toAbsolute = z, a.path.toCubic = E, a.path.map = F, a.path.toString = e, a.path.clone = f
        }), d.plugin(function(a) {
            var d = Math.max,
                e = Math.min,
                f = function(a) {
                    if (this.items = [], this.bindings = {}, this.length = 0, this.type = "set", a)
                        for (var b = 0, c = a.length; c > b; b++) a[b] && (this[this.items.length] = this.items[this.items.length] = a[b], this.length++)
                },
                g = f.prototype;
            g.push = function() {
                for (var a, b, c = 0, d = arguments.length; d > c; c++) a = arguments[c], a && (b = this.items.length, this[b] = this.items[b] = a, this.length++);
                return this
            }, g.pop = function() {
                return this.length && delete this[this.length--], this.items.pop()
            }, g.forEach = function(a, b) {
                for (var c = 0, d = this.items.length; d > c; c++)
                    if (a.call(b, this.items[c], c) === !1) return this;
                return this
            }, g.animate = function(d, e, f, g) {
                "function" != typeof f || f.length || (g = f, f = c.linear), d instanceof a._.Animation && (g = d.callback, f = d.easing, e = f.dur, d = d.attr);
                var h = arguments;
                if (a.is(d, "array") && a.is(h[h.length - 1], "array")) var i = !0;
                var j, k = function() {
                        j ? this.b = j : j = this.b
                    },
                    l = 0,
                    m = g && function() {
                        l++ == this.length && g.call(this)
                    };
                return this.forEach(function(a, c) {
                    b.once("snap.animcreated." + a.id, k), i ? h[c] && a.animate.apply(a, h[c]) : a.animate(d, e, f, m)
                })
            }, g.remove = function() {
                for (; this.length;) this.pop().remove();
                return this
            }, g.bind = function(a, b, c) {
                var d = {};
                if ("function" == typeof b) this.bindings[a] = b;
                else {
                    var e = c || a;
                    this.bindings[a] = function(a) {
                        d[e] = a, b.attr(d)
                    }
                }
                return this
            }, g.attr = function(a) {
                var b = {};
                for (var c in a) this.bindings[c] ? this.bindings[c](a[c]) : b[c] = a[c];
                for (var d = 0, e = this.items.length; e > d; d++) this.items[d].attr(b);
                return this
            }, g.clear = function() {
                for (; this.length;) this.pop()
            }, g.splice = function(a, b) {
                a = 0 > a ? d(this.length + a, 0) : a, b = d(0, e(this.length - a, b));
                var c, g = [],
                    h = [],
                    i = [];
                for (c = 2; c < arguments.length; c++) i.push(arguments[c]);
                for (c = 0; b > c; c++) h.push(this[a + c]);
                for (; c < this.length - a; c++) g.push(this[a + c]);
                var j = i.length;
                for (c = 0; c < j + g.length; c++) this.items[a + c] = this[a + c] = j > c ? i[c] : g[c - j];
                for (c = this.items.length = this.length -= b - j; this[c];) delete this[c++];
                return new f(h)
            }, g.exclude = function(a) {
                for (var b = 0, c = this.length; c > b; b++)
                    if (this[b] == a) return this.splice(b, 1), !0;
                return !1
            }, g.insertAfter = function(a) {
                for (var b = this.items.length; b--;) this.items[b].insertAfter(a);
                return this
            }, g.getBBox = function() {
                for (var a = [], b = [], c = [], f = [], g = this.items.length; g--;)
                    if (!this.items[g].removed) {
                        var h = this.items[g].getBBox();
                        a.push(h.x), b.push(h.y), c.push(h.x + h.width), f.push(h.y + h.height)
                    }
                return a = e.apply(0, a), b = e.apply(0, b), c = d.apply(0, c), f = d.apply(0, f), {
                    x: a,
                    y: b,
                    x2: c,
                    y2: f,
                    width: c - a,
                    height: f - b,
                    cx: a + (c - a) / 2,
                    cy: b + (f - b) / 2
                }
            }, g.clone = function(a) {
                a = new f;
                for (var b = 0, c = this.items.length; c > b; b++) a.push(this.items[b].clone());
                return a
            }, g.toString = function() {
                return "Snap‘s set"
            }, g.type = "set", a.set = function() {
                var a = new f;
                return arguments.length && a.push.apply(a, Array.prototype.slice.call(arguments, 0)), a
            }
        }), d.plugin(function(a, c) {
            function d(a) {
                var b = a[0];
                switch (b.toLowerCase()) {
                    case "t":
                        return [b, 0, 0];
                    case "m":
                        return [b, 1, 0, 0, 1, 0, 0];
                    case "r":
                        return 4 == a.length ? [b, 0, a[2], a[3]] : [b, 0];
                    case "s":
                        return 5 == a.length ? [b, 1, 1, a[3], a[4]] : 3 == a.length ? [b, 1, 1] : [b, 1]
                }
            }

            function e(b, c, e) {
                c = m(c).replace(/\.{3}|\u2026/g, b), b = a.parseTransformString(b) || [], c = a.parseTransformString(c) || [];
                for (var f, g, h, k, l = Math.max(b.length, c.length), n = [], o = [], p = 0; l > p; p++) {
                    if (h = b[p] || d(c[p]), k = c[p] || d(h), h[0] != k[0] || "r" == h[0].toLowerCase() && (h[2] != k[2] || h[3] != k[3]) || "s" == h[0].toLowerCase() && (h[3] != k[3] || h[4] != k[4])) {
                        b = a._.transform2matrix(b, e()), c = a._.transform2matrix(c, e()), n = [
                            ["m", b.a, b.b, b.c, b.d, b.e, b.f]
                        ], o = [
                            ["m", c.a, c.b, c.c, c.d, c.e, c.f]
                        ];
                        break
                    }
                    for (n[p] = [], o[p] = [], f = 0, g = Math.max(h.length, k.length); g > f; f++) f in h && (n[p][f] = h[f]), f in k && (o[p][f] = k[f])
                }
                return {
                    from: j(n),
                    to: j(o),
                    f: i(n)
                }
            }

            function f(a) {
                return a
            }

            function g(a) {
                return function(b) {
                    return +b.toFixed(3) + a
                }
            }

            function h(b) {
                return a.rgb(b[0], b[1], b[2])
            }

            function i(a) {
                var b, c, d, e, f, g, h = 0,
                    i = [];
                for (b = 0, c = a.length; c > b; b++) {
                    for (f = "[", g = ['"' + a[b][0] + '"'], d = 1, e = a[b].length; e > d; d++) g[d] = "val[" + h++ + "]";
                    f += g + "]", i[b] = f
                }
                return Function("val", "return Snap.path.toString.call([" + i + "])")
            }

            function j(a) {
                for (var b = [], c = 0, d = a.length; d > c; c++)
                    for (var e = 1, f = a[c].length; f > e; e++) b.push(a[c][e]);
                return b
            }
            var k = {},
                l = /[a-z]+$/i,
                m = String;
            k.stroke = k.fill = "colour", c.prototype.equal = function(a, c) {
                return b("snap.util.equal", this, a, c).firstDefined()
            }, b.on("snap.util.equal", function(b, c) {
                var d, n, o = m(this.attr(b) || ""),
                    p = this;
                if (o == +o && c == +c) return {
                    from: +o,
                    to: +c,
                    f: f
                };
                if ("colour" == k[b]) return d = a.color(o), n = a.color(c), {
                    from: [d.r, d.g, d.b, d.opacity],
                    to: [n.r, n.g, n.b, n.opacity],
                    f: h
                };
                if ("transform" == b || "gradientTransform" == b || "patternTransform" == b) return c instanceof a.Matrix && (c = c.toTransformString()), a._.rgTransform.test(c) || (c = a._.svgTransform2string(c)), e(o, c, function() {
                    return p.getBBox(1)
                });
                if ("d" == b || "path" == b) return d = a.path.toCubic(o, c), {
                    from: j(d[0]),
                    to: j(d[1]),
                    f: i(d[0])
                };
                if ("points" == b) return d = m(o).split(a._.separator), n = m(c).split(a._.separator), {
                    from: d,
                    to: n,
                    f: function(a) {
                        return a
                    }
                };
                aUnit = o.match(l);
                var q = m(c).match(l);
                return aUnit && aUnit == q ? {
                    from: parseFloat(o),
                    to: parseFloat(c),
                    f: g(aUnit)
                } : {
                    from: this.asPX(b),
                    to: this.asPX(b, c),
                    f: f
                }
            })
        }), d.plugin(function(a, c, d, e) {
            for (var f = c.prototype, g = "hasOwnProperty", h = ("createTouch" in e.doc), i = ["click", "dblclick", "mousedown", "mousemove", "mouseout", "mouseover", "mouseup", "touchstart", "touchmove", "touchend", "touchcancel"], j = {
                    mousedown: "touchstart",
                    mousemove: "touchmove",
                    mouseup: "touchend"
                }, k = (function(a, b) {
                    var c = "y" == a ? "scrollTop" : "scrollLeft",
                        d = b && b.node ? b.node.ownerDocument : e.doc;
                    return d[c in d.documentElement ? "documentElement" : "body"][c]
                }), l = function() {
                    this.returnValue = !1
                }, m = function() {
                    return this.originalEvent.preventDefault()
                }, n = function() {
                    this.cancelBubble = !0
                }, o = function() {
                    return this.originalEvent.stopPropagation()
                }, p = function() {
                    return e.doc.addEventListener ? function(a, b, c, d) {
                        var e = h && j[b] ? j[b] : b,
                            f = function(e) {
                                var f = k("y", d),
                                    i = k("x", d);
                                if (h && j[g](b))
                                    for (var l = 0, n = e.targetTouches && e.targetTouches.length; n > l; l++)
                                        if (e.targetTouches[l].target == a || a.contains(e.targetTouches[l].target)) {
                                            var p = e;
                                            e = e.targetTouches[l], e.originalEvent = p, e.preventDefault = m, e.stopPropagation = o;
                                            break
                                        }
                                var q = e.clientX + i,
                                    r = e.clientY + f;
                                return c.call(d, e, q, r)
                            };
                        return b !== e && a.addEventListener(b, f, !1), a.addEventListener(e, f, !1),
                            function() {
                                return b !== e && a.removeEventListener(b, f, !1), a.removeEventListener(e, f, !1), !0
                            }
                    } : e.doc.attachEvent ? function(a, b, c, d) {
                        var e = function(a) {
                            a = a || d.node.ownerDocument.window.event;
                            var b = k("y", d),
                                e = k("x", d),
                                f = a.clientX + e,
                                g = a.clientY + b;
                            return a.preventDefault = a.preventDefault || l, a.stopPropagation = a.stopPropagation || n, c.call(d, a, f, g)
                        };
                        a.attachEvent("on" + b, e);
                        var f = function() {
                            return a.detachEvent("on" + b, e), !0
                        };
                        return f
                    } : void 0
                }(), q = [], r = function(a) {
                    for (var c, d = a.clientX, e = a.clientY, f = k("y"), g = k("x"), i = q.length; i--;) {
                        if (c = q[i], h) {
                            for (var j, l = a.touches && a.touches.length; l--;)
                                if (j = a.touches[l], j.identifier == c.el._drag.id || c.el.node.contains(j.target)) {
                                    d = j.clientX, e = j.clientY, (a.originalEvent ? a.originalEvent : a).preventDefault();
                                    break
                                }
                        } else a.preventDefault();
                        var m = c.el.node;
                        m.nextSibling, m.parentNode, m.style.display, d += g, e += f, b("snap.drag.move." + c.el.id, c.move_scope || c.el, d - c.el._drag.x, e - c.el._drag.y, d, e, a)
                    }
                }, s = function(c) {
                    a.unmousemove(r).unmouseup(s);
                    for (var d, e = q.length; e--;) d = q[e], d.el._drag = {}, b("snap.drag.end." + d.el.id, d.end_scope || d.start_scope || d.move_scope || d.el, c);
                    q = []
                }, t = i.length; t--;) ! function(b) {
                a[b] = f[b] = function(c, d) {
                    return a.is(c, "function") && (this.events = this.events || [], this.events.push({
                        name: b,
                        f: c,
                        unbind: p(this.node || document, b, c, d || this)
                    })), this
                }, a["un" + b] = f["un" + b] = function(a) {
                    for (var c = this.events || [], d = c.length; d--;)
                        if (c[d].name == b && (c[d].f == a || !a)) return c[d].unbind(), c.splice(d, 1), !c.length && delete this.events, this;
                    return this
                }
            }(i[t]);
            f.hover = function(a, b, c, d) {
                return this.mouseover(a, c).mouseout(b, d || c)
            }, f.unhover = function(a, b) {
                return this.unmouseover(a).unmouseout(b)
            };
            var u = [];
            f.drag = function(c, d, e, f, g, h) {
                function i(i, j, k) {
                    (i.originalEvent || i).preventDefault(), this._drag.x = j, this._drag.y = k, this._drag.id = i.identifier, !q.length && a.mousemove(r).mouseup(s), q.push({
                        el: this,
                        move_scope: f,
                        start_scope: g,
                        end_scope: h
                    }), d && b.on("snap.drag.start." + this.id, d), c && b.on("snap.drag.move." + this.id, c), e && b.on("snap.drag.end." + this.id, e), b("snap.drag.start." + this.id, g || f || this, j, k, i)
                }
                if (!arguments.length) {
                    var j;
                    return this.drag(function(a, b) {
                        this.attr({
                            transform: j + (j ? "T" : "t") + [a, b]
                        })
                    }, function() {
                        j = this.transform().local
                    })
                }
                return this._drag = {}, u.push({
                    el: this,
                    start: i
                }), this.mousedown(i), this
            }, f.undrag = function() {
                for (var c = u.length; c--;) u[c].el == this && (this.unmousedown(u[c].start), u.splice(c, 1), b.unbind("snap.drag.*." + this.id));
                return !u.length && a.unmousemove(r).unmouseup(s), this
            }
        }), d.plugin(function(a, c, d) {
            var e = (c.prototype, d.prototype),
                f = /^\s*url\((.+)\)/,
                g = String,
                h = a._.$;
            a.filter = {}, e.filter = function(b) {
                var d = this;
                "svg" != d.type && (d = d.paper);
                var e = a.parse(g(b)),
                    f = a._.id(),
                    i = (d.node.offsetWidth, d.node.offsetHeight, h("filter"));
                return h(i, {
                    id: f,
                    filterUnits: "userSpaceOnUse"
                }), i.appendChild(e.node), d.defs.appendChild(i), new c(i)
            }, b.on("snap.util.getattr.filter", function() {
                b.stop();
                var c = h(this.node, "filter");
                if (c) {
                    var d = g(c).match(f);
                    return d && a.select(d[1])
                }
            }), b.on("snap.util.attr.filter", function(d) {
                if (d instanceof c && "filter" == d.type) {
                    b.stop();
                    var e = d.node.id;
                    e || (h(d.node, {
                        id: d.id
                    }), e = d.id), h(this.node, {
                        filter: a.url(e)
                    })
                }
                d && "none" != d || (b.stop(), this.node.removeAttribute("filter"))
            }), a.filter.blur = function(b, c) {
                null == b && (b = 2);
                var d = null == c ? b : [b, c];
                return a.format('<feGaussianBlur stdDeviation="{def}"/>', {
                    def: d
                })
            }, a.filter.blur.toString = function() {
                return this()
            }, a.filter.shadow = function(b, c, d, e, f) {
                return "string" == typeof d && (e = d, f = e, d = 4), "string" != typeof e && (f = e, e = "#000"), e = e || "#000", null == d && (d = 4), null == f && (f = 1), null == b && (b = 0, c = 2), null == c && (c = b), e = a.color(e), a.format('<feGaussianBlur in="SourceAlpha" stdDeviation="{blur}"/><feOffset dx="{dx}" dy="{dy}" result="offsetblur"/><feFlood flood-color="{color}"/><feComposite in2="offsetblur" operator="in"/><feComponentTransfer><feFuncA type="linear" slope="{opacity}"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in="SourceGraphic"/></feMerge>', {
                    color: e,
                    dx: b,
                    dy: c,
                    blur: d,
                    opacity: f
                })
            }, a.filter.shadow.toString = function() {
                return this()
            }, a.filter.grayscale = function(b) {
                return null == b && (b = 1), a.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0"/>', {
                    a: .2126 + .7874 * (1 - b),
                    b: .7152 - .7152 * (1 - b),
                    c: .0722 - .0722 * (1 - b),
                    d: .2126 - .2126 * (1 - b),
                    e: .7152 + .2848 * (1 - b),
                    f: .0722 - .0722 * (1 - b),
                    g: .2126 - .2126 * (1 - b),
                    h: .0722 + .9278 * (1 - b)
                })
            }, a.filter.grayscale.toString = function() {
                return this()
            }, a.filter.sepia = function(b) {
                return null == b && (b = 1), a.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0"/>', {
                    a: .393 + .607 * (1 - b),
                    b: .769 - .769 * (1 - b),
                    c: .189 - .189 * (1 - b),
                    d: .349 - .349 * (1 - b),
                    e: .686 + .314 * (1 - b),
                    f: .168 - .168 * (1 - b),
                    g: .272 - .272 * (1 - b),
                    h: .534 - .534 * (1 - b),
                    i: .131 + .869 * (1 - b)
                })
            }, a.filter.sepia.toString = function() {
                return this()
            }, a.filter.saturate = function(b) {
                return null == b && (b = 1), a.format('<feColorMatrix type="saturate" values="{amount}"/>', {
                    amount: 1 - b
                })
            }, a.filter.saturate.toString = function() {
                return this()
            }, a.filter.hueRotate = function(b) {
                return b = b || 0, a.format('<feColorMatrix type="hueRotate" values="{angle}"/>', {
                    angle: b
                })
            }, a.filter.hueRotate.toString = function() {
                return this()
            }, a.filter.invert = function(b) {
                return null == b && (b = 1), a.format('<feComponentTransfer><feFuncR type="table" tableValues="{amount} {amount2}"/><feFuncG type="table" tableValues="{amount} {amount2}"/><feFuncB type="table" tableValues="{amount} {amount2}"/></feComponentTransfer>', {
                    amount: b,
                    amount2: 1 - b
                })
            }, a.filter.invert.toString = function() {
                return this()
            }, a.filter.brightness = function(b) {
                return null == b && (b = 1), a.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}"/><feFuncG type="linear" slope="{amount}"/><feFuncB type="linear" slope="{amount}"/></feComponentTransfer>', {
                    amount: b
                })
            }, a.filter.brightness.toString = function() {
                return this()
            }, a.filter.contrast = function(b) {
                return null == b && (b = 1), a.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}" intercept="{amount2}"/><feFuncG type="linear" slope="{amount}" intercept="{amount2}"/><feFuncB type="linear" slope="{amount}" intercept="{amount2}"/></feComponentTransfer>', {
                    amount: b,
                    amount2: .5 - b / 2
                })
            }, a.filter.contrast.toString = function() {
                return this()
            }
        }), d
    }), (window._gsQueue || (window._gsQueue = [])).push(function() {
        "use strict";
        var a = document.documentElement,
            b = window,
            c = function(c, d) {
                var e = "x" === d ? "Width" : "Height",
                    f = "scroll" + e,
                    g = "client" + e,
                    h = document.body;
                return c === b || c === a || c === h ? Math.max(a[f], h[f]) - Math.max(a[g], h[g]) : c[f] - c["offset" + e]
            },
            d = window._gsDefine.plugin({
                propName: "scrollTo",
                API: 2,
                init: function(a, d, e) {
                    return this._wdw = a === b, this._target = a, this._tween = e, "object" != typeof d && (d = {
                        y: d
                    }), this._autoKill = d.autoKill !== !1, this.x = this.xPrev = this.getX(), this.y = this.yPrev = this.getY(), null != d.x ? this._addTween(this, "x", this.x, "max" === d.x ? c(a, "x") : d.x, "scrollTo_x", !0) : this.skipX = !0, null != d.y ? this._addTween(this, "y", this.y, "max" === d.y ? c(a, "y") : d.y, "scrollTo_y", !0) : this.skipY = !0, !0
                },
                set: function(a) {
                    this._super.setRatio.call(this, a);
                    var c = this._wdw || !this.skipX ? this.getX() : this.xPrev,
                        d = this._wdw || !this.skipY ? this.getY() : this.yPrev,
                        e = d - this.yPrev,
                        f = c - this.xPrev;
                    this._autoKill && (!this.skipX && (f > 7 || -7 > f) && (this.skipX = !0), !this.skipY && (e > 7 || -7 > e) && (this.skipY = !0), this.skipX && this.skipY && this._tween.kill()), this._wdw ? b.scrollTo(this.skipX ? c : this.x, this.skipY ? d : this.y) : (this.skipY || (this._target.scrollTop = this.y), this.skipX || (this._target.scrollLeft = this.x)), this.xPrev = this.x, this.yPrev = this.y
                }
            }),
            e = d.prototype;
        d.max = c, e.getX = function() {
            return this._wdw ? null != b.pageXOffset ? b.pageXOffset : null != a.scrollLeft ? a.scrollLeft : document.body.scrollLeft : this._target.scrollLeft
        }, e.getY = function() {
            return this._wdw ? null != b.pageYOffset ? b.pageYOffset : null != a.scrollTop ? a.scrollTop : document.body.scrollTop : this._target.scrollTop
        }, e._kill = function(a) {
            return a.scrollTo_x && (this.skipX = !0), a.scrollTo_y && (this.skipY = !0), this._super._kill.call(this, a)
        }
    }), window._gsDefine && window._gsQueue.pop()(),
    function() {
        function a(b, c) {
            if ("function" == typeof b) return a("*", b);
            if ("function" == typeof c)
                for (var e = new d(b), f = 1; f < arguments.length; ++f) a.callbacks.push(e.middleware(arguments[f]));
            else "string" == typeof b ? a.show(b, c) : a.start(b)
        }

        function b(b) {
            var c = window.location.pathname + window.location.search;
            c != b.canonicalPath && (a.stop(), b.unhandled = !0, window.location = b.canonicalPath)
        }

        function c(a, b) {
            "/" == a[0] && 0 != a.indexOf(l) && (a = l + a);
            var c = a.indexOf("?");
            if (this.canonicalPath = a, this.path = a.replace(l, "") || "/", this.title = document.title, this.state = b || {}, this.state.path = a, this.querystring = ~c ? a.slice(c + 1) : "", this.pathname = ~c ? a.slice(0, c) : a, this.params = [], this.hash = "", ~this.path.indexOf("#")) {
                var d = this.path.split("#");
                this.path = d[0], this.hash = d[1] || "", this.querystring = this.querystring.split("#")[0]
            }
        }

        function d(a, b) {
            b = b || {}, this.path = a, this.method = "GET", this.regexp = e(a, this.keys = [], b.sensitive, b.strict)
        }

        function e(a, b, c, d) {
            return a instanceof RegExp ? a : (a instanceof Array && (a = "(" + a.join("|") + ")"), a = a.concat(d ? "" : "/?").replace(/\/\(/g, "(?:/").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g, function(a, c, d, e, f, g) {
                return b.push({
                    name: e,
                    optional: !!g
                }), c = c || "", "" + (g ? "" : c) + "(?:" + (g ? c : "") + (d || "") + (f || d && "([^/.]+?)" || "([^/]+?)") + ")" + (g || "")
            }).replace(/([\/.])/g, "\\$1").replace(/\*/g, "(.*)"), new RegExp("^" + a + "$", c ? "" : "i"))
        }

        function f(b) {
            if (b.state) {
                var c = b.state.path;
                a.replace(c, b.state)
            }
        }

        function g(b) {
            if (1 == h(b) && !(b.metaKey || b.ctrlKey || b.shiftKey || b.defaultPrevented)) {
                for (var c = b.target; c && "A" != c.nodeName;) c = c.parentNode;
                if (c && "A" == c.nodeName) {
                    var d = c.getAttribute("href");
                    if ((c.pathname != location.pathname || !c.hash && "#" != d) && !c.target && i(c.href)) {
                        var e = c.pathname + c.search + (c.hash || ""),
                            f = e + c.hash;
                        e = e.replace(l, ""), l && f == e || (b.preventDefault(), a.show(f))
                    }
                }
            }
        }

        function h(a) {
            return a = a || window.event, null == a.which ? a.button : a.which
        }

        function i(a) {
            var b = location.protocol + "//" + location.hostname;
            return location.port && (b += ":" + location.port), 0 == a.indexOf(b)
        }
        var j, k = !0,
            l = "";
        a.callbacks = [], a.base = function(a) {
            return 0 == arguments.length ? l : void(l = a)
        }, a.start = function(b) {
            if (b = b || {}, !j && (j = !0, !1 === b.dispatch && (k = !1), !1 !== b.popstate && window.addEventListener("popstate", f, !1), !1 !== b.click && window.addEventListener("click", g, !1), k)) {
                var c = location.pathname + location.search + location.hash;
                a.replace(c, null, !0, k)
            }
        }, a.stop = function() {
            j = !1, removeEventListener("click", g, !1), removeEventListener("popstate", f, !1)
        }, a.show = function(b, d, e) {
            var f = new c(b, d);
            return !1 !== e && a.dispatch(f), f.unhandled || f.pushState(), f
        }, a.replace = function(b, d, e, f) {
            var g = new c(b, d);
            return g.init = e, null == f && (f = !0), f && a.dispatch(g), g.save(), g
        }, a.dispatch = function(c) {
            function d() {
                var f = a.callbacks[e++];
                return f ? void f(c, d) : b(c)
            }
            var e = 0;
            d()
        }, a.Context = c, c.prototype.pushState = function() {
            history.pushState(this.state, this.title, this.canonicalPath)
        }, c.prototype.save = function() {
            history.replaceState(this.state, this.title, this.canonicalPath)
        }, a.Route = d, d.prototype.middleware = function(a) {
            var b = this;
            return function(c, d) {
                return b.match(c.path, c.params) ? a(c, d) : void d()
            }
        }, d.prototype.match = function(a, b) {
            var c = this.keys,
                d = a.indexOf("?"),
                e = ~d ? a.slice(0, d) : a,
                f = this.regexp.exec(e);
            if (!f) return !1;
            for (var g = 1, h = f.length; h > g; ++g) {
                var i = c[g - 1],
                    j = "string" == typeof f[g] ? decodeURIComponent(f[g]) : f[g];
                i ? b[i.name] = void 0 !== b[i.name] ? b[i.name] : j : b.push(j)
            }
            return !0
        }, "undefined" == typeof module ? window.page = a : module.exports = a
    }(), window.matchMedia || (window.matchMedia = function() {
        "use strict";
        var a = window.styleMedia || window.media;
        if (!a) {
            var b = document.createElement("style"),
                c = document.getElementsByTagName("script")[0],
                d = null;
            b.type = "text/css", b.id = "matchmediajs-test", c.parentNode.insertBefore(b, c), d = "getComputedStyle" in window && window.getComputedStyle(b, null) || b.currentStyle, a = {
                matchMedium: function(a) {
                    var c = "@media " + a + "{ #matchmediajs-test { width: 1px; } }";
                    return b.styleSheet ? b.styleSheet.cssText = c : b.textContent = c, "1px" === d.width
                }
            }
        }
        return function(b) {
            return {
                matches: a.matchMedium(b || "all"),
                media: b || "all"
            }
        }
    }()),
    function(a) {
        function b() {
            var a = [];
            this.empty = function() {
                for (var b = 0; b < a.length; b++)
                    if (a[b]) return !1;
                return !0
            }, this.add = function(b) {
                a.push(b)
            }, this.addNext = function(b) {
                var c, d = [],
                    e = 0;
                for (c = 0; c < a.length; c++) a[c] && (1 == e && d.push(b), d.push(a[c]), e++);
                2 > e && d.push(b), a = d
            }, this.get = function() {
                for (var b = 0; b < a.length; b++)
                    if (a[b]) return a[b];
                return !1
            }, this.ack = function() {
                for (var b = 0; b < a.length; b++)
                    if (a[b]) {
                        delete a[b];
                        break
                    }
                this.empty() && (a = [])
            }
        }

        function c() {
            var b = {};
            this.add = function(a, c, d) {
                return a = a.toLowerCase(), b[a] || (b[a] = []), b[a].push({
                    obj: c,
                    tag: i(d, "tag")
                }), a + "-" + (b[a].length - 1)
            }, this.get = function(c, d, e) {
                var f, g, h;
                if (c = c.toLowerCase(), !b[c] || !b[c].length) return null;
                for (g = d ? b[c].length : -1, h = d ? -1 : 1, f = 0; f < b[c].length; f++)
                    if (g += h, b[c][g]) {
                        if (void 0 !== e && (void 0 === b[c][g].tag || a.inArray(b[c][g].tag, e) < 0)) continue;
                        return b[c][g].obj
                    }
                return null
            }, this.all = function(c, d) {
                var e, f = [];
                if (c = c.toLowerCase(), !b[c] || !b[c].length) return f;
                for (e = 0; e < b[c].length; e++) b[c][e] && (void 0 !== d && (void 0 === b[c][e].tag || a.inArray(b[c][e].tag, d) < 0) || f.push(b[c][e].obj));
                return f
            }, this.names = function() {
                var a, c = [];
                for (a in b) c.push(a);
                return c
            }, this.refToObj = function(a) {
                return a = a.split("-"), 2 == a.length && b[a[0]] && b[a[0]][a[1]] ? b[a[0]][a[1]].obj : null
            }, this.rm = function(c, d, e) {
                var f, g, h;
                if (c = c.toLowerCase(), !b[c]) return !1;
                if (void 0 !== d)
                    if (e)
                        for (f = b[c].length - 1; f >= 0 && !(void 0 !== b[c][f] && void 0 !== b[c][f].tag && a.inArray(b[c][f].tag, d) >= 0); f--);
                    else
                        for (f = 0; f < b[c].length && !(void 0 !== b[c][f] && void 0 !== b[c][f].tag && a.inArray(b[c][f].tag, d) >= 0); f++);
                else f = e ? b[c].length - 1 : 0;
                if (!(f in b[c])) return !1;
                if ("function" == typeof b[c][f].obj.setMap && b[c][f].obj.setMap(null), "function" == typeof b[c][f].obj.remove && b[c][f].obj.remove(), "function" == typeof b[c][f].obj.free && b[c][f].obj.free(), delete b[c][f].obj, void 0 !== d) {
                    for (h = [], g = 0; g < b[c].length; g++) g !== f && h.push(b[c][g]);
                    b[c] = h
                } else e ? b[c].pop() : b[c].shift();
                return !0
            }, this.clear = function(a, c, d, e) {
                var f, g, h;
                if (a && a.length) a = t(a);
                else {
                    a = [];
                    for (f in b) a.push(f)
                }
                for (g = 0; g < a.length; g++)
                    if (a[g]) {
                        if (h = a[g].toLowerCase(), !b[h]) continue;
                        if (c) this.rm(h, e, !0);
                        else if (d) this.rm(h, e, !1);
                        else
                            for (; this.rm(h, e, !1););
                    }
            }
        }

        function d() {
            var b, c = [],
                d = [],
                e = [],
                f = [],
                g = !1;
            this.events = function() {
                for (var a = 0; a < arguments.length; a++) d.push(arguments[a])
            }, this.startRedraw = function() {
                return g ? !1 : (g = !0, !0)
            }, this.endRedraw = function() {
                g = !1
            }, this.redraw = function() {
                var a, c = [],
                    d = this;
                for (a = 0; a < arguments.length; a++) c.push(arguments[a]);
                this.startRedraw ? (b.apply(d, c), this.endRedraw()) : setTimeout(function() {
                    d.redraw.apply(d, c)
                }, 50)
            }, this.setRedraw = function(a) {
                b = a
            }, this.store = function(a, b, c) {
                e.push({
                    data: a,
                    obj: b,
                    shadow: c
                })
            }, this.free = function() {
                for (var a = 0; a < d.length; a++) google.maps.event.removeListener(d[a]);
                d = [], this.freeAll()
            }, this.freeIndex = function(a) {
                "function" == typeof e[a].obj.setMap && e[a].obj.setMap(null), "function" == typeof e[a].obj.remove && e[a].obj.remove(), e[a].shadow && ("function" == typeof e[a].shadow.remove && e[a].obj.remove(), "function" == typeof e[a].shadow.setMap && e[a].shadow.setMap(null), delete e[a].shadow), delete e[a].obj, delete e[a].data, delete e[a]
            }, this.freeAll = function() {
                var a;
                for (a = 0; a < e.length; a++) e[a] && this.freeIndex(a);
                e = []
            }, this.freeDiff = function(b) {
                var c, d, f = {},
                    g = [];
                for (c = 0; c < b.length; c++) g.push(b[c].idx.join("-"));
                for (c = 0; c < e.length; c++) e[c] && (d = a.inArray(e[c].data.idx.join("-"), g), d >= 0 ? f[d] = !0 : this.freeIndex(c));
                return f
            }, this.add = function(a, b) {
                c.push({
                    latLng: a,
                    marker: b
                })
            }, this.get = function(a) {
                return c[a]
            }, this.clusters = function(a, b, d, e) {
                var g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = a.getProjection(),
                    v = u.fromLatLngToPoint(new google.maps.LatLng(a.getBounds().getNorthEast().lat(), a.getBounds().getSouthWest().lng())),
                    w = a.getZoom(),
                    x = {},
                    y = {},
                    z = {},
                    A = [],
                    B = a.getBounds(),
                    C = d && d <= a.getZoom(),
                    D = a.getZoom() > 2;
                for (t = 0, s = {}, g = 0; g < c.length; g++)(!D || B.contains(c[g].latLng)) && (j = u.fromLatLngToPoint(c[g].latLng), x[g] = [Math.floor((j.x - v.x) * Math.pow(2, w)), Math.floor((j.y - v.y) * Math.pow(2, w))], s[g] = !0, t++);
                if (!e && !C) {
                    for (m = 0; m < f.length && m in s; m++) t--;
                    if (!t) return !1
                }
                f = s, s = [];
                for (g in x) k = x[g][0], l = x[g][1], k in y || (y[k] = {}), l in y[k] || (y[k][l] = g, z[g] = {}, s.push(g)), z[y[k][l]][g] = !0;
                for (b = Math.pow(b, 2), delete y, m = 0;;) {
                    for (; m < s.length && !(s[m] in z);) m++;
                    if (m == s.length) break;
                    if (g = s[m], q = x[g][0], r = x[g][1], y = null, C) y = {
                        lat: q,
                        lng: r,
                        idx: [g]
                    };
                    else
                        do {
                            for (o = {
                                    lat: 0,
                                    lng: 0,
                                    idx: []
                                }, n = m; n < s.length; n++)
                                if (s[n] in z && (h = s[n], Math.pow(q - x[h][0], 2) + Math.pow(r - x[h][1], 2) <= b))
                                    for (i in z[h]) o.lat += c[i].latLng.lat(), o.lng += c[i].latLng.lng(), o.idx.push(i);
                            o.lat /= o.idx.length, o.lng /= o.idx.length, y ? (p = o.idx.length > y.idx.length, p && (y = o)) : (p = o.idx.length > 1, y = o), p && (j = u.fromLatLngToPoint(new google.maps.LatLng(y.lat, y.lng)), q = Math.floor((j.x - v.x) * Math.pow(2, w)), r = Math.floor((j.y - v.y) * Math.pow(2, w)))
                        } while (p);
                    for (n = 0; n < y.idx.length; n++) y.idx[n] in z && delete z[y.idx[n]];
                    A.push(y)
                }
                return A
            }, this.getBounds = function() {
                var a, b = new google.maps.LatLngBounds;
                for (a = 0; a < c.length; a++) b.extend(c[a].latLng);
                return b
            }
        }

        function e(b) {
            for (var c in b) x[c] = "object" == typeof x[c] ? a.extend({}, x[c], b[c]) : b[c]
        }

        function f(a) {
            if (!a) return !0;
            for (var b = 0; b < A.length; b++)
                if (A[b] === a) return !1;
            return !0
        }

        function g(a) {
            for (var b = i(a, "action"), c = 0; c < B.length; c++)
                if (B[c] === b) return !0;
            return !1
        }

        function h(a, b) {
            if (b.toLowerCase) {
                b = b.toLowerCase();
                for (var c in a)
                    if (c.toLowerCase && c.toLowerCase() == b) return c
            }
            return !1
        }

        function i(a, b, c) {
            var d = h(a, b);
            return d ? a[d] : c
        }

        function j(a, b) {
            var c, d;
            if (!a || !b) return !1;
            b = t(b);
            for (c in a)
                if (c.toLowerCase) {
                    c = c.toLowerCase();
                    for (d in b)
                        if (c == b[d]) return !0
                }
            return !1
        }

        function l(a, b, c) {
            if (j(a, z) || j(a, b)) {
                var d, e;
                for (d = 0; d < z.length; d++) e = h(a, z[d]), c[z[d]] = e ? a[e] : {};
                if (b && b.length)
                    for (d = 0; d < b.length; d++)(e = h(a, b[d])) && (c[b[d]] = a[e]);
                return c
            }
            c.options = {};
            for (e in a) "action" !== e && (c.options[e] = a[e]);
            return c
        }

        function m(a, b, c, d) {
            var e, f = h(b, a),
                g = {},
                k = ["map"];
            if (g.callback = i(b, "callback"), c = t(c), d = t(d), f) return l(b[f], c, g);
            if (d && d.length)
                for (e = 0; e < d.length; e++) k.push(d[e]);
            for (j(b, k) || (g = l(b, c, g)), e = 0; e < z.length; e++) z[e] in g || (g[z[e]] = {});
            return g
        }

        function n() {
            return C || (C = new google.maps.Geocoder), C
        }

        function o() {
            return directionsService || (directionsService = new google.maps.DirectionsService), directionsService
        }

        function p() {
            return elevationService || (elevationService = new google.maps.ElevationService), elevationService
        }

        function q() {
            return maxZoomService || (maxZoomService = new google.maps.MaxZoomService), maxZoomService
        }

        function r() {
            return distanceMatrixService || (distanceMatrixService = new google.maps.DistanceMatrixService), distanceMatrixService
        }

        function s(a) {
            return ("number" == typeof a || "string" == typeof a) && "" !== a && !isNaN(a)
        }

        function t(a) {
            var b, c = [];
            if (void 0 !== a)
                if ("object" == typeof a)
                    if ("number" == typeof a.length) c = a;
                    else
                        for (b in a) c.push(a[b]);
            else c.push(a);
            return c
        }

        function u(a, b, c) {
            var d = b ? a : null;
            return a && "string" != typeof a ? a.latLng ? u(a.latLng) : "function" == typeof a.lat ? a : s(a.lat) ? new google.maps.LatLng(a.lat, a.lng) : !c && a.length && s(a[0]) && s(a[1]) ? new google.maps.LatLng(a[0], a[1]) : d : d
        }

        function v(a, b, c) {
            var d, e, f;
            return a ? (f = c ? a : null, "function" == typeof a.getCenter ? a : (a.length ? 2 == a.length ? (d = u(a[0]), e = u(a[1])) : 4 == a.length && (d = u([a[0], a[1]]), e = u([a[2], a[3]])) : "ne" in a && "sw" in a ? (d = u(a.ne), e = u(a.sw)) : "n" in a && "e" in a && "s" in a && "w" in a && (d = u([a.n, a.e]), e = u([a.s, a.w])), d && e ? new google.maps.LatLngBounds(e, d) : f)) : null
        }

        function w(g) {
            var h = new b,
                l = new c,
                s = null,
                w = {},
                z = !1;
            this._plan = function(a) {
                for (var b = 0; b < a.length; b++) h.add(a[b]);
                this._run()
            }, this._planNext = function(a) {
                h.addNext(a)
            }, this._direct = function(b) {
                var c = i(b, "action");
                return this[c](a.extend({}, c in x ? x[c] : {}, b.args ? b.args : b))
            }, this._end = function() {
                z = !1, h.ack(), this._run()
            }, this._run = function() {
                if (!z) {
                    var a = h.get();
                    a && (z = !0, this._proceed(a))
                }
            }, this._proceed = function(b) {
                b = b || {};
                var c, d = i(b, "action") || "init",
                    e = d.toLowerCase(),
                    g = !0,
                    h = i(b, "target"),
                    j = i(b, "args");
                !s && f(e) && this.init(a.extend({}, x.init, b.args && b.args.map ? b.args.map : b.map ? b.map : {}), !0), !h && !j && e in this && "function" == typeof this[e] ? this[e](a.extend({}, e in x ? x[e] : {}, b.args ? b.args : b)) : (h && "object" == typeof h ? (g = "function" == typeof h[d]) && (c = h[d].apply(h, b.args ? b.args : [])) : s && (g = "function" == typeof s[d]) && (c = s[d].apply(s, b.args ? b.args : [])), !g && x.verbose && alert("unknown action : " + d), this._callback(c, b), this._end())
            }, this._resolveLatLng = function(a, b, c, d) {
                var e, f = i(a, "address"),
                    g = this,
                    h = "function" == typeof b ? b : g[b];
                f ? (d || (d = 0), e = "object" == typeof f ? f : {
                    address: f
                }, n().geocode(e, function(e, f) {
                    f === google.maps.GeocoderStatus.OK ? h.apply(g, [a, c ? e : e[0].geometry.location]) : f === google.maps.GeocoderStatus.OVER_QUERY_LIMIT && d < x.queryLimit.attempt ? setTimeout(function() {
                        g._resolveLatLng(a, b, c, d + 1)
                    }, x.queryLimit.delay + Math.floor(Math.random() * x.queryLimit.random)) : (x.verbose && alert("Geocode error : " + f), h.apply(g, [a, !1]))
                })) : h.apply(g, [a, u(a, !1, !0)])
            }, this._resolveAllLatLng = function(a, b, c) {
                var d = this,
                    e = -1,
                    f = function() {
                        do e++; while (e < a[b].length && !("address" in a[b][e]));
                        e < a[b].length ? ! function(a) {
                            d._resolveLatLng(a, function(a, b) {
                                a.latLng = b, f.apply(d, [])
                            })
                        }(a[b][e]) : d[c](a)
                    };
                f()
            }, this._call = function() {
                var a, b = arguments[0],
                    c = [];
                if (arguments.length && s && "function" == typeof s[b]) {
                    for (a = 1; a < arguments.length; a++) c.push(arguments[a]);
                    return s[b].apply(s, c)
                }
            }, this._subcall = function(b, c) {
                var d = {};
                b.map && (c || (c = i(b.map, "latlng")), s ? (b.map.center && c && this._call("setCenter", c), void 0 !== b.map.zoom && this._call("setZoom", b.map.zoom), void 0 !== b.map.mapTypeId && this._call("setMapTypeId", b.map.mapTypeId)) : (c && (d = {
                    center: c
                }), this.init(a.extend({}, b.map, d), !0)))
            }, this._attachEvent = function(a, b, c, d, e) {
                google.maps.event["addListener" + (e ? "Once" : "")](a, b, function(b) {
                    c.apply(g, [a, b, d])
                })
            }, this._attachEvents = function(a, b) {
                var c;
                if (b) {
                    if (b.events)
                        for (c in b.events) "function" == typeof b.events[c] && this._attachEvent(a, c, b.events[c], b.data, !1);
                    if (b.onces)
                        for (c in b.onces) "function" == typeof b.onces[c] && this._attachEvent(a, c, b.onces[c], b.data, !0)
                }
            }, this._callback = function(a, b) {
                if ("function" == typeof b.callback) b.callback.apply(g, [a]);
                else if ("object" == typeof b.callback)
                    for (var c = 0; c < b.callback.length; c++) "function" == typeof b.callback[c] && b.callback[k].apply(g, [a])
            }, this._manageEnd = function(a, b, c) {
                var d, e;
                if (a && "object" == typeof a && (this._attachEvents(a, b), b.apply && b.apply.length))
                    for (d = 0; d < b.apply.length; d++) e = b.apply[d], e.action && "function" == typeof a[e.action] && (e.args ? a[e.action].apply(a, e.args) : a[e.action]());
                c || (this._callback(a, b), this._end())
            }, this.destroy = function(a) {
                var b;
                l.clear(), g.empty();
                for (b in w) delete w[b];
                w = {}, s && delete s, this._callback(null, a), this._end()
            }, this.init = function(b, c) {
                var d, e, f;
                if (s) return this._end();
                if (d = m("map", b), "boolean" == typeof d.options.center && d.options.center) return !1;
                f = a.extend({}, x.init, d.options), f.center || (f.center = [x.init.center.lat, x.init.center.lng]), f.center = u(f.center), s = new x.classes.Map(g.get(0), f);
                for (e in w) s.mapTypes.set(e, w[e]);
                return this._manageEnd(s, d, c), !0
            }, this.getlatlng = function(a) {
                this._resolveLatLng(a, "_getLatLng", !0)
            }, this._getLatLng = function(a, b) {
                this._manageEnd(b, a)
            }, this.getaddress = function(a, b) {
                var c = u(a, !1, !0),
                    d = i(a, "address"),
                    e = c ? {
                        latLng: c
                    } : d ? "string" == typeof d ? {
                        address: d
                    } : d : null,
                    f = i(a, "callback"),
                    h = this;
                b || (b = 0), e && "function" == typeof f ? n().geocode(e, function(c, d) {
                    if (d === google.maps.GeocoderStatus.OVER_QUERY_LIMIT && b < x.queryLimit.attempt) setTimeout(function() {
                        h.getaddress(a, b + 1)
                    }, x.queryLimit.delay + Math.floor(Math.random() * x.queryLimit.random));
                    else {
                        var e = d === google.maps.GeocoderStatus.OK ? c : !1;
                        f.apply(g, [e, d]), !e && x.verbose && alert("Geocode error : " + d), h._end()
                    }
                }) : this._end()
            }, this.getroute = function(a) {
                var b = i(a, "callback"),
                    c = this;
                "function" == typeof b && a.options ? (a.options.origin = u(a.options.origin, !0), a.options.destination = u(a.options.destination, !0), o().route(a.options, function(a, d) {
                    var e = d == google.maps.DirectionsStatus.OK ? a : !1;
                    b.apply(g, [e, d]), c._end()
                })) : this._end()
            }, this.getelevation = function(a) {
                var b, c, d, e, f = [],
                    h = i(a, "callback"),
                    j = i(a, "latlng"),
                    k = this;
                if ("function" == typeof h) {
                    if (b = function(a, b) {
                            var c = b === google.maps.ElevationStatus.OK ? a : !1;
                            h.apply(g, [c, b]), k._end()
                        }, j) f.push(u(j));
                    else if (f = i(a, "locations") || [])
                        for (f = t(f), e = 0; e < f.length; e++) f[e] = u(f[e]);
                    if (f.length) p().getElevationForLocations({
                        locations: f
                    }, b);
                    else if (c = i(a, "path"), d = i(a, "samples"), c && d) {
                        for (e = 0; e < c.length; e++) f.push(u(c[e]));
                        f.length && p().getElevationAlongPath({
                            path: f,
                            samples: d
                        }, b)
                    }
                } else this._end()
            }, this.getdistance = function(a) {
                var b, c = i(a, "callback"),
                    d = this;
                if ("function" == typeof c && a.options && a.options.origins && a.options.destinations) {
                    for (a.options.origins = t(a.options.origins), b = 0; b < a.options.origins.length; b++) a.options.origins[b] = u(a.options.origins[b], !0);
                    for (a.options.destinations = t(a.options.destinations), b = 0; b < a.options.destinations.length; b++) a.options.destinations[b] = u(a.options.destinations[b], !0);
                    r().getDistanceMatrix(a.options, function(a, b) {
                        var e = b == google.maps.DistanceMatrixStatus.OK ? a : !1;
                        c.apply(g, [e, b]), d._end()
                    })
                } else this._end()
            }, this.addmarker = function(a) {
                this._resolveLatLng(a, "_addMarker")
            }, this._addMarker = function(a, b, c) {
                var d, e, f, g = m("marker", a, "to");
                if (c) {
                    if (!b) return
                } else {
                    if (!b) return void this._manageEnd(!1, g);
                    this._subcall(a, b)
                }
                return g.to ? (f = l.refToObj(g.to), d = f && "function" == typeof f.add, d && (f.add(b, a), "function" == typeof f.redraw && f.redraw()), c || this._manageEnd(d, g)) : (g.options.position = b, g.options.map = s, d = new x.classes.Marker(g.options), j(a, "infowindow") && (e = m("infowindow", a.infowindow, "open"), (void 0 === e.open || e.open) && (e.apply = t(e.apply), e.apply.unshift({
                    action: "open",
                    args: [s, d]
                })), e.action = "addinfowindow", this._planNext(e)), c || (l.add("marker", d, g), this._manageEnd(d, g))), d
            }, this.addmarkers = function(a) {
                i(a, "clusters") ? this._resolveAllLatLng(a, "markers", "_addclusteredmarkers") : this._resolveAllLatLng(a, "markers", "_addmarkers")
            }, this._addmarkers = function(b) {
                var c, d, e, f, g, h, j, k = {},
                    n = i(b, "markers");
                if (this._subcall(b), "object" != typeof n) return this._end();
                if (d = m("marker", b, ["to", "markers"]), d.to) {
                    if (j = l.refToObj(d.to), c = j && "function" == typeof j.add) {
                        for (e = 0; e < n.length; e++)(f = u(n[e])) && j.add(f, n[e]);
                        "function" == typeof j.redraw && j.redraw()
                    }
                    this._manageEnd(c, d)
                } else {
                    for (a.extend(!0, k, d.options), k.map = s, c = [], e = 0; e < n.length; e++)(f = u(n[e])) && (n[e].options ? (h = {}, a.extend(!0, h, k, n[e].options), d.options = h) : d.options = k, d.options.position = f, g = new x.classes.Marker(d.options), c.push(g), d.data = n[e].data, d.tag = n[e].tag, l.add("marker", g, d), this._manageEnd(g, d, !0));
                    d.options = k, this._callback(c, b), this._end()
                }
            }, this._addclusteredmarkers = function(a) {
                var b, c, e, f, g = this,
                    h = i(a, "radius"),
                    j = i(a, "maxZoom"),
                    k = i(a, "markers"),
                    l = i(a, "clusters");
                if (!s.getBounds()) return void google.maps.event.addListenerOnce(s, "bounds_changed", function() {
                    g._addclusteredmarkers(a)
                });
                if ("number" == typeof h) {
                    for (b = new d, c = 0; c < k.length; c++) e = u(k[c]), b.add(e, k[c]);
                    f = this._initClusters(a, b, h, j, l)
                }
                this._callback(f, a), this._end()
            }, this._initClusters = function(a, b, c, d, e) {
                var f = this;
                return b.setRedraw(function(g) {
                    var h, i = b.clusters(s, c, d, g);
                    i && (h = b.freeDiff(i), f._displayClusters(a, b, i, h, e))
                }), b.events(google.maps.event.addListener(s, "zoom_changed", function() {
                    b.redraw(!0)
                }), google.maps.event.addListener(s, "bounds_changed", function() {
                    b.redraw()
                })), b.redraw(), l.add("cluster", b, a)
            }, this._displayClusters = function(b, c, d, e, f) {
                var g, h, k, l, n, o, p, q, r, s, t, v, w, x = j(b, "cluster") ? m("", i(b, "cluster")) : {},
                    y = j(b, "marker") ? m("", i(b, "marker")) : {};
                for (h = 0; h < d.length; h++)
                    if (!(h in e)) {
                        if (q = d[h], n = !1, q.idx.length > 1) {
                            l = 0;
                            for (g in f) g > l && g <= q.idx.length && (l = g);
                            if (f[l]) {
                                for (t = i(f[l], "width"), v = i(f[l], "height"), w = {}, a.extend(!0, w, x, {
                                        options: {
                                            pane: "overlayLayer",
                                            content: f[l].content.replace("CLUSTER_COUNT", q.idx.length),
                                            offset: {
                                                x: -t / 2,
                                                y: -v / 2
                                            }
                                        }
                                    }), o = this._addOverlay(w, u(q), !0), w.options.pane = "floatShadow", w.options.content = a("<div></div>"), w.options.content.width(t), w.options.content.height(v), p = this._addOverlay(w, u(q), !0), x.data = {
                                        latLng: u(q),
                                        markers: []
                                    }, k = 0; k < q.idx.length; k++) x.data.markers.push(c.get(q.idx[k]).marker);
                                this._attachEvents(p, x), c.store(q, o, p), n = !0
                            }
                        }
                        if (!n) {
                            for (r = {}, a.extend(!0, r, y.options), k = 0; k < q.idx.length; k++) l = c.get(q.idx[k]), y.latLng = l.latLng, y.data = l.marker.data, y.tag = l.marker.tag, l.marker.options ? (s = {}, a.extend(!0, s, r, l.marker.options), y.options = s) : y.options = r, o = this._addMarker(y, y.latLng, !0), this._attachEvents(o, y), c.store(q, o);
                            y.options = r
                        }
                    }
            }, this.addinfowindow = function(a) {
                this._resolveLatLng(a, "_addInfoWindow")
            }, this._addInfoWindow = function(a, b) {
                var c, d, e = [];
                this._subcall(a, b), c = m("infowindow", a, ["open", "anchor"]), b && (c.options.position = b), d = new x.classes.InfoWindow(c.options), (void 0 === c.open || c.open) && (c.apply = t(c.apply), e.push(s), c.anchor && e.push(c.anchor), c.apply.unshift({
                    action: "open",
                    args: e
                })), l.add("infowindow", d, c), this._manageEnd(d, c)
            }, this.addpolyline = function(a) {
                this._addPoly(a, "Polyline", "path")
            }, this.addpolygon = function(a) {
                this._addPoly(a, "Polygon", "paths")
            }, this._addPoly = function(a, b, c) {
                var d, e, f, g = m(b.toLowerCase(), a, c);
                if (g[c])
                    for (g.options[c] = [], d = 0; d < g[c].length; d++)(f = u(g[c][d])) && g.options[c].push(f);
                e = new google.maps[b](g.options), e.setMap(s), l.add(b.toLowerCase(), e, g), this._manageEnd(e, g)
            }, this.addcircle = function(a) {
                this._resolveLatLng(a, "_addCircle")
            }, this._addCircle = function(a, b) {
                var c, d = m("circle", a);
                return b || (b = u(d.options.center)), b ? (this._subcall(a, b), d.options.center = b, d.options.map = s, c = new x.classes.Circle(d.options), l.add("circle", c, d), void this._manageEnd(c, d)) : this._manageEnd(!1, d)
            }, this.addrectangle = function(a) {
                this._resolveLatLng(a, "_addRectangle")
            }, this._addRectangle = function(a) {
                var b, c = m("rectangle", a);
                return c.options.bounds = v(c.options.bounds, !0), c.options.bounds ? (this._subcall(a, c.options.bounds.getCenter()), c.options.map = s, b = new x.classes.Rectangle(c.options), l.add("rectangle", b, c), void this._manageEnd(b, c)) : this._manageEnd(!1, c)
            }, this.addoverlay = function(a) {
                this._resolveLatLng(a, "_addOverlay")
            }, this._addOverlay = function(b, c, d) {
                function e() {
                    x.classes.OverlayView.call(this), this.setMap(s)
                }
                var f, g = m("overlay", b),
                    h = a.extend({
                        pane: "floatPane",
                        content: "",
                        offset: {
                            x: 0,
                            y: 0
                        }
                    }, g.options),
                    i = a("<div></div>"),
                    j = [];
                return i.css("border", "none").css("borderWidth", "0px").css("position", "absolute"), i.append(h.content), e.prototype = new x.classes.OverlayView, e.prototype.onAdd = function() {
                    var b = this.getPanes();
                    h.pane in b && a(b[h.pane]).append(i)
                }, e.prototype.draw = function() {
                    var b = this.getProjection(),
                        d = b.fromLatLngToDivPixel(c),
                        e = this;
                    i.css("left", d.x + h.offset.x + "px").css("top", d.y + h.offset.y + "px"), a.each("dblclick click mouseover mousemove mouseout mouseup mousedown".split(" "), function(a, b) {
                        j.push(google.maps.event.addDomListener(i[0], b, function() {
                            google.maps.event.trigger(e, b)
                        }))
                    }), j.push(google.maps.event.addDomListener(i[0], "contextmenu", function() {
                        google.maps.event.trigger(e, "rightclick")
                    }))
                }, e.prototype.onRemove = function() {
                    for (var a = 0; a < j.length; a++) google.maps.event.removeListener(j[a]);
                    i.remove()
                }, e.prototype.hide = function() {
                    i.hide()
                }, e.prototype.show = function() {
                    i.show()
                }, e.prototype.toggle = function() {
                    i && (i.is(":visible") ? this.show() : this.hide())
                }, e.prototype.toggleDOM = function() {
                    this.setMap(this.getMap() ? null : s)
                }, e.prototype.getDOMElement = function() {
                    return i[0]
                }, f = new e, d || (l.add("overlay", f, g), this._manageEnd(f, g)), f
            }, this.addfixpanel = function(b) {
                var c, d, e = m("fixpanel", b),
                    f = y = 0;
                e.options.content && (c = a(e.options.content), void 0 !== e.options.left ? f = e.options.left : void 0 !== e.options.right ? f = g.width() - c.width() - e.options.right : e.options.center && (f = (g.width() - c.width()) / 2), void 0 !== e.options.top ? y = e.options.top : void 0 !== e.options.bottom ? y = g.height() - c.height() - e.options.bottom : e.options.middle && (y = (g.height() - c.height()) / 2), d = a("<div></div>").css("position", "absolute").css("top", y + "px").css("left", f + "px").css("z-index", "1000").append(c), g.first().prepend(d), this._attachEvents(s, e), l.add("fixpanel", d, e), this._callback(d, e)), this._end()
            }, this.adddirectionsrenderer = function(a, b) {
                var c, d = m("directionrenderer", a, "panelId");
                return d.options.map = s, c = new google.maps.DirectionsRenderer(d.options), d.panelId && c.setPanel(document.getElementById(d.panelId)), l.add("directionrenderer", c, d), this._manageEnd(c, d, b), c
            }, this.setdirectionspanel = function(a) {
                var b = l.get("directionrenderer"),
                    c = m("directionpanel", a, "id");
                b && c.id && b.setPanel(document.getElementById(c.id)), this._manageEnd(b, c)
            }, this.setdirections = function(a) {
                var b = l.get("directionrenderer"),
                    c = m("directions", a);
                a && (c.options.directions = a.directions ? a.directions : a.options && a.options.directions ? a.options.directions : null), c.options.directions && (b ? b.setDirections(c.options.directions) : b = this.adddirectionsrenderer(c, !0)), this._manageEnd(b, c)
            }, this.setstreetview = function(a) {
                var b, c = m("streetview", a, "id");
                c.options.position && (c.options.position = u(c.options.position)), b = new x.classes.StreetViewPanorama(document.getElementById(c.id), c.options), b && s.setStreetView(b), this._manageEnd(b, c)
            }, this.addkmllayer = function(a) {
                var b, c = m("kmllayer", a, "url");
                c.options.map = s, "string" == typeof c.url && (b = new x.classes.KmlLayer(c.url, c.options)), l.add("kmllayer", b, c), this._manageEnd(b, c)
            }, this.addtrafficlayer = function(a) {
                var b = m("trafficlayer", a),
                    c = l.get("trafficlayer");
                c || (c = new x.classes.TrafficLayer, c.setMap(s), l.add("trafficlayer", c, b)), this._manageEnd(c, b)
            }, this.addbicyclinglayer = function(a) {
                var b = m("bicyclinglayer", a),
                    c = l.get("bicyclinglayer");
                c || (c = new x.classes.BicyclingLayer, c.setMap(s), l.add("bicyclinglayer", c, b)), this._manageEnd(c, b)
            }, this.addgroundoverlay = function(a) {
                var b, c = m("groundoverlay", a, ["bounds", "url"]);
                c.bounds = v(c.bounds), c.bounds && "string" == typeof c.url && (b = new x.classes.GroundOverlay(c.url, c.bounds), b.setMap(s), l.add("groundoverlay", b, c)), this._manageEnd(b, c)
            }, this.geolatlng = function(a) {
                var b = i(a, "callback");
                "function" == typeof b && (navigator.geolocation ? navigator.geolocation.getCurrentPosition(function(a) {
                    var c = new google.maps.LatLng(a.coords.latitude, a.coords.longitude);
                    b.apply(g, [c])
                }, function() {
                    var a = !1;
                    b.apply(g, [a])
                }) : google.gears ? google.gears.factory.create("beta.geolocation").getCurrentPosition(function(a) {
                    var c = new google.maps.LatLng(a.latitude, a.longitude);
                    b.apply(g, [c])
                }, function() {
                    out = !1, b.apply(g, [out])
                }) : b.apply(g, [!1])), this._end()
            }, this.addstyledmap = function(a, b) {
                var c = m("styledmap", a, ["id", "style"]);
                c.style && c.id && !w[c.id] && (w[c.id] = new x.classes.StyledMapType(c.style, c.options), s && s.mapTypes.set(c.id, w[c.id])), this._manageEnd(w[c.id], c, b)
            }, this.setstyledmap = function(a) {
                var b = m("styledmap", a, ["id", "style"]);
                b.id && (this.addstyledmap(b, !0), w[b.id] && (s.setMapTypeId(b.id), this._callback(w[b.id], a))), this._manageEnd(w[b.id], b)
            }, this.clear = function(a) {
                var b = t(i(a, "list") || i(a, "name")),
                    c = i(a, "last", !1),
                    d = i(a, "first", !1),
                    e = i(a, "tag");
                void 0 !== e && (e = t(e)), l.clear(b, c, d, e), this._end()
            }, this.get = function(a) {
                var b = i(a, "name") || "map",
                    c = i(a, "first"),
                    d = i(a, "all"),
                    e = i(a, "tag");
                return b = b.toLowerCase(), "map" === b ? s : (void 0 !== e && (e = t(e)), c ? l.get(b, !1, e) : d ? l.all(b, e) : l.get(b, !0, e))
            }, this.getmaxzoom = function(a) {
                this._resolveLatLng(a, "_getMaxZoom")
            }, this._getMaxZoom = function(a, b) {
                var c = i(a, "callback"),
                    d = this;
                c && "function" == typeof c ? q().getMaxZoomAtLatLng(b, function(a) {
                    var b = a.status === google.maps.MaxZoomStatus.OK ? a.zoom : !1;
                    c.apply(g, [b, a.status]), d._end()
                }) : this._end()
            }, this.setdefault = function(a) {
                e(a), this._end()
            }, this.autofit = function(a, b) {
                var c, d, e, f, g, h = !0,
                    j = new google.maps.LatLngBounds,
                    k = i(a, "maxZoom", null);
                for (c = l.names(), f = 0; f < c.length; f++)
                    for (d = l.all(c[f]), g = 0; g < d.length; g++) e = d[g], e.getPosition ? (j.extend(e.getPosition()), h = !1) : e.getBounds ? (j.extend(e.getBounds().getNorthEast()), j.extend(e.getBounds().getSouthWest()), h = !1) : e.getPaths ? e.getPaths().forEach(function(a) {
                        a.forEach(function(a) {
                            j.extend(a), h = !1
                        })
                    }) : e.getPath ? e.getPath().forEach(function(a) {
                        j.extend(a), h = !1
                    }) : e.getCenter && (j.extend(e.getCenter()), h = !1);
                h || s.getBounds() && s.getBounds().equals(j) || (null !== k && google.maps.event.addListenerOnce(s, "bounds_changed", function() {
                    this.getZoom() > k && this.setZoom(k)
                }), s.fitBounds(j)), b || this._manageEnd(h ? !1 : j, a, b)
            }
        }
        var x = {
                verbose: !1,
                queryLimit: {
                    attempt: 5,
                    delay: 250,
                    random: 250
                },
                init: {
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    center: [46.578498, 2.457275],
                    zoom: 2
                },
                classes: {
                    Map: google.maps.Map,
                    Marker: google.maps.Marker,
                    InfoWindow: google.maps.InfoWindow,
                    Circle: google.maps.Circle,
                    Rectangle: google.maps.Rectangle,
                    OverlayView: google.maps.OverlayView,
                    StreetViewPanorama: google.maps.StreetViewPanorama,
                    KmlLayer: google.maps.KmlLayer,
                    TrafficLayer: google.maps.TrafficLayer,
                    BicyclingLayer: google.maps.BicyclingLayer,
                    GroundOverlay: google.maps.GroundOverlay,
                    StyledMapType: google.maps.StyledMapType
                }
            },
            z = ["events", "onces", "options", "apply", "callback", "data", "tag"],
            A = ["init", "geolatlng", "getlatlng", "getroute", "getelevation", "getdistance", "addstyledmap", "setdefault", "destroy"],
            B = ["get"],
            C = directionsService = elevationService = maxZoomService = distanceMatrixService = null;
        a.fn.gmap3 = function() {
            var b, c, d = [],
                f = !0,
                h = [];
            for (b = 0; b < arguments.length; b++) c = arguments[b] || {}, "string" == typeof c && (c = {
                action: c
            }), d.push(c);
            return d.length || d.push({}), a.each(this, function() {
                var b = a(this),
                    c = b.data("gmap3");
                f = !1, c || (c = new w(b), b.data("gmap3", c)), 1 == d.length && g(d[0]) ? h.push(c._direct(d[0])) : c._plan(d)
            }), h.length ? 1 === h.length ? h[0] : h : (f && 2 == arguments.length && "string" == typeof arguments[0] && "setdefault" === arguments[0].toLowerCase() && e(arguments[1]), this)
        }
    }(jQuery);
var THREE = THREE || {
    REVISION: "59"
};
self.console = self.console || {
        info: function() {},
        log: function() {},
        debug: function() {},
        warn: function() {},
        error: function() {}
    }, String.prototype.trim = String.prototype.trim || function() {
        return this.replace(/^\s+|\s+$/g, "")
    }, THREE.extend = function(a, b) {
        if (Object.keys)
            for (var c = Object.keys(b), d = 0, e = c.length; e > d; d++) {
                var f = c[d];
                Object.defineProperty(a, f, Object.getOwnPropertyDescriptor(b, f))
            } else {
                var g = {}.hasOwnProperty;
                for (var f in b) g.call(b, f) && (a[f] = b[f])
            }
        return a
    },
    function() {
        for (var a = 0, b = ["ms", "moz", "webkit", "o"], c = 0; c < b.length && !self.requestAnimationFrame; ++c) self.requestAnimationFrame = self[b[c] + "RequestAnimationFrame"], self.cancelAnimationFrame = self[b[c] + "CancelAnimationFrame"] || self[b[c] + "CancelRequestAnimationFrame"];
        void 0 === self.requestAnimationFrame && void 0 !== self.setTimeout && (self.requestAnimationFrame = function(b) {
            var c = Date.now(),
                d = Math.max(0, 16 - (c - a)),
                e = self.setTimeout(function() {
                    b(c + d)
                }, d);
            return a = c + d, e
        }), void 0 === self.cancelAnimationFrame && void 0 !== self.clearTimeout && (self.cancelAnimationFrame = function(a) {
            self.clearTimeout(a)
        })
    }(), THREE.CullFaceNone = 0, THREE.CullFaceBack = 1, THREE.CullFaceFront = 2, THREE.CullFaceFrontBack = 3, THREE.FrontFaceDirectionCW = 0, THREE.FrontFaceDirectionCCW = 1, THREE.BasicShadowMap = 0, THREE.PCFShadowMap = 1, THREE.PCFSoftShadowMap = 2, THREE.FrontSide = 0, THREE.BackSide = 1, THREE.DoubleSide = 2, THREE.NoShading = 0, THREE.FlatShading = 1, THREE.SmoothShading = 2, THREE.NoColors = 0, THREE.FaceColors = 1, THREE.VertexColors = 2, THREE.NoBlending = 0, THREE.NormalBlending = 1, THREE.AdditiveBlending = 2, THREE.SubtractiveBlending = 3, THREE.MultiplyBlending = 4, THREE.CustomBlending = 5, THREE.AddEquation = 100, THREE.SubtractEquation = 101, THREE.ReverseSubtractEquation = 102, THREE.ZeroFactor = 200, THREE.OneFactor = 201, THREE.SrcColorFactor = 202, THREE.OneMinusSrcColorFactor = 203, THREE.SrcAlphaFactor = 204, THREE.OneMinusSrcAlphaFactor = 205, THREE.DstAlphaFactor = 206, THREE.OneMinusDstAlphaFactor = 207, THREE.DstColorFactor = 208, THREE.OneMinusDstColorFactor = 209, THREE.SrcAlphaSaturateFactor = 210, THREE.MultiplyOperation = 0, THREE.MixOperation = 1, THREE.AddOperation = 2, THREE.UVMapping = function() {}, THREE.CubeReflectionMapping = function() {}, THREE.CubeRefractionMapping = function() {}, THREE.SphericalReflectionMapping = function() {}, THREE.SphericalRefractionMapping = function() {}, THREE.RepeatWrapping = 1e3, THREE.ClampToEdgeWrapping = 1001, THREE.MirroredRepeatWrapping = 1002, THREE.NearestFilter = 1003, THREE.NearestMipMapNearestFilter = 1004, THREE.NearestMipMapLinearFilter = 1005, THREE.LinearFilter = 1006, THREE.LinearMipMapNearestFilter = 1007, THREE.LinearMipMapLinearFilter = 1008, THREE.UnsignedByteType = 1009, THREE.ByteType = 1010, THREE.ShortType = 1011, THREE.UnsignedShortType = 1012, THREE.IntType = 1013, THREE.UnsignedIntType = 1014, THREE.FloatType = 1015, THREE.UnsignedShort4444Type = 1016, THREE.UnsignedShort5551Type = 1017, THREE.UnsignedShort565Type = 1018, THREE.AlphaFormat = 1019, THREE.RGBFormat = 1020, THREE.RGBAFormat = 1021, THREE.LuminanceFormat = 1022, THREE.LuminanceAlphaFormat = 1023, THREE.RGB_S3TC_DXT1_Format = 2001, THREE.RGBA_S3TC_DXT1_Format = 2002, THREE.RGBA_S3TC_DXT3_Format = 2003, THREE.RGBA_S3TC_DXT5_Format = 2004, THREE.Color = function(a) {
        return void 0 !== a && this.set(a), this
    }, THREE.Color.prototype = {
        constructor: THREE.Color,
        r: 1,
        g: 1,
        b: 1,
        set: function(a) {
            return a instanceof THREE.Color ? this.copy(a) : "number" == typeof a ? this.setHex(a) : "string" == typeof a && this.setStyle(a), this
        },
        setHex: function(a) {
            return a = Math.floor(a), this.r = (a >> 16 & 255) / 255, this.g = (a >> 8 & 255) / 255, this.b = (255 & a) / 255, this
        },
        setRGB: function(a, b, c) {
            return this.r = a, this.g = b, this.b = c, this
        },
        setHSL: function(a, b, c) {
            if (0 === b) this.r = this.g = this.b = c;
            else {
                var d = function(a, b, c) {
                        return 0 > c && (c += 1), c > 1 && (c -= 1), 1 / 6 > c ? a + 6 * (b - a) * c : .5 > c ? b : 2 / 3 > c ? a + 6 * (b - a) * (2 / 3 - c) : a
                    },
                    e = .5 >= c ? c * (1 + b) : c + b - c * b,
                    f = 2 * c - e;
                this.r = d(f, e, a + 1 / 3), this.g = d(f, e, a), this.b = d(f, e, a - 1 / 3)
            }
            return this
        },
        setStyle: function(a) {
            if (/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a)) {
                var b = /^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a);
                return this.r = Math.min(255, parseInt(b[1], 10)) / 255, this.g = Math.min(255, parseInt(b[2], 10)) / 255, this.b = Math.min(255, parseInt(b[3], 10)) / 255, this
            }
            if (/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a)) {
                var b = /^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a);
                return this.r = Math.min(100, parseInt(b[1], 10)) / 100, this.g = Math.min(100, parseInt(b[2], 10)) / 100, this.b = Math.min(100, parseInt(b[3], 10)) / 100, this
            }
            if (/^\#([0-9a-f]{6})$/i.test(a)) {
                var b = /^\#([0-9a-f]{6})$/i.exec(a);
                return this.setHex(parseInt(b[1], 16)), this
            }
            if (/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a)) {
                var b = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a);
                return this.setHex(parseInt(b[1] + b[1] + b[2] + b[2] + b[3] + b[3], 16)), this
            }
            return /^(\w+)$/i.test(a) ? (this.setHex(THREE.ColorKeywords[a]), this) : void 0
        },
        copy: function(a) {
            return this.r = a.r, this.g = a.g, this.b = a.b, this
        },
        copyGammaToLinear: function(a) {
            return this.r = a.r * a.r, this.g = a.g * a.g, this.b = a.b * a.b, this
        },
        copyLinearToGamma: function(a) {
            return this.r = Math.sqrt(a.r), this.g = Math.sqrt(a.g), this.b = Math.sqrt(a.b), this
        },
        convertGammaToLinear: function() {
            var a = this.r,
                b = this.g,
                c = this.b;
            return this.r = a * a, this.g = b * b, this.b = c * c, this
        },
        convertLinearToGamma: function() {
            return this.r = Math.sqrt(this.r), this.g = Math.sqrt(this.g), this.b = Math.sqrt(this.b), this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function() {
            var a = {
                h: 0,
                s: 0,
                l: 0
            };
            return function() {
                var b, c, d = this.r,
                    e = this.g,
                    f = this.b,
                    g = Math.max(d, e, f),
                    h = Math.min(d, e, f),
                    i = (h + g) / 2;
                if (h === g) b = 0, c = 0;
                else {
                    var j = g - h;
                    switch (c = .5 >= i ? j / (g + h) : j / (2 - g - h), g) {
                        case d:
                            b = (e - f) / j + (f > e ? 6 : 0);
                            break;
                        case e:
                            b = (f - d) / j + 2;
                            break;
                        case f:
                            b = (d - e) / j + 4
                    }
                    b /= 6
                }
                return a.h = b, a.s = c, a.l = i, a
            }
        }(),
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: function(a, b, c) {
            var d = this.getHSL();
            return d.h += a, d.s += b, d.l += c, this.setHSL(d.h, d.s, d.l), this
        },
        add: function(a) {
            return this.r += a.r, this.g += a.g, this.b += a.b, this
        },
        addColors: function(a, b) {
            return this.r = a.r + b.r, this.g = a.g + b.g, this.b = a.b + b.b, this
        },
        addScalar: function(a) {
            return this.r += a, this.g += a, this.b += a, this
        },
        multiply: function(a) {
            return this.r *= a.r, this.g *= a.g, this.b *= a.b, this
        },
        multiplyScalar: function(a) {
            return this.r *= a, this.g *= a, this.b *= a, this
        },
        lerp: function(a, b) {
            return this.r += (a.r - this.r) * b, this.g += (a.g - this.g) * b, this.b += (a.b - this.b) * b, this
        },
        equals: function(a) {
            return a.r === this.r && a.g === this.g && a.b === this.b
        },
        clone: function() {
            return (new THREE.Color).setRGB(this.r, this.g, this.b)
        }
    }, THREE.ColorKeywords = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    }, THREE.Quaternion = function(a, b, c, d) {
        this._x = a || 0, this._y = b || 0, this._z = c || 0, this._w = void 0 !== d ? d : 1
    }, THREE.Quaternion.prototype = {
        constructor: THREE.Quaternion,
        _x: 0,
        _y: 0,
        _z: 0,
        _w: 0,
        _euler: void 0,
        _updateEuler: function() {
            void 0 !== this._euler && this._euler.setFromQuaternion(this, void 0, !1)
        },
        get x() {
            return this._x
        },
        set x(a) {
            this._x = a, this._updateEuler()
        },
        get y() {
            return this._y
        },
        set y(a) {
            this._y = a, this._updateEuler()
        },
        get z() {
            return this._z
        },
        set z(a) {
            this._z = a, this._updateEuler()
        },
        get w() {
            return this._w
        },
        set w(a) {
            this._w = a, this._updateEuler()
        },
        set: function(a, b, c, d) {
            return this._x = a, this._y = b, this._z = c, this._w = d, this._updateEuler(), this
        },
        copy: function(a) {
            return this._x = a._x, this._y = a._y, this._z = a._z, this._w = a._w, this._updateEuler(), this
        },
        setFromEuler: function(a, b) {
            void 0 === typeof a.order && console.error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");
            var c = Math.cos(a._x / 2),
                d = Math.cos(a._y / 2),
                e = Math.cos(a._z / 2),
                f = Math.sin(a._x / 2),
                g = Math.sin(a._y / 2),
                h = Math.sin(a._z / 2);
            return void 0 === a.order || "XYZ" === a.order ? (this._x = f * d * e + c * g * h, this._y = c * g * e - f * d * h, this._z = c * d * h + f * g * e, this._w = c * d * e - f * g * h) : "YXZ" === a.order ? (this._x = f * d * e + c * g * h, this._y = c * g * e - f * d * h, this._z = c * d * h - f * g * e, this._w = c * d * e + f * g * h) : "ZXY" === a.order ? (this._x = f * d * e - c * g * h, this._y = c * g * e + f * d * h, this._z = c * d * h + f * g * e, this._w = c * d * e - f * g * h) : "ZYX" === a.order ? (this._x = f * d * e - c * g * h, this._y = c * g * e + f * d * h, this._z = c * d * h - f * g * e, this._w = c * d * e + f * g * h) : "YZX" === a.order ? (this._x = f * d * e + c * g * h, this._y = c * g * e + f * d * h, this._z = c * d * h - f * g * e, this._w = c * d * e - f * g * h) : "XZY" === a.order && (this._x = f * d * e - c * g * h, this._y = c * g * e - f * d * h, this._z = c * d * h + f * g * e, this._w = c * d * e + f * g * h), b !== !1 && this._updateEuler(), this
        },
        setFromAxisAngle: function(a, b) {
            var c = b / 2,
                d = Math.sin(c);
            return this._x = a.x * d, this._y = a.y * d, this._z = a.z * d, this._w = Math.cos(c), this._updateEuler(), this
        },
        setFromRotationMatrix: function(a) {
            var b, c = a.elements,
                d = c[0],
                e = c[4],
                f = c[8],
                g = c[1],
                h = c[5],
                i = c[9],
                j = c[2],
                k = c[6],
                l = c[10],
                m = d + h + l;
            return m > 0 ? (b = .5 / Math.sqrt(m + 1), this._w = .25 / b, this._x = (k - i) * b, this._y = (f - j) * b, this._z = (g - e) * b) : d > h && d > l ? (b = 2 * Math.sqrt(1 + d - h - l), this._w = (k - i) / b, this._x = .25 * b, this._y = (e + g) / b, this._z = (f + j) / b) : h > l ? (b = 2 * Math.sqrt(1 + h - d - l), this._w = (f - j) / b, this._x = (e + g) / b, this._y = .25 * b, this._z = (i + k) / b) : (b = 2 * Math.sqrt(1 + l - d - h), this._w = (g - e) / b, this._x = (f + j) / b, this._y = (i + k) / b, this._z = .25 * b), this._updateEuler(), this
        },
        inverse: function() {
            return this.conjugate().normalize(), this
        },
        conjugate: function() {
            return this._x *= -1, this._y *= -1, this._z *= -1, this._updateEuler(), this
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var a = this.length();
            return 0 === a ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (a = 1 / a, this._x = this._x * a, this._y = this._y * a, this._z = this._z * a, this._w = this._w * a), this
        },
        multiply: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(a, b)) : this.multiplyQuaternions(this, a)
        },
        multiplyQuaternions: function(a, b) {
            var c = a._x,
                d = a._y,
                e = a._z,
                f = a._w,
                g = b._x,
                h = b._y,
                i = b._z,
                j = b._w;
            return this._x = c * j + f * g + d * i - e * h, this._y = d * j + f * h + e * g - c * i, this._z = e * j + f * i + c * h - d * g, this._w = f * j - c * g - d * h - e * i, this._updateEuler(), this
        },
        multiplyVector3: function(a) {
            return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), a.applyQuaternion(this)
        },
        slerp: function(a, b) {
            var c = this._x,
                d = this._y,
                e = this._z,
                f = this._w,
                g = f * a._w + c * a._x + d * a._y + e * a._z;
            if (0 > g ? (this._w = -a._w, this._x = -a._x, this._y = -a._y, this._z = -a._z, g = -g) : this.copy(a), g >= 1) return this._w = f, this._x = c, this._y = d, this._z = e, this;
            var h = Math.acos(g),
                i = Math.sqrt(1 - g * g);
            if (Math.abs(i) < .001) return this._w = .5 * (f + this._w), this._x = .5 * (c + this._x), this._y = .5 * (d + this._y), this._z = .5 * (e + this._z), this;
            var j = Math.sin((1 - b) * h) / i,
                k = Math.sin(b * h) / i;
            return this._w = f * j + this._w * k, this._x = c * j + this._x * k, this._y = d * j + this._y * k, this._z = e * j + this._z * k, this._updateEuler(), this
        },
        equals: function(a) {
            return a._x === this._x && a._y === this._y && a._z === this._z && a._w === this._w
        },
        fromArray: function(a) {
            return this._x = a[0], this._y = a[1], this._z = a[2], this._w = a[3], this._updateEuler(), this
        },
        toArray: function() {
            return [this._x, this._y, this._z, this._w]
        },
        clone: function() {
            return new THREE.Quaternion(this._x, this._y, this._z, this._w)
        }
    }, THREE.Quaternion.slerp = function(a, b, c, d) {
        return c.copy(a).slerp(b, d)
    }, THREE.Vector2 = function(a, b) {
        this.x = a || 0, this.y = b || 0
    }, THREE.Vector2.prototype = {
        constructor: THREE.Vector2,
        set: function(a, b) {
            return this.x = a, this.y = b, this
        },
        setX: function(a) {
            return this.x = a, this
        },
        setY: function(a) {
            return this.y = a, this
        },
        setComponent: function(a, b) {
            switch (a) {
                case 0:
                    this.x = b;
                    break;
                case 1:
                    this.y = b;
                    break;
                default:
                    throw new Error("index is out of range: " + a)
            }
        },
        getComponent: function(a) {
            switch (a) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                default:
                    throw new Error("index is out of range: " + a)
            }
        },
        copy: function(a) {
            return this.x = a.x, this.y = a.y, this
        },
        add: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(a, b)) : (this.x += a.x, this.y += a.y, this)
        },
        addVectors: function(a, b) {
            return this.x = a.x + b.x, this.y = a.y + b.y, this
        },
        addScalar: function(a) {
            return this.x += a, this.y += a, this
        },
        sub: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(a, b)) : (this.x -= a.x, this.y -= a.y, this)
        },
        subVectors: function(a, b) {
            return this.x = a.x - b.x, this.y = a.y - b.y, this
        },
        multiplyScalar: function(a) {
            return this.x *= a, this.y *= a, this
        },
        divideScalar: function(a) {
            if (0 !== a) {
                var b = 1 / a;
                this.x *= b, this.y *= b
            } else this.x = 0, this.y = 0;
            return this
        },
        min: function(a) {
            return this.x > a.x && (this.x = a.x), this.y > a.y && (this.y = a.y), this
        },
        max: function(a) {
            return this.x < a.x && (this.x = a.x), this.y < a.y && (this.y = a.y), this
        },
        clamp: function(a, b) {
            return this.x < a.x ? this.x = a.x : this.x > b.x && (this.x = b.x), this.y < a.y ? this.y = a.y : this.y > b.y && (this.y = b.y), this
        },
        negate: function() {
            return this.multiplyScalar(-1)
        },
        dot: function(a) {
            return this.x * a.x + this.y * a.y
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length())
        },
        distanceTo: function(a) {
            return Math.sqrt(this.distanceToSquared(a))
        },
        distanceToSquared: function(a) {
            var b = this.x - a.x,
                c = this.y - a.y;
            return b * b + c * c
        },
        setLength: function(a) {
            var b = this.length();
            return 0 !== b && a !== b && this.multiplyScalar(a / b), this
        },
        lerp: function(a, b) {
            return this.x += (a.x - this.x) * b, this.y += (a.y - this.y) * b, this
        },
        equals: function(a) {
            return a.x === this.x && a.y === this.y
        },
        fromArray: function(a) {
            return this.x = a[0], this.y = a[1], this
        },
        toArray: function() {
            return [this.x, this.y]
        },
        clone: function() {
            return new THREE.Vector2(this.x, this.y)
        }
    }, THREE.Vector3 = function(a, b, c) {
        this.x = a || 0, this.y = b || 0, this.z = c || 0
    }, THREE.Vector3.prototype = {
        constructor: THREE.Vector3,
        set: function(a, b, c) {
            return this.x = a, this.y = b, this.z = c, this
        },
        setX: function(a) {
            return this.x = a, this
        },
        setY: function(a) {
            return this.y = a, this
        },
        setZ: function(a) {
            return this.z = a, this
        },
        setComponent: function(a, b) {
            switch (a) {
                case 0:
                    this.x = b;
                    break;
                case 1:
                    this.y = b;
                    break;
                case 2:
                    this.z = b;
                    break;
                default:
                    throw new Error("index is out of range: " + a)
            }
        },
        getComponent: function(a) {
            switch (a) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                default:
                    throw new Error("index is out of range: " + a)
            }
        },
        copy: function(a) {
            return this.x = a.x, this.y = a.y, this.z = a.z, this
        },
        add: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(a, b)) : (this.x += a.x, this.y += a.y, this.z += a.z, this)
        },
        addScalar: function(a) {
            return this.x += a, this.y += a, this.z += a, this
        },
        addVectors: function(a, b) {
            return this.x = a.x + b.x, this.y = a.y + b.y, this.z = a.z + b.z, this
        },
        sub: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(a, b)) : (this.x -= a.x, this.y -= a.y, this.z -= a.z, this)
        },
        subVectors: function(a, b) {
            return this.x = a.x - b.x, this.y = a.y - b.y, this.z = a.z - b.z, this
        },
        multiply: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(a, b)) : (this.x *= a.x, this.y *= a.y, this.z *= a.z, this)
        },
        multiplyScalar: function(a) {
            return this.x *= a, this.y *= a, this.z *= a, this
        },
        multiplyVectors: function(a, b) {
            return this.x = a.x * b.x, this.y = a.y * b.y, this.z = a.z * b.z, this
        },
        applyMatrix3: function(a) {
            var b = this.x,
                c = this.y,
                d = this.z,
                e = a.elements;
            return this.x = e[0] * b + e[3] * c + e[6] * d, this.y = e[1] * b + e[4] * c + e[7] * d, this.z = e[2] * b + e[5] * c + e[8] * d, this
        },
        applyMatrix4: function(a) {
            var b = this.x,
                c = this.y,
                d = this.z,
                e = a.elements;
            return this.x = e[0] * b + e[4] * c + e[8] * d + e[12], this.y = e[1] * b + e[5] * c + e[9] * d + e[13], this.z = e[2] * b + e[6] * c + e[10] * d + e[14], this
        },
        applyProjection: function(a) {
            var b = this.x,
                c = this.y,
                d = this.z,
                e = a.elements,
                f = 1 / (e[3] * b + e[7] * c + e[11] * d + e[15]);
            return this.x = (e[0] * b + e[4] * c + e[8] * d + e[12]) * f, this.y = (e[1] * b + e[5] * c + e[9] * d + e[13]) * f, this.z = (e[2] * b + e[6] * c + e[10] * d + e[14]) * f, this
        },
        applyQuaternion: function(a) {
            var b = this.x,
                c = this.y,
                d = this.z,
                e = a.x,
                f = a.y,
                g = a.z,
                h = a.w,
                i = h * b + f * d - g * c,
                j = h * c + g * b - e * d,
                k = h * d + e * c - f * b,
                l = -e * b - f * c - g * d;
            return this.x = i * h + l * -e + j * -g - k * -f, this.y = j * h + l * -f + k * -e - i * -g, this.z = k * h + l * -g + i * -f - j * -e, this
        },
        transformDirection: function(a) {
            var b = this.x,
                c = this.y,
                d = this.z,
                e = a.elements;
            return this.x = e[0] * b + e[4] * c + e[8] * d, this.y = e[1] * b + e[5] * c + e[9] * d, this.z = e[2] * b + e[6] * c + e[10] * d, this.normalize(), this
        },
        divide: function(a) {
            return this.x /= a.x, this.y /= a.y, this.z /= a.z, this
        },
        divideScalar: function(a) {
            if (0 !== a) {
                var b = 1 / a;
                this.x *= b, this.y *= b, this.z *= b
            } else this.x = 0, this.y = 0, this.z = 0;
            return this
        },
        min: function(a) {
            return this.x > a.x && (this.x = a.x), this.y > a.y && (this.y = a.y), this.z > a.z && (this.z = a.z), this
        },
        max: function(a) {
            return this.x < a.x && (this.x = a.x), this.y < a.y && (this.y = a.y), this.z < a.z && (this.z = a.z), this
        },
        clamp: function(a, b) {
            return this.x < a.x ? this.x = a.x : this.x > b.x && (this.x = b.x), this.y < a.y ? this.y = a.y : this.y > b.y && (this.y = b.y), this.z < a.z ? this.z = a.z : this.z > b.z && (this.z = b.z), this
        },
        negate: function() {
            return this.multiplyScalar(-1)
        },
        dot: function(a) {
            return this.x * a.x + this.y * a.y + this.z * a.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        lengthManhattan: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length())
        },
        setLength: function(a) {
            var b = this.length();
            return 0 !== b && a !== b && this.multiplyScalar(a / b), this
        },
        lerp: function(a, b) {
            return this.x += (a.x - this.x) * b, this.y += (a.y - this.y) * b, this.z += (a.z - this.z) * b, this
        },
        cross: function(a, b) {
            if (void 0 !== b) return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(a, b);
            var c = this.x,
                d = this.y,
                e = this.z;
            return this.x = d * a.z - e * a.y, this.y = e * a.x - c * a.z, this.z = c * a.y - d * a.x, this
        },
        crossVectors: function(a, b) {
            return this.x = a.y * b.z - a.z * b.y, this.y = a.z * b.x - a.x * b.z, this.z = a.x * b.y - a.y * b.x, this
        },
        angleTo: function(a) {
            var b = this.dot(a) / (this.length() * a.length());
            return Math.acos(THREE.Math.clamp(b, -1, 1))
        },
        distanceTo: function(a) {
            return Math.sqrt(this.distanceToSquared(a))
        },
        distanceToSquared: function(a) {
            var b = this.x - a.x,
                c = this.y - a.y,
                d = this.z - a.z;
            return b * b + c * c + d * d
        },
        setEulerFromRotationMatrix: function() {
            console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")
        },
        setEulerFromQuaternion: function() {
            console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")
        },
        getPositionFromMatrix: function(a) {
            return this.x = a.elements[12], this.y = a.elements[13], this.z = a.elements[14], this
        },
        getScaleFromMatrix: function(a) {
            var b = this.set(a.elements[0], a.elements[1], a.elements[2]).length(),
                c = this.set(a.elements[4], a.elements[5], a.elements[6]).length(),
                d = this.set(a.elements[8], a.elements[9], a.elements[10]).length();
            return this.x = b, this.y = c, this.z = d, this
        },
        getColumnFromMatrix: function(a, b) {
            var c = 4 * a,
                d = b.elements;
            return this.x = d[c], this.y = d[c + 1], this.z = d[c + 2], this
        },
        equals: function(a) {
            return a.x === this.x && a.y === this.y && a.z === this.z
        },
        fromArray: function(a) {
            return this.x = a[0], this.y = a[1], this.z = a[2], this
        },
        toArray: function() {
            return [this.x, this.y, this.z]
        },
        clone: function() {
            return new THREE.Vector3(this.x, this.y, this.z)
        }
    }, THREE.extend(THREE.Vector3.prototype, {
        applyEuler: function() {
            var a = new THREE.Quaternion;
            return function(b) {
                void 0 === typeof b.order && console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");
                var c = a.setFromEuler(b);
                return this.applyQuaternion(c), this
            }
        }(),
        applyAxisAngle: function() {
            var a = new THREE.Quaternion;
            return function(b, c) {
                var d = a.setFromAxisAngle(b, c);
                return this.applyQuaternion(d), this
            }
        }(),
        projectOnVector: function() {
            var a = new THREE.Vector3;
            return function(b) {
                a.copy(b).normalize();
                var c = this.dot(a);
                return this.copy(a).multiplyScalar(c)
            }
        }(),
        projectOnPlane: function() {
            var a = new THREE.Vector3;
            return function(b) {
                return a.copy(this).projectOnVector(b), this.sub(a)
            }
        }(),
        reflect: function() {
            var a = new THREE.Vector3;
            return function(b) {
                return a.copy(this).projectOnVector(b).multiplyScalar(2), this.subVectors(a, this)
            }
        }()
    }), THREE.Vector4 = function(a, b, c, d) {
        this.x = a || 0, this.y = b || 0, this.z = c || 0, this.w = void 0 !== d ? d : 1
    }, THREE.Vector4.prototype = {
        constructor: THREE.Vector4,
        set: function(a, b, c, d) {
            return this.x = a, this.y = b, this.z = c, this.w = d, this
        },
        setX: function(a) {
            return this.x = a, this
        },
        setY: function(a) {
            return this.y = a, this
        },
        setZ: function(a) {
            return this.z = a, this
        },
        setW: function(a) {
            return this.w = a, this
        },
        setComponent: function(a, b) {
            switch (a) {
                case 0:
                    this.x = b;
                    break;
                case 1:
                    this.y = b;
                    break;
                case 2:
                    this.z = b;
                    break;
                case 3:
                    this.w = b;
                    break;
                default:
                    throw new Error("index is out of range: " + a)
            }
        },
        getComponent: function(a) {
            switch (a) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                case 3:
                    return this.w;
                default:
                    throw new Error("index is out of range: " + a)
            }
        },
        copy: function(a) {
            return this.x = a.x, this.y = a.y, this.z = a.z, this.w = void 0 !== a.w ? a.w : 1, this
        },
        add: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(a, b)) : (this.x += a.x, this.y += a.y, this.z += a.z, this.w += a.w, this)
        },
        addScalar: function(a) {
            return this.x += a, this.y += a, this.z += a, this.w += a, this
        },
        addVectors: function(a, b) {
            return this.x = a.x + b.x, this.y = a.y + b.y, this.z = a.z + b.z, this.w = a.w + b.w, this
        },
        sub: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(a, b)) : (this.x -= a.x, this.y -= a.y, this.z -= a.z, this.w -= a.w, this)
        },
        subVectors: function(a, b) {
            return this.x = a.x - b.x, this.y = a.y - b.y, this.z = a.z - b.z, this.w = a.w - b.w, this
        },
        multiplyScalar: function(a) {
            return this.x *= a, this.y *= a, this.z *= a, this.w *= a, this
        },
        applyMatrix4: function(a) {
            var b = this.x,
                c = this.y,
                d = this.z,
                e = this.w,
                f = a.elements;
            return this.x = f[0] * b + f[4] * c + f[8] * d + f[12] * e, this.y = f[1] * b + f[5] * c + f[9] * d + f[13] * e, this.z = f[2] * b + f[6] * c + f[10] * d + f[14] * e, this.w = f[3] * b + f[7] * c + f[11] * d + f[15] * e, this
        },
        divideScalar: function(a) {
            if (0 !== a) {
                var b = 1 / a;
                this.x *= b, this.y *= b, this.z *= b, this.w *= b
            } else this.x = 0, this.y = 0, this.z = 0, this.w = 1;
            return this
        },
        setAxisAngleFromQuaternion: function(a) {
            this.w = 2 * Math.acos(a.w);
            var b = Math.sqrt(1 - a.w * a.w);
            return 1e-4 > b ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = a.x / b, this.y = a.y / b, this.z = a.z / b), this
        },
        setAxisAngleFromRotationMatrix: function(a) {
            var b, c, d, e, f = .01,
                g = .1,
                h = a.elements,
                i = h[0],
                j = h[4],
                k = h[8],
                l = h[1],
                m = h[5],
                n = h[9],
                o = h[2],
                p = h[6],
                q = h[10];
            if (Math.abs(j - l) < f && Math.abs(k - o) < f && Math.abs(n - p) < f) {
                if (Math.abs(j + l) < g && Math.abs(k + o) < g && Math.abs(n + p) < g && Math.abs(i + m + q - 3) < g) return this.set(1, 0, 0, 0), this;
                b = Math.PI;
                var r = (i + 1) / 2,
                    s = (m + 1) / 2,
                    t = (q + 1) / 2,
                    u = (j + l) / 4,
                    v = (k + o) / 4,
                    w = (n + p) / 4;
                return r > s && r > t ? f > r ? (c = 0, d = .707106781, e = .707106781) : (c = Math.sqrt(r), d = u / c, e = v / c) : s > t ? f > s ? (c = .707106781, d = 0, e = .707106781) : (d = Math.sqrt(s), c = u / d, e = w / d) : f > t ? (c = .707106781, d = .707106781, e = 0) : (e = Math.sqrt(t), c = v / e, d = w / e), this.set(c, d, e, b), this
            }
            var x = Math.sqrt((p - n) * (p - n) + (k - o) * (k - o) + (l - j) * (l - j));
            return Math.abs(x) < .001 && (x = 1), this.x = (p - n) / x, this.y = (k - o) / x, this.z = (l - j) / x, this.w = Math.acos((i + m + q - 1) / 2), this
        },
        min: function(a) {
            return this.x > a.x && (this.x = a.x), this.y > a.y && (this.y = a.y), this.z > a.z && (this.z = a.z), this.w > a.w && (this.w = a.w), this
        },
        max: function(a) {
            return this.x < a.x && (this.x = a.x), this.y < a.y && (this.y = a.y), this.z < a.z && (this.z = a.z), this.w < a.w && (this.w = a.w), this
        },
        clamp: function(a, b) {
            return this.x < a.x ? this.x = a.x : this.x > b.x && (this.x = b.x), this.y < a.y ? this.y = a.y : this.y > b.y && (this.y = b.y), this.z < a.z ? this.z = a.z : this.z > b.z && (this.z = b.z), this.w < a.w ? this.w = a.w : this.w > b.w && (this.w = b.w), this
        },
        negate: function() {
            return this.multiplyScalar(-1)
        },
        dot: function(a) {
            return this.x * a.x + this.y * a.y + this.z * a.z + this.w * a.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        lengthManhattan: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length())
        },
        setLength: function(a) {
            var b = this.length();
            return 0 !== b && a !== b && this.multiplyScalar(a / b), this
        },
        lerp: function(a, b) {
            return this.x += (a.x - this.x) * b, this.y += (a.y - this.y) * b, this.z += (a.z - this.z) * b, this.w += (a.w - this.w) * b, this
        },
        equals: function(a) {
            return a.x === this.x && a.y === this.y && a.z === this.z && a.w === this.w
        },
        fromArray: function(a) {
            return this.x = a[0], this.y = a[1], this.z = a[2], this.w = a[3], this
        },
        toArray: function() {
            return [this.x, this.y, this.z, this.w]
        },
        clone: function() {
            return new THREE.Vector4(this.x, this.y, this.z, this.w)
        }
    }, THREE.Euler = function(a, b, c, d) {
        this._x = a || 0, this._y = b || 0, this._z = c || 0, this._order = d || THREE.Euler.DefaultOrder
    }, THREE.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], THREE.Euler.DefaultOrder = "XYZ", THREE.Euler.prototype = {
        constructor: THREE.Euler,
        _x: 0,
        _y: 0,
        _z: 0,
        _order: THREE.Euler.DefaultOrder,
        _quaternion: void 0,
        _updateQuaternion: function() {
            void 0 !== this._quaternion && this._quaternion.setFromEuler(this, !1)
        },
        get x() {
            return this._x
        },
        set x(a) {
            this._x = a, this._updateQuaternion()
        },
        get y() {
            return this._y
        },
        set y(a) {
            this._y = a, this._updateQuaternion()
        },
        get z() {
            return this._z
        },
        set z(a) {
            this._z = a, this._updateQuaternion()
        },
        get order() {
            return this._order
        },
        set order(a) {
            this._order = a, this._updateQuaternion()
        },
        set: function(a, b, c, d) {
            return this._x = a, this._y = b, this._z = c, this._order = d || this._order, this._updateQuaternion(), this
        },
        copy: function(a) {
            return this._x = a._x, this._y = a._y, this._z = a._z, this._order = a._order, this._updateQuaternion(), this
        },
        setFromRotationMatrix: function(a, b) {
            function c(a) {
                return Math.min(Math.max(a, -1), 1)
            }
            var d = a.elements,
                e = d[0],
                f = d[4],
                g = d[8],
                h = d[1],
                i = d[5],
                j = d[9],
                k = d[2],
                l = d[6],
                m = d[10];
            return b = b || this._order, "XYZ" === b ? (this._y = Math.asin(c(g)), Math.abs(g) < .99999 ? (this._x = Math.atan2(-j, m), this._z = Math.atan2(-f, e)) : (this._x = Math.atan2(l, i), this._z = 0)) : "YXZ" === b ? (this._x = Math.asin(-c(j)), Math.abs(j) < .99999 ? (this._y = Math.atan2(g, m), this._z = Math.atan2(h, i)) : (this._y = Math.atan2(-k, e), this._z = 0)) : "ZXY" === b ? (this._x = Math.asin(c(l)), Math.abs(l) < .99999 ? (this._y = Math.atan2(-k, m), this._z = Math.atan2(-f, i)) : (this._y = 0, this._z = Math.atan2(h, e))) : "ZYX" === b ? (this._y = Math.asin(-c(k)), Math.abs(k) < .99999 ? (this._x = Math.atan2(l, m), this._z = Math.atan2(h, e)) : (this._x = 0, this._z = Math.atan2(-f, i))) : "YZX" === b ? (this._z = Math.asin(c(h)), Math.abs(h) < .99999 ? (this._x = Math.atan2(-j, i), this._y = Math.atan2(-k, e)) : (this._x = 0, this._y = Math.atan2(g, m))) : "XZY" === b ? (this._z = Math.asin(-c(f)), Math.abs(f) < .99999 ? (this._x = Math.atan2(l, i), this._y = Math.atan2(g, e)) : (this._x = Math.atan2(-j, m), this._y = 0)) : console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: " + b), this._order = b, this._updateQuaternion(), this
        },
        setFromQuaternion: function(a, b, c) {
            function d(a) {
                return Math.min(Math.max(a, -1), 1)
            }
            var e = a.x * a.x,
                f = a.y * a.y,
                g = a.z * a.z,
                h = a.w * a.w;
            return b = b || this._order, "XYZ" === b ? (this._x = Math.atan2(2 * (a.x * a.w - a.y * a.z), h - e - f + g), this._y = Math.asin(d(2 * (a.x * a.z + a.y * a.w))), this._z = Math.atan2(2 * (a.z * a.w - a.x * a.y), h + e - f - g)) : "YXZ" === b ? (this._x = Math.asin(d(2 * (a.x * a.w - a.y * a.z))), this._y = Math.atan2(2 * (a.x * a.z + a.y * a.w), h - e - f + g), this._z = Math.atan2(2 * (a.x * a.y + a.z * a.w), h - e + f - g)) : "ZXY" === b ? (this._x = Math.asin(d(2 * (a.x * a.w + a.y * a.z))), this._y = Math.atan2(2 * (a.y * a.w - a.z * a.x), h - e - f + g), this._z = Math.atan2(2 * (a.z * a.w - a.x * a.y), h - e + f - g)) : "ZYX" === b ? (this._x = Math.atan2(2 * (a.x * a.w + a.z * a.y), h - e - f + g), this._y = Math.asin(d(2 * (a.y * a.w - a.x * a.z))), this._z = Math.atan2(2 * (a.x * a.y + a.z * a.w), h + e - f - g)) : "YZX" === b ? (this._x = Math.atan2(2 * (a.x * a.w - a.z * a.y), h - e + f - g), this._y = Math.atan2(2 * (a.y * a.w - a.x * a.z), h + e - f - g), this._z = Math.asin(d(2 * (a.x * a.y + a.z * a.w)))) : "XZY" === b ? (this._x = Math.atan2(2 * (a.x * a.w + a.y * a.z), h - e + f - g), this._y = Math.atan2(2 * (a.x * a.z + a.y * a.w), h + e - f - g), this._z = Math.asin(d(2 * (a.z * a.w - a.x * a.y)))) : console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: " + b), this._order = b, c !== !1 && this._updateQuaternion(), this
        },
        reorder: function() {
            var a = new THREE.Quaternion;
            return function(b) {
                a.setFromEuler(this), this.setFromQuaternion(a, b)
            }
        }(),
        fromArray: function(a) {
            return this._x = a[0], this._y = a[1], this._z = a[2], void 0 !== a[3] && (this._order = a[3]), this._updateQuaternion(), this
        },
        toArray: function() {
            return [this._x, this._y, this._z, this._order]
        },
        equals: function(a) {
            return a._x === this._x && a._y === this._y && a._z === this._z && a._order === this._order
        },
        clone: function() {
            return new THREE.Euler(this._x, this._y, this._z, this._order)
        }
    }, THREE.Line3 = function(a, b) {
        this.start = void 0 !== a ? a : new THREE.Vector3, this.end = void 0 !== b ? b : new THREE.Vector3
    }, THREE.Line3.prototype = {
        constructor: THREE.Line3,
        set: function(a, b) {
            return this.start.copy(a), this.end.copy(b), this
        },
        copy: function(a) {
            return this.start.copy(a.start), this.end.copy(a.end), this
        },
        center: function(a) {
            var b = a || new THREE.Vector3;
            return b.addVectors(this.start, this.end).multiplyScalar(.5)
        },
        delta: function(a) {
            var b = a || new THREE.Vector3;
            return b.subVectors(this.end, this.start)
        },
        distanceSq: function() {
            return this.start.distanceToSquared(this.end)
        },
        distance: function() {
            return this.start.distanceTo(this.end)
        },
        at: function(a, b) {
            var c = b || new THREE.Vector3;
            return this.delta(c).multiplyScalar(a).add(this.start)
        },
        closestPointToPointParameter: function() {
            var a = new THREE.Vector3,
                b = new THREE.Vector3;
            return function(c, d) {
                a.subVectors(c, this.start), b.subVectors(this.end, this.start);
                var e = b.dot(b),
                    f = b.dot(a),
                    g = f / e;
                return d && (g = THREE.Math.clamp(g, 0, 1)), g
            }
        }(),
        closestPointToPoint: function(a, b, c) {
            var d = this.closestPointToPointParameter(a, b),
                e = c || new THREE.Vector3;
            return this.delta(e).multiplyScalar(d).add(this.start)
        },
        applyMatrix4: function(a) {
            return this.start.applyMatrix4(a), this.end.applyMatrix4(a), this
        },
        equals: function(a) {
            return a.start.equals(this.start) && a.end.equals(this.end)
        },
        clone: function() {
            return (new THREE.Line3).copy(this)
        }
    }, THREE.Box2 = function(a, b) {
        this.min = void 0 !== a ? a : new THREE.Vector2(1 / 0, 1 / 0), this.max = void 0 !== b ? b : new THREE.Vector2(-1 / 0, -1 / 0)
    }, THREE.Box2.prototype = {
        constructor: THREE.Box2,
        set: function(a, b) {
            return this.min.copy(a), this.max.copy(b), this
        },
        setFromPoints: function(a) {
            if (a.length > 0) {
                var b = a[0];
                this.min.copy(b), this.max.copy(b);
                for (var c = 1, d = a.length; d > c; c++) b = a[c], b.x < this.min.x ? this.min.x = b.x : b.x > this.max.x && (this.max.x = b.x), b.y < this.min.y ? this.min.y = b.y : b.y > this.max.y && (this.max.y = b.y)
            } else this.makeEmpty();
            return this
        },
        setFromCenterAndSize: function() {
            var a = new THREE.Vector2;
            return function(b, c) {
                var d = a.copy(c).multiplyScalar(.5);
                return this.min.copy(b).sub(d), this.max.copy(b).add(d), this
            }
        }(),
        copy: function(a) {
            return this.min.copy(a.min), this.max.copy(a.max), this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this
        },
        empty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y
        },
        center: function(a) {
            var b = a || new THREE.Vector2;
            return b.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        size: function(a) {
            var b = a || new THREE.Vector2;
            return b.subVectors(this.max, this.min)
        },
        expandByPoint: function(a) {
            return this.min.min(a), this.max.max(a), this
        },
        expandByVector: function(a) {
            return this.min.sub(a), this.max.add(a), this
        },
        expandByScalar: function(a) {
            return this.min.addScalar(-a), this.max.addScalar(a), this
        },
        containsPoint: function(a) {
            return a.x < this.min.x || a.x > this.max.x || a.y < this.min.y || a.y > this.max.y ? !1 : !0
        },
        containsBox: function(a) {
            return this.min.x <= a.min.x && a.max.x <= this.max.x && this.min.y <= a.min.y && a.max.y <= this.max.y ? !0 : !1
        },
        getParameter: function(a) {
            return new THREE.Vector2((a.x - this.min.x) / (this.max.x - this.min.x), (a.y - this.min.y) / (this.max.y - this.min.y))
        },
        isIntersectionBox: function(a) {
            return a.max.x < this.min.x || a.min.x > this.max.x || a.max.y < this.min.y || a.min.y > this.max.y ? !1 : !0
        },
        clampPoint: function(a, b) {
            var c = b || new THREE.Vector2;
            return c.copy(a).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var a = new THREE.Vector2;
            return function(b) {
                var c = a.copy(b).clamp(this.min, this.max);
                return c.sub(b).length()
            }
        }(),
        intersect: function(a) {
            return this.min.max(a.min), this.max.min(a.max), this
        },
        union: function(a) {
            return this.min.min(a.min), this.max.max(a.max), this
        },
        translate: function(a) {
            return this.min.add(a), this.max.add(a), this
        },
        equals: function(a) {
            return a.min.equals(this.min) && a.max.equals(this.max)
        },
        clone: function() {
            return (new THREE.Box2).copy(this)
        }
    }, THREE.Box3 = function(a, b) {
        this.min = void 0 !== a ? a : new THREE.Vector3(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== b ? b : new THREE.Vector3(-1 / 0, -1 / 0, -1 / 0)
    }, THREE.Box3.prototype = {
        constructor: THREE.Box3,
        set: function(a, b) {
            return this.min.copy(a), this.max.copy(b), this
        },
        setFromPoints: function(a) {
            if (a.length > 0) {
                var b = a[0];
                this.min.copy(b), this.max.copy(b);
                for (var c = 1, d = a.length; d > c; c++) b = a[c], b.x < this.min.x ? this.min.x = b.x : b.x > this.max.x && (this.max.x = b.x), b.y < this.min.y ? this.min.y = b.y : b.y > this.max.y && (this.max.y = b.y), b.z < this.min.z ? this.min.z = b.z : b.z > this.max.z && (this.max.z = b.z)
            } else this.makeEmpty();
            return this
        },
        setFromCenterAndSize: function() {
            var a = new THREE.Vector3;
            return function(b, c) {
                var d = a.copy(c).multiplyScalar(.5);
                return this.min.copy(b).sub(d), this.max.copy(b).add(d), this
            }
        }(),
        setFromObject: function() {
            var a = new THREE.Vector3;
            return function(b) {
                var c = this;
                return b.updateMatrixWorld(!0), this.makeEmpty(), b.traverse(function(b) {
                    if (void 0 !== b.geometry && void 0 !== b.geometry.vertices)
                        for (var d = b.geometry.vertices, e = 0, f = d.length; f > e; e++) a.copy(d[e]), a.applyMatrix4(b.matrixWorld), c.expandByPoint(a)
                }), this
            }
        }(),
        copy: function(a) {
            return this.min.copy(a.min), this.max.copy(a.max), this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this
        },
        empty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        center: function(a) {
            var b = a || new THREE.Vector3;
            return b.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        size: function(a) {
            var b = a || new THREE.Vector3;
            return b.subVectors(this.max, this.min)
        },
        expandByPoint: function(a) {
            return this.min.min(a), this.max.max(a), this
        },
        expandByVector: function(a) {
            return this.min.sub(a), this.max.add(a), this
        },
        expandByScalar: function(a) {
            return this.min.addScalar(-a), this.max.addScalar(a), this
        },
        containsPoint: function(a) {
            return a.x < this.min.x || a.x > this.max.x || a.y < this.min.y || a.y > this.max.y || a.z < this.min.z || a.z > this.max.z ? !1 : !0
        },
        containsBox: function(a) {
            return this.min.x <= a.min.x && a.max.x <= this.max.x && this.min.y <= a.min.y && a.max.y <= this.max.y && this.min.z <= a.min.z && a.max.z <= this.max.z ? !0 : !1
        },
        getParameter: function(a) {
            return new THREE.Vector3((a.x - this.min.x) / (this.max.x - this.min.x), (a.y - this.min.y) / (this.max.y - this.min.y), (a.z - this.min.z) / (this.max.z - this.min.z))
        },
        isIntersectionBox: function(a) {
            return a.max.x < this.min.x || a.min.x > this.max.x || a.max.y < this.min.y || a.min.y > this.max.y || a.max.z < this.min.z || a.min.z > this.max.z ? !1 : !0
        },
        clampPoint: function(a, b) {
            var c = b || new THREE.Vector3;
            return c.copy(a).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var a = new THREE.Vector3;
            return function(b) {
                var c = a.copy(b).clamp(this.min, this.max);
                return c.sub(b).length()
            }
        }(),
        getBoundingSphere: function() {
            var a = new THREE.Vector3;
            return function(b) {
                var c = b || new THREE.Sphere;
                return c.center = this.center(), c.radius = .5 * this.size(a).length(), c
            }
        }(),
        intersect: function(a) {
            return this.min.max(a.min), this.max.min(a.max), this
        },
        union: function(a) {
            return this.min.min(a.min), this.max.max(a.max), this
        },
        applyMatrix4: function() {
            var a = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3];
            return function(b) {
                return a[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(b), a[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(b), a[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(b), a[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(b), a[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(b), a[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(b), a[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(b), a[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(b), this.makeEmpty(), this.setFromPoints(a), this
            }
        }(),
        translate: function(a) {
            return this.min.add(a), this.max.add(a), this
        },
        equals: function(a) {
            return a.min.equals(this.min) && a.max.equals(this.max)
        },
        clone: function() {
            return (new THREE.Box3).copy(this)
        }
    }, THREE.Matrix3 = function(a, b, c, d, e, f, g, h, i) {
        this.elements = new Float32Array(9), this.set(void 0 !== a ? a : 1, b || 0, c || 0, d || 0, void 0 !== e ? e : 1, f || 0, g || 0, h || 0, void 0 !== i ? i : 1)
    }, THREE.Matrix3.prototype = {
        constructor: THREE.Matrix3,
        set: function(a, b, c, d, e, f, g, h, i) {
            var j = this.elements;
            return j[0] = a, j[3] = b, j[6] = c, j[1] = d, j[4] = e, j[7] = f, j[2] = g, j[5] = h, j[8] = i, this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
        },
        copy: function(a) {
            var b = a.elements;
            return this.set(b[0], b[3], b[6], b[1], b[4], b[7], b[2], b[5], b[8]), this
        },
        multiplyVector3: function(a) {
            return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), a.applyMatrix3(this)
        },
        multiplyVector3Array: function() {
            var a = new THREE.Vector3;
            return function(b) {
                for (var c = 0, d = b.length; d > c; c += 3) a.x = b[c], a.y = b[c + 1], a.z = b[c + 2], a.applyMatrix3(this), b[c] = a.x, b[c + 1] = a.y, b[c + 2] = a.z;
                return b
            }
        }(),
        multiplyScalar: function(a) {
            var b = this.elements;
            return b[0] *= a, b[3] *= a, b[6] *= a, b[1] *= a, b[4] *= a, b[7] *= a, b[2] *= a, b[5] *= a, b[8] *= a, this
        },
        determinant: function() {
            var a = this.elements,
                b = a[0],
                c = a[1],
                d = a[2],
                e = a[3],
                f = a[4],
                g = a[5],
                h = a[6],
                i = a[7],
                j = a[8];
            return b * f * j - b * g * i - c * e * j + c * g * h + d * e * i - d * f * h
        },
        getInverse: function(a, b) {
            var c = a.elements,
                d = this.elements;
            d[0] = c[10] * c[5] - c[6] * c[9], d[1] = -c[10] * c[1] + c[2] * c[9], d[2] = c[6] * c[1] - c[2] * c[5], d[3] = -c[10] * c[4] + c[6] * c[8], d[4] = c[10] * c[0] - c[2] * c[8], d[5] = -c[6] * c[0] + c[2] * c[4], d[6] = c[9] * c[4] - c[5] * c[8], d[7] = -c[9] * c[0] + c[1] * c[8], d[8] = c[5] * c[0] - c[1] * c[4];
            var e = c[0] * d[0] + c[1] * d[3] + c[2] * d[6];
            if (0 === e) {
                var f = "Matrix3.getInverse(): can't invert matrix, determinant is 0";
                if (b) throw new Error(f);
                return console.warn(f), this.identity(), this
            }
            return this.multiplyScalar(1 / e), this
        },
        transpose: function() {
            var a, b = this.elements;
            return a = b[1], b[1] = b[3], b[3] = a, a = b[2], b[2] = b[6], b[6] = a, a = b[5], b[5] = b[7], b[7] = a, this
        },
        getNormalMatrix: function(a) {
            return this.getInverse(a).transpose(), this
        },
        transposeIntoArray: function(a) {
            var b = this.elements;
            return a[0] = b[0], a[1] = b[3], a[2] = b[6], a[3] = b[1], a[4] = b[4], a[5] = b[7], a[6] = b[2], a[7] = b[5], a[8] = b[8], this
        },
        clone: function() {
            var a = this.elements;
            return new THREE.Matrix3(a[0], a[3], a[6], a[1], a[4], a[7], a[2], a[5], a[8])
        }
    }, THREE.Matrix4 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        this.elements = new Float32Array(16);
        var q = this.elements;
        q[0] = void 0 !== a ? a : 1, q[4] = b || 0, q[8] = c || 0, q[12] = d || 0, q[1] = e || 0, q[5] = void 0 !== f ? f : 1, q[9] = g || 0, q[13] = h || 0, q[2] = i || 0, q[6] = j || 0, q[10] = void 0 !== k ? k : 1, q[14] = l || 0, q[3] = m || 0, q[7] = n || 0, q[11] = o || 0, q[15] = void 0 !== p ? p : 1
    }, THREE.Matrix4.prototype = {
        constructor: THREE.Matrix4,
        set: function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
            var q = this.elements;
            return q[0] = a, q[4] = b, q[8] = c, q[12] = d, q[1] = e, q[5] = f, q[9] = g, q[13] = h, q[2] = i, q[6] = j, q[10] = k, q[14] = l, q[3] = m, q[7] = n, q[11] = o, q[15] = p, this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
        },
        copy: function(a) {
            return this.elements.set(a.elements), this
        },
        extractPosition: function(a) {
            return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(a)
        },
        copyPosition: function(a) {
            var b = this.elements,
                c = a.elements;
            return b[12] = c[12], b[13] = c[13], b[14] = c[14], this
        },
        extractRotation: function() {
            var a = new THREE.Vector3;
            return function(b) {
                var c = this.elements,
                    d = b.elements,
                    e = 1 / a.set(d[0], d[1], d[2]).length(),
                    f = 1 / a.set(d[4], d[5], d[6]).length(),
                    g = 1 / a.set(d[8], d[9], d[10]).length();
                return c[0] = d[0] * e, c[1] = d[1] * e, c[2] = d[2] * e, c[4] = d[4] * f, c[5] = d[5] * f, c[6] = d[6] * f, c[8] = d[8] * g, c[9] = d[9] * g, c[10] = d[10] * g, this
            }
        }(),
        makeRotationFromEuler: function(a) {
            void 0 === typeof a.order && console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");
            var b = this.elements,
                c = a.x,
                d = a.y,
                e = a.z,
                f = Math.cos(c),
                g = Math.sin(c),
                h = Math.cos(d),
                i = Math.sin(d),
                j = Math.cos(e),
                k = Math.sin(e);
            if (void 0 === a.order || "XYZ" === a.order) {
                var l = f * j,
                    m = f * k,
                    n = g * j,
                    o = g * k;
                b[0] = h * j, b[4] = -h * k, b[8] = i, b[1] = m + n * i, b[5] = l - o * i, b[9] = -g * h, b[2] = o - l * i, b[6] = n + m * i, b[10] = f * h
            } else if ("YXZ" === a.order) {
                var p = h * j,
                    q = h * k,
                    r = i * j,
                    s = i * k;
                b[0] = p + s * g, b[4] = r * g - q, b[8] = f * i, b[1] = f * k, b[5] = f * j, b[9] = -g, b[2] = q * g - r, b[6] = s + p * g, b[10] = f * h
            } else if ("ZXY" === a.order) {
                var p = h * j,
                    q = h * k,
                    r = i * j,
                    s = i * k;
                b[0] = p - s * g, b[4] = -f * k, b[8] = r + q * g, b[1] = q + r * g, b[5] = f * j, b[9] = s - p * g, b[2] = -f * i, b[6] = g, b[10] = f * h
            } else if ("ZYX" === a.order) {
                var l = f * j,
                    m = f * k,
                    n = g * j,
                    o = g * k;
                b[0] = h * j, b[4] = n * i - m, b[8] = l * i + o, b[1] = h * k, b[5] = o * i + l, b[9] = m * i - n, b[2] = -i, b[6] = g * h, b[10] = f * h
            } else if ("YZX" === a.order) {
                var t = f * h,
                    u = f * i,
                    v = g * h,
                    w = g * i;
                b[0] = h * j, b[4] = w - t * k, b[8] = v * k + u, b[1] = k, b[5] = f * j, b[9] = -g * j, b[2] = -i * j, b[6] = u * k + v, b[10] = t - w * k
            } else if ("XZY" === a.order) {
                var t = f * h,
                    u = f * i,
                    v = g * h,
                    w = g * i;
                b[0] = h * j, b[4] = -k, b[8] = i * j, b[1] = t * k + w, b[5] = f * j, b[9] = u * k - v, b[2] = v * k - u, b[6] = g * j, b[10] = w * k + t
            }
            return b[3] = 0, b[7] = 0, b[11] = 0, b[12] = 0, b[13] = 0, b[14] = 0, b[15] = 1, this
        },
        setRotationFromQuaternion: function(a) {
            return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."), this.makeRotationFromQuaternion(a)
        },
        makeRotationFromQuaternion: function(a) {
            var b = this.elements,
                c = a.x,
                d = a.y,
                e = a.z,
                f = a.w,
                g = c + c,
                h = d + d,
                i = e + e,
                j = c * g,
                k = c * h,
                l = c * i,
                m = d * h,
                n = d * i,
                o = e * i,
                p = f * g,
                q = f * h,
                r = f * i;
            return b[0] = 1 - (m + o), b[4] = k - r, b[8] = l + q, b[1] = k + r, b[5] = 1 - (j + o), b[9] = n - p, b[2] = l - q, b[6] = n + p, b[10] = 1 - (j + m), b[3] = 0, b[7] = 0, b[11] = 0, b[12] = 0, b[13] = 0, b[14] = 0, b[15] = 1, this
        },
        lookAt: function() {
            var a = new THREE.Vector3,
                b = new THREE.Vector3,
                c = new THREE.Vector3;
            return function(d, e, f) {
                var g = this.elements;
                return c.subVectors(d, e).normalize(), 0 === c.length() && (c.z = 1), a.crossVectors(f, c).normalize(), 0 === a.length() && (c.x += 1e-4, a.crossVectors(f, c).normalize()), b.crossVectors(c, a), g[0] = a.x, g[4] = b.x, g[8] = c.x, g[1] = a.y, g[5] = b.y, g[9] = c.y, g[2] = a.z, g[6] = b.z, g[10] = c.z, this
            }
        }(),
        multiply: function(a, b) {
            return void 0 !== b ? (console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(a, b)) : this.multiplyMatrices(this, a)
        },
        multiplyMatrices: function(a, b) {
            var c = a.elements,
                d = b.elements,
                e = this.elements,
                f = c[0],
                g = c[4],
                h = c[8],
                i = c[12],
                j = c[1],
                k = c[5],
                l = c[9],
                m = c[13],
                n = c[2],
                o = c[6],
                p = c[10],
                q = c[14],
                r = c[3],
                s = c[7],
                t = c[11],
                u = c[15],
                v = d[0],
                w = d[4],
                x = d[8],
                y = d[12],
                z = d[1],
                A = d[5],
                B = d[9],
                C = d[13],
                D = d[2],
                E = d[6],
                F = d[10],
                G = d[14],
                H = d[3],
                I = d[7],
                J = d[11],
                K = d[15];
            return e[0] = f * v + g * z + h * D + i * H, e[4] = f * w + g * A + h * E + i * I, e[8] = f * x + g * B + h * F + i * J, e[12] = f * y + g * C + h * G + i * K, e[1] = j * v + k * z + l * D + m * H, e[5] = j * w + k * A + l * E + m * I, e[9] = j * x + k * B + l * F + m * J, e[13] = j * y + k * C + l * G + m * K, e[2] = n * v + o * z + p * D + q * H, e[6] = n * w + o * A + p * E + q * I, e[10] = n * x + o * B + p * F + q * J, e[14] = n * y + o * C + p * G + q * K, e[3] = r * v + s * z + t * D + u * H, e[7] = r * w + s * A + t * E + u * I, e[11] = r * x + s * B + t * F + u * J, e[15] = r * y + s * C + t * G + u * K, this
        },
        multiplyToArray: function(a, b, c) {
            var d = this.elements;
            return this.multiplyMatrices(a, b), c[0] = d[0], c[1] = d[1], c[2] = d[2], c[3] = d[3], c[4] = d[4], c[5] = d[5], c[6] = d[6], c[7] = d[7], c[8] = d[8], c[9] = d[9], c[10] = d[10], c[11] = d[11], c[12] = d[12], c[13] = d[13], c[14] = d[14], c[15] = d[15], this
        },
        multiplyScalar: function(a) {
            var b = this.elements;
            return b[0] *= a, b[4] *= a, b[8] *= a, b[12] *= a, b[1] *= a, b[5] *= a, b[9] *= a, b[13] *= a, b[2] *= a, b[6] *= a, b[10] *= a, b[14] *= a, b[3] *= a, b[7] *= a, b[11] *= a, b[15] *= a, this
        },
        multiplyVector3: function(a) {
            return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."), a.applyProjection(this)
        },
        multiplyVector4: function(a) {
            return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), a.applyMatrix4(this)
        },
        multiplyVector3Array: function() {
            var a = new THREE.Vector3;
            return function(b) {
                for (var c = 0, d = b.length; d > c; c += 3) a.x = b[c], a.y = b[c + 1], a.z = b[c + 2], a.applyProjection(this), b[c] = a.x, b[c + 1] = a.y, b[c + 2] = a.z;
                return b
            }
        }(),
        rotateAxis: function(a) {
            console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), a.transformDirection(this)
        },
        crossVector: function(a) {
            return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), a.applyMatrix4(this)
        },
        determinant: function() {
            var a = this.elements,
                b = a[0],
                c = a[4],
                d = a[8],
                e = a[12],
                f = a[1],
                g = a[5],
                h = a[9],
                i = a[13],
                j = a[2],
                k = a[6],
                l = a[10],
                m = a[14],
                n = a[3],
                o = a[7],
                p = a[11],
                q = a[15];
            return n * (+e * h * k - d * i * k - e * g * l + c * i * l + d * g * m - c * h * m) + o * (+b * h * m - b * i * l + e * f * l - d * f * m + d * i * j - e * h * j) + p * (+b * i * k - b * g * m - e * f * k + c * f * m + e * g * j - c * i * j) + q * (-d * g * j - b * h * k + b * g * l + d * f * k - c * f * l + c * h * j)
        },
        transpose: function() {
            var a, b = this.elements;
            return a = b[1], b[1] = b[4], b[4] = a, a = b[2], b[2] = b[8], b[8] = a, a = b[6], b[6] = b[9], b[9] = a, a = b[3], b[3] = b[12], b[12] = a, a = b[7], b[7] = b[13], b[13] = a, a = b[11], b[11] = b[14], b[14] = a, this
        },
        flattenToArray: function(a) {
            var b = this.elements;
            return a[0] = b[0], a[1] = b[1], a[2] = b[2], a[3] = b[3], a[4] = b[4], a[5] = b[5], a[6] = b[6], a[7] = b[7], a[8] = b[8], a[9] = b[9], a[10] = b[10], a[11] = b[11], a[12] = b[12], a[13] = b[13], a[14] = b[14], a[15] = b[15], a
        },
        flattenToArrayOffset: function(a, b) {
            var c = this.elements;
            return a[b] = c[0], a[b + 1] = c[1], a[b + 2] = c[2], a[b + 3] = c[3], a[b + 4] = c[4], a[b + 5] = c[5], a[b + 6] = c[6], a[b + 7] = c[7], a[b + 8] = c[8], a[b + 9] = c[9], a[b + 10] = c[10], a[b + 11] = c[11], a[b + 12] = c[12], a[b + 13] = c[13], a[b + 14] = c[14], a[b + 15] = c[15], a
        },
        getPosition: function() {
            var a = new THREE.Vector3;
            return function() {
                console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");
                var b = this.elements;
                return a.set(b[12], b[13], b[14])
            }
        }(),
        setPosition: function(a) {
            var b = this.elements;
            return b[12] = a.x, b[13] = a.y, b[14] = a.z, this
        },
        getInverse: function(a, b) {
            var c = this.elements,
                d = a.elements,
                e = d[0],
                f = d[4],
                g = d[8],
                h = d[12],
                i = d[1],
                j = d[5],
                k = d[9],
                l = d[13],
                m = d[2],
                n = d[6],
                o = d[10],
                p = d[14],
                q = d[3],
                r = d[7],
                s = d[11],
                t = d[15];
            c[0] = k * p * r - l * o * r + l * n * s - j * p * s - k * n * t + j * o * t, c[4] = h * o * r - g * p * r - h * n * s + f * p * s + g * n * t - f * o * t, c[8] = g * l * r - h * k * r + h * j * s - f * l * s - g * j * t + f * k * t, c[12] = h * k * n - g * l * n - h * j * o + f * l * o + g * j * p - f * k * p, c[1] = l * o * q - k * p * q - l * m * s + i * p * s + k * m * t - i * o * t, c[5] = g * p * q - h * o * q + h * m * s - e * p * s - g * m * t + e * o * t, c[9] = h * k * q - g * l * q - h * i * s + e * l * s + g * i * t - e * k * t, c[13] = g * l * m - h * k * m + h * i * o - e * l * o - g * i * p + e * k * p, c[2] = j * p * q - l * n * q + l * m * r - i * p * r - j * m * t + i * n * t, c[6] = h * n * q - f * p * q - h * m * r + e * p * r + f * m * t - e * n * t, c[10] = f * l * q - h * j * q + h * i * r - e * l * r - f * i * t + e * j * t, c[14] = h * j * m - f * l * m - h * i * n + e * l * n + f * i * p - e * j * p, c[3] = k * n * q - j * o * q - k * m * r + i * o * r + j * m * s - i * n * s, c[7] = f * o * q - g * n * q + g * m * r - e * o * r - f * m * s + e * n * s, c[11] = g * j * q - f * k * q - g * i * r + e * k * r + f * i * s - e * j * s, c[15] = f * k * m - g * j * m + g * i * n - e * k * n - f * i * o + e * j * o;
            var u = e * c[0] + i * c[4] + m * c[8] + q * c[12];
            if (0 == u) {
                var v = "Matrix4.getInverse(): can't invert matrix, determinant is 0";
                if (b) throw new Error(v);
                return console.warn(v), this.identity(), this
            }
            return this.multiplyScalar(1 / u), this
        },
        translate: function() {
            console.warn("DEPRECATED: Matrix4's .translate() has been removed.")
        },
        rotateX: function() {
            console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")
        },
        rotateY: function() {
            console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")
        },
        rotateZ: function() {
            console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")
        },
        rotateByAxis: function() {
            console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")
        },
        scale: function(a) {
            var b = this.elements,
                c = a.x,
                d = a.y,
                e = a.z;
            return b[0] *= c, b[4] *= d, b[8] *= e, b[1] *= c, b[5] *= d, b[9] *= e, b[2] *= c, b[6] *= d, b[10] *= e, b[3] *= c, b[7] *= d, b[11] *= e, this
        },
        getMaxScaleOnAxis: function() {
            var a = this.elements,
                b = a[0] * a[0] + a[1] * a[1] + a[2] * a[2],
                c = a[4] * a[4] + a[5] * a[5] + a[6] * a[6],
                d = a[8] * a[8] + a[9] * a[9] + a[10] * a[10];
            return Math.sqrt(Math.max(b, Math.max(c, d)))
        },
        makeTranslation: function(a, b, c) {
            return this.set(1, 0, 0, a, 0, 1, 0, b, 0, 0, 1, c, 0, 0, 0, 1), this
        },
        makeRotationX: function(a) {
            var b = Math.cos(a),
                c = Math.sin(a);
            return this.set(1, 0, 0, 0, 0, b, -c, 0, 0, c, b, 0, 0, 0, 0, 1), this
        },
        makeRotationY: function(a) {
            var b = Math.cos(a),
                c = Math.sin(a);
            return this.set(b, 0, c, 0, 0, 1, 0, 0, -c, 0, b, 0, 0, 0, 0, 1), this
        },
        makeRotationZ: function(a) {
            var b = Math.cos(a),
                c = Math.sin(a);
            return this.set(b, -c, 0, 0, c, b, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
        },
        makeRotationAxis: function(a, b) {
            var c = Math.cos(b),
                d = Math.sin(b),
                e = 1 - c,
                f = a.x,
                g = a.y,
                h = a.z,
                i = e * f,
                j = e * g;
            return this.set(i * f + c, i * g - d * h, i * h + d * g, 0, i * g + d * h, j * g + c, j * h - d * f, 0, i * h - d * g, j * h + d * f, e * h * h + c, 0, 0, 0, 0, 1), this
        },
        makeScale: function(a, b, c) {
            return this.set(a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, 0, 0, 0, 1), this
        },
        compose: function(a, b, c) {
            return this.makeRotationFromQuaternion(b), this.scale(c), this.setPosition(a), this
        },
        decompose: function() {
            var a = new THREE.Vector3,
                b = new THREE.Matrix4;
            return function(c, d, e) {
                var f = this.elements,
                    g = a.set(f[0], f[1], f[2]).length(),
                    h = a.set(f[4], f[5], f[6]).length(),
                    i = a.set(f[8], f[9], f[10]).length();
                c.x = f[12], c.y = f[13], c.z = f[14], b.elements.set(this.elements);
                var j = 1 / g,
                    k = 1 / h,
                    l = 1 / i;
                return b.elements[0] *= j, b.elements[1] *= j, b.elements[2] *= j, b.elements[4] *= k, b.elements[5] *= k, b.elements[6] *= k, b.elements[8] *= l, b.elements[9] *= l, b.elements[10] *= l, d.setFromRotationMatrix(b), e.x = g, e.y = h, e.z = i, this
            }
        }(),
        makeFrustum: function(a, b, c, d, e, f) {
            var g = this.elements,
                h = 2 * e / (b - a),
                i = 2 * e / (d - c),
                j = (b + a) / (b - a),
                k = (d + c) / (d - c),
                l = -(f + e) / (f - e),
                m = -2 * f * e / (f - e);
            return g[0] = h, g[4] = 0, g[8] = j, g[12] = 0, g[1] = 0, g[5] = i, g[9] = k, g[13] = 0, g[2] = 0, g[6] = 0, g[10] = l, g[14] = m, g[3] = 0, g[7] = 0, g[11] = -1, g[15] = 0, this
        },
        makePerspective: function(a, b, c, d) {
            var e = c * Math.tan(THREE.Math.degToRad(.5 * a)),
                f = -e,
                g = f * b,
                h = e * b;
            return this.makeFrustum(g, h, f, e, c, d)
        },
        makeOrthographic: function(a, b, c, d, e, f) {
            var g = this.elements,
                h = b - a,
                i = c - d,
                j = f - e,
                k = (b + a) / h,
                l = (c + d) / i,
                m = (f + e) / j;
            return g[0] = 2 / h, g[4] = 0, g[8] = 0, g[12] = -k, g[1] = 0, g[5] = 2 / i, g[9] = 0, g[13] = -l, g[2] = 0, g[6] = 0, g[10] = -2 / j, g[14] = -m, g[3] = 0, g[7] = 0, g[11] = 0, g[15] = 1, this
        },
        fromArray: function(a) {
            return this.elements.set(a), this
        },
        toArray: function() {
            var a = this.elements;
            return [a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]]
        },
        clone: function() {
            var a = this.elements;
            return new THREE.Matrix4(a[0], a[4], a[8], a[12], a[1], a[5], a[9], a[13], a[2], a[6], a[10], a[14], a[3], a[7], a[11], a[15])
        }
    }, THREE.Ray = function(a, b) {
        this.origin = void 0 !== a ? a : new THREE.Vector3, this.direction = void 0 !== b ? b : new THREE.Vector3
    }, THREE.Ray.prototype = {
        constructor: THREE.Ray,
        set: function(a, b) {
            return this.origin.copy(a), this.direction.copy(b), this
        },
        copy: function(a) {
            return this.origin.copy(a.origin), this.direction.copy(a.direction), this
        },
        at: function(a, b) {
            var c = b || new THREE.Vector3;
            return c.copy(this.direction).multiplyScalar(a).add(this.origin)
        },
        recast: function() {
            var a = new THREE.Vector3;
            return function(b) {
                return this.origin.copy(this.at(b, a)), this
            }
        }(),
        closestPointToPoint: function(a, b) {
            var c = b || new THREE.Vector3;
            c.subVectors(a, this.origin);
            var d = c.dot(this.direction);
            return 0 > d ? c.copy(this.origin) : c.copy(this.direction).multiplyScalar(d).add(this.origin)
        },
        distanceToPoint: function() {
            var a = new THREE.Vector3;
            return function(b) {
                var c = a.subVectors(b, this.origin).dot(this.direction);
                return 0 > c ? this.origin.distanceTo(b) : (a.copy(this.direction).multiplyScalar(c).add(this.origin), a.distanceTo(b))
            }
        }(),
        distanceSqToSegment: function(a, b, c, d) {
            var e, f, g, h, i = a.clone().add(b).multiplyScalar(.5),
                j = b.clone().sub(a).normalize(),
                k = .5 * a.distanceTo(b),
                l = this.origin.clone().sub(i),
                m = -this.direction.dot(j),
                n = l.dot(this.direction),
                o = -l.dot(j),
                p = l.lengthSq(),
                q = Math.abs(1 - m * m);
            if (q >= 0)
                if (e = m * o - n, f = m * n - o, h = k * q, e >= 0)
                    if (f >= -h)
                        if (h >= f) {
                            var r = 1 / q;
                            e *= r, f *= r, g = e * (e + m * f + 2 * n) + f * (m * e + f + 2 * o) + p
                        } else f = k, e = Math.max(0, -(m * f + n)), g = -e * e + f * (f + 2 * o) + p;
            else f = -k, e = Math.max(0, -(m * f + n)), g = -e * e + f * (f + 2 * o) + p;
            else -h >= f ? (e = Math.max(0, -(-m * k + n)), f = e > 0 ? -k : Math.min(Math.max(-k, -o), k), g = -e * e + f * (f + 2 * o) + p) : h >= f ? (e = 0, f = Math.min(Math.max(-k, -o), k), g = f * (f + 2 * o) + p) : (e = Math.max(0, -(m * k + n)), f = e > 0 ? k : Math.min(Math.max(-k, -o), k), g = -e * e + f * (f + 2 * o) + p);
            else f = m > 0 ? -k : k, e = Math.max(0, -(m * f + n)), g = -e * e + f * (f + 2 * o) + p;
            return c && c.copy(this.direction.clone().multiplyScalar(e).add(this.origin)), d && d.copy(j.clone().multiplyScalar(f).add(i)), g
        },
        isIntersectionSphere: function(a) {
            return this.distanceToPoint(a.center) <= a.radius
        },
        isIntersectionPlane: function(a) {
            var b = a.distanceToPoint(this.origin);
            if (0 === b) return !0;
            var c = a.normal.dot(this.direction);
            return 0 > c * b ? !0 : !1
        },
        distanceToPlane: function(a) {
            var b = a.normal.dot(this.direction);
            if (0 == b) return 0 == a.distanceToPoint(this.origin) ? 0 : null;
            var c = -(this.origin.dot(a.normal) + a.constant) / b;
            return c >= 0 ? c : null
        },
        intersectPlane: function(a, b) {
            var c = this.distanceToPlane(a);
            return null === c ? null : this.at(c, b)
        },
        applyMatrix4: function(a) {
            return this.direction.add(this.origin).applyMatrix4(a), this.origin.applyMatrix4(a), this.direction.sub(this.origin), this
        },
        equals: function(a) {
            return a.origin.equals(this.origin) && a.direction.equals(this.direction)
        },
        clone: function() {
            return (new THREE.Ray).copy(this)
        }
    }, THREE.Sphere = function(a, b) {
        this.center = void 0 !== a ? a : new THREE.Vector3, this.radius = void 0 !== b ? b : 0
    }, THREE.Sphere.prototype = {
        constructor: THREE.Sphere,
        set: function(a, b) {
            return this.center.copy(a), this.radius = b, this
        },
        setFromPoints: function(a) {
            for (var b, c = 0, d = 0, e = a.length; e > d; d++) b = a[d].lengthSq(), c = Math.max(c, b);
            return this.center.set(0, 0, 0), this.radius = Math.sqrt(c), this
        },
        copy: function(a) {
            return this.center.copy(a.center), this.radius = a.radius, this
        },
        empty: function() {
            return this.radius <= 0
        },
        containsPoint: function(a) {
            return a.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(a) {
            return a.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(a) {
            var b = this.radius + a.radius;
            return a.center.distanceToSquared(this.center) <= b * b
        },
        clampPoint: function(a, b) {
            var c = this.center.distanceToSquared(a),
                d = b || new THREE.Vector3;
            return d.copy(a), c > this.radius * this.radius && (d.sub(this.center).normalize(), d.multiplyScalar(this.radius).add(this.center)), d
        },
        getBoundingBox: function(a) {
            var b = a || new THREE.Box3;
            return b.set(this.center, this.center), b.expandByScalar(this.radius), b
        },
        applyMatrix4: function(a) {
            return this.center.applyMatrix4(a), this.radius = this.radius * a.getMaxScaleOnAxis(), this
        },
        translate: function(a) {
            return this.center.add(a), this
        },
        equals: function(a) {
            return a.center.equals(this.center) && a.radius === this.radius
        },
        clone: function() {
            return (new THREE.Sphere).copy(this)
        }
    }, THREE.Frustum = function(a, b, c, d, e, f) {
        this.planes = [void 0 !== a ? a : new THREE.Plane, void 0 !== b ? b : new THREE.Plane, void 0 !== c ? c : new THREE.Plane, void 0 !== d ? d : new THREE.Plane, void 0 !== e ? e : new THREE.Plane, void 0 !== f ? f : new THREE.Plane]
    }, THREE.Frustum.prototype = {
        constructor: THREE.Frustum,
        set: function(a, b, c, d, e, f) {
            var g = this.planes;
            return g[0].copy(a), g[1].copy(b), g[2].copy(c), g[3].copy(d), g[4].copy(e), g[5].copy(f), this
        },
        copy: function(a) {
            for (var b = this.planes, c = 0; 6 > c; c++) b[c].copy(a.planes[c]);
            return this
        },
        setFromMatrix: function(a) {
            var b = this.planes,
                c = a.elements,
                d = c[0],
                e = c[1],
                f = c[2],
                g = c[3],
                h = c[4],
                i = c[5],
                j = c[6],
                k = c[7],
                l = c[8],
                m = c[9],
                n = c[10],
                o = c[11],
                p = c[12],
                q = c[13],
                r = c[14],
                s = c[15];
            return b[0].setComponents(g - d, k - h, o - l, s - p).normalize(), b[1].setComponents(g + d, k + h, o + l, s + p).normalize(), b[2].setComponents(g + e, k + i, o + m, s + q).normalize(), b[3].setComponents(g - e, k - i, o - m, s - q).normalize(), b[4].setComponents(g - f, k - j, o - n, s - r).normalize(), b[5].setComponents(g + f, k + j, o + n, s + r).normalize(), this
        },
        intersectsObject: function() {
            var a = new THREE.Vector3;
            return function(b) {
                var c = b.geometry,
                    d = b.matrixWorld;
                null === c.boundingSphere && c.computeBoundingSphere();
                var e = -c.boundingSphere.radius * d.getMaxScaleOnAxis();
                a.getPositionFromMatrix(d);
                for (var f = this.planes, g = 0; 6 > g; g++) {
                    var h = f[g].distanceToPoint(a);
                    if (e > h) return !1
                }
                return !0
            }
        }(),
        intersectsSphere: function(a) {
            for (var b = this.planes, c = a.center, d = -a.radius, e = 0; 6 > e; e++) {
                var f = b[e].distanceToPoint(c);
                if (d > f) return !1
            }
            return !0
        },
        intersectsBox: function() {
            var a = new THREE.Vector3,
                b = new THREE.Vector3;
            return function(c) {
                for (var d = this.planes, e = 0; 6 > e; e++) {
                    var f = d[e];
                    a.x = f.normal.x > 0 ? c.min.x : c.max.x, b.x = f.normal.x > 0 ? c.max.x : c.min.x, a.y = f.normal.y > 0 ? c.min.y : c.max.y, b.y = f.normal.y > 0 ? c.max.y : c.min.y, a.z = f.normal.z > 0 ? c.min.z : c.max.z, b.z = f.normal.z > 0 ? c.max.z : c.min.z;
                    var g = f.distanceToPoint(a),
                        h = f.distanceToPoint(b);
                    if (0 > g && 0 > h) return !1
                }
                return !0
            }
        }(),
        containsPoint: function(a) {
            for (var b = this.planes, c = 0; 6 > c; c++)
                if (b[c].distanceToPoint(a) < 0) return !1;
            return !0
        },
        clone: function() {
            return (new THREE.Frustum).copy(this)
        }
    }, THREE.Plane = function(a, b) {
        this.normal = void 0 !== a ? a : new THREE.Vector3(1, 0, 0), this.constant = void 0 !== b ? b : 0
    }, THREE.Plane.prototype = {
        constructor: THREE.Plane,
        set: function(a, b) {
            return this.normal.copy(a), this.constant = b, this
        },
        setComponents: function(a, b, c, d) {
            return this.normal.set(a, b, c), this.constant = d, this
        },
        setFromNormalAndCoplanarPoint: function(a, b) {
            return this.normal.copy(a), this.constant = -b.dot(this.normal), this
        },
        setFromCoplanarPoints: function() {
            var a = new THREE.Vector3,
                b = new THREE.Vector3;
            return function(c, d, e) {
                var f = a.subVectors(e, d).cross(b.subVectors(c, d)).normalize();
                return this.setFromNormalAndCoplanarPoint(f, c), this
            }
        }(),
        copy: function(a) {
            return this.normal.copy(a.normal), this.constant = a.constant, this
        },
        normalize: function() {
            var a = 1 / this.normal.length();
            return this.normal.multiplyScalar(a), this.constant *= a, this
        },
        negate: function() {
            return this.constant *= -1, this.normal.negate(), this
        },
        distanceToPoint: function(a) {
            return this.normal.dot(a) + this.constant
        },
        distanceToSphere: function(a) {
            return this.distanceToPoint(a.center) - a.radius
        },
        projectPoint: function(a, b) {
            return this.orthoPoint(a, b).sub(a).negate()
        },
        orthoPoint: function(a, b) {
            var c = this.distanceToPoint(a),
                d = b || new THREE.Vector3;
            return d.copy(this.normal).multiplyScalar(c)
        },
        isIntersectionLine: function(a) {
            var b = this.distanceToPoint(a.start),
                c = this.distanceToPoint(a.end);
            return 0 > b && c > 0 || 0 > c && b > 0
        },
        intersectLine: function() {
            var a = new THREE.Vector3;
            return function(b, c) {
                var d = c || new THREE.Vector3,
                    e = b.delta(a),
                    f = this.normal.dot(e);
                if (0 == f) return 0 == this.distanceToPoint(b.start) ? d.copy(b.start) : void 0;
                var g = -(b.start.dot(this.normal) + this.constant) / f;
                return 0 > g || g > 1 ? void 0 : d.copy(e).multiplyScalar(g).add(b.start)
            }
        }(),
        coplanarPoint: function(a) {
            var b = a || new THREE.Vector3;
            return b.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function() {
            var a = new THREE.Vector3,
                b = new THREE.Vector3;
            return function(c, d) {
                d = d || (new THREE.Matrix3).getNormalMatrix(c);
                var e = a.copy(this.normal).applyMatrix3(d),
                    f = this.coplanarPoint(b);
                return f.applyMatrix4(c), this.setFromNormalAndCoplanarPoint(e, f), this
            }
        }(),
        translate: function(a) {
            return this.constant = this.constant - a.dot(this.normal), this
        },
        equals: function(a) {
            return a.normal.equals(this.normal) && a.constant == this.constant
        },
        clone: function() {
            return (new THREE.Plane).copy(this)
        }
    }, THREE.Math = {
        PI2: 2 * Math.PI,
        generateUUID: function() {
            var a, b = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
                c = new Array(36),
                d = 0;
            return function() {
                for (var e = 0; 36 > e; e++) 8 == e || 13 == e || 18 == e || 23 == e ? c[e] = "-" : 14 == e ? c[e] = "4" : (2 >= d && (d = 33554432 + 16777216 * Math.random() | 0), a = 15 & d, d >>= 4, c[e] = b[19 == e ? 3 & a | 8 : a]);
                return c.join("")
            }
        }(),
        clamp: function(a, b, c) {
            return b > a ? b : a > c ? c : a
        },
        clampBottom: function(a, b) {
            return b > a ? b : a
        },
        mapLinear: function(a, b, c, d, e) {
            return d + (a - b) * (e - d) / (c - b)
        },
        smoothstep: function(a, b, c) {
            return b >= a ? 0 : a >= c ? 1 : (a = (a - b) / (c - b), a * a * (3 - 2 * a))
        },
        smootherstep: function(a, b, c) {
            return b >= a ? 0 : a >= c ? 1 : (a = (a - b) / (c - b), a * a * a * (a * (6 * a - 15) + 10))
        },
        random16: function() {
            return (65280 * Math.random() + 255 * Math.random()) / 65535
        },
        randInt: function(a, b) {
            return a + Math.floor(Math.random() * (b - a + 1))
        },
        randFloat: function(a, b) {
            return a + Math.random() * (b - a)
        },
        randFloatSpread: function(a) {
            return a * (.5 - Math.random())
        },
        sign: function(a) {
            return 0 > a ? -1 : a > 0 ? 1 : 0
        },
        degToRad: function() {
            var a = Math.PI / 180;
            return function(b) {
                return b * a
            }
        }(),
        radToDeg: function() {
            var a = 180 / Math.PI;
            return function(b) {
                return b * a
            }
        }()
    }, THREE.Spline = function(a) {
        function b(a, b, c, d, e, f, g) {
            var h = .5 * (c - a),
                i = .5 * (d - b);
            return (2 * (b - c) + h + i) * g + (-3 * (b - c) - 2 * h - i) * f + h * e + b
        }
        this.points = a;
        var c, d, e, f, g, h, i, j, k, l = [],
            m = {
                x: 0,
                y: 0,
                z: 0
            };
        this.initFromArray = function(a) {
            this.points = [];
            for (var b = 0; b < a.length; b++) this.points[b] = {
                x: a[b][0],
                y: a[b][1],
                z: a[b][2]
            }
        }, this.getPoint = function(a) {
            return c = (this.points.length - 1) * a, d = Math.floor(c), e = c - d, l[0] = 0 === d ? d : d - 1, l[1] = d, l[2] = d > this.points.length - 2 ? this.points.length - 1 : d + 1, l[3] = d > this.points.length - 3 ? this.points.length - 1 : d + 2, h = this.points[l[0]], i = this.points[l[1]], j = this.points[l[2]], k = this.points[l[3]], f = e * e, g = e * f, m.x = b(h.x, i.x, j.x, k.x, e, f, g), m.y = b(h.y, i.y, j.y, k.y, e, f, g), m.z = b(h.z, i.z, j.z, k.z, e, f, g), m
        }, this.getControlPointsArray = function() {
            var a, b, c = this.points.length,
                d = [];
            for (a = 0; c > a; a++) b = this.points[a], d[a] = [b.x, b.y, b.z];
            return d
        }, this.getLength = function(a) {
            var b, c, d, e, f = 0,
                g = 0,
                h = 0,
                i = new THREE.Vector3,
                j = new THREE.Vector3,
                k = [],
                l = 0;
            for (k[0] = 0, a || (a = 100), d = this.points.length * a, i.copy(this.points[0]), b = 1; d > b; b++) c = b / d, e = this.getPoint(c), j.copy(e), l += j.distanceTo(i), i.copy(e), f = (this.points.length - 1) * c, g = Math.floor(f), g != h && (k[g] = l, h = g);
            return k[k.length] = l, {
                chunks: k,
                total: l
            }
        }, this.reparametrizeByArcLength = function(a) {
            var b, c, d, e, f, g, h, i, j = [],
                k = new THREE.Vector3,
                l = this.getLength();
            for (j.push(k.copy(this.points[0]).clone()), b = 1; b < this.points.length; b++) {
                for (g = l.chunks[b] - l.chunks[b - 1], h = Math.ceil(a * g / l.total), e = (b - 1) / (this.points.length - 1), f = b / (this.points.length - 1), c = 1; h - 1 > c; c++) d = e + c * (1 / h) * (f - e), i = this.getPoint(d), j.push(k.copy(i).clone());
                j.push(k.copy(this.points[b]).clone())
            }
            this.points = j
        }
    }, THREE.Triangle = function(a, b, c) {
        this.a = void 0 !== a ? a : new THREE.Vector3, this.b = void 0 !== b ? b : new THREE.Vector3, this.c = void 0 !== c ? c : new THREE.Vector3
    }, THREE.Triangle.normal = function() {
        var a = new THREE.Vector3;
        return function(b, c, d, e) {
            var f = e || new THREE.Vector3;
            f.subVectors(d, c), a.subVectors(b, c), f.cross(a);
            var g = f.lengthSq();
            return g > 0 ? f.multiplyScalar(1 / Math.sqrt(g)) : f.set(0, 0, 0)
        }
    }(), THREE.Triangle.barycoordFromPoint = function() {
        var a = new THREE.Vector3,
            b = new THREE.Vector3,
            c = new THREE.Vector3;
        return function(d, e, f, g, h) {
            a.subVectors(g, e), b.subVectors(f, e), c.subVectors(d, e);
            var i = a.dot(a),
                j = a.dot(b),
                k = a.dot(c),
                l = b.dot(b),
                m = b.dot(c),
                n = i * l - j * j,
                o = h || new THREE.Vector3;
            if (0 == n) return o.set(-2, -1, -1);
            var p = 1 / n,
                q = (l * k - j * m) * p,
                r = (i * m - j * k) * p;
            return o.set(1 - q - r, r, q)
        }
    }(), THREE.Triangle.containsPoint = function() {
        var a = new THREE.Vector3;
        return function(b, c, d, e) {
            var f = THREE.Triangle.barycoordFromPoint(b, c, d, e, a);
            return f.x >= 0 && f.y >= 0 && f.x + f.y <= 1
        }
    }(), THREE.Triangle.prototype = {
        constructor: THREE.Triangle,
        set: function(a, b, c) {
            return this.a.copy(a), this.b.copy(b), this.c.copy(c), this
        },
        setFromPointsAndIndices: function(a, b, c, d) {
            return this.a.copy(a[b]), this.b.copy(a[c]), this.c.copy(a[d]), this
        },
        copy: function(a) {
            return this.a.copy(a.a), this.b.copy(a.b), this.c.copy(a.c), this
        },
        area: function() {
            var a = new THREE.Vector3,
                b = new THREE.Vector3;
            return function() {
                return a.subVectors(this.c, this.b), b.subVectors(this.a, this.b), .5 * a.cross(b).length()
            }
        }(),
        midpoint: function(a) {
            var b = a || new THREE.Vector3;
            return b.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        normal: function(a) {
            return THREE.Triangle.normal(this.a, this.b, this.c, a)
        },
        plane: function(a) {
            var b = a || new THREE.Plane;
            return b.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        barycoordFromPoint: function(a, b) {
            return THREE.Triangle.barycoordFromPoint(a, this.a, this.b, this.c, b)
        },
        containsPoint: function(a) {
            return THREE.Triangle.containsPoint(a, this.a, this.b, this.c)
        },
        equals: function(a) {
            return a.a.equals(this.a) && a.b.equals(this.b) && a.c.equals(this.c)
        },
        clone: function() {
            return (new THREE.Triangle).copy(this)
        }
    }, THREE.Vertex = function(a) {
        return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."), a
    }, THREE.UV = function(a, b) {
        return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."), new THREE.Vector2(a, b)
    }, THREE.Clock = function(a) {
        this.autoStart = void 0 !== a ? a : !0, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
    }, THREE.Clock.prototype = {
        constructor: THREE.Clock,
        start: function() {
            this.startTime = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now(), this.oldTime = this.startTime, this.running = !0
        },
        stop: function() {
            this.getElapsedTime(), this.running = !1
        },
        getElapsedTime: function() {
            return this.getDelta(), this.elapsedTime
        },
        getDelta: function() {
            var a = 0;
            if (this.autoStart && !this.running && this.start(), this.running) {
                var b = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now();
                a = .001 * (b - this.oldTime), this.oldTime = b, this.elapsedTime += a
            }
            return a
        }
    }, THREE.EventDispatcher = function() {}, THREE.EventDispatcher.prototype = {
        constructor: THREE.EventDispatcher,
        apply: function(a) {
            a.addEventListener = THREE.EventDispatcher.prototype.addEventListener, a.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener, a.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener, a.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent
        },
        addEventListener: function(a, b) {
            void 0 === this._listeners && (this._listeners = {});
            var c = this._listeners;
            void 0 === c[a] && (c[a] = []), -1 === c[a].indexOf(b) && c[a].push(b)
        },
        hasEventListener: function(a, b) {
            if (void 0 === this._listeners) return !1;
            var c = this._listeners;
            return void 0 !== c[a] && -1 !== c[a].indexOf(b) ? !0 : !1
        },
        removeEventListener: function(a, b) {
            if (void 0 !== this._listeners) {
                var c = this._listeners,
                    d = c[a].indexOf(b); - 1 !== d && c[a].splice(d, 1)
            }
        },
        dispatchEvent: function(a) {
            if (void 0 !== this._listeners) {
                var b = this._listeners,
                    c = b[a.type];
                if (void 0 !== c) {
                    a.target = this;
                    for (var d = 0, e = c.length; e > d; d++) c[d].call(this, a)
                }
            }
        }
    },
    function(a) {
        a.Raycaster = function(b, c, d, e) {
            this.ray = new a.Ray(b, c), this.ray.direction.lengthSq() > 0 && this.ray.direction.normalize(), this.near = d || 0, this.far = e || 1 / 0
        };
        var b = new a.Sphere,
            c = new a.Ray,
            d = new a.Plane,
            e = new a.Vector3,
            f = new a.Vector3,
            g = new a.Matrix4,
            h = function(a, b) {
                return a.distance - b.distance
            },
            i = function(h, j, k) {
                if (h instanceof a.Particle) {
                    f.getPositionFromMatrix(h.matrixWorld);
                    var l = j.ray.distanceToPoint(f);
                    if (l > h.scale.x) return k;
                    k.push({
                        distance: l,
                        point: h.position,
                        face: null,
                        object: h
                    })
                } else if (h instanceof a.LOD) {
                    f.getPositionFromMatrix(h.matrixWorld);
                    var l = j.ray.origin.distanceTo(f);
                    i(h.getObjectForDistance(l), j, k)
                } else if (h instanceof a.Mesh) {
                    var m = h.geometry;
                    if (f.getPositionFromMatrix(h.matrixWorld), null === m.boundingSphere && m.computeBoundingSphere(), b.set(f, m.boundingSphere.radius * h.matrixWorld.getMaxScaleOnAxis()), j.ray.isIntersectionSphere(b) === !1) return k;
                    var n = m.vertices;
                    if (m instanceof a.BufferGeometry) {
                        var o = h.material;
                        if (void 0 === o) return k;
                        if (m.dynamic === !1) return k;
                        var p, q, r, s = h.material instanceof a.MeshFaceMaterial,
                            t = s === !0 ? h.material.materials : null,
                            u = h.material.side,
                            v = j.precision;
                        g.getInverse(h.matrixWorld), c.copy(j.ray).applyMatrix4(g);
                        var w, x = !1;
                        m.attributes.index ? (x = !0, w = m.attributes.index.numItems / 3) : w = m.attributes.position.numItems / 9;
                        for (var y = new a.Vector3, z = new a.Vector3, A = new a.Vector3, B = (new a.Vector3, new a.Vector3, 0); B < m.offsets.length; ++B)
                            for (var C = m.offsets[B].start, D = m.offsets[B].count, E = m.offsets[B].index, F = C, G = C + D; G > F; F += 3) {
                                x ? (p = E + m.attributes.index.array[F], q = E + m.attributes.index.array[F + 1], r = E + m.attributes.index.array[F + 2]) : (p = E, q = E + 1, r = E + 2), y.set(m.attributes.position.array[3 * p], m.attributes.position.array[3 * p + 1], m.attributes.position.array[3 * p + 2]), z.set(m.attributes.position.array[3 * q], m.attributes.position.array[3 * q + 1], m.attributes.position.array[3 * q + 2]), A.set(m.attributes.position.array[3 * r], m.attributes.position.array[3 * r + 1], m.attributes.position.array[3 * r + 2]), d.setFromCoplanarPoints(y, z, A);
                                var H = c.distanceToPlane(d);
                                if (!(v > H) && null !== H) {
                                    if (u = o.side, u !== a.DoubleSide) {
                                        var I = c.direction.dot(d.normal);
                                        if (!(u === a.FrontSide ? 0 > I : I > 0)) continue
                                    }
                                    H < j.near || H > j.far || (e = c.at(H, e), a.Triangle.containsPoint(e, y, z, A) !== !1 && k.push({
                                        distance: H,
                                        point: j.ray.at(H),
                                        face: null,
                                        faceIndex: null,
                                        object: h
                                    }))
                                }
                            }
                    } else if (m instanceof a.Geometry) {
                        var p, q, r, J, s = h.material instanceof a.MeshFaceMaterial,
                            t = s === !0 ? h.material.materials : null,
                            u = h.material.side,
                            v = j.precision;
                        g.getInverse(h.matrixWorld), c.copy(j.ray).applyMatrix4(g);
                        for (var K = 0, w = m.faces.length; w > K; K++) {
                            var L = m.faces[K],
                                o = s === !0 ? t[L.materialIndex] : h.material;
                            if (void 0 !== o) {
                                d.setFromNormalAndCoplanarPoint(L.normal, n[L.a]);
                                var H = c.distanceToPlane(d);
                                if (!(v > H) && null !== H) {
                                    if (u = o.side, u !== a.DoubleSide) {
                                        var I = c.direction.dot(d.normal);
                                        if (!(u === a.FrontSide ? 0 > I : I > 0)) continue
                                    }
                                    if (!(H < j.near || H > j.far)) {
                                        if (e = c.at(H, e), L instanceof a.Face3) {
                                            if (p = n[L.a], q = n[L.b], r = n[L.c], a.Triangle.containsPoint(e, p, q, r) === !1) continue
                                        } else {
                                            if (!(L instanceof a.Face4)) throw Error("face type not supported");
                                            if (p = n[L.a], q = n[L.b], r = n[L.c], J = n[L.d], a.Triangle.containsPoint(e, p, q, J) === !1 && a.Triangle.containsPoint(e, q, r, J) === !1) continue
                                        }
                                        k.push({
                                            distance: H,
                                            point: j.ray.at(H),
                                            face: L,
                                            faceIndex: K,
                                            object: h
                                        })
                                    }
                                }
                            }
                        }
                    }
                } else if (h instanceof a.Line) {
                    var v = j.linePrecision,
                        M = v * v,
                        m = h.geometry;
                    if (null === m.boundingSphere && m.computeBoundingSphere(), f.getPositionFromMatrix(h.matrixWorld), b.set(f, m.boundingSphere.radius * h.matrixWorld.getMaxScaleOnAxis()), j.ray.isIntersectionSphere(b) === !1) return k;
                    g.getInverse(h.matrixWorld), c.copy(j.ray).applyMatrix4(g), c.direction.normalize();
                    for (var n = m.vertices, N = n.length, O = new a.Vector3, P = new a.Vector3, Q = h.type === a.LineStrip ? 1 : 2, F = 0; N - 1 > F; F += Q) {
                        var R = c.distanceSqToSegment(n[F], n[F + 1], P, O);
                        if (M >= R) {
                            var l = c.origin.distanceTo(P);
                            j.near <= l && l <= j.far && k.push({
                                distance: l,
                                point: O.clone().applyMatrix4(h.matrixWorld),
                                face: null,
                                faceIndex: null,
                                object: h
                            })
                        }
                    }
                }
            },
            j = function(a, b, c) {
                for (var d = a.getDescendants(), e = 0, f = d.length; f > e; e++) i(d[e], b, c)
            };
        a.Raycaster.prototype.precision = 1e-4, a.Raycaster.prototype.linePrecision = 1, a.Raycaster.prototype.set = function(a, b) {
            this.ray.set(a, b), this.ray.direction.length() > 0 && this.ray.direction.normalize()
        }, a.Raycaster.prototype.intersectObject = function(a, b) {
            var c = [];
            return b === !0 && j(a, this, c), i(a, this, c), c.sort(h), c
        }, a.Raycaster.prototype.intersectObjects = function(a, b) {
            for (var c = [], d = 0, e = a.length; e > d; d++) i(a[d], this, c), b === !0 && j(a[d], this, c);
            return c.sort(h), c
        }
    }(THREE), THREE.Object3D = function() {
        this.id = THREE.Object3DIdCount++, this.uuid = THREE.Math.generateUUID(), this.name = "", this.parent = void 0, this.children = [], this.up = new THREE.Vector3(0, 1, 0), this.position = new THREE.Vector3, this.rotation = new THREE.Euler, this.quaternion = new THREE.Quaternion, this.scale = new THREE.Vector3(1, 1, 1), this.rotation._quaternion = this.quaternion, this.quaternion._euler = this.rotation, this.renderDepth = null, this.rotationAutoUpdate = !0, this.matrix = new THREE.Matrix4, this.matrixWorld = new THREE.Matrix4, this.matrixAutoUpdate = !0, this.matrixWorldNeedsUpdate = !0, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.userData = {}
    }, THREE.Object3D.prototype = {
        constructor: THREE.Object3D,
        get eulerOrder() {
            return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."), this.rotation.order
        },
        set eulerOrder(a) {
            console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."), this.rotation.order = a
        },
        get useQuaternion() {
            console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")
        },
        set useQuaternion(a) {
            console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")
        },
        applyMatrix: function() {
            var a = new THREE.Matrix4;
            return function(b) {
                this.matrix.multiplyMatrices(b, this.matrix), this.position.getPositionFromMatrix(this.matrix), this.scale.getScaleFromMatrix(this.matrix), a.extractRotation(this.matrix), this.quaternion.setFromRotationMatrix(a)
            }
        }(),
        setRotationFromAxisAngle: function(a, b) {
            this.quaternion.setFromAxisAngle(a, b)
        },
        setRotationFromEuler: function(a) {
            this.quaternion.setFromEuler(a, !0)
        },
        setRotationFromMatrix: function(a) {
            this.quaternion.setFromRotationMatrix(a)
        },
        setRotationFromQuaternion: function(a) {
            this.quaternion.copy(a)
        },
        rotateOnAxis: function() {
            var a = new THREE.Quaternion;
            return function(b, c) {
                return a.setFromAxisAngle(b, c), this.quaternion.multiply(a), this
            }
        }(),
        rotateX: function() {
            var a = new THREE.Vector3(1, 0, 0);
            return function(b) {
                return this.rotateOnAxis(a, b)
            }
        }(),
        rotateY: function() {
            var a = new THREE.Vector3(0, 1, 0);
            return function(b) {
                return this.rotateOnAxis(a, b)
            }
        }(),
        rotateZ: function() {
            var a = new THREE.Vector3(0, 0, 1);
            return function(b) {
                return this.rotateOnAxis(a, b)
            }
        }(),
        translateOnAxis: function() {
            var a = new THREE.Vector3;
            return function(b, c) {
                return a.copy(b), a.applyQuaternion(this.quaternion), this.position.add(a.multiplyScalar(c)), this
            }
        }(),
        translate: function(a, b) {
            return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."), this.translateOnAxis(b, a)
        },
        translateX: function() {
            var a = new THREE.Vector3(1, 0, 0);
            return function(b) {
                return this.translateOnAxis(a, b)
            }
        }(),
        translateY: function() {
            var a = new THREE.Vector3(0, 1, 0);
            return function(b) {
                return this.translateOnAxis(a, b)
            }
        }(),
        translateZ: function() {
            var a = new THREE.Vector3(0, 0, 1);
            return function(b) {
                return this.translateOnAxis(a, b)
            }
        }(),
        localToWorld: function(a) {
            return a.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: function() {
            var a = new THREE.Matrix4;
            return function(b) {
                return b.applyMatrix4(a.getInverse(this.matrixWorld))
            }
        }(),
        lookAt: function() {
            var a = new THREE.Matrix4;
            return function(b) {
                a.lookAt(b, this.position, this.up), this.quaternion.setFromRotationMatrix(a)
            }
        }(),
        add: function(a) {
            if (a === this) return void console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
            if (a instanceof THREE.Object3D) {
                void 0 !== a.parent && a.parent.remove(a), a.parent = this, a.dispatchEvent({
                    type: "added"
                }), this.children.push(a);
                for (var b = this; void 0 !== b.parent;) b = b.parent;
                void 0 !== b && b instanceof THREE.Scene && b.__addObject(a)
            }
        },
        remove: function(a) {
            var b = this.children.indexOf(a);
            if (-1 !== b) {
                a.parent = void 0, a.dispatchEvent({
                    type: "removed"
                }), this.children.splice(b, 1);
                for (var c = this; void 0 !== c.parent;) c = c.parent;
                void 0 !== c && c instanceof THREE.Scene && c.__removeObject(a)
            }
        },
        traverse: function(a) {
            a(this);
            for (var b = 0, c = this.children.length; c > b; b++) this.children[b].traverse(a)
        },
        getObjectById: function(a, b) {
            for (var c = 0, d = this.children.length; d > c; c++) {
                var e = this.children[c];
                if (e.id === a) return e;
                if (b === !0 && (e = e.getObjectById(a, b), void 0 !== e)) return e
            }
            return void 0
        },
        getObjectByName: function(a, b) {
            for (var c = 0, d = this.children.length; d > c; c++) {
                var e = this.children[c];
                if (e.name === a) return e;
                if (b === !0 && (e = e.getObjectByName(a, b), void 0 !== e)) return e
            }
            return void 0
        },
        getChildByName: function(a, b) {
            return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(a, b)
        },
        getDescendants: function(a) {
            void 0 === a && (a = []), Array.prototype.push.apply(a, this.children);
            for (var b = 0, c = this.children.length; c > b; b++) this.children[b].getDescendants(a);
            return a
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(a) {
            this.matrixAutoUpdate === !0 && this.updateMatrix(), (this.matrixWorldNeedsUpdate === !0 || a === !0) && (void 0 === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, a = !0);
            for (var b = 0, c = this.children.length; c > b; b++) this.children[b].updateMatrixWorld(a)
        },
        clone: function(a, b) {
            if (void 0 === a && (a = new THREE.Object3D), void 0 === b && (b = !0), a.name = this.name, a.up.copy(this.up), a.position.copy(this.position), a.quaternion.copy(this.quaternion), a.scale.copy(this.scale), a.renderDepth = this.renderDepth, a.rotationAutoUpdate = this.rotationAutoUpdate, a.matrix.copy(this.matrix), a.matrixWorld.copy(this.matrixWorld), a.matrixAutoUpdate = this.matrixAutoUpdate, a.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate, a.visible = this.visible, a.castShadow = this.castShadow, a.receiveShadow = this.receiveShadow, a.frustumCulled = this.frustumCulled, a.userData = JSON.parse(JSON.stringify(this.userData)), b === !0)
                for (var c = 0; c < this.children.length; c++) {
                    var d = this.children[c];
                    a.add(d.clone())
                }
            return a
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype), THREE.Object3DIdCount = 0, THREE.Projector = function() {
        function a() {
            if (j === v) {
                var a = new THREE.RenderableObject;
                return u.push(a), v++, j++, a
            }
            return u[j++]
        }

        function b() {
            if (l === x) {
                var a = new THREE.RenderableVertex;
                return w.push(a), x++, l++, a
            }
            return w[l++]
        }

        function c() {
            if (n === z) {
                var a = new THREE.RenderableFace3;
                return y.push(a), z++, n++, a
            }
            return y[n++]
        }

        function d() {
            if (o === B) {
                var a = new THREE.RenderableFace4;
                return A.push(a), B++, o++, a
            }
            return A[o++]
        }

        function e() {
            if (q === D) {
                var a = new THREE.RenderableLine;
                return C.push(a), D++, q++, a
            }
            return C[q++]
        }

        function f() {
            if (s === F) {
                var a = new THREE.RenderableParticle;
                return E.push(a), F++, s++, a
            }
            return E[s++]
        }

        function g(a, b) {
            return a.z !== b.z ? b.z - a.z : a.id !== b.id ? a.id - b.id : 0
        }

        function h(a, b) {
            var c = 0,
                d = 1,
                e = a.z + a.w,
                f = b.z + b.w,
                g = -a.z + a.w,
                h = -b.z + b.w;
            return e >= 0 && f >= 0 && g >= 0 && h >= 0 ? !0 : 0 > e && 0 > f || 0 > g && 0 > h ? !1 : (0 > e ? c = Math.max(c, e / (e - f)) : 0 > f && (d = Math.min(d, e / (e - f))), 0 > g ? c = Math.max(c, g / (g - h)) : 0 > h && (d = Math.min(d, g / (g - h))), c > d ? !1 : (a.lerp(b, c), b.lerp(a, 1 - d), !0))
        }
        var i, j, k, l, m, n, o, p, q, r, s, t, u = [],
            v = 0,
            w = [],
            x = 0,
            y = [],
            z = 0,
            A = [],
            B = 0,
            C = [],
            D = 0,
            E = [],
            F = 0,
            G = {
                objects: [],
                sprites: [],
                lights: [],
                elements: []
            },
            H = new THREE.Vector3,
            I = new THREE.Vector4,
            J = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),
            K = new THREE.Box3,
            L = new Array(3),
            M = new Array(4),
            N = new THREE.Matrix4,
            O = new THREE.Matrix4,
            P = new THREE.Matrix4,
            Q = new THREE.Matrix3,
            R = new THREE.Matrix3,
            S = new THREE.Vector3,
            T = new THREE.Frustum,
            U = new THREE.Vector4,
            V = new THREE.Vector4;
        this.projectVector = function(a, b) {
            return b.matrixWorldInverse.getInverse(b.matrixWorld), O.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse), a.applyProjection(O)
        }, this.unprojectVector = function(a, b) {
            return b.projectionMatrixInverse.getInverse(b.projectionMatrix), O.multiplyMatrices(b.matrixWorld, b.projectionMatrixInverse), a.applyProjection(O)
        }, this.pickingRay = function(a, b) {
            a.z = -1;
            var c = new THREE.Vector3(a.x, a.y, 1);
            return this.unprojectVector(a, b), this.unprojectVector(c, b), c.sub(a).normalize(), new THREE.Raycaster(a, c)
        };
        var W = function(b) {
                return i = a(), i.id = b.id, i.object = b, null !== b.renderDepth ? i.z = b.renderDepth : (H.getPositionFromMatrix(b.matrixWorld), H.applyProjection(O), i.z = H.z), i
            },
            X = function(a) {
                if (a.visible !== !1) {
                    a instanceof THREE.Light ? G.lights.push(a) : a instanceof THREE.Mesh || a instanceof THREE.Line ? (a.frustumCulled === !1 || T.intersectsObject(a) === !0) && G.objects.push(W(a)) : (a instanceof THREE.Sprite || a instanceof THREE.Particle) && G.sprites.push(W(a));
                    for (var b = 0, c = a.children.length; c > b; b++) X(a.children[b])
                }
            },
            Y = function(a, b) {
                j = 0, G.objects.length = 0, G.sprites.length = 0, G.lights.length = 0, X(a), b === !0 && G.objects.sort(g)
            };
        this.projectScene = function(a, i, j, u) {
            var v, x, y, z, A, B, C, D, E, F, H, W, X, Z, $, _, ab, bb, cb, db, eb, fb, gb, hb, ib, jb, kb = !1;
            for (n = 0, o = 0, q = 0, s = 0, G.elements.length = 0, a.autoUpdate === !0 && a.updateMatrixWorld(), void 0 === i.parent && i.updateMatrixWorld(), N.copy(i.matrixWorldInverse.getInverse(i.matrixWorld)), O.multiplyMatrices(i.projectionMatrix, N), R.getNormalMatrix(N), T.setFromMatrix(O), Y(a, j), v = 0, x = G.objects.length; x > v; v++)
                if (X = G.objects[v].object, t = X.matrixWorld, l = 0, X instanceof THREE.Mesh) {
                    for (Z = X.geometry, $ = Z.vertices, _ = Z.faces, cb = Z.faceVertexUvs, Q.getNormalMatrix(t), ib = X.material instanceof THREE.MeshFaceMaterial, jb = ib === !0 ? X.material : null, y = 0, z = $.length; z > y; y++) {
                        k = b(), k.positionWorld.copy($[y]).applyMatrix4(t), k.positionScreen.copy(k.positionWorld).applyMatrix4(O);
                        var lb = 1 / k.positionScreen.w;
                        k.positionScreen.x *= lb, k.positionScreen.y *= lb, k.positionScreen.z *= lb, k.visible = !(k.positionScreen.x < -1 || k.positionScreen.x > 1 || k.positionScreen.y < -1 || k.positionScreen.y > 1 || k.positionScreen.z < -1 || k.positionScreen.z > 1)
                    }
                    for (A = 0, B = _.length; B > A; A++) {
                        ab = _[A];
                        var mb = ib === !0 ? jb.materials[ab.materialIndex] : X.material;
                        if (void 0 !== mb) {
                            var nb = mb.side;
                            if (ab instanceof THREE.Face3) {
                                if (eb = w[ab.a], fb = w[ab.b], gb = w[ab.c], L[0] = eb.positionScreen, L[1] = fb.positionScreen, L[2] = gb.positionScreen, eb.visible !== !0 && fb.visible !== !0 && gb.visible !== !0 && !J.isIntersectionBox(K.setFromPoints(L))) continue;
                                if (kb = (gb.positionScreen.x - eb.positionScreen.x) * (fb.positionScreen.y - eb.positionScreen.y) - (gb.positionScreen.y - eb.positionScreen.y) * (fb.positionScreen.x - eb.positionScreen.x) < 0, nb !== THREE.DoubleSide && kb !== (nb === THREE.FrontSide)) continue;
                                m = c(), m.id = X.id, m.v1.copy(eb), m.v2.copy(fb), m.v3.copy(gb)
                            } else if (ab instanceof THREE.Face4) {
                                if (eb = w[ab.a], fb = w[ab.b], gb = w[ab.c], hb = w[ab.d], M[0] = eb.positionScreen, M[1] = fb.positionScreen, M[2] = gb.positionScreen, M[3] = hb.positionScreen, eb.visible !== !0 && fb.visible !== !0 && gb.visible !== !0 && hb.visible !== !0 && !J.isIntersectionBox(K.setFromPoints(M))) continue;
                                if (kb = (hb.positionScreen.x - eb.positionScreen.x) * (fb.positionScreen.y - eb.positionScreen.y) - (hb.positionScreen.y - eb.positionScreen.y) * (fb.positionScreen.x - eb.positionScreen.x) < 0 || (fb.positionScreen.x - gb.positionScreen.x) * (hb.positionScreen.y - gb.positionScreen.y) - (fb.positionScreen.y - gb.positionScreen.y) * (hb.positionScreen.x - gb.positionScreen.x) < 0, nb !== THREE.DoubleSide && kb !== (nb === THREE.FrontSide)) continue;
                                m = d(), m.id = X.id, m.v1.copy(eb), m.v2.copy(fb), m.v3.copy(gb), m.v4.copy(hb)
                            }
                            for (m.normalModel.copy(ab.normal), kb !== !1 || nb !== THREE.BackSide && nb !== THREE.DoubleSide || m.normalModel.negate(), m.normalModel.applyMatrix3(Q).normalize(), m.normalModelView.copy(m.normalModel).applyMatrix3(R), m.centroidModel.copy(ab.centroid).applyMatrix4(t), bb = ab.vertexNormals, C = 0, D = bb.length; D > C; C++) {
                                var ob = m.vertexNormalsModel[C];
                                ob.copy(bb[C]), kb !== !1 || nb !== THREE.BackSide && nb !== THREE.DoubleSide || ob.negate(), ob.applyMatrix3(Q).normalize();
                                var pb = m.vertexNormalsModelView[C];
                                pb.copy(ob).applyMatrix3(R)
                            }
                            for (m.vertexNormalsLength = bb.length, E = 0, F = cb.length; F > E; E++)
                                if (db = cb[E][A], void 0 !== db)
                                    for (H = 0, W = db.length; W > H; H++) m.uvs[E][H] = db[H];
                            m.color = ab.color, m.material = mb, S.copy(m.centroidModel).applyProjection(O), m.z = S.z, G.elements.push(m)
                        }
                    }
                } else if (X instanceof THREE.Line) {
                P.multiplyMatrices(O, t), $ = X.geometry.vertices, eb = b(), eb.positionScreen.copy($[0]).applyMatrix4(P);
                var qb = X.type === THREE.LinePieces ? 2 : 1;
                for (y = 1, z = $.length; z > y; y++) eb = b(), eb.positionScreen.copy($[y]).applyMatrix4(P), (y + 1) % qb > 0 || (fb = w[l - 2], U.copy(eb.positionScreen), V.copy(fb.positionScreen), h(U, V) === !0 && (U.multiplyScalar(1 / U.w), V.multiplyScalar(1 / V.w), p = e(), p.id = X.id, p.v1.positionScreen.copy(U), p.v2.positionScreen.copy(V), p.z = Math.max(U.z, V.z), p.material = X.material, X.material.vertexColors === THREE.VertexColors && (p.vertexColors[0].copy(X.geometry.colors[y]), p.vertexColors[1].copy(X.geometry.colors[y - 1])), G.elements.push(p)))
            }
            for (v = 0, x = G.sprites.length; x > v; v++)
                if (X = G.sprites[v].object, t = X.matrixWorld, X instanceof THREE.Particle) {
                    I.set(t.elements[12], t.elements[13], t.elements[14], 1), I.applyMatrix4(O);
                    var lb = 1 / I.w;
                    I.z *= lb, I.z > 0 && I.z < 1 && (r = f(), r.id = X.id, r.x = I.x * lb, r.y = I.y * lb, r.z = I.z, r.object = X, r.rotation = X.rotation.z, r.scale.x = X.scale.x * Math.abs(r.x - (I.x + i.projectionMatrix.elements[0]) / (I.w + i.projectionMatrix.elements[12])), r.scale.y = X.scale.y * Math.abs(r.y - (I.y + i.projectionMatrix.elements[5]) / (I.w + i.projectionMatrix.elements[13])), r.material = X.material, G.elements.push(r))
                }
            return u === !0 && G.elements.sort(g), G
        }
    }, THREE.Face3 = function(a, b, c, d, e, f) {
        this.a = a, this.b = b, this.c = c, this.normal = d instanceof THREE.Vector3 ? d : new THREE.Vector3, this.vertexNormals = d instanceof Array ? d : [], this.color = e instanceof THREE.Color ? e : new THREE.Color, this.vertexColors = e instanceof Array ? e : [], this.vertexTangents = [], this.materialIndex = void 0 !== f ? f : 0, this.centroid = new THREE.Vector3
    }, THREE.Face3.prototype = {
        constructor: THREE.Face3,
        clone: function() {
            var a = new THREE.Face3(this.a, this.b, this.c);
            a.normal.copy(this.normal), a.color.copy(this.color), a.centroid.copy(this.centroid), a.materialIndex = this.materialIndex;
            var b, c;
            for (b = 0, c = this.vertexNormals.length; c > b; b++) a.vertexNormals[b] = this.vertexNormals[b].clone();
            for (b = 0, c = this.vertexColors.length; c > b; b++) a.vertexColors[b] = this.vertexColors[b].clone();
            for (b = 0, c = this.vertexTangents.length; c > b; b++) a.vertexTangents[b] = this.vertexTangents[b].clone();
            return a
        }
    }, THREE.Face4 = function(a, b, c, d, e, f, g) {
        this.a = a, this.b = b, this.c = c, this.d = d, this.normal = e instanceof THREE.Vector3 ? e : new THREE.Vector3, this.vertexNormals = e instanceof Array ? e : [], this.color = f instanceof THREE.Color ? f : new THREE.Color, this.vertexColors = f instanceof Array ? f : [], this.vertexTangents = [], this.materialIndex = void 0 !== g ? g : 0, this.centroid = new THREE.Vector3
    }, THREE.Face4.prototype = {
        constructor: THREE.Face4,
        clone: function() {
            var a = new THREE.Face4(this.a, this.b, this.c, this.d);
            a.normal.copy(this.normal), a.color.copy(this.color), a.centroid.copy(this.centroid), a.materialIndex = this.materialIndex;
            var b, c;
            for (b = 0, c = this.vertexNormals.length; c > b; b++) a.vertexNormals[b] = this.vertexNormals[b].clone();
            for (b = 0, c = this.vertexColors.length; c > b; b++) a.vertexColors[b] = this.vertexColors[b].clone();
            for (b = 0, c = this.vertexTangents.length; c > b; b++) a.vertexTangents[b] = this.vertexTangents[b].clone();
            return a
        }
    }, THREE.Geometry = function() {
        this.id = THREE.GeometryIdCount++, this.uuid = THREE.Math.generateUUID(), this.name = "", this.vertices = [], this.colors = [], this.normals = [], this.faces = [], this.faceUvs = [
            []
        ], this.faceVertexUvs = [
            []
        ], this.morphTargets = [], this.morphColors = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.hasTangents = !1, this.dynamic = !0, this.verticesNeedUpdate = !1, this.elementsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.tangentsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.buffersNeedUpdate = !1
    }, THREE.Geometry.prototype = {
        constructor: THREE.Geometry,
        applyMatrix: function(a) {
            for (var b = (new THREE.Matrix3).getNormalMatrix(a), c = 0, d = this.vertices.length; d > c; c++) {
                var e = this.vertices[c];
                e.applyMatrix4(a)
            }
            for (var c = 0, d = this.faces.length; d > c; c++) {
                var f = this.faces[c];
                f.normal.applyMatrix3(b).normalize();
                for (var g = 0, h = f.vertexNormals.length; h > g; g++) f.vertexNormals[g].applyMatrix3(b).normalize();
                f.centroid.applyMatrix4(a)
            }
            this.boundingBox instanceof THREE.Box3 && this.computeBoundingBox(), this.boundingSphere instanceof THREE.Sphere && this.computeBoundingSphere()
        },
        computeCentroids: function() {
            var a, b, c;
            for (a = 0, b = this.faces.length; b > a; a++) c = this.faces[a], c.centroid.set(0, 0, 0), c instanceof THREE.Face3 ? (c.centroid.add(this.vertices[c.a]), c.centroid.add(this.vertices[c.b]), c.centroid.add(this.vertices[c.c]), c.centroid.divideScalar(3)) : c instanceof THREE.Face4 && (c.centroid.add(this.vertices[c.a]), c.centroid.add(this.vertices[c.b]), c.centroid.add(this.vertices[c.c]), c.centroid.add(this.vertices[c.d]), c.centroid.divideScalar(4))
        },
        computeFaceNormals: function() {
            for (var a = new THREE.Vector3, b = new THREE.Vector3, c = 0, d = this.faces.length; d > c; c++) {
                var e = this.faces[c],
                    f = this.vertices[e.a],
                    g = this.vertices[e.b],
                    h = this.vertices[e.c];
                a.subVectors(h, g), b.subVectors(f, g), a.cross(b), a.normalize(), e.normal.copy(a)
            }
        },
        computeVertexNormals: function(a) {
            var b, c, d, e, f, g;
            if (void 0 === this.__tmpVertices) {
                for (this.__tmpVertices = new Array(this.vertices.length), g = this.__tmpVertices, b = 0, c = this.vertices.length; c > b; b++) g[b] = new THREE.Vector3;
                for (d = 0, e = this.faces.length; e > d; d++) f = this.faces[d], f instanceof THREE.Face3 ? f.vertexNormals = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3] : f instanceof THREE.Face4 && (f.vertexNormals = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3])
            } else
                for (g = this.__tmpVertices, b = 0, c = this.vertices.length; c > b; b++) g[b].set(0, 0, 0);
            if (a) {
                var h, i, j, k, l = new THREE.Vector3,
                    m = new THREE.Vector3,
                    n = new THREE.Vector3,
                    o = new THREE.Vector3,
                    p = new THREE.Vector3;
                for (d = 0, e = this.faces.length; e > d; d++) f = this.faces[d], f instanceof THREE.Face3 ? (h = this.vertices[f.a], i = this.vertices[f.b], j = this.vertices[f.c], l.subVectors(j, i), m.subVectors(h, i), l.cross(m), g[f.a].add(l), g[f.b].add(l), g[f.c].add(l)) : f instanceof THREE.Face4 && (h = this.vertices[f.a], i = this.vertices[f.b], j = this.vertices[f.c], k = this.vertices[f.d], n.subVectors(k, i), m.subVectors(h, i), n.cross(m), g[f.a].add(n), g[f.b].add(n), g[f.d].add(n), o.subVectors(k, j), p.subVectors(i, j), o.cross(p), g[f.b].add(o), g[f.c].add(o), g[f.d].add(o))
            } else
                for (d = 0, e = this.faces.length; e > d; d++) f = this.faces[d], f instanceof THREE.Face3 ? (g[f.a].add(f.normal), g[f.b].add(f.normal), g[f.c].add(f.normal)) : f instanceof THREE.Face4 && (g[f.a].add(f.normal), g[f.b].add(f.normal), g[f.c].add(f.normal), g[f.d].add(f.normal));
            for (b = 0, c = this.vertices.length; c > b; b++) g[b].normalize();
            for (d = 0, e = this.faces.length; e > d; d++) f = this.faces[d], f instanceof THREE.Face3 ? (f.vertexNormals[0].copy(g[f.a]), f.vertexNormals[1].copy(g[f.b]), f.vertexNormals[2].copy(g[f.c])) : f instanceof THREE.Face4 && (f.vertexNormals[0].copy(g[f.a]), f.vertexNormals[1].copy(g[f.b]), f.vertexNormals[2].copy(g[f.c]), f.vertexNormals[3].copy(g[f.d]))
        },
        computeMorphNormals: function() {
            var a, b, c, d, e;
            for (c = 0, d = this.faces.length; d > c; c++)
                for (e = this.faces[c], e.__originalFaceNormal ? e.__originalFaceNormal.copy(e.normal) : e.__originalFaceNormal = e.normal.clone(), e.__originalVertexNormals || (e.__originalVertexNormals = []), a = 0, b = e.vertexNormals.length; b > a; a++) e.__originalVertexNormals[a] ? e.__originalVertexNormals[a].copy(e.vertexNormals[a]) : e.__originalVertexNormals[a] = e.vertexNormals[a].clone();
            var f = new THREE.Geometry;
            for (f.faces = this.faces, a = 0, b = this.morphTargets.length; b > a; a++) {
                if (!this.morphNormals[a]) {
                    this.morphNormals[a] = {}, this.morphNormals[a].faceNormals = [], this.morphNormals[a].vertexNormals = [];
                    var g, h, i = this.morphNormals[a].faceNormals,
                        j = this.morphNormals[a].vertexNormals;
                    for (c = 0, d = this.faces.length; d > c; c++) e = this.faces[c], g = new THREE.Vector3, h = e instanceof THREE.Face3 ? {
                        a: new THREE.Vector3,
                        b: new THREE.Vector3,
                        c: new THREE.Vector3
                    } : {
                        a: new THREE.Vector3,
                        b: new THREE.Vector3,
                        c: new THREE.Vector3,
                        d: new THREE.Vector3
                    }, i.push(g), j.push(h)
                }
                var k = this.morphNormals[a];
                f.vertices = this.morphTargets[a].vertices, f.computeFaceNormals(), f.computeVertexNormals();
                var g, h;
                for (c = 0, d = this.faces.length; d > c; c++) e = this.faces[c], g = k.faceNormals[c], h = k.vertexNormals[c], g.copy(e.normal), e instanceof THREE.Face3 ? (h.a.copy(e.vertexNormals[0]), h.b.copy(e.vertexNormals[1]), h.c.copy(e.vertexNormals[2])) : (h.a.copy(e.vertexNormals[0]), h.b.copy(e.vertexNormals[1]), h.c.copy(e.vertexNormals[2]), h.d.copy(e.vertexNormals[3]))
            }
            for (c = 0, d = this.faces.length; d > c; c++) e = this.faces[c], e.normal = e.__originalFaceNormal, e.vertexNormals = e.__originalVertexNormals
        },
        computeTangents: function() {
            function a(a, b, c, d, e, f, g) {
                j = a.vertices[b], k = a.vertices[c], l = a.vertices[d], m = i[e], n = i[f], o = i[g], p = k.x - j.x, q = l.x - j.x, r = k.y - j.y, s = l.y - j.y, t = k.z - j.z, u = l.z - j.z, v = n.x - m.x, w = o.x - m.x, x = n.y - m.y, y = o.y - m.y, z = 1 / (v * y - w * x), F.set((y * p - x * q) * z, (y * r - x * s) * z, (y * t - x * u) * z), G.set((v * q - w * p) * z, (v * s - w * r) * z, (v * u - w * t) * z), D[b].add(F), D[c].add(F), D[d].add(F), E[b].add(G), E[c].add(G), E[d].add(G)
            }
            var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D = [],
                E = [],
                F = new THREE.Vector3,
                G = new THREE.Vector3,
                H = new THREE.Vector3,
                I = new THREE.Vector3,
                J = new THREE.Vector3;
            for (d = 0, e = this.vertices.length; e > d; d++) D[d] = new THREE.Vector3, E[d] = new THREE.Vector3;
            for (b = 0, c = this.faces.length; c > b; b++) h = this.faces[b], i = this.faceVertexUvs[0][b], h instanceof THREE.Face3 ? a(this, h.a, h.b, h.c, 0, 1, 2) : h instanceof THREE.Face4 && (a(this, h.a, h.b, h.d, 0, 1, 3), a(this, h.b, h.c, h.d, 1, 2, 3));
            var K = ["a", "b", "c", "d"];
            for (b = 0, c = this.faces.length; c > b; b++)
                for (h = this.faces[b], f = 0; f < h.vertexNormals.length; f++) J.copy(h.vertexNormals[f]), g = h[K[f]], A = D[g], H.copy(A), H.sub(J.multiplyScalar(J.dot(A))).normalize(), I.crossVectors(h.vertexNormals[f], A), B = I.dot(E[g]), C = 0 > B ? -1 : 1, h.vertexTangents[f] = new THREE.Vector4(H.x, H.y, H.z, C);
            this.hasTangents = !0
        },
        computeLineDistances: function() {
            for (var a = 0, b = this.vertices, c = 0, d = b.length; d > c; c++) c > 0 && (a += b[c].distanceTo(b[c - 1])), this.lineDistances[c] = a
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new THREE.Box3), this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere), this.boundingSphere.setFromPoints(this.vertices)
        },
        mergeVertices: function() {
            var a, b, c, d, e, f, g, h, i, j = {},
                k = [],
                l = [],
                m = 4,
                n = Math.pow(10, m);
            for (this.__tmpVertices = void 0, c = 0, d = this.vertices.length; d > c; c++) a = this.vertices[c], b = Math.round(a.x * n) + "_" + Math.round(a.y * n) + "_" + Math.round(a.z * n), void 0 === j[b] ? (j[b] = c, k.push(this.vertices[c]), l[c] = k.length - 1) : l[c] = l[j[b]];
            var o = [];
            for (c = 0, d = this.faces.length; d > c; c++)
                if (e = this.faces[c], e instanceof THREE.Face3) {
                    e.a = l[e.a], e.b = l[e.b], e.c = l[e.c], f = [e.a, e.b, e.c];
                    for (var p = -1, q = 0; 3 > q; q++)
                        if (f[q] == f[(q + 1) % 3]) {
                            p = q, o.push(c);
                            break
                        }
                } else if (e instanceof THREE.Face4) {
                e.a = l[e.a], e.b = l[e.b], e.c = l[e.c], e.d = l[e.d], f = [e.a, e.b, e.c, e.d];
                for (var p = -1, q = 0; 4 > q; q++) f[q] == f[(q + 1) % 4] && (p >= 0 && o.push(c), p = q);
                if (p >= 0) {
                    f.splice(p, 1);
                    var r = new THREE.Face3(f[0], f[1], f[2], e.normal, e.color, e.materialIndex);
                    for (g = 0, h = this.faceVertexUvs.length; h > g; g++) i = this.faceVertexUvs[g][c], i && i.splice(p, 1);
                    e.vertexNormals && e.vertexNormals.length > 0 && (r.vertexNormals = e.vertexNormals, r.vertexNormals.splice(p, 1)), e.vertexColors && e.vertexColors.length > 0 && (r.vertexColors = e.vertexColors, r.vertexColors.splice(p, 1)), this.faces[c] = r
                }
            }
            for (c = o.length - 1; c >= 0; c--)
                for (this.faces.splice(c, 1), g = 0, h = this.faceVertexUvs.length; h > g; g++) this.faceVertexUvs[g].splice(c, 1);
            var s = this.vertices.length - k.length;
            return this.vertices = k, s
        },
        clone: function() {
            for (var a = new THREE.Geometry, b = this.vertices, c = 0, d = b.length; d > c; c++) a.vertices.push(b[c].clone());
            for (var e = this.faces, c = 0, d = e.length; d > c; c++) a.faces.push(e[c].clone());
            for (var f = this.faceVertexUvs[0], c = 0, d = f.length; d > c; c++) {
                for (var g = f[c], h = [], i = 0, j = g.length; j > i; i++) h.push(new THREE.Vector2(g[i].x, g[i].y));
                a.faceVertexUvs[0].push(h)
            }
            return a
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype), THREE.GeometryIdCount = 0, THREE.BufferGeometry = function() {
        this.id = THREE.GeometryIdCount++, this.uuid = THREE.Math.generateUUID(), this.attributes = {}, this.dynamic = !1, this.offsets = [], this.boundingBox = null, this.boundingSphere = null, this.hasTangents = !1, this.morphTargets = []
    }, THREE.BufferGeometry.prototype = {
        constructor: THREE.BufferGeometry,
        applyMatrix: function(a) {
            var b, c;
            if (this.attributes.position && (b = this.attributes.position.array), this.attributes.normal && (c = this.attributes.normal.array), void 0 !== b && (a.multiplyVector3Array(b), this.verticesNeedUpdate = !0), void 0 !== c) {
                var d = (new THREE.Matrix3).getNormalMatrix(a);
                d.multiplyVector3Array(c), this.normalizeNormals(), this.normalsNeedUpdate = !0
            }
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new THREE.Box3);
            var a = this.attributes.position.array;
            if (a) {
                var b, c, d, e = this.boundingBox;
                a.length >= 3 && (e.min.x = e.max.x = a[0], e.min.y = e.max.y = a[1], e.min.z = e.max.z = a[2]);
                for (var f = 3, g = a.length; g > f; f += 3) b = a[f], c = a[f + 1], d = a[f + 2], b < e.min.x ? e.min.x = b : b > e.max.x && (e.max.x = b), c < e.min.y ? e.min.y = c : c > e.max.y && (e.max.y = c), d < e.min.z ? e.min.z = d : d > e.max.z && (e.max.z = d)
            }(void 0 === a || 0 === a.length) && (this.boundingBox.min.set(0, 0, 0), this.boundingBox.max.set(0, 0, 0))
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);
            var a = this.attributes.position.array;
            if (a) {
                for (var b, c, d, e, f = 0, g = 0, h = a.length; h > g; g += 3) c = a[g], d = a[g + 1], e = a[g + 2], b = c * c + d * d + e * e, b > f && (f = b);
                this.boundingSphere.radius = Math.sqrt(f)
            }
        },
        computeVertexNormals: function() {
            if (this.attributes.position) {
                var a, b, c, d, e = this.attributes.position.array.length;
                if (void 0 === this.attributes.normal) this.attributes.normal = {
                    itemSize: 3,
                    array: new Float32Array(e)
                };
                else
                    for (a = 0, b = this.attributes.normal.array.length; b > a; a++) this.attributes.normal.array[a] = 0;
                var f, g, h, i, j, k, l = this.attributes.position.array,
                    m = this.attributes.normal.array,
                    n = new THREE.Vector3,
                    o = new THREE.Vector3,
                    p = new THREE.Vector3,
                    q = new THREE.Vector3,
                    r = new THREE.Vector3;
                if (this.attributes.index) {
                    var s = this.attributes.index.array,
                        t = this.offsets;
                    for (c = 0, d = t.length; d > c; ++c) {
                        var u = t[c].start,
                            v = t[c].count,
                            w = t[c].index;
                        for (a = u, b = u + v; b > a; a += 3) f = w + s[a], g = w + s[a + 1], h = w + s[a + 2], i = l[3 * f], j = l[3 * f + 1], k = l[3 * f + 2], n.set(i, j, k), i = l[3 * g], j = l[3 * g + 1], k = l[3 * g + 2], o.set(i, j, k), i = l[3 * h], j = l[3 * h + 1], k = l[3 * h + 2], p.set(i, j, k), q.subVectors(p, o), r.subVectors(n, o), q.cross(r), m[3 * f] += q.x, m[3 * f + 1] += q.y, m[3 * f + 2] += q.z, m[3 * g] += q.x, m[3 * g + 1] += q.y, m[3 * g + 2] += q.z, m[3 * h] += q.x, m[3 * h + 1] += q.y, m[3 * h + 2] += q.z
                    }
                } else
                    for (a = 0, b = l.length; b > a; a += 9) i = l[a], j = l[a + 1], k = l[a + 2], n.set(i, j, k), i = l[a + 3], j = l[a + 4], k = l[a + 5], o.set(i, j, k), i = l[a + 6], j = l[a + 7], k = l[a + 8], p.set(i, j, k), q.subVectors(p, o), r.subVectors(n, o), q.cross(r), m[a] = q.x, m[a + 1] = q.y, m[a + 2] = q.z, m[a + 3] = q.x, m[a + 4] = q.y, m[a + 5] = q.z, m[a + 6] = q.x, m[a + 7] = q.y, m[a + 8] = q.z;
                this.normalizeNormals(), this.normalsNeedUpdate = !0
            }
        },
        normalizeNormals: function() {
            for (var a, b, c, d, e = this.attributes.normal.array, f = 0, g = e.length; g > f; f += 3) a = e[f], b = e[f + 1], c = e[f + 2], d = 1 / Math.sqrt(a * a + b * b + c * c), e[f] *= d, e[f + 1] *= d, e[f + 2] *= d
        },
        computeTangents: function() {
            function a(a, b, c) {
                m = d[3 * a], n = d[3 * a + 1], o = d[3 * a + 2], p = d[3 * b], q = d[3 * b + 1], r = d[3 * b + 2], s = d[3 * c], t = d[3 * c + 1], u = d[3 * c + 2], v = f[2 * a], w = f[2 * a + 1], x = f[2 * b], y = f[2 * b + 1], z = f[2 * c], A = f[2 * c + 1], B = p - m, C = s - m, D = q - n, E = t - n, F = r - o, G = u - o, H = x - v, I = z - v, J = y - w, K = A - w, L = 1 / (H * K - I * J), T.set((K * B - J * C) * L, (K * D - J * E) * L, (K * F - J * G) * L), U.set((H * C - I * B) * L, (H * E - I * D) * L, (H * G - I * F) * L), j[a].add(T), j[b].add(T), j[c].add(T), k[a].add(U), k[b].add(U), k[c].add(U)
            }

            function b(a) {
                cb.x = e[3 * a], cb.y = e[3 * a + 1], cb.z = e[3 * a + 2], db.copy(cb), $ = j[a], ab.copy($), ab.sub(cb.multiplyScalar(cb.dot($))).normalize(), bb.crossVectors(db, $), _ = bb.dot(k[a]), Z = 0 > _ ? -1 : 1, i[4 * a] = ab.x, i[4 * a + 1] = ab.y, i[4 * a + 2] = ab.z, i[4 * a + 3] = Z
            }
            if (void 0 === this.attributes.index || void 0 === this.attributes.position || void 0 === this.attributes.normal || void 0 === this.attributes.uv) return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");
            var c = this.attributes.index.array,
                d = this.attributes.position.array,
                e = this.attributes.normal.array,
                f = this.attributes.uv.array,
                g = d.length / 3;
            if (void 0 === this.attributes.tangent) {
                var h = 4 * g;
                this.attributes.tangent = {
                    itemSize: 4,
                    array: new Float32Array(h)
                }
            }
            for (var i = this.attributes.tangent.array, j = [], k = [], l = 0; g > l; l++) j[l] = new THREE.Vector3, k[l] = new THREE.Vector3;
            var m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T = new THREE.Vector3,
                U = new THREE.Vector3,
                V = this.offsets;
            for (O = 0, P = V.length; P > O; ++O) {
                var W = V[O].start,
                    X = V[O].count,
                    Y = V[O].index;
                for (M = W, N = W + X; N > M; M += 3) Q = Y + c[M], R = Y + c[M + 1], S = Y + c[M + 2], a(Q, R, S)
            }
            var Z, $, _, ab = new THREE.Vector3,
                bb = new THREE.Vector3,
                cb = new THREE.Vector3,
                db = new THREE.Vector3;
            for (O = 0, P = V.length; P > O; ++O) {
                var W = V[O].start,
                    X = V[O].count,
                    Y = V[O].index;
                for (M = W, N = W + X; N > M; M += 3) Q = Y + c[M], R = Y + c[M + 1], S = Y + c[M + 2], b(Q), b(R), b(S)
            }
            this.hasTangents = !0, this.tangentsNeedUpdate = !0
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype), THREE.Camera = function() {
        THREE.Object3D.call(this), this.matrixWorldInverse = new THREE.Matrix4, this.projectionMatrix = new THREE.Matrix4, this.projectionMatrixInverse = new THREE.Matrix4
    }, THREE.Camera.prototype = Object.create(THREE.Object3D.prototype), THREE.Camera.prototype.lookAt = function() {
        var a = new THREE.Matrix4;
        return function(b) {
            a.lookAt(this.position, b, this.up), this.quaternion.setFromRotationMatrix(a)
        }
    }(), THREE.OrthographicCamera = function(a, b, c, d, e, f) {
        THREE.Camera.call(this), this.left = a, this.right = b, this.top = c, this.bottom = d, this.near = void 0 !== e ? e : .1, this.far = void 0 !== f ? f : 2e3, this.updateProjectionMatrix()
    }, THREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype), THREE.OrthographicCamera.prototype.updateProjectionMatrix = function() {
        this.projectionMatrix.makeOrthographic(this.left, this.right, this.top, this.bottom, this.near, this.far)
    }, THREE.PerspectiveCamera = function(a, b, c, d) {
        THREE.Camera.call(this), this.fov = void 0 !== a ? a : 50, this.aspect = void 0 !== b ? b : 1, this.near = void 0 !== c ? c : .1, this.far = void 0 !== d ? d : 2e3, this.updateProjectionMatrix()
    }, THREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype), THREE.PerspectiveCamera.prototype.setLens = function(a, b) {
        void 0 === b && (b = 24), this.fov = 2 * THREE.Math.radToDeg(Math.atan(b / (2 * a))), this.updateProjectionMatrix()
    }, THREE.PerspectiveCamera.prototype.setViewOffset = function(a, b, c, d, e, f) {
        this.fullWidth = a, this.fullHeight = b, this.x = c, this.y = d, this.width = e, this.height = f, this.updateProjectionMatrix()
    }, THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
        if (this.fullWidth) {
            var a = this.fullWidth / this.fullHeight,
                b = Math.tan(THREE.Math.degToRad(.5 * this.fov)) * this.near,
                c = -b,
                d = a * c,
                e = a * b,
                f = Math.abs(e - d),
                g = Math.abs(b - c);
            this.projectionMatrix.makeFrustum(d + this.x * f / this.fullWidth, d + (this.x + this.width) * f / this.fullWidth, b - (this.y + this.height) * g / this.fullHeight, b - this.y * g / this.fullHeight, this.near, this.far)
        } else this.projectionMatrix.makePerspective(this.fov, this.aspect, this.near, this.far)
    }, THREE.Light = function(a) {
        THREE.Object3D.call(this), this.color = new THREE.Color(a)
    }, THREE.Light.prototype = Object.create(THREE.Object3D.prototype), THREE.Light.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.Light), THREE.Object3D.prototype.clone.call(this, a), a.color.copy(this.color), a
    }, THREE.AmbientLight = function(a) {
        THREE.Light.call(this, a)
    }, THREE.AmbientLight.prototype = Object.create(THREE.Light.prototype), THREE.AmbientLight.prototype.clone = function() {
        var a = new THREE.AmbientLight;
        return THREE.Light.prototype.clone.call(this, a), a
    }, THREE.AreaLight = function(a, b) {
        THREE.Light.call(this, a), this.normal = new THREE.Vector3(0, -1, 0), this.right = new THREE.Vector3(1, 0, 0), this.intensity = void 0 !== b ? b : 1, this.width = 1, this.height = 1, this.constantAttenuation = 1.5, this.linearAttenuation = .5, this.quadraticAttenuation = .1
    }, THREE.AreaLight.prototype = Object.create(THREE.Light.prototype), THREE.DirectionalLight = function(a, b) {
        THREE.Light.call(this, a), this.position.set(0, 1, 0), this.target = new THREE.Object3D, this.intensity = void 0 !== b ? b : 1, this.castShadow = !1, this.onlyShadow = !1, this.shadowCameraNear = 50, this.shadowCameraFar = 5e3, this.shadowCameraLeft = -500, this.shadowCameraRight = 500, this.shadowCameraTop = 500, this.shadowCameraBottom = -500, this.shadowCameraVisible = !1, this.shadowBias = 0, this.shadowDarkness = .5, this.shadowMapWidth = 512, this.shadowMapHeight = 512, this.shadowCascade = !1, this.shadowCascadeOffset = new THREE.Vector3(0, 0, -1e3), this.shadowCascadeCount = 2, this.shadowCascadeBias = [0, 0, 0], this.shadowCascadeWidth = [512, 512, 512], this.shadowCascadeHeight = [512, 512, 512], this.shadowCascadeNearZ = [-1, .99, .998], this.shadowCascadeFarZ = [.99, .998, 1], this.shadowCascadeArray = [], this.shadowMap = null, this.shadowMapSize = null, this.shadowCamera = null, this.shadowMatrix = null
    }, THREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype), THREE.DirectionalLight.prototype.clone = function() {
        var a = new THREE.DirectionalLight;
        return THREE.Light.prototype.clone.call(this, a), a.target = this.target.clone(), a.intensity = this.intensity, a.castShadow = this.castShadow, a.onlyShadow = this.onlyShadow, a
    }, THREE.HemisphereLight = function(a, b, c) {
        THREE.Light.call(this, a), this.position.set(0, 100, 0), this.groundColor = new THREE.Color(b), this.intensity = void 0 !== c ? c : 1
    }, THREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype), THREE.HemisphereLight.prototype.clone = function() {
        var a = new THREE.PointLight;
        return THREE.Light.prototype.clone.call(this, a), a.groundColor.copy(this.groundColor), a.intensity = this.intensity, a
    }, THREE.PointLight = function(a, b, c) {
        THREE.Light.call(this, a), this.intensity = void 0 !== b ? b : 1, this.distance = void 0 !== c ? c : 0
    }, THREE.PointLight.prototype = Object.create(THREE.Light.prototype), THREE.PointLight.prototype.clone = function() {
        var a = new THREE.PointLight;
        return THREE.Light.prototype.clone.call(this, a), a.intensity = this.intensity, a.distance = this.distance, a
    }, THREE.SpotLight = function(a, b, c, d, e) {
        THREE.Light.call(this, a), this.position.set(0, 1, 0), this.target = new THREE.Object3D, this.intensity = void 0 !== b ? b : 1, this.distance = void 0 !== c ? c : 0, this.angle = void 0 !== d ? d : Math.PI / 3, this.exponent = void 0 !== e ? e : 10, this.castShadow = !1, this.onlyShadow = !1, this.shadowCameraNear = 50, this.shadowCameraFar = 5e3, this.shadowCameraFov = 50, this.shadowCameraVisible = !1, this.shadowBias = 0, this.shadowDarkness = .5, this.shadowMapWidth = 512, this.shadowMapHeight = 512, this.shadowMap = null, this.shadowMapSize = null, this.shadowCamera = null, this.shadowMatrix = null
    }, THREE.SpotLight.prototype = Object.create(THREE.Light.prototype), THREE.SpotLight.prototype.clone = function() {
        var a = new THREE.SpotLight;
        return THREE.Light.prototype.clone.call(this, a), a.target = this.target.clone(), a.intensity = this.intensity, a.distance = this.distance, a.angle = this.angle, a.exponent = this.exponent, a.castShadow = this.castShadow, a.onlyShadow = this.onlyShadow, a
    }, THREE.Loader = function(a) {
        this.showStatus = a, this.statusDomElement = a ? THREE.Loader.prototype.addStatusElement() : null, this.onLoadStart = function() {}, this.onLoadProgress = function() {}, this.onLoadComplete = function() {}
    }, THREE.Loader.prototype = {
        constructor: THREE.Loader,
        crossOrigin: "anonymous",
        addStatusElement: function() {
            var a = document.createElement("div");
            return a.style.position = "absolute", a.style.right = "0px", a.style.top = "0px", a.style.fontSize = "0.8em", a.style.textAlign = "left", a.style.background = "rgba(0,0,0,0.25)", a.style.color = "#fff", a.style.width = "120px", a.style.padding = "0.5em 0.5em 0.5em 0.5em", a.style.zIndex = 1e3, a.innerHTML = "Loading ...", a
        },
        updateProgress: function(a) {
            var b = "Loaded ";
            b += a.total ? (100 * a.loaded / a.total).toFixed(0) + "%" : (a.loaded / 1e3).toFixed(2) + " KB", this.statusDomElement.innerHTML = b
        },
        extractUrlBase: function(a) {
            var b = a.split("/");
            return b.pop(), (b.length < 1 ? "." : b.join("/")) + "/"
        },
        initMaterials: function(a, b) {
            for (var c = [], d = 0; d < a.length; ++d) c[d] = THREE.Loader.prototype.createMaterial(a[d], b);
            return c
        },
        needsTangents: function(a) {
            for (var b = 0, c = a.length; c > b; b++) {
                var d = a[b];
                if (d instanceof THREE.ShaderMaterial) return !0
            }
            return !1
        },
        createMaterial: function(a, b) {
            function c(a) {
                var b = Math.log(a) / Math.LN2;
                return Math.floor(b) == b
            }

            function d(a) {
                var b = Math.log(a) / Math.LN2;
                return Math.pow(2, Math.round(b))
            }

            function e(a, b) {
                var e = new Image;
                e.onload = function() {
                    if (c(this.width) && c(this.height)) a.image = this;
                    else {
                        var b = d(this.width),
                            e = d(this.height);
                        a.image.width = b, a.image.height = e, a.image.getContext("2d").drawImage(this, 0, 0, b, e)
                    }
                    a.needsUpdate = !0
                }, e.crossOrigin = h.crossOrigin, e.src = b
            }

            function f(a, c, d, f, g, h, i) {
                var j = /\.dds$/i.test(d),
                    k = b + "/" + d;
                if (j) {
                    var l = THREE.ImageUtils.loadCompressedTexture(k);
                    a[c] = l
                } else {
                    var l = document.createElement("canvas");
                    a[c] = new THREE.Texture(l)
                }
                if (a[c].sourceFile = d, f && (a[c].repeat.set(f[0], f[1]), 1 !== f[0] && (a[c].wrapS = THREE.RepeatWrapping), 1 !== f[1] && (a[c].wrapT = THREE.RepeatWrapping)), g && a[c].offset.set(g[0], g[1]), h) {
                    var m = {
                        repeat: THREE.RepeatWrapping,
                        mirror: THREE.MirroredRepeatWrapping
                    };
                    void 0 !== m[h[0]] && (a[c].wrapS = m[h[0]]), void 0 !== m[h[1]] && (a[c].wrapT = m[h[1]])
                }
                i && (a[c].anisotropy = i), j || e(a[c], k)
            }

            function g(a) {
                return (255 * a[0] << 16) + (255 * a[1] << 8) + 255 * a[2]
            }
            var h = this,
                i = "MeshLambertMaterial",
                j = {
                    color: 15658734,
                    opacity: 1,
                    map: null,
                    lightMap: null,
                    normalMap: null,
                    bumpMap: null,
                    wireframe: !1
                };
            if (a.shading) {
                var k = a.shading.toLowerCase();
                "phong" === k ? i = "MeshPhongMaterial" : "basic" === k && (i = "MeshBasicMaterial")
            }
            if (void 0 !== a.blending && void 0 !== THREE[a.blending] && (j.blending = THREE[a.blending]), (void 0 !== a.transparent || a.opacity < 1) && (j.transparent = a.transparent), void 0 !== a.depthTest && (j.depthTest = a.depthTest), void 0 !== a.depthWrite && (j.depthWrite = a.depthWrite), void 0 !== a.visible && (j.visible = a.visible), void 0 !== a.flipSided && (j.side = THREE.BackSide), void 0 !== a.doubleSided && (j.side = THREE.DoubleSide), void 0 !== a.wireframe && (j.wireframe = a.wireframe), void 0 !== a.vertexColors && ("face" === a.vertexColors ? j.vertexColors = THREE.FaceColors : a.vertexColors && (j.vertexColors = THREE.VertexColors)), a.colorDiffuse ? j.color = g(a.colorDiffuse) : a.DbgColor && (j.color = a.DbgColor), a.colorSpecular && (j.specular = g(a.colorSpecular)), a.colorAmbient && (j.ambient = g(a.colorAmbient)), a.transparency && (j.opacity = a.transparency), a.specularCoef && (j.shininess = a.specularCoef), a.mapDiffuse && b && f(j, "map", a.mapDiffuse, a.mapDiffuseRepeat, a.mapDiffuseOffset, a.mapDiffuseWrap, a.mapDiffuseAnisotropy), a.mapLight && b && f(j, "lightMap", a.mapLight, a.mapLightRepeat, a.mapLightOffset, a.mapLightWrap, a.mapLightAnisotropy), a.mapBump && b && f(j, "bumpMap", a.mapBump, a.mapBumpRepeat, a.mapBumpOffset, a.mapBumpWrap, a.mapBumpAnisotropy), a.mapNormal && b && f(j, "normalMap", a.mapNormal, a.mapNormalRepeat, a.mapNormalOffset, a.mapNormalWrap, a.mapNormalAnisotropy), a.mapSpecular && b && f(j, "specularMap", a.mapSpecular, a.mapSpecularRepeat, a.mapSpecularOffset, a.mapSpecularWrap, a.mapSpecularAnisotropy), a.mapBumpScale && (j.bumpScale = a.mapBumpScale), a.mapNormal) {
                var l = THREE.ShaderLib.normalmap,
                    m = THREE.UniformsUtils.clone(l.uniforms);
                m.tNormal.value = j.normalMap, a.mapNormalFactor && m.uNormalScale.value.set(a.mapNormalFactor, a.mapNormalFactor), j.map && (m.tDiffuse.value = j.map, m.enableDiffuse.value = !0), j.specularMap && (m.tSpecular.value = j.specularMap, m.enableSpecular.value = !0), j.lightMap && (m.tAO.value = j.lightMap, m.enableAO.value = !0), m.uDiffuseColor.value.setHex(j.color), m.uSpecularColor.value.setHex(j.specular), m.uAmbientColor.value.setHex(j.ambient), m.uShininess.value = j.shininess, void 0 !== j.opacity && (m.uOpacity.value = j.opacity);
                var n = {
                        fragmentShader: l.fragmentShader,
                        vertexShader: l.vertexShader,
                        uniforms: m,
                        lights: !0,
                        fog: !0
                    },
                    o = new THREE.ShaderMaterial(n);
                j.transparent && (o.transparent = !0)
            } else var o = new THREE[i](j);
            return void 0 !== a.DbgName && (o.name = a.DbgName), o
        }
    }, THREE.XHRLoader = function(a) {
        this.manager = void 0 !== a ? a : THREE.DefaultLoadingManager
    }, THREE.XHRLoader.prototype = {
        constructor: THREE.XHRLoader,
        load: function(a, b, c, d) {
            var e = this,
                f = new XMLHttpRequest;
            void 0 !== b && f.addEventListener("load", function(c) {
                e.manager.itemEnd(a), b(c.target.responseText)
            }, !1), void 0 !== c && f.addEventListener("progress", function(a) {
                c(a)
            }, !1), void 0 !== d && f.addEventListener("error", function(a) {
                d(a)
            }, !1), void 0 !== this.crossOrigin && (f.crossOrigin = this.crossOrigin), f.open("GET", a, !0), f.send(null), e.manager.itemStart(a)
        },
        setCrossOrigin: function(a) {
            this.crossOrigin = a
        }
    }, THREE.ImageLoader = function(a) {
        this.manager = void 0 !== a ? a : THREE.DefaultLoadingManager
    }, THREE.ImageLoader.prototype = {
        constructor: THREE.ImageLoader,
        load: function(a, b, c, d) {
            var e = this,
                f = document.createElement("img");
            void 0 !== b && f.addEventListener("load", function() {
                e.manager.itemEnd(a), b(this)
            }, !1), void 0 !== c && f.addEventListener("progress", function(a) {
                c(a)
            }, !1), void 0 !== d && f.addEventListener("error", function(a) {
                d(a)
            }, !1), void 0 !== this.crossOrigin && (f.crossOrigin = this.crossOrigin), f.src = a, e.manager.itemStart(a)
        },
        setCrossOrigin: function(a) {
            this.crossOrigin = a
        }
    }, THREE.JSONLoader = function(a) {
        THREE.Loader.call(this, a), this.withCredentials = !1
    }, THREE.JSONLoader.prototype = Object.create(THREE.Loader.prototype), THREE.JSONLoader.prototype.load = function(a, b, c) {
        c = c && "string" == typeof c ? c : this.extractUrlBase(a), this.onLoadStart(), this.loadAjaxJSON(this, a, b, c)
    }, THREE.JSONLoader.prototype.loadAjaxJSON = function(a, b, c, d, e) {
        var f = new XMLHttpRequest,
            g = 0;
        f.onreadystatechange = function() {
            if (f.readyState === f.DONE)
                if (200 === f.status || 0 === f.status) {
                    if (f.responseText) {
                        var h = JSON.parse(f.responseText),
                            i = a.parse(h, d);
                        c(i.geometry, i.materials)
                    } else console.warn("THREE.JSONLoader: [" + b + "] seems to be unreachable or file there is empty");
                    a.onLoadComplete()
                } else console.error("THREE.JSONLoader: Couldn't load [" + b + "] [" + f.status + "]");
            else f.readyState === f.LOADING ? e && (0 === g && (g = f.getResponseHeader("Content-Length")), e({
                total: g,
                loaded: f.responseText.length
            })) : f.readyState === f.HEADERS_RECEIVED && void 0 !== e && (g = f.getResponseHeader("Content-Length"))
        }, f.open("GET", b, !0), f.withCredentials = this.withCredentials, f.send(null)
    }, THREE.JSONLoader.prototype.parse = function(a, b) {
        function c(b) {
            function c(a, b) {
                return a & 1 << b
            }
            var d, e, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F = a.faces,
                G = a.vertices,
                H = a.normals,
                I = a.colors,
                J = 0;
            if (void 0 !== a.uvs) {
                for (d = 0; d < a.uvs.length; d++) a.uvs[d].length && J++;
                for (d = 0; J > d; d++) f.faceUvs[d] = [], f.faceVertexUvs[d] = []
            }
            for (h = 0, i = G.length; i > h;) x = new THREE.Vector3, x.x = G[h++] * b, x.y = G[h++] * b, x.z = G[h++] * b, f.vertices.push(x);
            for (h = 0, i = F.length; i > h;) {
                if (o = F[h++], p = c(o, 0), q = c(o, 1), r = c(o, 2), s = c(o, 3), t = c(o, 4), u = c(o, 5), v = c(o, 6), w = c(o, 7), p ? (y = new THREE.Face4, y.a = F[h++], y.b = F[h++], y.c = F[h++], y.d = F[h++], j = 4) : (y = new THREE.Face3, y.a = F[h++], y.b = F[h++], y.c = F[h++], j = 3), q && (n = F[h++], y.materialIndex = n), g = f.faces.length, r)
                    for (d = 0; J > d; d++) B = a.uvs[d], m = F[h++], D = B[2 * m], E = B[2 * m + 1], f.faceUvs[d][g] = new THREE.Vector2(D, E);
                if (s)
                    for (d = 0; J > d; d++) {
                        for (B = a.uvs[d], C = [], e = 0; j > e; e++) m = F[h++], D = B[2 * m], E = B[2 * m + 1], C[e] = new THREE.Vector2(D, E);
                        f.faceVertexUvs[d][g] = C
                    }
                if (t && (l = 3 * F[h++], A = new THREE.Vector3, A.x = H[l++], A.y = H[l++], A.z = H[l], y.normal = A), u)
                    for (d = 0; j > d; d++) l = 3 * F[h++], A = new THREE.Vector3, A.x = H[l++], A.y = H[l++], A.z = H[l], y.vertexNormals.push(A);
                if (v && (k = F[h++], z = new THREE.Color(I[k]), y.color = z), w)
                    for (d = 0; j > d; d++) k = F[h++], z = new THREE.Color(I[k]), y.vertexColors.push(z);
                f.faces.push(y)
            }
        }

        function d() {
            var b, c, d, e, g, h, i, j, k, l;
            if (a.skinWeights)
                for (b = 0, c = a.skinWeights.length; c > b; b += 2) d = a.skinWeights[b], e = a.skinWeights[b + 1], g = 0, h = 0, f.skinWeights.push(new THREE.Vector4(d, e, g, h));
            if (a.skinIndices)
                for (b = 0, c = a.skinIndices.length; c > b; b += 2) i = a.skinIndices[b], j = a.skinIndices[b + 1], k = 0, l = 0, f.skinIndices.push(new THREE.Vector4(i, j, k, l));
            f.bones = a.bones, f.animation = a.animation
        }

        function e(b) {
            if (void 0 !== a.morphTargets) {
                var c, d, e, g, h, i;
                for (c = 0, d = a.morphTargets.length; d > c; c++)
                    for (f.morphTargets[c] = {}, f.morphTargets[c].name = a.morphTargets[c].name, f.morphTargets[c].vertices = [], h = f.morphTargets[c].vertices, i = a.morphTargets[c].vertices, e = 0, g = i.length; g > e; e += 3) {
                        var j = new THREE.Vector3;
                        j.x = i[e] * b, j.y = i[e + 1] * b, j.z = i[e + 2] * b, h.push(j)
                    }
            }
            if (void 0 !== a.morphColors) {
                var c, d, k, l, m, n, o;
                for (c = 0, d = a.morphColors.length; d > c; c++)
                    for (f.morphColors[c] = {}, f.morphColors[c].name = a.morphColors[c].name, f.morphColors[c].colors = [], m = f.morphColors[c].colors, n = a.morphColors[c].colors, k = 0, l = n.length; l > k; k += 3) o = new THREE.Color(16755200), o.setRGB(n[k], n[k + 1], n[k + 2]), m.push(o)
            }
        }
        var f = new THREE.Geometry,
            g = void 0 !== a.scale ? 1 / a.scale : 1;
        if (c(g), d(), e(g), f.computeCentroids(), f.computeFaceNormals(), f.computeBoundingSphere(), void 0 === a.materials) return {
            geometry: f
        };
        var h = this.initMaterials(a.materials, b);
        return this.needsTangents(h) && f.computeTangents(), {
            geometry: f,
            materials: h
        }
    }, THREE.LoadingManager = function(a, b, c) {
        var d = this,
            e = 0,
            f = 0;
        this.onLoad = a, this.onProgress = b, this.onError = c, this.itemStart = function() {
            f++
        }, this.itemEnd = function(a) {
            e++, void 0 !== d.onProgress && d.onProgress(a, e, f), e === f && void 0 !== d.onLoad && d.onLoad()
        }
    }, THREE.DefaultLoadingManager = new THREE.LoadingManager, THREE.GeometryLoader = function(a) {
        this.manager = void 0 !== a ? a : THREE.DefaultLoadingManager
    }, THREE.GeometryLoader.prototype = {
        constructor: THREE.GeometryLoader,
        load: function(a, b) {
            var c = this,
                d = new THREE.XHRLoader;
            d.setCrossOrigin(this.crossOrigin), d.load(a, function(a) {
                b(c.parse(JSON.parse(a)))
            })
        },
        setCrossOrigin: function(a) {
            this.crossOrigin = a
        },
        parse: function() {}
    }, THREE.MaterialLoader = function(a) {
        this.manager = void 0 !== a ? a : THREE.DefaultLoadingManager
    }, THREE.MaterialLoader.prototype = {
        constructor: THREE.MaterialLoader,
        load: function(a, b) {
            var c = this,
                d = new THREE.XHRLoader;
            d.setCrossOrigin(this.crossOrigin), d.load(a, function(a) {
                b(c.parse(JSON.parse(a)))
            })
        },
        setCrossOrigin: function(a) {
            this.crossOrigin = a
        },
        parse: function(a) {
            var b;
            switch (a.type) {
                case "MeshBasicMaterial":
                    b = new THREE.MeshBasicMaterial({
                        color: a.color,
                        opacity: a.opacity,
                        transparent: a.transparent,
                        wireframe: a.wireframe
                    });
                    break;
                case "MeshLambertMaterial":
                    b = new THREE.MeshLambertMaterial({
                        color: a.color,
                        ambient: a.ambient,
                        emissive: a.emissive,
                        opacity: a.opacity,
                        transparent: a.transparent,
                        wireframe: a.wireframe
                    });
                    break;
                case "MeshPhongMaterial":
                    b = new THREE.MeshPhongMaterial({
                        color: a.color,
                        ambient: a.ambient,
                        emissive: a.emissive,
                        specular: a.specular,
                        shininess: a.shininess,
                        opacity: a.opacity,
                        transparent: a.transparent,
                        wireframe: a.wireframe
                    });
                    break;
                case "MeshNormalMaterial":
                    b = new THREE.MeshNormalMaterial({
                        opacity: a.opacity,
                        transparent: a.transparent,
                        wireframe: a.wireframe
                    });
                    break;
                case "MeshDepthMaterial":
                    b = new THREE.MeshDepthMaterial({
                        opacity: a.opacity,
                        transparent: a.transparent,
                        wireframe: a.wireframe
                    })
            }
            return void 0 !== a.vertexColors && (b.vertexColors = a.vertexColors), b
        }
    }, THREE.ObjectLoader = function(a) {
        this.manager = void 0 !== a ? a : THREE.DefaultLoadingManager
    }, THREE.ObjectLoader.prototype = {
        constructor: THREE.ObjectLoader,
        load: function(a, b) {
            var c = this,
                d = new THREE.XHRLoader(c.manager);
            d.setCrossOrigin(this.crossOrigin), d.load(a, function(a) {
                b(c.parse(JSON.parse(a)))
            })
        },
        setCrossOrigin: function(a) {
            this.crossOrigin = a
        },
        parse: function(a) {
            var b = this.parseGeometries(a.geometries),
                c = this.parseMaterials(a.materials),
                d = this.parseObject(a.object, b, c);
            return d
        },
        parseGeometries: function(a) {
            var b = {};
            if (void 0 !== a)
                for (var c = new THREE.JSONLoader, d = 0, e = a.length; e > d; d++) {
                    var f, g = a[d];
                    switch (g.type) {
                        case "PlaneGeometry":
                            f = new THREE.PlaneGeometry(g.width, g.height, g.widthSegments, g.heightSegments);
                            break;
                        case "CubeGeometry":
                            f = new THREE.CubeGeometry(g.width, g.height, g.depth, g.widthSegments, g.heightSegments, g.depthSegments);
                            break;
                        case "CylinderGeometry":
                            f = new THREE.CylinderGeometry(g.radiusTop, g.radiusBottom, g.height, g.radiusSegments, g.heightSegments, g.openEnded);
                            break;
                        case "SphereGeometry":
                            f = new THREE.SphereGeometry(g.radius, g.widthSegments, g.heightSegments, g.phiStart, g.phiLength, g.thetaStart, g.thetaLength);
                            break;
                        case "IcosahedronGeometry":
                            f = new THREE.IcosahedronGeometry(g.radius, g.detail);
                            break;
                        case "TorusGeometry":
                            f = new THREE.TorusGeometry(g.radius, g.tube, g.radialSegments, g.tubularSegments, g.arc);
                            break;
                        case "TorusKnotGeometry":
                            f = new THREE.TorusKnotGeometry(g.radius, g.tube, g.radialSegments, g.tubularSegments, g.p, g.q, g.heightScale);
                            break;
                        case "Geometry":
                            f = c.parse(g.data).geometry
                    }
                    f.uuid = g.uuid, void 0 !== g.name && (f.name = g.name), b[g.uuid] = f
                }
            return b
        },
        parseMaterials: function(a) {
            var b = {};
            if (void 0 !== a)
                for (var c = new THREE.MaterialLoader, d = 0, e = a.length; e > d; d++) {
                    var f = a[d],
                        g = c.parse(f);
                    g.uuid = f.uuid, void 0 !== f.name && (g.name = f.name), b[f.uuid] = g
                }
            return b
        },
        parseObject: function() {
            var a = new THREE.Matrix4;
            return function(b, c, d) {
                var e;
                switch (b.type) {
                    case "Scene":
                        e = new THREE.Scene;
                        break;
                    case "PerspectiveCamera":
                        e = new THREE.PerspectiveCamera(b.fov, b.aspect, b.near, b.far);
                        break;
                    case "OrthographicCamera":
                        e = new THREE.OrthographicCamera(b.left, b.right, b.top, b.bottom, b.near, b.far);
                        break;
                    case "AmbientLight":
                        e = new THREE.AmbientLight(b.color);
                        break;
                    case "DirectionalLight":
                        e = new THREE.DirectionalLight(b.color, b.intensity);
                        break;
                    case "PointLight":
                        e = new THREE.PointLight(b.color, b.intensity, b.distance);
                        break;
                    case "SpotLight":
                        e = new THREE.SpotLight(b.color, b.intensity, b.distance, b.angle, b.exponent);
                        break;
                    case "HemisphereLight":
                        e = new THREE.HemisphereLight(b.color, b.groundColor, b.intensity);
                        break;
                    case "Mesh":
                        var f = c[b.geometry],
                            g = d[b.material];
                        void 0 === f && console.error("THREE.ObjectLoader: Undefined geometry " + b.geometry), void 0 === g && console.error("THREE.ObjectLoader: Undefined material " + b.material), e = new THREE.Mesh(f, g);
                        break;
                    default:
                        e = new THREE.Object3D
                }
                if (e.uuid = b.uuid, void 0 !== b.name && (e.name = b.name), void 0 !== b.matrix ? (a.fromArray(b.matrix), a.decompose(e.position, e.quaternion, e.scale)) : (void 0 !== b.position && e.position.fromArray(b.position), void 0 !== b.rotation && e.rotation.fromArray(b.rotation), void 0 !== b.scale && e.scale.fromArray(b.scale)), void 0 !== b.visible && (e.visible = b.visible), void 0 !== b.userData && (e.userData = b.userData), void 0 !== b.children)
                    for (var h in b.children) e.add(this.parseObject(b.children[h], c, d));
                return e
            }
        }()
    }, THREE.SceneLoader = function() {
        this.onLoadStart = function() {}, this.onLoadProgress = function() {}, this.onLoadComplete = function() {}, this.callbackSync = function() {}, this.callbackProgress = function() {}, this.geometryHandlers = {}, this.hierarchyHandlers = {}, this.addGeometryHandler("ascii", THREE.JSONLoader)
    }, THREE.SceneLoader.prototype = {
        constructor: THREE.SceneLoader,
        load: function(a, b) {
            var c = this,
                d = new THREE.XHRLoader(c.manager);
            d.setCrossOrigin(this.crossOrigin), d.load(a, function(d) {
                c.parse(JSON.parse(d), b, a)
            })
        },
        setCrossOrigin: function(a) {
            this.crossOrigin = a
        },
        addGeometryHandler: function(a, b) {
            this.geometryHandlers[a] = {
                loaderClass: b
            }
        },
        addHierarchyHandler: function(a, b) {
            this.hierarchyHandlers[a] = {
                loaderClass: b
            }
        },
        parse: function(a, b, c) {
            function d(a, b) {
                return "relativeToHTML" == b ? a : D + "/" + a
            }

            function e() {
                f(B.scene, F.objects)
            }

            function f(a, b) {
                var c, e, g, h, i, k;
                for (var l in b) {
                    var m = B.objects[l],
                        n = b[l];
                    if (void 0 === m) {
                        if (n.type && n.type in C.hierarchyHandlers) {
                            if (void 0 === n.loading) {
                                var r = {
                                        type: 1,
                                        url: 1,
                                        material: 1,
                                        position: 1,
                                        rotation: 1,
                                        scale: 1,
                                        visible: 1,
                                        children: 1,
                                        userData: 1,
                                        skin: 1,
                                        morph: 1,
                                        mirroredLoop: 1,
                                        duration: 1
                                    },
                                    s = {};
                                for (var t in n) t in r || (s[t] = n[t]);
                                p = B.materials[n.material], n.loading = !0;
                                var x = C.hierarchyHandlers[n.type].loaderObject;
                                x.options ? x.load(d(n.url, F.urlBaseType), j(l, a, p, n)) : x.load(d(n.url, F.urlBaseType), j(l, a, p, n), s)
                            }
                        } else if (void 0 !== n.geometry) {
                            if (o = B.geometries[n.geometry]) {
                                var y = !1;
                                if (p = B.materials[n.material], y = p instanceof THREE.ShaderMaterial, g = n.position, h = n.rotation, i = n.scale, c = n.matrix, k = n.quaternion, n.material || (p = new THREE.MeshFaceMaterial(B.face_materials[n.geometry])), p instanceof THREE.MeshFaceMaterial && 0 === p.materials.length && (p = new THREE.MeshFaceMaterial(B.face_materials[n.geometry])), p instanceof THREE.MeshFaceMaterial)
                                    for (var z = 0; z < p.materials.length; z++) y = y || p.materials[z] instanceof THREE.ShaderMaterial;
                                y && o.computeTangents(), n.skin ? m = new THREE.SkinnedMesh(o, p) : n.morph ? (m = new THREE.MorphAnimMesh(o, p), void 0 !== n.duration && (m.duration = n.duration), void 0 !== n.time && (m.time = n.time), void 0 !== n.mirroredLoop && (m.mirroredLoop = n.mirroredLoop), p.morphNormals && o.computeMorphNormals()) : m = new THREE.Mesh(o, p), m.name = l, c ? (m.matrixAutoUpdate = !1, m.matrix.set(c[0], c[1], c[2], c[3], c[4], c[5], c[6], c[7], c[8], c[9], c[10], c[11], c[12], c[13], c[14], c[15])) : (m.position.fromArray(g), k ? m.quaternion.fromArray(k) : m.rotation.fromArray(h), m.scale.fromArray(i)), m.visible = n.visible, m.castShadow = n.castShadow, m.receiveShadow = n.receiveShadow, a.add(m), B.objects[l] = m
                            }
                        } else "DirectionalLight" === n.type || "PointLight" === n.type || "AmbientLight" === n.type ? (v = void 0 !== n.color ? n.color : 16777215, w = void 0 !== n.intensity ? n.intensity : 1, "DirectionalLight" === n.type ? (g = n.direction, u = new THREE.DirectionalLight(v, w), u.position.fromArray(g), n.target && (E.push({
                            object: u,
                            targetName: n.target
                        }), u.target = null)) : "PointLight" === n.type ? (g = n.position, e = n.distance, u = new THREE.PointLight(v, w, e), u.position.fromArray(g)) : "AmbientLight" === n.type && (u = new THREE.AmbientLight(v)), a.add(u), u.name = l, B.lights[l] = u, B.objects[l] = u) : "PerspectiveCamera" === n.type || "OrthographicCamera" === n.type ? (g = n.position, h = n.rotation, k = n.quaternion, "PerspectiveCamera" === n.type ? q = new THREE.PerspectiveCamera(n.fov, n.aspect, n.near, n.far) : "OrthographicCamera" === n.type && (q = new THREE.OrthographicCamera(n.left, n.right, n.top, n.bottom, n.near, n.far)), q.name = l, q.position.fromArray(g), void 0 !== k ? q.quaternion.fromArray(k) : void 0 !== h && q.rotation.fromArray(h), a.add(q), B.cameras[l] = q, B.objects[l] = q) : (g = n.position, h = n.rotation, i = n.scale, k = n.quaternion, m = new THREE.Object3D, m.name = l, m.position.fromArray(g), k ? m.quaternion.fromArray(k) : m.rotation.fromArray(h), m.scale.fromArray(i), m.visible = void 0 !== n.visible ? n.visible : !1, a.add(m), B.objects[l] = m, B.empties[l] = m);
                        if (m) {
                            if (void 0 !== n.userData)
                                for (var A in n.userData) {
                                    var D = n.userData[A];
                                    m.userData[A] = D
                                }
                            if (void 0 !== n.groups)
                                for (var z = 0; z < n.groups.length; z++) {
                                    var G = n.groups[z];
                                    void 0 === B.groups[G] && (B.groups[G] = []), B.groups[G].push(l)
                                }
                        }
                    }
                    void 0 !== m && void 0 !== n.children && f(m, n.children)
                }
            }

            function g(a, b, c) {
                B.geometries[c] = a, B.face_materials[c] = b, e()
            }

            function h(a, b, c, d, f) {
                var g = f.position,
                    h = f.rotation,
                    i = f.quaternion,
                    j = f.scale;
                a.position.fromArray(g), i ? a.quaternion.fromArray(i) : a.rotation.fromArray(h), a.scale.fromArray(j), d && a.traverse(function(a) {
                    a.material = d
                });
                var k = void 0 !== f.visible ? f.visible : !0;
                a.traverse(function(a) {
                    a.visible = k
                }), c.add(a), a.name = b, B.objects[b] = a, e()
            }

            function i(a) {
                return function(b, c) {
                    b.name = a, g(b, c, a), x -= 1, C.onLoadComplete(), l()
                }
            }

            function j(a, b, c, d) {
                return function(e) {
                    var f;
                    f = e.content ? e.content : e.dae ? e.scene : e, h(f, a, b, c, d), x -= 1, C.onLoadComplete(), l()
                }
            }

            function k(a) {
                return function(b, c) {
                    b.name = a, B.geometries[a] = b, B.face_materials[a] = c
                }
            }

            function l() {
                var a = {
                    totalModels: z,
                    totalTextures: A,
                    loadedModels: z - x,
                    loadedTextures: A - y
                };
                C.callbackProgress(a, B), C.onLoadProgress(), 0 === x && 0 === y && (m(), b(B))
            }

            function m() {
                for (var a = 0; a < E.length; a++) {
                    var b = E[a],
                        c = B.objects[b.targetName];
                    c ? b.object.target = c : (b.object.target = new THREE.Object3D, B.scene.add(b.object.target)), b.object.target.userData.targetInverse = b.object
                }
            }

            function n(a, b) {
                if (b(a), void 0 !== a.children)
                    for (var c in a.children) n(a.children[c], b)
            }
            var o, p, q, r, s, t, u, v, w, x, y, z, A, B, C = this,
                D = THREE.Loader.prototype.extractUrlBase(c),
                E = [],
                F = a;
            for (var G in this.geometryHandlers) {
                var H = this.geometryHandlers[G].loaderClass;
                this.geometryHandlers[G].loaderObject = new H
            }
            for (var G in this.hierarchyHandlers) {
                var H = this.hierarchyHandlers[G].loaderClass;
                this.hierarchyHandlers[G].loaderObject = new H
            }
            if (x = 0, y = 0, B = {
                    scene: new THREE.Scene,
                    geometries: {},
                    face_materials: {},
                    materials: {},
                    textures: {},
                    objects: {},
                    cameras: {},
                    lights: {},
                    fogs: {},
                    empties: {},
                    groups: {}
                }, F.transform) {
                var I = F.transform.position,
                    J = F.transform.rotation,
                    K = F.transform.scale;
                I && B.scene.position.fromArray(I), J && B.scene.rotation.fromArray(J), K && B.scene.scale.fromArray(K), (I || J || K) && (B.scene.updateMatrix(), B.scene.updateMatrixWorld())
            }
            var L, M, N = function(a) {
                    y -= a, l(), C.onLoadComplete()
                },
                O = function(a) {
                    return function() {
                        N(a)
                    }
                };
            for (L in F.fogs) M = F.fogs[L], "linear" === M.type ? r = new THREE.Fog(0, M.near, M.far) : "exp2" === M.type && (r = new THREE.FogExp2(0, M.density)), t = M.color, r.color.setRGB(t[0], t[1], t[2]), B.fogs[L] = r;
            var P, Q;
            for (P in F.geometries) Q = F.geometries[P], Q.type in this.geometryHandlers && (x += 1, C.onLoadStart());
            for (var R in F.objects) n(F.objects[R], function(a) {
                a.type && a.type in C.hierarchyHandlers && (x += 1, C.onLoadStart())
            });
            z = x;
            for (P in F.geometries)
                if (Q = F.geometries[P], "cube" === Q.type) o = new THREE.CubeGeometry(Q.width, Q.height, Q.depth, Q.widthSegments, Q.heightSegments, Q.depthSegments), o.name = P, B.geometries[P] = o;
                else if ("plane" === Q.type) o = new THREE.PlaneGeometry(Q.width, Q.height, Q.widthSegments, Q.heightSegments), o.name = P, B.geometries[P] = o;
            else if ("sphere" === Q.type) o = new THREE.SphereGeometry(Q.radius, Q.widthSegments, Q.heightSegments), o.name = P, B.geometries[P] = o;
            else if ("cylinder" === Q.type) o = new THREE.CylinderGeometry(Q.topRad, Q.botRad, Q.height, Q.radSegs, Q.heightSegs), o.name = P, B.geometries[P] = o;
            else if ("torus" === Q.type) o = new THREE.TorusGeometry(Q.radius, Q.tube, Q.segmentsR, Q.segmentsT), o.name = P, B.geometries[P] = o;
            else if ("icosahedron" === Q.type) o = new THREE.IcosahedronGeometry(Q.radius, Q.subdivisions), o.name = P, B.geometries[P] = o;
            else if (Q.type in this.geometryHandlers) {
                var S = {};
                for (var T in Q) "type" !== T && "url" !== T && (S[T] = Q[T]);
                var U = this.geometryHandlers[Q.type].loaderObject;
                U.load(d(Q.url, F.urlBaseType), i(P), S)
            } else if ("embedded" === Q.type) {
                var V = F.embeds[Q.id],
                    W = "";
                if (V.metadata = F.metadata, V) {
                    var X = this.geometryHandlers.ascii.loaderObject,
                        Y = X.parse(V, W);
                    k(P)(Y.geometry, Y.materials)
                }
            }
            var Z, $;
            for (Z in F.textures)
                if ($ = F.textures[Z], $.url instanceof Array) {
                    y += $.url.length;
                    for (var _ = 0; _ < $.url.length; _++) C.onLoadStart()
                } else y += 1, C.onLoadStart();
            A = y;
            for (Z in F.textures) {
                if ($ = F.textures[Z], void 0 !== $.mapping && void 0 !== THREE[$.mapping] && ($.mapping = new THREE[$.mapping]), $.url instanceof Array) {
                    for (var ab = $.url.length, bb = [], cb = 0; ab > cb; cb++) bb[cb] = d($.url[cb], F.urlBaseType);
                    var db = /\.dds$/i.test(bb[0]);
                    s = db ? THREE.ImageUtils.loadCompressedTextureCube(bb, $.mapping, O(ab)) : THREE.ImageUtils.loadTextureCube(bb, $.mapping, O(ab))
                } else {
                    var db = /\.dds$/i.test($.url),
                        eb = d($.url, F.urlBaseType),
                        fb = O(1);
                    if (s = db ? THREE.ImageUtils.loadCompressedTexture(eb, $.mapping, fb) : THREE.ImageUtils.loadTexture(eb, $.mapping, fb), void 0 !== THREE[$.minFilter] && (s.minFilter = THREE[$.minFilter]), void 0 !== THREE[$.magFilter] && (s.magFilter = THREE[$.magFilter]), $.anisotropy && (s.anisotropy = $.anisotropy), $.repeat && (s.repeat.set($.repeat[0], $.repeat[1]), 1 !== $.repeat[0] && (s.wrapS = THREE.RepeatWrapping), 1 !== $.repeat[1] && (s.wrapT = THREE.RepeatWrapping)), $.offset && s.offset.set($.offset[0], $.offset[1]), $.wrap) {
                        var gb = {
                            repeat: THREE.RepeatWrapping,
                            mirror: THREE.MirroredRepeatWrapping
                        };
                        void 0 !== gb[$.wrap[0]] && (s.wrapS = gb[$.wrap[0]]), void 0 !== gb[$.wrap[1]] && (s.wrapT = gb[$.wrap[1]])
                    }
                }
                B.textures[Z] = s
            }
            var hb, ib, jb;
            for (hb in F.materials) {
                ib = F.materials[hb];
                for (jb in ib.parameters)
                    if ("envMap" === jb || "map" === jb || "lightMap" === jb || "bumpMap" === jb) ib.parameters[jb] = B.textures[ib.parameters[jb]];
                    else if ("shading" === jb) ib.parameters[jb] = "flat" === ib.parameters[jb] ? THREE.FlatShading : THREE.SmoothShading;
                else if ("side" === jb) ib.parameters[jb] = "double" == ib.parameters[jb] ? THREE.DoubleSide : "back" == ib.parameters[jb] ? THREE.BackSide : THREE.FrontSide;
                else if ("blending" === jb) ib.parameters[jb] = ib.parameters[jb] in THREE ? THREE[ib.parameters[jb]] : THREE.NormalBlending;
                else if ("combine" === jb) ib.parameters[jb] = ib.parameters[jb] in THREE ? THREE[ib.parameters[jb]] : THREE.MultiplyOperation;
                else if ("vertexColors" === jb) "face" == ib.parameters[jb] ? ib.parameters[jb] = THREE.FaceColors : ib.parameters[jb] && (ib.parameters[jb] = THREE.VertexColors);
                else if ("wrapRGB" === jb) {
                    var kb = ib.parameters[jb];
                    ib.parameters[jb] = new THREE.Vector3(kb[0], kb[1], kb[2])
                }
                if (void 0 !== ib.parameters.opacity && ib.parameters.opacity < 1 && (ib.parameters.transparent = !0), ib.parameters.normalMap) {
                    var lb = THREE.ShaderLib.normalmap,
                        mb = THREE.UniformsUtils.clone(lb.uniforms),
                        nb = ib.parameters.color,
                        ob = ib.parameters.specular,
                        pb = ib.parameters.ambient,
                        qb = ib.parameters.shininess;
                    mb.tNormal.value = B.textures[ib.parameters.normalMap], ib.parameters.normalScale && mb.uNormalScale.value.set(ib.parameters.normalScale[0], ib.parameters.normalScale[1]), ib.parameters.map && (mb.tDiffuse.value = ib.parameters.map, mb.enableDiffuse.value = !0), ib.parameters.envMap && (mb.tCube.value = ib.parameters.envMap, mb.enableReflection.value = !0, mb.uReflectivity.value = ib.parameters.reflectivity), ib.parameters.lightMap && (mb.tAO.value = ib.parameters.lightMap, mb.enableAO.value = !0), ib.parameters.specularMap && (mb.tSpecular.value = B.textures[ib.parameters.specularMap], mb.enableSpecular.value = !0), ib.parameters.displacementMap && (mb.tDisplacement.value = B.textures[ib.parameters.displacementMap], mb.enableDisplacement.value = !0, mb.uDisplacementBias.value = ib.parameters.displacementBias, mb.uDisplacementScale.value = ib.parameters.displacementScale), mb.uDiffuseColor.value.setHex(nb), mb.uSpecularColor.value.setHex(ob), mb.uAmbientColor.value.setHex(pb), mb.uShininess.value = qb, ib.parameters.opacity && (mb.uOpacity.value = ib.parameters.opacity);
                    var rb = {
                        fragmentShader: lb.fragmentShader,
                        vertexShader: lb.vertexShader,
                        uniforms: mb,
                        lights: !0,
                        fog: !0
                    };
                    p = new THREE.ShaderMaterial(rb)
                } else p = new THREE[ib.type](ib.parameters);
                p.name = hb, B.materials[hb] = p
            }
            for (hb in F.materials)
                if (ib = F.materials[hb], ib.parameters.materials) {
                    for (var sb = [], cb = 0; cb < ib.parameters.materials.length; cb++) {
                        var tb = ib.parameters.materials[cb];
                        sb.push(B.materials[tb])
                    }
                    B.materials[hb].materials = sb
                }
            e(), B.cameras && F.defaults.camera && (B.currentCamera = B.cameras[F.defaults.camera]), B.fogs && F.defaults.fog && (B.scene.fog = B.fogs[F.defaults.fog]), C.callbackSync(B), l()
        }
    }, THREE.TextureLoader = function(a) {
        this.manager = void 0 !== a ? a : THREE.DefaultLoadingManager
    }, THREE.TextureLoader.prototype = {
        constructor: THREE.TextureLoader,
        load: function(a, b) {
            var c = this,
                d = new THREE.ImageLoader(c.manager);
            d.setCrossOrigin(this.crossOrigin), d.load(a, function(a) {
                var c = new THREE.Texture(a);
                c.needsUpdate = !0, void 0 !== b && b(c)
            })
        },
        setCrossOrigin: function(a) {
            this.crossOrigin = a
        }
    }, THREE.Material = function() {
        this.id = THREE.MaterialIdCount++, this.uuid = THREE.Math.generateUUID(), this.name = "", this.side = THREE.FrontSide, this.opacity = 1, this.transparent = !1, this.blending = THREE.NormalBlending, this.blendSrc = THREE.SrcAlphaFactor, this.blendDst = THREE.OneMinusSrcAlphaFactor, this.blendEquation = THREE.AddEquation, this.depthTest = !0, this.depthWrite = !0, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.alphaTest = 0, this.overdraw = 0, this.visible = !0, this.needsUpdate = !0
    }, THREE.Material.prototype = {
        constructor: THREE.Material,
        setValues: function(a) {
            if (void 0 !== a)
                for (var b in a) {
                    var c = a[b];
                    if (void 0 !== c) {
                        if (b in this) {
                            var d = this[b];
                            d instanceof THREE.Color ? d.set(c) : d instanceof THREE.Vector3 && c instanceof THREE.Vector3 ? d.copy(c) : this[b] = "overdraw" == b ? Number(c) : c
                        }
                    } else console.warn("THREE.Material: '" + b + "' parameter is undefined.")
                }
        },
        clone: function(a) {
            return void 0 === a && (a = new THREE.Material), a.name = this.name, a.side = this.side, a.opacity = this.opacity, a.transparent = this.transparent, a.blending = this.blending, a.blendSrc = this.blendSrc, a.blendDst = this.blendDst, a.blendEquation = this.blendEquation, a.depthTest = this.depthTest, a.depthWrite = this.depthWrite, a.polygonOffset = this.polygonOffset, a.polygonOffsetFactor = this.polygonOffsetFactor, a.polygonOffsetUnits = this.polygonOffsetUnits, a.alphaTest = this.alphaTest, a.overdraw = this.overdraw, a.visible = this.visible, a
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.Material.prototype), THREE.MaterialIdCount = 0, THREE.LineBasicMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.vertexColors = !1, this.fog = !0, this.setValues(a)
    }, THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype), THREE.LineBasicMaterial.prototype.clone = function() {
        var a = new THREE.LineBasicMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.linewidth = this.linewidth, a.linecap = this.linecap, a.linejoin = this.linejoin, a.vertexColors = this.vertexColors, a.fog = this.fog, a
    }, THREE.LineDashedMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.linewidth = 1, this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.vertexColors = !1, this.fog = !0, this.setValues(a)
    }, THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype), THREE.LineDashedMaterial.prototype.clone = function() {
        var a = new THREE.LineDashedMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.linewidth = this.linewidth, a.scale = this.scale, a.dashSize = this.dashSize, a.gapSize = this.gapSize, a.vertexColors = this.vertexColors, a.fog = this.fog, a
    }, THREE.MeshBasicMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.map = null, this.lightMap = null, this.specularMap = null, this.envMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = THREE.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.setValues(a)
    }, THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshBasicMaterial.prototype.clone = function() {
        var a = new THREE.MeshBasicMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.map = this.map, a.lightMap = this.lightMap, a.specularMap = this.specularMap, a.envMap = this.envMap, a.combine = this.combine, a.reflectivity = this.reflectivity, a.refractionRatio = this.refractionRatio, a.fog = this.fog, a.shading = this.shading, a.wireframe = this.wireframe, a.wireframeLinewidth = this.wireframeLinewidth, a.wireframeLinecap = this.wireframeLinecap, a.wireframeLinejoin = this.wireframeLinejoin, a.vertexColors = this.vertexColors, a.skinning = this.skinning, a.morphTargets = this.morphTargets, a
    }, THREE.MeshLambertMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.ambient = new THREE.Color(16777215), this.emissive = new THREE.Color(0), this.wrapAround = !1, this.wrapRGB = new THREE.Vector3(1, 1, 1), this.map = null, this.lightMap = null, this.specularMap = null, this.envMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = THREE.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(a)
    }, THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshLambertMaterial.prototype.clone = function() {
        var a = new THREE.MeshLambertMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.ambient.copy(this.ambient), a.emissive.copy(this.emissive), a.wrapAround = this.wrapAround, a.wrapRGB.copy(this.wrapRGB), a.map = this.map, a.lightMap = this.lightMap, a.specularMap = this.specularMap, a.envMap = this.envMap, a.combine = this.combine, a.reflectivity = this.reflectivity, a.refractionRatio = this.refractionRatio, a.fog = this.fog, a.shading = this.shading, a.wireframe = this.wireframe, a.wireframeLinewidth = this.wireframeLinewidth, a.wireframeLinecap = this.wireframeLinecap, a.wireframeLinejoin = this.wireframeLinejoin, a.vertexColors = this.vertexColors, a.skinning = this.skinning, a.morphTargets = this.morphTargets, a.morphNormals = this.morphNormals, a
    }, THREE.MeshPhongMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.ambient = new THREE.Color(16777215), this.emissive = new THREE.Color(0), this.specular = new THREE.Color(1118481), this.shininess = 30, this.metal = !1, this.perPixel = !0, this.wrapAround = !1, this.wrapRGB = new THREE.Vector3(1, 1, 1), this.map = null, this.lightMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new THREE.Vector2(1, 1), this.specularMap = null, this.envMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = THREE.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(a)
    }, THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshPhongMaterial.prototype.clone = function() {
        var a = new THREE.MeshPhongMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.ambient.copy(this.ambient), a.emissive.copy(this.emissive), a.specular.copy(this.specular), a.shininess = this.shininess, a.metal = this.metal, a.perPixel = this.perPixel, a.wrapAround = this.wrapAround, a.wrapRGB.copy(this.wrapRGB), a.map = this.map, a.lightMap = this.lightMap, a.bumpMap = this.bumpMap, a.bumpScale = this.bumpScale, a.normalMap = this.normalMap, a.normalScale.copy(this.normalScale), a.specularMap = this.specularMap, a.envMap = this.envMap, a.combine = this.combine, a.reflectivity = this.reflectivity, a.refractionRatio = this.refractionRatio, a.fog = this.fog, a.shading = this.shading, a.wireframe = this.wireframe, a.wireframeLinewidth = this.wireframeLinewidth, a.wireframeLinecap = this.wireframeLinecap, a.wireframeLinejoin = this.wireframeLinejoin, a.vertexColors = this.vertexColors, a.skinning = this.skinning, a.morphTargets = this.morphTargets, a.morphNormals = this.morphNormals, a
    }, THREE.MeshDepthMaterial = function(a) {
        THREE.Material.call(this), this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(a)
    }, THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshDepthMaterial.prototype.clone = function() {
        var a = new THREE.MeshDepthMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.wireframe = this.wireframe, a.wireframeLinewidth = this.wireframeLinewidth, a
    }, THREE.MeshNormalMaterial = function(a) {
        THREE.Material.call(this, a), this.shading = THREE.FlatShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.morphTargets = !1, this.setValues(a)
    }, THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshNormalMaterial.prototype.clone = function() {
        var a = new THREE.MeshNormalMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.shading = this.shading, a.wireframe = this.wireframe, a.wireframeLinewidth = this.wireframeLinewidth, a
    }, THREE.MeshFaceMaterial = function(a) {
        this.materials = a instanceof Array ? a : []
    }, THREE.MeshFaceMaterial.prototype.clone = function() {
        return new THREE.MeshFaceMaterial(this.materials.slice(0))
    }, THREE.ParticleBasicMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.vertexColors = !1, this.fog = !0, this.setValues(a)
    }, THREE.ParticleBasicMaterial.prototype = Object.create(THREE.Material.prototype), THREE.ParticleBasicMaterial.prototype.clone = function() {
        var a = new THREE.ParticleBasicMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.map = this.map, a.size = this.size, a.sizeAttenuation = this.sizeAttenuation, a.vertexColors = this.vertexColors, a.fog = this.fog, a
    }, THREE.ParticleCanvasMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.program = function() {}, this.setValues(a)
    }, THREE.ParticleCanvasMaterial.prototype = Object.create(THREE.Material.prototype), THREE.ParticleCanvasMaterial.prototype.clone = function() {
        var a = new THREE.ParticleCanvasMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.program = this.program, a
    }, THREE.ShaderMaterial = function(a) {
        THREE.Material.call(this), this.fragmentShader = "void main() {}", this.vertexShader = "void main() {}", this.uniforms = {}, this.defines = {}, this.attributes = null, this.shading = THREE.SmoothShading, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(a)
    }, THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype), THREE.ShaderMaterial.prototype.clone = function() {
        var a = new THREE.ShaderMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.fragmentShader = this.fragmentShader, a.vertexShader = this.vertexShader, a.uniforms = THREE.UniformsUtils.clone(this.uniforms), a.attributes = this.attributes, a.defines = this.defines, a.shading = this.shading, a.wireframe = this.wireframe, a.wireframeLinewidth = this.wireframeLinewidth, a.fog = this.fog, a.lights = this.lights, a.vertexColors = this.vertexColors, a.skinning = this.skinning, a.morphTargets = this.morphTargets, a.morphNormals = this.morphNormals, a
    }, THREE.SpriteMaterial = function(a) {
        THREE.Material.call(this), this.color = new THREE.Color(16777215), this.map = new THREE.Texture, this.useScreenCoordinates = !0, this.depthTest = !this.useScreenCoordinates, this.sizeAttenuation = !this.useScreenCoordinates, this.scaleByViewport = !this.sizeAttenuation, this.alignment = THREE.SpriteAlignment.center.clone(), this.fog = !1, this.uvOffset = new THREE.Vector2(0, 0), this.uvScale = new THREE.Vector2(1, 1), this.setValues(a), a = a || {}, void 0 === a.depthTest && (this.depthTest = !this.useScreenCoordinates), void 0 === a.sizeAttenuation && (this.sizeAttenuation = !this.useScreenCoordinates), void 0 === a.scaleByViewport && (this.scaleByViewport = !this.sizeAttenuation)
    }, THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype), THREE.SpriteMaterial.prototype.clone = function() {
        var a = new THREE.SpriteMaterial;
        return THREE.Material.prototype.clone.call(this, a), a.color.copy(this.color), a.map = this.map, a.useScreenCoordinates = this.useScreenCoordinates, a.sizeAttenuation = this.sizeAttenuation, a.scaleByViewport = this.scaleByViewport, a.alignment.copy(this.alignment), a.uvOffset.copy(this.uvOffset), a.uvScale.copy(this.uvScale), a.fog = this.fog, a
    }, THREE.SpriteAlignment = {}, THREE.SpriteAlignment.topLeft = new THREE.Vector2(1, -1), THREE.SpriteAlignment.topCenter = new THREE.Vector2(0, -1), THREE.SpriteAlignment.topRight = new THREE.Vector2(-1, -1), THREE.SpriteAlignment.centerLeft = new THREE.Vector2(1, 0), THREE.SpriteAlignment.center = new THREE.Vector2(0, 0), THREE.SpriteAlignment.centerRight = new THREE.Vector2(-1, 0), THREE.SpriteAlignment.bottomLeft = new THREE.Vector2(1, 1), THREE.SpriteAlignment.bottomCenter = new THREE.Vector2(0, 1), THREE.SpriteAlignment.bottomRight = new THREE.Vector2(-1, 1), THREE.Texture = function(a, b, c, d, e, f, g, h, i) {
        this.id = THREE.TextureIdCount++, this.uuid = THREE.Math.generateUUID(), this.name = "", this.image = a, this.mipmaps = [], this.mapping = void 0 !== b ? b : new THREE.UVMapping, this.wrapS = void 0 !== c ? c : THREE.ClampToEdgeWrapping, this.wrapT = void 0 !== d ? d : THREE.ClampToEdgeWrapping, this.magFilter = void 0 !== e ? e : THREE.LinearFilter, this.minFilter = void 0 !== f ? f : THREE.LinearMipMapLinearFilter, this.anisotropy = void 0 !== i ? i : 1, this.format = void 0 !== g ? g : THREE.RGBAFormat, this.type = void 0 !== h ? h : THREE.UnsignedByteType, this.offset = new THREE.Vector2(0, 0), this.repeat = new THREE.Vector2(1, 1), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.needsUpdate = !1, this.onUpdate = null
    }, THREE.Texture.prototype = {
        constructor: THREE.Texture,
        clone: function(a) {
            return void 0 === a && (a = new THREE.Texture), a.image = this.image, a.mipmaps = this.mipmaps.slice(0), a.mapping = this.mapping, a.wrapS = this.wrapS, a.wrapT = this.wrapT, a.magFilter = this.magFilter, a.minFilter = this.minFilter, a.anisotropy = this.anisotropy, a.format = this.format, a.type = this.type, a.offset.copy(this.offset), a.repeat.copy(this.repeat), a.generateMipmaps = this.generateMipmaps, a.premultiplyAlpha = this.premultiplyAlpha, a.flipY = this.flipY, a.unpackAlignment = this.unpackAlignment, a
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype), THREE.TextureIdCount = 0, THREE.CompressedTexture = function(a, b, c, d, e, f, g, h, i, j, k) {
        THREE.Texture.call(this, null, f, g, h, i, j, d, e, k), this.image = {
            width: b,
            height: c
        }, this.mipmaps = a, this.generateMipmaps = !1
    }, THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype), THREE.CompressedTexture.prototype.clone = function() {
        var a = new THREE.CompressedTexture;
        return THREE.Texture.prototype.clone.call(this, a), a
    }, THREE.DataTexture = function(a, b, c, d, e, f, g, h, i, j, k) {
        THREE.Texture.call(this, null, f, g, h, i, j, d, e, k), this.image = {
            data: a,
            width: b,
            height: c
        }
    }, THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype), THREE.DataTexture.prototype.clone = function() {
        var a = new THREE.DataTexture;
        return THREE.Texture.prototype.clone.call(this, a), a
    }, THREE.Particle = function(a) {
        THREE.Object3D.call(this), this.material = a
    }, THREE.Particle.prototype = Object.create(THREE.Object3D.prototype), THREE.Particle.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.Particle(this.material)), THREE.Object3D.prototype.clone.call(this, a), a
    }, THREE.ParticleSystem = function(a, b) {
        THREE.Object3D.call(this), this.geometry = void 0 !== a ? a : new THREE.Geometry, this.material = void 0 !== b ? b : new THREE.ParticleBasicMaterial({
            color: 16777215 * Math.random()
        }), this.sortParticles = !1, this.frustumCulled = !1
    }, THREE.ParticleSystem.prototype = Object.create(THREE.Object3D.prototype), THREE.ParticleSystem.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.ParticleSystem(this.geometry, this.material)), a.sortParticles = this.sortParticles, THREE.Object3D.prototype.clone.call(this, a), a
    }, THREE.Line = function(a, b, c) {
        THREE.Object3D.call(this), this.geometry = void 0 !== a ? a : new THREE.Geometry, this.material = void 0 !== b ? b : new THREE.LineBasicMaterial({
            color: 16777215 * Math.random()
        }), this.type = void 0 !== c ? c : THREE.LineStrip
    }, THREE.LineStrip = 0, THREE.LinePieces = 1, THREE.Line.prototype = Object.create(THREE.Object3D.prototype), THREE.Line.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.Line(this.geometry, this.material, this.type)), THREE.Object3D.prototype.clone.call(this, a), a
    }, THREE.Mesh = function(a, b) {
        THREE.Object3D.call(this), this.geometry = void 0 !== a ? a : new THREE.Geometry, this.material = void 0 !== b ? b : new THREE.MeshBasicMaterial({
            color: 16777215 * Math.random()
        }), this.updateMorphTargets()
    }, THREE.Mesh.prototype = Object.create(THREE.Object3D.prototype), THREE.Mesh.prototype.updateMorphTargets = function() {
        if (this.geometry.morphTargets.length > 0) {
            this.morphTargetBase = -1, this.morphTargetForcedOrder = [], this.morphTargetInfluences = [], this.morphTargetDictionary = {};
            for (var a = 0, b = this.geometry.morphTargets.length; b > a; a++) this.morphTargetInfluences.push(0), this.morphTargetDictionary[this.geometry.morphTargets[a].name] = a
        }
    }, THREE.Mesh.prototype.getMorphTargetIndexByName = function(a) {
        return void 0 !== this.morphTargetDictionary[a] ? this.morphTargetDictionary[a] : (console.log("THREE.Mesh.getMorphTargetIndexByName: morph target " + a + " does not exist. Returning 0."), 0)
    }, THREE.Mesh.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.Mesh(this.geometry, this.material)), THREE.Object3D.prototype.clone.call(this, a), a
    }, THREE.Bone = function(a) {
        THREE.Object3D.call(this), this.skin = a, this.skinMatrix = new THREE.Matrix4
    }, THREE.Bone.prototype = Object.create(THREE.Object3D.prototype), THREE.Bone.prototype.update = function(a, b) {
        this.matrixAutoUpdate && (b |= this.updateMatrix()), (b || this.matrixWorldNeedsUpdate) && (a ? this.skinMatrix.multiplyMatrices(a, this.matrix) : this.skinMatrix.copy(this.matrix), this.matrixWorldNeedsUpdate = !1, b = !0);
        var c, d = this.children.length;
        for (c = 0; d > c; c++) this.children[c].update(this.skinMatrix, b)
    }, THREE.SkinnedMesh = function(a, b, c) {
        THREE.Mesh.call(this, a, b), this.useVertexTexture = void 0 !== c ? c : !0, this.identityMatrix = new THREE.Matrix4, this.bones = [], this.boneMatrices = [];
        var d, e, f, g, h, i;
        if (this.geometry && void 0 !== this.geometry.bones) {
            for (d = 0; d < this.geometry.bones.length; d++) f = this.geometry.bones[d], g = f.pos, h = f.rotq, i = f.scl, e = this.addBone(), e.name = f.name, e.position.set(g[0], g[1], g[2]), e.quaternion.set(h[0], h[1], h[2], h[3]), void 0 !== i ? e.scale.set(i[0], i[1], i[2]) : e.scale.set(1, 1, 1);
            for (d = 0; d < this.bones.length; d++) f = this.geometry.bones[d], e = this.bones[d], -1 === f.parent ? this.add(e) : this.bones[f.parent].add(e);
            var j = this.bones.length;
            if (this.useVertexTexture) {
                var k;
                k = j > 256 ? 64 : j > 64 ? 32 : j > 16 ? 16 : 8, this.boneTextureWidth = k, this.boneTextureHeight = k, this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType), this.boneTexture.minFilter = THREE.NearestFilter, this.boneTexture.magFilter = THREE.NearestFilter, this.boneTexture.generateMipmaps = !1, this.boneTexture.flipY = !1
            } else this.boneMatrices = new Float32Array(16 * j);
            this.pose()
        }
    }, THREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype), THREE.SkinnedMesh.prototype.addBone = function(a) {
        return void 0 === a && (a = new THREE.Bone(this)), this.bones.push(a), a
    }, THREE.SkinnedMesh.prototype.updateMatrixWorld = function() {
        var a = new THREE.Matrix4;
        return function(b) {
            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || b) && (this.parent ? this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix) : this.matrixWorld.copy(this.matrix), this.matrixWorldNeedsUpdate = !1, b = !0);
            for (var c = 0, d = this.children.length; d > c; c++) {
                var e = this.children[c];
                e instanceof THREE.Bone ? e.update(this.identityMatrix, !1) : e.updateMatrixWorld(!0)
            }
            if (void 0 == this.boneInverses) {
                this.boneInverses = [];
                for (var f = 0, g = this.bones.length; g > f; f++) {
                    var h = new THREE.Matrix4;
                    h.getInverse(this.bones[f].skinMatrix), this.boneInverses.push(h)
                }
            }
            for (var f = 0, g = this.bones.length; g > f; f++) a.multiplyMatrices(this.bones[f].skinMatrix, this.boneInverses[f]), a.flattenToArrayOffset(this.boneMatrices, 16 * f);
            this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
        }
    }(), THREE.SkinnedMesh.prototype.pose = function() {
        this.updateMatrixWorld(!0), this.normalizeSkinWeights()
    }, THREE.SkinnedMesh.prototype.normalizeSkinWeights = function() {
        if (this.geometry instanceof THREE.Geometry)
            for (var a = 0; a < this.geometry.skinIndices.length; a++) {
                var b = this.geometry.skinWeights[a],
                    c = 1 / b.lengthManhattan();
                1 / 0 !== c ? b.multiplyScalar(c) : b.set(1)
            }
    }, THREE.SkinnedMesh.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.SkinnedMesh(this.geometry, this.material, this.useVertexTexture)), THREE.Mesh.prototype.clone.call(this, a), a
    }, THREE.MorphAnimMesh = function(a, b) {
        THREE.Mesh.call(this, a, b), this.duration = 1e3, this.mirroredLoop = !1, this.time = 0, this.lastKeyframe = 0, this.currentKeyframe = 0, this.direction = 1, this.directionBackwards = !1, this.setFrameRange(0, this.geometry.morphTargets.length - 1)
    }, THREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype), THREE.MorphAnimMesh.prototype.setFrameRange = function(a, b) {
        this.startKeyframe = a, this.endKeyframe = b, this.length = this.endKeyframe - this.startKeyframe + 1
    }, THREE.MorphAnimMesh.prototype.setDirectionForward = function() {
        this.direction = 1, this.directionBackwards = !1
    }, THREE.MorphAnimMesh.prototype.setDirectionBackward = function() {
        this.direction = -1, this.directionBackwards = !0
    }, THREE.MorphAnimMesh.prototype.parseAnimations = function() {
        var a = this.geometry;
        a.animations || (a.animations = {});
        for (var b, c = a.animations, d = /([a-z]+)(\d+)/, e = 0, f = a.morphTargets.length; f > e; e++) {
            var g = a.morphTargets[e],
                h = g.name.match(d);
            if (h && h.length > 1) {
                {
                    var i = h[1];
                    h[2]
                }
                c[i] || (c[i] = {
                    start: 1 / 0,
                    end: -1 / 0
                });
                var j = c[i];
                e < j.start && (j.start = e), e > j.end && (j.end = e), b || (b = i)
            }
        }
        a.firstAnimation = b
    }, THREE.MorphAnimMesh.prototype.setAnimationLabel = function(a, b, c) {
        this.geometry.animations || (this.geometry.animations = {}), this.geometry.animations[a] = {
            start: b,
            end: c
        }
    }, THREE.MorphAnimMesh.prototype.playAnimation = function(a, b) {
        var c = this.geometry.animations[a];
        c ? (this.setFrameRange(c.start, c.end), this.duration = 1e3 * ((c.end - c.start) / b), this.time = 0) : console.warn("animation[" + a + "] undefined")
    }, THREE.MorphAnimMesh.prototype.updateAnimation = function(a) {
        var b = this.duration / this.length;
        this.time += this.direction * a, this.mirroredLoop ? (this.time > this.duration || this.time < 0) && (this.direction *= -1, this.time > this.duration && (this.time = this.duration, this.directionBackwards = !0), this.time < 0 && (this.time = 0, this.directionBackwards = !1)) : (this.time = this.time % this.duration, this.time < 0 && (this.time += this.duration));
        var c = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / b), 0, this.length - 1);
        c !== this.currentKeyframe && (this.morphTargetInfluences[this.lastKeyframe] = 0, this.morphTargetInfluences[this.currentKeyframe] = 1, this.morphTargetInfluences[c] = 0, this.lastKeyframe = this.currentKeyframe, this.currentKeyframe = c);
        var d = this.time % b / b;
        this.directionBackwards && (d = 1 - d), this.morphTargetInfluences[this.currentKeyframe] = d, this.morphTargetInfluences[this.lastKeyframe] = 1 - d
    }, THREE.MorphAnimMesh.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.MorphAnimMesh(this.geometry, this.material)), a.duration = this.duration, a.mirroredLoop = this.mirroredLoop, a.time = this.time, a.lastKeyframe = this.lastKeyframe, a.currentKeyframe = this.currentKeyframe, a.direction = this.direction, a.directionBackwards = this.directionBackwards, THREE.Mesh.prototype.clone.call(this, a), a
    }, THREE.Ribbon = function(a, b) {
        THREE.Object3D.call(this), this.geometry = a, this.material = b
    }, THREE.Ribbon.prototype = Object.create(THREE.Object3D.prototype), THREE.Ribbon.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.Ribbon(this.geometry, this.material)), THREE.Object3D.prototype.clone.call(this, a), a
    }, THREE.LOD = function() {
        THREE.Object3D.call(this), this.objects = []
    }, THREE.LOD.prototype = Object.create(THREE.Object3D.prototype), THREE.LOD.prototype.addLevel = function(a, b) {
        void 0 === b && (b = 0), b = Math.abs(b);
        for (var c = 0; c < this.objects.length && !(b < this.objects[c].distance); c++);
        this.objects.splice(c, 0, {
            distance: b,
            object: a
        }), this.add(a)
    }, THREE.LOD.prototype.getObjectForDistance = function(a) {
        for (var b = 1, c = this.objects.length; c > b && !(a < this.objects[b].distance); b++);
        return this.objects[b - 1].object
    }, THREE.LOD.prototype.update = function() {
        var a = new THREE.Vector3,
            b = new THREE.Vector3;
        return function(c) {
            if (this.objects.length > 1) {
                a.getPositionFromMatrix(c.matrixWorld), b.getPositionFromMatrix(this.matrixWorld);
                var d = a.distanceTo(b);
                this.objects[0].object.visible = !0;
                for (var e = 1, f = this.objects.length; f > e && d >= this.objects[e].distance; e++) this.objects[e - 1].object.visible = !1, this.objects[e].object.visible = !0;
                for (; f > e; e++) this.objects[e].object.visible = !1
            }
        }
    }(), THREE.LOD.prototype.clone = function() {}, THREE.Sprite = function(a) {
        THREE.Object3D.call(this), this.material = void 0 !== a ? a : new THREE.SpriteMaterial, this.rotation3d = this.rotation, this.rotation = 0
    }, THREE.Sprite.prototype = Object.create(THREE.Object3D.prototype), THREE.Sprite.prototype.updateMatrix = function() {
        this.rotation3d.set(0, 0, this.rotation, this.rotation3d.order), this.quaternion.setFromEuler(this.rotation3d), this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
    }, THREE.Sprite.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.Sprite(this.material)), THREE.Object3D.prototype.clone.call(this, a), a
    }, THREE.Scene = function() {
        THREE.Object3D.call(this), this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, this.matrixAutoUpdate = !1, this.__objects = [], this.__lights = [], this.__objectsAdded = [], this.__objectsRemoved = []
    }, THREE.Scene.prototype = Object.create(THREE.Object3D.prototype), THREE.Scene.prototype.__addObject = function(a) {
        if (a instanceof THREE.Light) - 1 === this.__lights.indexOf(a) && this.__lights.push(a), a.target && void 0 === a.target.parent && this.add(a.target);
        else if (!(a instanceof THREE.Camera || a instanceof THREE.Bone) && -1 === this.__objects.indexOf(a)) {
            this.__objects.push(a), this.__objectsAdded.push(a);
            var b = this.__objectsRemoved.indexOf(a); - 1 !== b && this.__objectsRemoved.splice(b, 1)
        }
        for (var c = 0; c < a.children.length; c++) this.__addObject(a.children[c])
    }, THREE.Scene.prototype.__removeObject = function(a) {
        if (a instanceof THREE.Light) {
            var b = this.__lights.indexOf(a); - 1 !== b && this.__lights.splice(b, 1)
        } else if (!(a instanceof THREE.Camera)) {
            var b = this.__objects.indexOf(a);
            if (-1 !== b) {
                this.__objects.splice(b, 1), this.__objectsRemoved.push(a);
                var c = this.__objectsAdded.indexOf(a); - 1 !== c && this.__objectsAdded.splice(c, 1)
            }
        }
        for (var d = 0; d < a.children.length; d++) this.__removeObject(a.children[d])
    }, THREE.Scene.prototype.clone = function(a) {
        return void 0 === a && (a = new THREE.Scene), THREE.Object3D.prototype.clone.call(this, a), null !== this.fog && (a.fog = this.fog.clone()), null !== this.overrideMaterial && (a.overrideMaterial = this.overrideMaterial.clone()), a.autoUpdate = this.autoUpdate, a.matrixAutoUpdate = this.matrixAutoUpdate, a
    }, THREE.Fog = function(a, b, c) {
        this.name = "", this.color = new THREE.Color(a), this.near = void 0 !== b ? b : 1, this.far = void 0 !== c ? c : 1e3
    }, THREE.Fog.prototype.clone = function() {
        return new THREE.Fog(this.color.getHex(), this.near, this.far)
    }, THREE.FogExp2 = function(a, b) {
        this.name = "", this.color = new THREE.Color(a), this.density = void 0 !== b ? b : 25e-5
    }, THREE.FogExp2.prototype.clone = function() {
        return new THREE.FogExp2(this.color.getHex(), this.density)
    }, THREE.CanvasRenderer = function(a) {
        function b() {
            Ob.setRGB(0, 0, 0), Pb.setRGB(0, 0, 0), Qb.setRGB(0, 0, 0);
            for (var a = 0, b = A.length; b > a; a++) {
                var c = A[a],
                    d = c.color;
                c instanceof THREE.AmbientLight ? Ob.add(d) : c instanceof THREE.DirectionalLight ? Pb.add(d) : c instanceof THREE.PointLight && Qb.add(d)
            }
        }

        function c(a, b, c) {
            for (var d = 0, e = A.length; e > d; d++) {
                var f = A[d];
                if (Ib.copy(f.color), f instanceof THREE.DirectionalLight) {
                    var g = Rb.getPositionFromMatrix(f.matrixWorld).normalize(),
                        h = b.dot(g);
                    if (0 >= h) continue;
                    h *= f.intensity, c.add(Ib.multiplyScalar(h))
                } else if (f instanceof THREE.PointLight) {
                    var g = Rb.getPositionFromMatrix(f.matrixWorld),
                        h = b.dot(Rb.subVectors(g, a).normalize());
                    if (0 >= h) continue;
                    if (h *= 0 == f.distance ? 1 : 1 - Math.min(a.distanceTo(g) / f.distance, 1), 0 == h) continue;
                    h *= f.intensity, c.add(Ib.multiplyScalar(h))
                }
            }
        }

        function d(a, b, c) {
            p(c.opacity), q(c.blending);
            var d, e, f, g, h, i, j;
            if (c instanceof THREE.ParticleBasicMaterial)
                if (null === c.map) {
                    if (f = b.object.scale.x, g = b.object.scale.y, f *= b.scale.x * D, g *= b.scale.y * E, Nb.min.set(a.x - f, a.y - g), Nb.max.set(a.x + f, a.y + g), Lb.isIntersectionBox(Nb) === !1) return void Nb.makeEmpty();
                    v(c.color.getStyle()), nb.save(), nb.translate(a.x, a.y), nb.rotate(-b.rotation), nb.scale(f, g), nb.fillRect(-1, -1, 2, 2), nb.restore()
                } else {
                    if (h = c.map.image, i = h.width >> 1, j = h.height >> 1, f = b.scale.x * D, g = b.scale.y * E, d = f * i, e = g * j, Nb.min.set(a.x - d, a.y - e), Nb.max.set(a.x + d, a.y + e), Lb.isIntersectionBox(Nb) === !1) return void Nb.makeEmpty();
                    nb.save(), nb.translate(a.x, a.y), nb.rotate(-b.rotation), nb.scale(f, -g), nb.translate(-i, -j), nb.drawImage(h, 0, 0), nb.restore()
                }
            else if (c instanceof THREE.ParticleCanvasMaterial) {
                if (d = b.scale.x * D, e = b.scale.y * E, Nb.min.set(a.x - d, a.y - e), Nb.max.set(a.x + d, a.y + e), Lb.isIntersectionBox(Nb) === !1) return void Nb.makeEmpty();
                u(c.color.getStyle()), v(c.color.getStyle()), nb.save(), nb.translate(a.x, a.y), nb.rotate(-b.rotation), nb.scale(d, e), c.program(nb), nb.restore()
            }
        }

        function e(a, b, c, d) {
            if (p(d.opacity), q(d.blending), nb.beginPath(), nb.moveTo(a.positionScreen.x, a.positionScreen.y), nb.lineTo(b.positionScreen.x, b.positionScreen.y), d instanceof THREE.LineBasicMaterial) {
                if (r(d.linewidth), s(d.linecap), t(d.linejoin), d.vertexColors !== THREE.VertexColors) u(d.color.getStyle());
                else {
                    var e = c.vertexColors[0].getStyle(),
                        f = c.vertexColors[1].getStyle();
                    if (e === f) u(e);
                    else {
                        try {
                            var g = nb.createLinearGradient(a.positionScreen.x, a.positionScreen.y, b.positionScreen.x, b.positionScreen.y);
                            g.addColorStop(0, e), g.addColorStop(1, f)
                        } catch (h) {
                            g = e
                        }
                        u(g)
                    }
                }
                nb.stroke(), Nb.expandByScalar(2 * d.linewidth)
            } else d instanceof THREE.LineDashedMaterial && (r(d.linewidth), s(d.linecap), t(d.linejoin), u(d.color.getStyle()), w(d.dashSize, d.gapSize), nb.stroke(), Nb.expandByScalar(2 * d.linewidth), w(null, null))
        }

        function f(a, b, d, e, f, g, i, o) {
            if (kb.info.render.vertices += 3, kb.info.render.faces++, p(o.opacity), q(o.blending), K = a.positionScreen.x, L = a.positionScreen.y, M = b.positionScreen.x, N = b.positionScreen.y, O = d.positionScreen.x, P = d.positionScreen.y, h(K, L, M, N, O, P), (o instanceof THREE.MeshLambertMaterial || o instanceof THREE.MeshPhongMaterial) && null === o.map) Gb.copy(o.color), Hb.copy(o.emissive), o.vertexColors === THREE.FaceColors && Gb.multiply(i.color), o.wireframe === !1 && o.shading == THREE.SmoothShading && 3 == i.vertexNormalsLength ? (Cb.copy(Ob), Db.copy(Ob), Eb.copy(Ob), c(i.v1.positionWorld, i.vertexNormalsModel[0], Cb), c(i.v2.positionWorld, i.vertexNormalsModel[1], Db), c(i.v3.positionWorld, i.vertexNormalsModel[2], Eb), Cb.multiply(Gb).add(Hb), Db.multiply(Gb).add(Hb), Eb.multiply(Gb).add(Hb), Fb.addColors(Db, Eb).multiplyScalar(.5), Y = n(Cb, Db, Eb, Fb), m(K, L, M, N, O, P, 0, 0, 1, 0, 0, 1, Y)) : (Bb.copy(Ob), c(i.centroidModel, i.normalModel, Bb), Bb.multiply(Gb).add(Hb), o.wireframe === !0 ? j(Bb, o.wireframeLinewidth, o.wireframeLinecap, o.wireframeLinejoin) : k(Bb));
            else if (o instanceof THREE.MeshBasicMaterial || o instanceof THREE.MeshLambertMaterial || o instanceof THREE.MeshPhongMaterial) null !== o.map ? o.map.mapping instanceof THREE.UVMapping && (Z = i.uvs[0], l(K, L, M, N, O, P, Z[e].x, Z[e].y, Z[f].x, Z[f].y, Z[g].x, Z[g].y, o.map)) : null !== o.envMap ? o.envMap.mapping instanceof THREE.SphericalReflectionMapping && (Rb.copy(i.vertexNormalsModelView[e]), $ = .5 * Rb.x + .5, _ = .5 * Rb.y + .5, Rb.copy(i.vertexNormalsModelView[f]), ab = .5 * Rb.x + .5, bb = .5 * Rb.y + .5, Rb.copy(i.vertexNormalsModelView[g]), cb = .5 * Rb.x + .5, db = .5 * Rb.y + .5, l(K, L, M, N, O, P, $, _, ab, bb, cb, db, o.envMap)) : (Bb.copy(o.color), o.vertexColors === THREE.FaceColors && Bb.multiply(i.color), o.wireframe === !0 ? j(Bb, o.wireframeLinewidth, o.wireframeLinecap, o.wireframeLinejoin) : k(Bb));
            else if (o instanceof THREE.MeshDepthMaterial) W = F.near, X = F.far, Cb.r = Cb.g = Cb.b = 1 - x(a.positionScreen.z * a.positionScreen.w, W, X), Db.r = Db.g = Db.b = 1 - x(b.positionScreen.z * b.positionScreen.w, W, X), Eb.r = Eb.g = Eb.b = 1 - x(d.positionScreen.z * d.positionScreen.w, W, X), Fb.addColors(Db, Eb).multiplyScalar(.5), Y = n(Cb, Db, Eb, Fb), m(K, L, M, N, O, P, 0, 0, 1, 0, 0, 1, Y);
            else if (o instanceof THREE.MeshNormalMaterial) {
                var r;
                o.shading == THREE.FlatShading ? (r = i.normalModelView, Bb.setRGB(r.x, r.y, r.z).multiplyScalar(.5).addScalar(.5), o.wireframe === !0 ? j(Bb, o.wireframeLinewidth, o.wireframeLinecap, o.wireframeLinejoin) : k(Bb)) : o.shading == THREE.SmoothShading && (r = i.vertexNormalsModelView[e], Cb.setRGB(r.x, r.y, r.z).multiplyScalar(.5).addScalar(.5), r = i.vertexNormalsModelView[f], Db.setRGB(r.x, r.y, r.z).multiplyScalar(.5).addScalar(.5), r = i.vertexNormalsModelView[g], Eb.setRGB(r.x, r.y, r.z).multiplyScalar(.5).addScalar(.5), Fb.addColors(Db, Eb).multiplyScalar(.5), Y = n(Cb, Db, Eb, Fb), m(K, L, M, N, O, P, 0, 0, 1, 0, 0, 1, Y))
            }
        }

        function g(a, b, d, e, g, l, o, r) {
            if (kb.info.render.vertices += 4, kb.info.render.faces++, p(r.opacity), q(r.blending), void 0 !== r.map && null !== r.map || void 0 !== r.envMap && null !== r.envMap) return f(a, b, e, 0, 1, 3, o, r), void f(g, d, l, 1, 2, 3, o, r);
            if (K = a.positionScreen.x, L = a.positionScreen.y, M = b.positionScreen.x, N = b.positionScreen.y, O = d.positionScreen.x, P = d.positionScreen.y, Q = e.positionScreen.x, R = e.positionScreen.y, S = g.positionScreen.x, T = g.positionScreen.y, U = l.positionScreen.x, V = l.positionScreen.y, r instanceof THREE.MeshLambertMaterial || r instanceof THREE.MeshPhongMaterial) Gb.copy(r.color), Hb.copy(r.emissive), r.vertexColors === THREE.FaceColors && Gb.multiply(o.color), r.wireframe === !1 && r.shading == THREE.SmoothShading && 4 == o.vertexNormalsLength ? (Cb.copy(Ob), Db.copy(Ob), Eb.copy(Ob), Fb.copy(Ob), c(o.v1.positionWorld, o.vertexNormalsModel[0], Cb), c(o.v2.positionWorld, o.vertexNormalsModel[1], Db), c(o.v4.positionWorld, o.vertexNormalsModel[3], Eb), c(o.v3.positionWorld, o.vertexNormalsModel[2], Fb), Cb.multiply(Gb).add(Hb), Db.multiply(Gb).add(Hb), Eb.multiply(Gb).add(Hb), Fb.multiply(Gb).add(Hb), Y = n(Cb, Db, Eb, Fb), h(K, L, M, N, Q, R), m(K, L, M, N, Q, R, 0, 0, 1, 0, 0, 1, Y), h(S, T, O, P, U, V), m(S, T, O, P, U, V, 1, 0, 1, 1, 0, 1, Y)) : (Bb.copy(Ob), c(o.centroidModel, o.normalModel, Bb), Bb.multiply(Gb).add(Hb), i(K, L, M, N, O, P, Q, R), r.wireframe === !0 ? j(Bb, r.wireframeLinewidth, r.wireframeLinecap, r.wireframeLinejoin) : k(Bb));
            else if (r instanceof THREE.MeshBasicMaterial) Bb.copy(r.color), r.vertexColors === THREE.FaceColors && Bb.multiply(o.color), i(K, L, M, N, O, P, Q, R), r.wireframe === !0 ? j(Bb, r.wireframeLinewidth, r.wireframeLinecap, r.wireframeLinejoin) : k(Bb);
            else if (r instanceof THREE.MeshNormalMaterial) {
                var s;
                r.shading == THREE.FlatShading ? (s = o.normalModelView, Bb.setRGB(s.x, s.y, s.z).multiplyScalar(.5).addScalar(.5), i(K, L, M, N, O, P, Q, R), r.wireframe === !0 ? j(Bb, r.wireframeLinewidth, r.wireframeLinecap, r.wireframeLinejoin) : k(Bb)) : r.shading == THREE.SmoothShading && (s = o.vertexNormalsModelView[0], Cb.setRGB(s.x, s.y, s.z).multiplyScalar(.5).addScalar(.5), s = o.vertexNormalsModelView[1], Db.setRGB(s.x, s.y, s.z).multiplyScalar(.5).addScalar(.5), s = o.vertexNormalsModelView[3], Eb.setRGB(s.x, s.y, s.z).multiplyScalar(.5).addScalar(.5), s = o.vertexNormalsModelView[2], Fb.setRGB(s.x, s.y, s.z).multiplyScalar(.5).addScalar(.5), Y = n(Cb, Db, Eb, Fb), h(K, L, M, N, Q, R), m(K, L, M, N, Q, R, 0, 0, 1, 0, 0, 1, Y), h(S, T, O, P, U, V), m(S, T, O, P, U, V, 1, 0, 1, 1, 0, 1, Y))
            } else r instanceof THREE.MeshDepthMaterial && (W = F.near, X = F.far, Cb.r = Cb.g = Cb.b = 1 - x(a.positionScreen.z * a.positionScreen.w, W, X), Db.r = Db.g = Db.b = 1 - x(b.positionScreen.z * b.positionScreen.w, W, X), Eb.r = Eb.g = Eb.b = 1 - x(e.positionScreen.z * e.positionScreen.w, W, X), Fb.r = Fb.g = Fb.b = 1 - x(d.positionScreen.z * d.positionScreen.w, W, X), Y = n(Cb, Db, Eb, Fb), h(K, L, M, N, Q, R), m(K, L, M, N, Q, R, 0, 0, 1, 0, 0, 1, Y), h(S, T, O, P, U, V), m(S, T, O, P, U, V, 1, 0, 1, 1, 0, 1, Y))
        }

        function h(a, b, c, d, e, f) {
            nb.beginPath(), nb.moveTo(a, b), nb.lineTo(c, d), nb.lineTo(e, f), nb.closePath()
        }

        function i(a, b, c, d, e, f, g, h) {
            nb.beginPath(), nb.moveTo(a, b), nb.lineTo(c, d), nb.lineTo(e, f), nb.lineTo(g, h), nb.closePath()
        }

        function j(a, b, c, d) {
            r(b), s(c), t(d), u(a.getStyle()), nb.stroke(), Nb.expandByScalar(2 * b)
        }

        function k(a) {
            v(a.getStyle()), nb.fill()
        }

        function l(a, b, c, d, e, f, g, h, i, j, l, m, n) {
            if (!(n instanceof THREE.DataTexture || void 0 === n.image || 0 == n.image.width)) {
                if (n.needsUpdate === !0) {
                    var o = n.wrapS == THREE.RepeatWrapping,
                        p = n.wrapT == THREE.RepeatWrapping;
                    Jb[n.id] = nb.createPattern(n.image, o === !0 && p === !0 ? "repeat" : o === !0 && p === !1 ? "repeat-x" : o === !1 && p === !0 ? "repeat-y" : "no-repeat"), n.needsUpdate = !1
                }
                v(void 0 === Jb[n.id] ? "rgba(0,0,0,1)" : Jb[n.id]);
                var q, r, s, t, u, w, x, y, z = n.offset.x / n.repeat.x,
                    A = n.offset.y / n.repeat.y,
                    B = n.image.width * n.repeat.x,
                    C = n.image.height * n.repeat.y;
                if (g = (g + z) * B, h = (1 - h + A) * C, i = (i + z) * B, j = (1 - j + A) * C, l = (l + z) * B, m = (1 - m + A) * C, c -= a, d -= b, e -= a, f -= b, i -= g, j -= h, l -= g, m -= h, x = i * m - l * j, 0 === x) {
                    if (void 0 === Kb[n.id]) {
                        var D = document.createElement("canvas");
                        D.width = n.image.width, D.height = n.image.height;
                        var E = D.getContext("2d");
                        E.drawImage(n.image, 0, 0), Kb[n.id] = E.getImageData(0, 0, n.image.width, n.image.height).data
                    }
                    var F = Kb[n.id],
                        G = 4 * (Math.floor(g) + Math.floor(h) * n.image.width);
                    return Bb.setRGB(F[G] / 255, F[G + 1] / 255, F[G + 2] / 255), void k(Bb)
                }
                y = 1 / x, q = (m * c - j * e) * y, r = (m * d - j * f) * y, s = (i * e - l * c) * y, t = (i * f - l * d) * y, u = a - q * g - s * h, w = b - r * g - t * h, nb.save(), nb.transform(q, r, s, t, u, w), nb.fill(), nb.restore()
            }
        }

        function m(a, b, c, d, e, f, g, h, i, j, k, l, m) {
            var n, o, p, q, r, s, t, u, v = m.width - 1,
                w = m.height - 1;
            g *= v, h *= w, i *= v, j *= w, k *= v, l *= w, c -= a, d -= b, e -= a, f -= b, i -= g, j -= h, k -= g, l -= h, t = i * l - k * j, u = 1 / t, n = (l * c - j * e) * u, o = (l * d - j * f) * u, p = (i * e - k * c) * u, q = (i * f - k * d) * u, r = a - n * g - p * h, s = b - o * g - q * h, nb.save(), nb.transform(n, o, p, q, r, s), nb.clip(), nb.drawImage(m, 0, 0), nb.restore()
        }

        function n(a, b, c, d) {
            return hb[0] = 255 * a.r | 0, hb[1] = 255 * a.g | 0, hb[2] = 255 * a.b | 0, hb[4] = 255 * b.r | 0, hb[5] = 255 * b.g | 0, hb[6] = 255 * b.b | 0, hb[8] = 255 * c.r | 0, hb[9] = 255 * c.g | 0, hb[10] = 255 * c.b | 0, hb[12] = 255 * d.r | 0, hb[13] = 255 * d.g | 0, hb[14] = 255 * d.b | 0, fb.putImageData(gb, 0, 0), jb.drawImage(eb, 0, 0), ib
        }

        function o(a, b, c) {
            var d, e = b.x - a.x,
                f = b.y - a.y,
                g = e * e + f * f;
            0 !== g && (d = c / Math.sqrt(g), e *= d, f *= d, b.x += e, b.y += f, a.x -= e, a.y -= f)
        }

        function p(a) {
            qb !== a && (nb.globalAlpha = a, qb = a)
        }

        function q(a) {
            rb !== a && (a === THREE.NormalBlending ? nb.globalCompositeOperation = "source-over" : a === THREE.AdditiveBlending ? nb.globalCompositeOperation = "lighter" : a === THREE.SubtractiveBlending && (nb.globalCompositeOperation = "darker"), rb = a)
        }

        function r(a) {
            ub !== a && (nb.lineWidth = a, ub = a)
        }

        function s(a) {
            vb !== a && (nb.lineCap = a, vb = a)
        }

        function t(a) {
            wb !== a && (nb.lineJoin = a, wb = a)
        }

        function u(a) {
            sb !== a && (nb.strokeStyle = a, sb = a)
        }

        function v(a) {
            tb !== a && (nb.fillStyle = a, tb = a)
        }

        function w(a, b) {
            (xb !== a || yb !== b) && (nb.setLineDash([a, b]), xb = a, yb = b)
        }
        console.log("THREE.CanvasRenderer", THREE.REVISION);
        var x = THREE.Math.smoothstep;
        a = a || {};
        var y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, $, _, ab, bb, cb, db, eb, fb, gb, hb, ib, jb, kb = this,
            lb = new THREE.Projector,
            mb = void 0 !== a.canvas ? a.canvas : document.createElement("canvas"),
            nb = mb.getContext("2d"),
            ob = new THREE.Color(0),
            pb = 0,
            qb = 1,
            rb = 0,
            sb = null,
            tb = null,
            ub = null,
            vb = null,
            wb = null,
            xb = null,
            yb = 0,
            zb = new THREE.RenderableVertex,
            Ab = new THREE.RenderableVertex,
            Bb = new THREE.Color,
            Cb = new THREE.Color,
            Db = new THREE.Color,
            Eb = new THREE.Color,
            Fb = new THREE.Color,
            Gb = new THREE.Color,
            Hb = new THREE.Color,
            Ib = new THREE.Color,
            Jb = {},
            Kb = {},
            Lb = new THREE.Box2,
            Mb = new THREE.Box2,
            Nb = new THREE.Box2,
            Ob = new THREE.Color,
            Pb = new THREE.Color,
            Qb = new THREE.Color,
            Rb = new THREE.Vector3,
            Sb = 16;
        eb = document.createElement("canvas"), eb.width = eb.height = 2, fb = eb.getContext("2d"), fb.fillStyle = "rgba(0,0,0,1)", fb.fillRect(0, 0, 2, 2), gb = fb.getImageData(0, 0, 2, 2), hb = gb.data, ib = document.createElement("canvas"), ib.width = ib.height = Sb, jb = ib.getContext("2d"), jb.translate(-Sb / 2, -Sb / 2), jb.scale(Sb, Sb), Sb--, void 0 === nb.setLineDash && (nb.setLineDash = void 0 !== nb.mozDash ? function(a) {
            nb.mozDash = null !== a[0] ? a : null
        } : function() {}), this.domElement = mb, this.devicePixelRatio = void 0 !== a.devicePixelRatio ? a.devicePixelRatio : void 0 !== window.devicePixelRatio ? window.devicePixelRatio : 1, this.autoClear = !0, this.sortObjects = !0, this.sortElements = !0, this.info = {
            render: {
                vertices: 0,
                faces: 0
            }
        }, this.supportsVertexTextures = function() {}, this.setFaceCulling = function() {}, this.setSize = function(a, b, c) {
            B = a * this.devicePixelRatio, C = b * this.devicePixelRatio, D = Math.floor(B / 2), E = Math.floor(C / 2), mb.width = B, mb.height = C, 1 !== this.devicePixelRatio && c !== !1 && (mb.style.width = a + "px", mb.style.height = b + "px"), Lb.set(new THREE.Vector2(-D, -E), new THREE.Vector2(D, E)), Mb.set(new THREE.Vector2(-D, -E), new THREE.Vector2(D, E)), qb = 1, rb = 0, sb = null, tb = null, ub = null, vb = null, wb = null
        }, this.setClearColor = function(a, b) {
            ob.set(a), pb = void 0 !== b ? b : 1, Mb.set(new THREE.Vector2(-D, -E), new THREE.Vector2(D, E))
        }, this.setClearColorHex = function(a, b) {
            console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."), this.setClearColor(a, b)
        }, this.getMaxAnisotropy = function() {
            return 0
        }, this.clear = function() {
            nb.setTransform(1, 0, 0, -1, D, E), Mb.empty() === !1 && (Mb.intersect(Lb), Mb.expandByScalar(2), 1 > pb && nb.clearRect(0 | Mb.min.x, 0 | Mb.min.y, Mb.max.x - Mb.min.x | 0, Mb.max.y - Mb.min.y | 0), pb > 0 && (q(THREE.NormalBlending), p(1), v("rgba(" + Math.floor(255 * ob.r) + "," + Math.floor(255 * ob.g) + "," + Math.floor(255 * ob.b) + "," + pb + ")"), nb.fillRect(0 | Mb.min.x, 0 | Mb.min.y, Mb.max.x - Mb.min.x | 0, Mb.max.y - Mb.min.y | 0)), Mb.makeEmpty())
        }, this.render = function(a, c) {
            if (c instanceof THREE.Camera == !1) return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
            this.autoClear === !0 && this.clear(), nb.setTransform(1, 0, 0, -1, D, E), kb.info.render.vertices = 0, kb.info.render.faces = 0, y = lb.projectScene(a, c, this.sortObjects, this.sortElements), z = y.elements, A = y.lights, F = c, b();
            for (var h = 0, i = z.length; i > h; h++) {
                var j = z[h],
                    k = j.material;
                if (void 0 !== k && k.visible !== !1) {
                    if (Nb.makeEmpty(), j instanceof THREE.RenderableParticle) G = j, G.x *= D, G.y *= E, d(G, j, k);
                    else if (j instanceof THREE.RenderableLine) G = j.v1, H = j.v2, G.positionScreen.x *= D, G.positionScreen.y *= E, H.positionScreen.x *= D, H.positionScreen.y *= E, Nb.setFromPoints([G.positionScreen, H.positionScreen]), Lb.isIntersectionBox(Nb) === !0 && e(G, H, j, k);
                    else if (j instanceof THREE.RenderableFace3) {
                        if (G = j.v1, H = j.v2, I = j.v3, G.positionScreen.z < -1 || G.positionScreen.z > 1) continue;
                        if (H.positionScreen.z < -1 || H.positionScreen.z > 1) continue;
                        if (I.positionScreen.z < -1 || I.positionScreen.z > 1) continue;
                        G.positionScreen.x *= D, G.positionScreen.y *= E, H.positionScreen.x *= D, H.positionScreen.y *= E, I.positionScreen.x *= D, I.positionScreen.y *= E, k.overdraw > 0 && (o(G.positionScreen, H.positionScreen, k.overdraw), o(H.positionScreen, I.positionScreen, k.overdraw), o(I.positionScreen, G.positionScreen, k.overdraw)), Nb.setFromPoints([G.positionScreen, H.positionScreen, I.positionScreen]), Lb.isIntersectionBox(Nb) === !0 && f(G, H, I, 0, 1, 2, j, k)
                    } else if (j instanceof THREE.RenderableFace4) {
                        if (G = j.v1, H = j.v2, I = j.v3, J = j.v4, G.positionScreen.z < -1 || G.positionScreen.z > 1) continue;
                        if (H.positionScreen.z < -1 || H.positionScreen.z > 1) continue;
                        if (I.positionScreen.z < -1 || I.positionScreen.z > 1) continue;
                        if (J.positionScreen.z < -1 || J.positionScreen.z > 1) continue;
                        G.positionScreen.x *= D, G.positionScreen.y *= E, H.positionScreen.x *= D, H.positionScreen.y *= E, I.positionScreen.x *= D, I.positionScreen.y *= E, J.positionScreen.x *= D, J.positionScreen.y *= E, zb.positionScreen.copy(H.positionScreen), Ab.positionScreen.copy(J.positionScreen), k.overdraw > 0 && (o(G.positionScreen, H.positionScreen, k.overdraw), o(H.positionScreen, J.positionScreen, k.overdraw), o(J.positionScreen, G.positionScreen, k.overdraw), o(I.positionScreen, zb.positionScreen, k.overdraw), o(I.positionScreen, Ab.positionScreen, k.overdraw)), Nb.setFromPoints([G.positionScreen, H.positionScreen, I.positionScreen, J.positionScreen]), Lb.isIntersectionBox(Nb) === !0 && g(G, H, I, J, zb, Ab, j, k)
                    }
                    Mb.union(Nb)
                }
            }
            nb.setTransform(1, 0, 0, 1, 0, 0)
        }
    }, THREE.ShaderChunk = {
        fog_pars_fragment: ["#ifdef USE_FOG", "uniform vec3 fogColor;", "#ifdef FOG_EXP2", "uniform float fogDensity;", "#else", "uniform float fogNear;", "uniform float fogFar;", "#endif", "#endif"].join("\n"),
        fog_fragment: ["#ifdef USE_FOG", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "#ifdef FOG_EXP2", "const float LOG2 = 1.442695;", "float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "#else", "float fogFactor = smoothstep( fogNear, fogFar, depth );", "#endif", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "#endif"].join("\n"),
        envmap_pars_fragment: ["#ifdef USE_ENVMAP", "uniform float reflectivity;", "uniform samplerCube envMap;", "uniform float flipEnvMap;", "uniform int combine;", "#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )", "uniform bool useRefract;", "uniform float refractionRatio;", "#else", "varying vec3 vReflect;", "#endif", "#endif"].join("\n"),
        envmap_fragment: ["#ifdef USE_ENVMAP", "vec3 reflectVec;", "#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )", "vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );", "if ( useRefract ) {", "reflectVec = refract( cameraToVertex, normal, refractionRatio );", "} else { ", "reflectVec = reflect( cameraToVertex, normal );", "}", "#else", "reflectVec = vReflect;", "#endif", "#ifdef DOUBLE_SIDED", "float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );", "vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );", "#else", "vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );", "#endif", "#ifdef GAMMA_INPUT", "cubeColor.xyz *= cubeColor.xyz;", "#endif", "if ( combine == 1 ) {", "gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );", "} else if ( combine == 2 ) {", "gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;", "} else {", "gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );", "}", "#endif"].join("\n"),
        envmap_pars_vertex: ["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )", "varying vec3 vReflect;", "uniform float refractionRatio;", "uniform bool useRefract;", "#endif"].join("\n"),
        worldpos_vertex: ["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )", "#ifdef USE_SKINNING", "vec4 worldPosition = modelMatrix * skinned;", "#endif", "#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )", "vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );", "#endif", "#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )", "vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", "#endif", "#endif"].join("\n"),
        envmap_vertex: ["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )", "vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;", "worldNormal = normalize( worldNormal );", "vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );", "if ( useRefract ) {", "vReflect = refract( cameraToVertex, worldNormal, refractionRatio );", "} else {", "vReflect = reflect( cameraToVertex, worldNormal );", "}", "#endif"].join("\n"),
        map_particle_pars_fragment: ["#ifdef USE_MAP", "uniform sampler2D map;", "#endif"].join("\n"),
        map_particle_fragment: ["#ifdef USE_MAP", "gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );", "#endif"].join("\n"),
        map_pars_vertex: ["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )", "varying vec2 vUv;", "uniform vec4 offsetRepeat;", "#endif"].join("\n"),
        map_pars_fragment: ["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )", "varying vec2 vUv;", "#endif", "#ifdef USE_MAP", "uniform sampler2D map;", "#endif"].join("\n"),
        map_vertex: ["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )", "vUv = uv * offsetRepeat.zw + offsetRepeat.xy;", "#endif"].join("\n"),
        map_fragment: ["#ifdef USE_MAP", "vec4 texelColor = texture2D( map, vUv );", "#ifdef GAMMA_INPUT", "texelColor.xyz *= texelColor.xyz;", "#endif", "gl_FragColor = gl_FragColor * texelColor;", "#endif"].join("\n"),
        lightmap_pars_fragment: ["#ifdef USE_LIGHTMAP", "varying vec2 vUv2;", "uniform sampler2D lightMap;", "#endif"].join("\n"),
        lightmap_pars_vertex: ["#ifdef USE_LIGHTMAP", "varying vec2 vUv2;", "#endif"].join("\n"),
        lightmap_fragment: ["#ifdef USE_LIGHTMAP", "gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );", "#endif"].join("\n"),
        lightmap_vertex: ["#ifdef USE_LIGHTMAP", "vUv2 = uv2;", "#endif"].join("\n"),
        bumpmap_pars_fragment: ["#ifdef USE_BUMPMAP", "uniform sampler2D bumpMap;", "uniform float bumpScale;", "vec2 dHdxy_fwd() {", "vec2 dSTdx = dFdx( vUv );", "vec2 dSTdy = dFdy( vUv );", "float Hll = bumpScale * texture2D( bumpMap, vUv ).x;", "float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;", "float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;", "return vec2( dBx, dBy );", "}", "vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {", "vec3 vSigmaX = dFdx( surf_pos );", "vec3 vSigmaY = dFdy( surf_pos );", "vec3 vN = surf_norm;", "vec3 R1 = cross( vSigmaY, vN );", "vec3 R2 = cross( vN, vSigmaX );", "float fDet = dot( vSigmaX, R1 );", "vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );", "return normalize( abs( fDet ) * surf_norm - vGrad );", "}", "#endif"].join("\n"),
        normalmap_pars_fragment: ["#ifdef USE_NORMALMAP", "uniform sampler2D normalMap;", "uniform vec2 normalScale;", "vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {", "vec3 q0 = dFdx( eye_pos.xyz );", "vec3 q1 = dFdy( eye_pos.xyz );", "vec2 st0 = dFdx( vUv.st );", "vec2 st1 = dFdy( vUv.st );", "vec3 S = normalize(  q0 * st1.t - q1 * st0.t );", "vec3 T = normalize( -q0 * st1.s + q1 * st0.s );", "vec3 N = normalize( surf_norm );", "vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;", "mapN.xy = normalScale * mapN.xy;", "mat3 tsn = mat3( S, T, N );", "return normalize( tsn * mapN );", "}", "#endif"].join("\n"),
        specularmap_pars_fragment: ["#ifdef USE_SPECULARMAP", "uniform sampler2D specularMap;", "#endif"].join("\n"),
        specularmap_fragment: ["float specularStrength;", "#ifdef USE_SPECULARMAP", "vec4 texelSpecular = texture2D( specularMap, vUv );", "specularStrength = texelSpecular.r;", "#else", "specularStrength = 1.0;", "#endif"].join("\n"),
        lights_lambert_pars_vertex: ["uniform vec3 ambient;", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform vec3 ambientLightColor;", "#if MAX_DIR_LIGHTS > 0", "uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];", "uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];", "#endif", "#if MAX_HEMI_LIGHTS > 0", "uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];", "uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];", "uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];", "#endif", "#if MAX_POINT_LIGHTS > 0", "uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];", "uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", "uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0", "uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];", "uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", "uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];", "uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", "uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];", "uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];", "#endif", "#ifdef WRAP_AROUND", "uniform vec3 wrapRGB;", "#endif"].join("\n"),
        lights_lambert_vertex: ["vLightFront = vec3( 0.0 );", "#ifdef DOUBLE_SIDED", "vLightBack = vec3( 0.0 );", "#endif", "transformedNormal = normalize( transformedNormal );", "#if MAX_DIR_LIGHTS > 0", "for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {", "vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );", "vec3 dirVector = normalize( lDirection.xyz );", "float dotProduct = dot( transformedNormal, dirVector );", "vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );", "#ifdef DOUBLE_SIDED", "vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );", "#ifdef WRAP_AROUND", "vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );", "#endif", "#endif", "#ifdef WRAP_AROUND", "vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );", "directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );", "#ifdef DOUBLE_SIDED", "directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );", "#endif", "#endif", "vLightFront += directionalLightColor[ i ] * directionalLightWeighting;", "#ifdef DOUBLE_SIDED", "vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;", "#endif", "}", "#endif", "#if MAX_POINT_LIGHTS > 0", "for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "vec3 lVector = lPosition.xyz - mvPosition.xyz;", "float lDistance = 1.0;", "if ( pointLightDistance[ i ] > 0.0 )", "lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );", "lVector = normalize( lVector );", "float dotProduct = dot( transformedNormal, lVector );", "vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );", "#ifdef DOUBLE_SIDED", "vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );", "#ifdef WRAP_AROUND", "vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );", "#endif", "#endif", "#ifdef WRAP_AROUND", "vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );", "pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );", "#ifdef DOUBLE_SIDED", "pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );", "#endif", "#endif", "vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;", "#ifdef DOUBLE_SIDED", "vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;", "#endif", "}", "#endif", "#if MAX_SPOT_LIGHTS > 0", "for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "vec3 lVector = lPosition.xyz - mvPosition.xyz;", "float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );", "if ( spotEffect > spotLightAngleCos[ i ] ) {", "spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );", "float lDistance = 1.0;", "if ( spotLightDistance[ i ] > 0.0 )", "lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );", "lVector = normalize( lVector );", "float dotProduct = dot( transformedNormal, lVector );", "vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );", "#ifdef DOUBLE_SIDED", "vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );", "#ifdef WRAP_AROUND", "vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );", "#endif", "#endif", "#ifdef WRAP_AROUND", "vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );", "spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );", "#ifdef DOUBLE_SIDED", "spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );", "#endif", "#endif", "vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;", "#ifdef DOUBLE_SIDED", "vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;", "#endif", "}", "}", "#endif", "#if MAX_HEMI_LIGHTS > 0", "for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {", "vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );", "vec3 lVector = normalize( lDirection.xyz );", "float dotProduct = dot( transformedNormal, lVector );", "float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;", "float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;", "vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );", "#ifdef DOUBLE_SIDED", "vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );", "#endif", "}", "#endif", "vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;", "#ifdef DOUBLE_SIDED", "vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;", "#endif"].join("\n"),
        lights_phong_pars_vertex: ["#ifndef PHONG_PER_PIXEL", "#if MAX_POINT_LIGHTS > 0", "uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", "uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "varying vec4 vPointLight[ MAX_POINT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0", "uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", "uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", "varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];", "#endif", "#endif", "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )", "varying vec3 vWorldPosition;", "#endif"].join("\n"),
        lights_phong_vertex: ["#ifndef PHONG_PER_PIXEL", "#if MAX_POINT_LIGHTS > 0", "for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "vec3 lVector = lPosition.xyz - mvPosition.xyz;", "float lDistance = 1.0;", "if ( pointLightDistance[ i ] > 0.0 )", "lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );", "vPointLight[ i ] = vec4( lVector, lDistance );", "}", "#endif", "#if MAX_SPOT_LIGHTS > 0", "for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "vec3 lVector = lPosition.xyz - mvPosition.xyz;", "float lDistance = 1.0;", "if ( spotLightDistance[ i ] > 0.0 )", "lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );", "vSpotLight[ i ] = vec4( lVector, lDistance );", "}", "#endif", "#endif", "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )", "vWorldPosition = worldPosition.xyz;", "#endif"].join("\n"),
        lights_phong_pars_fragment: ["uniform vec3 ambientLightColor;", "#if MAX_DIR_LIGHTS > 0", "uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];", "uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];", "#endif", "#if MAX_HEMI_LIGHTS > 0", "uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];", "uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];", "uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];", "#endif", "#if MAX_POINT_LIGHTS > 0", "uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];", "#ifdef PHONG_PER_PIXEL", "uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", "uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "#else", "varying vec4 vPointLight[ MAX_POINT_LIGHTS ];", "#endif", "#endif", "#if MAX_SPOT_LIGHTS > 0", "uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];", "uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", "uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];", "uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];", "uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];", "#ifdef PHONG_PER_PIXEL", "uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", "#else", "varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];", "#endif", "#endif", "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )", "varying vec3 vWorldPosition;", "#endif", "#ifdef WRAP_AROUND", "uniform vec3 wrapRGB;", "#endif", "varying vec3 vViewPosition;", "varying vec3 vNormal;"].join("\n"),
        lights_phong_fragment: ["vec3 normal = normalize( vNormal );", "vec3 viewPosition = normalize( vViewPosition );", "#ifdef DOUBLE_SIDED", "normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );", "#endif", "#ifdef USE_NORMALMAP", "normal = perturbNormal2Arb( -vViewPosition, normal );", "#elif defined( USE_BUMPMAP )", "normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );", "#endif", "#if MAX_POINT_LIGHTS > 0", "vec3 pointDiffuse  = vec3( 0.0 );", "vec3 pointSpecular = vec3( 0.0 );", "for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "#ifdef PHONG_PER_PIXEL", "vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "vec3 lVector = lPosition.xyz + vViewPosition.xyz;", "float lDistance = 1.0;", "if ( pointLightDistance[ i ] > 0.0 )", "lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );", "lVector = normalize( lVector );", "#else", "vec3 lVector = normalize( vPointLight[ i ].xyz );", "float lDistance = vPointLight[ i ].w;", "#endif", "float dotProduct = dot( normal, lVector );", "#ifdef WRAP_AROUND", "float pointDiffuseWeightFull = max( dotProduct, 0.0 );", "float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );", "vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );", "#else", "float pointDiffuseWeight = max( dotProduct, 0.0 );", "#endif", "pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;", "vec3 pointHalfVector = normalize( lVector + viewPosition );", "float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );", "float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );", "pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;", "#else", "pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;", "#endif", "}", "#endif", "#if MAX_SPOT_LIGHTS > 0", "vec3 spotDiffuse  = vec3( 0.0 );", "vec3 spotSpecular = vec3( 0.0 );", "for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "#ifdef PHONG_PER_PIXEL", "vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "vec3 lVector = lPosition.xyz + vViewPosition.xyz;", "float lDistance = 1.0;", "if ( spotLightDistance[ i ] > 0.0 )", "lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );", "lVector = normalize( lVector );", "#else", "vec3 lVector = normalize( vSpotLight[ i ].xyz );", "float lDistance = vSpotLight[ i ].w;", "#endif", "float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );", "if ( spotEffect > spotLightAngleCos[ i ] ) {", "spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );", "float dotProduct = dot( normal, lVector );", "#ifdef WRAP_AROUND", "float spotDiffuseWeightFull = max( dotProduct, 0.0 );", "float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );", "vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );", "#else", "float spotDiffuseWeight = max( dotProduct, 0.0 );", "#endif", "spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;", "vec3 spotHalfVector = normalize( lVector + viewPosition );", "float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );", "float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );", "spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;", "#else", "spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;", "#endif", "}", "}", "#endif", "#if MAX_DIR_LIGHTS > 0", "vec3 dirDiffuse  = vec3( 0.0 );", "vec3 dirSpecular = vec3( 0.0 );", "for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {", "vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );", "vec3 dirVector = normalize( lDirection.xyz );", "float dotProduct = dot( normal, dirVector );", "#ifdef WRAP_AROUND", "float dirDiffuseWeightFull = max( dotProduct, 0.0 );", "float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );", "vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );", "#else", "float dirDiffuseWeight = max( dotProduct, 0.0 );", "#endif", "dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;", "vec3 dirHalfVector = normalize( dirVector + viewPosition );", "float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );", "float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );", "dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;", "#else", "dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;", "#endif", "}", "#endif", "#if MAX_HEMI_LIGHTS > 0", "vec3 hemiDiffuse  = vec3( 0.0 );", "vec3 hemiSpecular = vec3( 0.0 );", "for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {", "vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );", "vec3 lVector = normalize( lDirection.xyz );", "float dotProduct = dot( normal, lVector );", "float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;", "vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );", "hemiDiffuse += diffuse * hemiColor;", "vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );", "float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;", "float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );", "vec3 lVectorGround = -lVector;", "vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );", "float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;", "float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float dotProductGround = dot( normal, lVectorGround );", "float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );", "vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );", "hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );", "#else", "hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;", "#endif", "}", "#endif", "vec3 totalDiffuse = vec3( 0.0 );", "vec3 totalSpecular = vec3( 0.0 );", "#if MAX_DIR_LIGHTS > 0", "totalDiffuse += dirDiffuse;", "totalSpecular += dirSpecular;", "#endif", "#if MAX_HEMI_LIGHTS > 0", "totalDiffuse += hemiDiffuse;", "totalSpecular += hemiSpecular;", "#endif", "#if MAX_POINT_LIGHTS > 0", "totalDiffuse += pointDiffuse;", "totalSpecular += pointSpecular;", "#endif", "#if MAX_SPOT_LIGHTS > 0", "totalDiffuse += spotDiffuse;", "totalSpecular += spotSpecular;", "#endif", "#ifdef METAL", "gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );", "#else", "gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;", "#endif"].join("\n"),
        color_pars_fragment: ["#ifdef USE_COLOR", "varying vec3 vColor;", "#endif"].join("\n"),
        color_fragment: ["#ifdef USE_COLOR", "gl_FragColor = gl_FragColor * vec4( vColor, opacity );", "#endif"].join("\n"),
        color_pars_vertex: ["#ifdef USE_COLOR", "varying vec3 vColor;", "#endif"].join("\n"),
        color_vertex: ["#ifdef USE_COLOR", "#ifdef GAMMA_INPUT", "vColor = color * color;", "#else", "vColor = color;", "#endif", "#endif"].join("\n"),
        skinning_pars_vertex: ["#ifdef USE_SKINNING", "#ifdef BONE_TEXTURE", "uniform sampler2D boneTexture;", "mat4 getBoneMatrix( const in float i ) {", "float j = i * 4.0;", "float x = mod( j, N_BONE_PIXEL_X );", "float y = floor( j / N_BONE_PIXEL_X );", "const float dx = 1.0 / N_BONE_PIXEL_X;", "const float dy = 1.0 / N_BONE_PIXEL_Y;", "y = dy * ( y + 0.5 );", "vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );", "vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );", "vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );", "vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );", "mat4 bone = mat4( v1, v2, v3, v4 );", "return bone;", "}", "#else", "uniform mat4 boneGlobalMatrices[ MAX_BONES ];", "mat4 getBoneMatrix( const in float i ) {", "mat4 bone = boneGlobalMatrices[ int(i) ];", "return bone;", "}", "#endif", "#endif"].join("\n"),
        skinbase_vertex: ["#ifdef USE_SKINNING", "mat4 boneMatX = getBoneMatrix( skinIndex.x );", "mat4 boneMatY = getBoneMatrix( skinIndex.y );", "#endif"].join("\n"),
        skinning_vertex: ["#ifdef USE_SKINNING", "#ifdef USE_MORPHTARGETS", "vec4 skinVertex = vec4( morphed, 1.0 );", "#else", "vec4 skinVertex = vec4( position, 1.0 );", "#endif", "vec4 skinned  = boneMatX * skinVertex * skinWeight.x;", "skinned 	  += boneMatY * skinVertex * skinWeight.y;", "#endif"].join("\n"),
        morphtarget_pars_vertex: ["#ifdef USE_MORPHTARGETS", "#ifndef USE_MORPHNORMALS", "uniform float morphTargetInfluences[ 8 ];", "#else", "uniform float morphTargetInfluences[ 4 ];", "#endif", "#endif"].join("\n"),
        morphtarget_vertex: ["#ifdef USE_MORPHTARGETS", "vec3 morphed = vec3( 0.0 );", "morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];", "morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];", "morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];", "morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];", "#ifndef USE_MORPHNORMALS", "morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];", "morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];", "morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];", "morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];", "#endif", "morphed += position;", "#endif"].join("\n"),
        default_vertex: ["vec4 mvPosition;", "#ifdef USE_SKINNING", "mvPosition = modelViewMatrix * skinned;", "#endif", "#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )", "mvPosition = modelViewMatrix * vec4( morphed, 1.0 );", "#endif", "#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )", "mvPosition = modelViewMatrix * vec4( position, 1.0 );", "#endif", "gl_Position = projectionMatrix * mvPosition;"].join("\n"),
        morphnormal_vertex: ["#ifdef USE_MORPHNORMALS", "vec3 morphedNormal = vec3( 0.0 );", "morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];", "morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];", "morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];", "morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];", "morphedNormal += normal;", "#endif"].join("\n"),
        skinnormal_vertex: ["#ifdef USE_SKINNING", "mat4 skinMatrix = skinWeight.x * boneMatX;", "skinMatrix 	+= skinWeight.y * boneMatY;", "#ifdef USE_MORPHNORMALS", "vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );", "#else", "vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );", "#endif", "#endif"].join("\n"),
        defaultnormal_vertex: ["vec3 objectNormal;", "#ifdef USE_SKINNING", "objectNormal = skinnedNormal.xyz;", "#endif", "#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )", "objectNormal = morphedNormal;", "#endif", "#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )", "objectNormal = normal;", "#endif", "#ifdef FLIP_SIDED", "objectNormal = -objectNormal;", "#endif", "vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),
        shadowmap_pars_fragment: ["#ifdef USE_SHADOWMAP", "uniform sampler2D shadowMap[ MAX_SHADOWS ];", "uniform vec2 shadowMapSize[ MAX_SHADOWS ];", "uniform float shadowDarkness[ MAX_SHADOWS ];", "uniform float shadowBias[ MAX_SHADOWS ];", "varying vec4 vShadowCoord[ MAX_SHADOWS ];", "float unpackDepth( const in vec4 rgba_depth ) {", "const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );", "float depth = dot( rgba_depth, bit_shift );", "return depth;", "}", "#endif"].join("\n"),
        shadowmap_fragment: ["#ifdef USE_SHADOWMAP", "#ifdef SHADOWMAP_DEBUG", "vec3 frustumColors[3];", "frustumColors[0] = vec3( 1.0, 0.5, 0.0 );", "frustumColors[1] = vec3( 0.0, 1.0, 0.8 );", "frustumColors[2] = vec3( 0.0, 0.5, 1.0 );", "#endif", "#ifdef SHADOWMAP_CASCADE", "int inFrustumCount = 0;", "#endif", "float fDepth;", "vec3 shadowColor = vec3( 1.0 );", "for( int i = 0; i < MAX_SHADOWS; i ++ ) {", "vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;", "bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );", "bool inFrustum = all( inFrustumVec );", "#ifdef SHADOWMAP_CASCADE", "inFrustumCount += int( inFrustum );", "bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );", "#else", "bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );", "#endif", "bool frustumTest = all( frustumTestVec );", "if ( frustumTest ) {", "shadowCoord.z += shadowBias[ i ];", "#if defined( SHADOWMAP_TYPE_PCF )", "float shadow = 0.0;", "const float shadowDelta = 1.0 / 9.0;", "float xPixelOffset = 1.0 / shadowMapSize[ i ].x;", "float yPixelOffset = 1.0 / shadowMapSize[ i ].y;", "float dx0 = -1.25 * xPixelOffset;", "float dy0 = -1.25 * yPixelOffset;", "float dx1 = 1.25 * xPixelOffset;", "float dy1 = 1.25 * yPixelOffset;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );", "if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );", "#elif defined( SHADOWMAP_TYPE_PCF_SOFT )", "float shadow = 0.0;", "float xPixelOffset = 1.0 / shadowMapSize[ i ].x;", "float yPixelOffset = 1.0 / shadowMapSize[ i ].y;", "float dx0 = -1.0 * xPixelOffset;", "float dy0 = -1.0 * yPixelOffset;", "float dx1 = 1.0 * xPixelOffset;", "float dy1 = 1.0 * yPixelOffset;", "mat3 shadowKernel;", "mat3 depthKernel;", "depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );", "depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );", "depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );", "depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );", "depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );", "depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );", "depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );", "depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );", "depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );", "vec3 shadowZ = vec3( shadowCoord.z );", "shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));", "shadowKernel[0] *= vec3(0.25);", "shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));", "shadowKernel[1] *= vec3(0.25);", "shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));", "shadowKernel[2] *= vec3(0.25);", "vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );", "shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );", "shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );", "vec4 shadowValues;", "shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );", "shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );", "shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );", "shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );", "shadow = dot( shadowValues, vec4( 1.0 ) );", "shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );", "#else", "vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );", "float fDepth = unpackDepth( rgbaDepth );", "if ( fDepth < shadowCoord.z )", "shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );", "#endif", "}", "#ifdef SHADOWMAP_DEBUG", "#ifdef SHADOWMAP_CASCADE", "if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];", "#else", "if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];", "#endif", "#endif", "}", "#ifdef GAMMA_OUTPUT", "shadowColor *= shadowColor;", "#endif", "gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;", "#endif"].join("\n"),
        shadowmap_pars_vertex: ["#ifdef USE_SHADOWMAP", "varying vec4 vShadowCoord[ MAX_SHADOWS ];", "uniform mat4 shadowMatrix[ MAX_SHADOWS ];", "#endif"].join("\n"),
        shadowmap_vertex: ["#ifdef USE_SHADOWMAP", "for( int i = 0; i < MAX_SHADOWS; i ++ ) {", "vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;", "}", "#endif"].join("\n"),
        alphatest_fragment: ["#ifdef ALPHATEST", "if ( gl_FragColor.a < ALPHATEST ) discard;", "#endif"].join("\n"),
        linear_to_gamma_fragment: ["#ifdef GAMMA_OUTPUT", "gl_FragColor.xyz = sqrt( gl_FragColor.xyz );", "#endif"].join("\n")
    }, THREE.UniformsUtils = {
        merge: function(a) {
            var b, c, d, e = {};
            for (b = 0; b < a.length; b++) {
                d = this.clone(a[b]);
                for (c in d) e[c] = d[c]
            }
            return e
        },
        clone: function(a) {
            var b, c, d, e = {};
            for (b in a) {
                e[b] = {};
                for (c in a[b]) d = a[b][c], e[b][c] = d instanceof THREE.Color || d instanceof THREE.Vector2 || d instanceof THREE.Vector3 || d instanceof THREE.Vector4 || d instanceof THREE.Matrix4 || d instanceof THREE.Texture ? d.clone() : d instanceof Array ? d.slice() : d
            }
            return e
        }
    }, THREE.UniformsLib = {
        common: {
            diffuse: {
                type: "c",
                value: new THREE.Color(15658734)
            },
            opacity: {
                type: "f",
                value: 1
            },
            map: {
                type: "t",
                value: null
            },
            offsetRepeat: {
                type: "v4",
                value: new THREE.Vector4(0, 0, 1, 1)
            },
            lightMap: {
                type: "t",
                value: null
            },
            specularMap: {
                type: "t",
                value: null
            },
            envMap: {
                type: "t",
                value: null
            },
            flipEnvMap: {
                type: "f",
                value: -1
            },
            useRefract: {
                type: "i",
                value: 0
            },
            reflectivity: {
                type: "f",
                value: 1
            },
            refractionRatio: {
                type: "f",
                value: .98
            },
            combine: {
                type: "i",
                value: 0
            },
            morphTargetInfluences: {
                type: "f",
                value: 0
            }
        },
        bump: {
            bumpMap: {
                type: "t",
                value: null
            },
            bumpScale: {
                type: "f",
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                type: "t",
                value: null
            },
            normalScale: {
                type: "v2",
                value: new THREE.Vector2(1, 1)
            }
        },
        fog: {
            fogDensity: {
                type: "f",
                value: 25e-5
            },
            fogNear: {
                type: "f",
                value: 1
            },
            fogFar: {
                type: "f",
                value: 2e3
            },
            fogColor: {
                type: "c",
                value: new THREE.Color(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                type: "fv",
                value: []
            },
            directionalLightDirection: {
                type: "fv",
                value: []
            },
            directionalLightColor: {
                type: "fv",
                value: []
            },
            hemisphereLightDirection: {
                type: "fv",
                value: []
            },
            hemisphereLightSkyColor: {
                type: "fv",
                value: []
            },
            hemisphereLightGroundColor: {
                type: "fv",
                value: []
            },
            pointLightColor: {
                type: "fv",
                value: []
            },
            pointLightPosition: {
                type: "fv",
                value: []
            },
            pointLightDistance: {
                type: "fv1",
                value: []
            },
            spotLightColor: {
                type: "fv",
                value: []
            },
            spotLightPosition: {
                type: "fv",
                value: []
            },
            spotLightDirection: {
                type: "fv",
                value: []
            },
            spotLightDistance: {
                type: "fv1",
                value: []
            },
            spotLightAngleCos: {
                type: "fv1",
                value: []
            },
            spotLightExponent: {
                type: "fv1",
                value: []
            }
        },
        particle: {
            psColor: {
                type: "c",
                value: new THREE.Color(15658734)
            },
            opacity: {
                type: "f",
                value: 1
            },
            size: {
                type: "f",
                value: 1
            },
            scale: {
                type: "f",
                value: 1
            },
            map: {
                type: "t",
                value: null
            },
            fogDensity: {
                type: "f",
                value: 25e-5
            },
            fogNear: {
                type: "f",
                value: 1
            },
            fogFar: {
                type: "f",
                value: 2e3
            },
            fogColor: {
                type: "c",
                value: new THREE.Color(16777215)
            }
        },
        shadowmap: {
            shadowMap: {
                type: "tv",
                value: []
            },
            shadowMapSize: {
                type: "v2v",
                value: []
            },
            shadowBias: {
                type: "fv1",
                value: []
            },
            shadowDarkness: {
                type: "fv1",
                value: []
            },
            shadowMatrix: {
                type: "m4v",
                value: []
            }
        }
    }, THREE.ShaderLib = {
        basic: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.shadowmap]),
            vertexShader: [THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.skinbase_vertex, "#ifdef USE_ENVMAP", THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "#endif", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, "void main() {", "gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
        },
        lambert: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
                ambient: {
                    type: "c",
                    value: new THREE.Color(16777215)
                },
                emissive: {
                    type: "c",
                    value: new THREE.Color(0)
                },
                wrapRGB: {
                    type: "v3",
                    value: new THREE.Vector3(1, 1, 1)
                }
            }]),
            vertexShader: ["#define LAMBERT", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "varying vec3 vLightBack;", "#endif", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_lambert_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_lambert_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["uniform float opacity;", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "varying vec3 vLightBack;", "#endif", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, "void main() {", "gl_FragColor = vec4( vec3 ( 1.0 ), opacity );", THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, "#ifdef DOUBLE_SIDED", "if ( gl_FrontFacing )", "gl_FragColor.xyz *= vLightFront;", "else", "gl_FragColor.xyz *= vLightBack;", "#else", "gl_FragColor.xyz *= vLightFront;", "#endif", THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
        },
        phong: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.bump, THREE.UniformsLib.normalmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
                ambient: {
                    type: "c",
                    value: new THREE.Color(16777215)
                },
                emissive: {
                    type: "c",
                    value: new THREE.Color(0)
                },
                specular: {
                    type: "c",
                    value: new THREE.Color(1118481)
                },
                shininess: {
                    type: "f",
                    value: 30
                },
                wrapRGB: {
                    type: "v3",
                    value: new THREE.Vector3(1, 1, 1)
                }
            }]),
            vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "varying vec3 vNormal;", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_phong_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "vNormal = normalize( transformedNormal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, "vViewPosition = -mvPosition.xyz;", THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_phong_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform vec3 ambient;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.lights_phong_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.bumpmap_pars_fragment, THREE.ShaderChunk.normalmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, "void main() {", "gl_FragColor = vec4( vec3 ( 1.0 ), opacity );", THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lights_phong_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
        },
        particle_basic: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.particle, THREE.UniformsLib.shadowmap]),
            vertexShader: ["uniform float size;", "uniform float scale;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "#ifdef USE_SIZEATTENUATION", "gl_PointSize = size * ( scale / length( mvPosition.xyz ) );", "#else", "gl_PointSize = size;", "#endif", "gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["uniform vec3 psColor;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_particle_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, "void main() {", "gl_FragColor = vec4( psColor, opacity );", THREE.ShaderChunk.map_particle_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
        },
        dashed: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, {
                scale: {
                    type: "f",
                    value: 1
                },
                dashSize: {
                    type: "f",
                    value: 1
                },
                totalSize: {
                    type: "f",
                    value: 2
                }
            }]),
            vertexShader: ["uniform float scale;", "attribute float lineDistance;", "varying float vLineDistance;", THREE.ShaderChunk.color_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "vLineDistance = scale * lineDistance;", "vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "gl_Position = projectionMatrix * mvPosition;", "}"].join("\n"),
            fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform float dashSize;", "uniform float totalSize;", "varying float vLineDistance;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, "void main() {", "if ( mod( vLineDistance, totalSize ) > dashSize ) {", "discard;", "}", "gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
        },
        depth: {
            uniforms: {
                mNear: {
                    type: "f",
                    value: 1
                },
                mFar: {
                    type: "f",
                    value: 2e3
                },
                opacity: {
                    type: "f",
                    value: 1
                }
            },
            vertexShader: ["void main() {", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform float mNear;", "uniform float mFar;", "uniform float opacity;", "void main() {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float color = 1.0 - smoothstep( mNear, mFar, depth );", "gl_FragColor = vec4( vec3( color ), opacity );", "}"].join("\n")
        },
        normal: {
            uniforms: {
                opacity: {
                    type: "f",
                    value: 1
                }
            },
            vertexShader: ["varying vec3 vNormal;", THREE.ShaderChunk.morphtarget_pars_vertex, "void main() {", "vNormal = normalize( normalMatrix * normal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, "}"].join("\n"),
            fragmentShader: ["uniform float opacity;", "varying vec3 vNormal;", "void main() {", "gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", "}"].join("\n")
        },
        normalmap: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
                enableAO: {
                    type: "i",
                    value: 0
                },
                enableDiffuse: {
                    type: "i",
                    value: 0
                },
                enableSpecular: {
                    type: "i",
                    value: 0
                },
                enableReflection: {
                    type: "i",
                    value: 0
                },
                enableDisplacement: {
                    type: "i",
                    value: 0
                },
                tDisplacement: {
                    type: "t",
                    value: null
                },
                tDiffuse: {
                    type: "t",
                    value: null
                },
                tCube: {
                    type: "t",
                    value: null
                },
                tNormal: {
                    type: "t",
                    value: null
                },
                tSpecular: {
                    type: "t",
                    value: null
                },
                tAO: {
                    type: "t",
                    value: null
                },
                uNormalScale: {
                    type: "v2",
                    value: new THREE.Vector2(1, 1)
                },
                uDisplacementBias: {
                    type: "f",
                    value: 0
                },
                uDisplacementScale: {
                    type: "f",
                    value: 1
                },
                uDiffuseColor: {
                    type: "c",
                    value: new THREE.Color(16777215)
                },
                uSpecularColor: {
                    type: "c",
                    value: new THREE.Color(1118481)
                },
                uAmbientColor: {
                    type: "c",
                    value: new THREE.Color(16777215)
                },
                uShininess: {
                    type: "f",
                    value: 30
                },
                uOpacity: {
                    type: "f",
                    value: 1
                },
                useRefract: {
                    type: "i",
                    value: 0
                },
                uRefractionRatio: {
                    type: "f",
                    value: .98
                },
                uReflectivity: {
                    type: "f",
                    value: .5
                },
                uOffset: {
                    type: "v2",
                    value: new THREE.Vector2(0, 0)
                },
                uRepeat: {
                    type: "v2",
                    value: new THREE.Vector2(1, 1)
                },
                wrapRGB: {
                    type: "v3",
                    value: new THREE.Vector3(1, 1, 1)
                }
            }]),
            fragmentShader: ["uniform vec3 uAmbientColor;", "uniform vec3 uDiffuseColor;", "uniform vec3 uSpecularColor;", "uniform float uShininess;", "uniform float uOpacity;", "uniform bool enableDiffuse;", "uniform bool enableSpecular;", "uniform bool enableAO;", "uniform bool enableReflection;", "uniform sampler2D tDiffuse;", "uniform sampler2D tNormal;", "uniform sampler2D tSpecular;", "uniform sampler2D tAO;", "uniform samplerCube tCube;", "uniform vec2 uNormalScale;", "uniform bool useRefract;", "uniform float uRefractionRatio;", "uniform float uReflectivity;", "varying vec3 vTangent;", "varying vec3 vBinormal;", "varying vec3 vNormal;", "varying vec2 vUv;", "uniform vec3 ambientLightColor;", "#if MAX_DIR_LIGHTS > 0", "uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];", "uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];", "#endif", "#if MAX_HEMI_LIGHTS > 0", "uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];", "uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];", "uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];", "#endif", "#if MAX_POINT_LIGHTS > 0", "uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];", "uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", "uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0", "uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];", "uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", "uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];", "uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];", "uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];", "uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", "#endif", "#ifdef WRAP_AROUND", "uniform vec3 wrapRGB;", "#endif", "varying vec3 vWorldPosition;", "varying vec3 vViewPosition;", THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, "void main() {", "gl_FragColor = vec4( vec3( 1.0 ), uOpacity );", "vec3 specularTex = vec3( 1.0 );", "vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;", "normalTex.xy *= uNormalScale;", "normalTex = normalize( normalTex );", "if( enableDiffuse ) {", "#ifdef GAMMA_INPUT", "vec4 texelColor = texture2D( tDiffuse, vUv );", "texelColor.xyz *= texelColor.xyz;", "gl_FragColor = gl_FragColor * texelColor;", "#else", "gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );", "#endif", "}", "if( enableAO ) {", "#ifdef GAMMA_INPUT", "vec4 aoColor = texture2D( tAO, vUv );", "aoColor.xyz *= aoColor.xyz;", "gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;", "#else", "gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;", "#endif", "}", "if( enableSpecular )", "specularTex = texture2D( tSpecular, vUv ).xyz;", "mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );", "vec3 finalNormal = tsb * normalTex;", "#ifdef FLIP_SIDED", "finalNormal = -finalNormal;", "#endif", "vec3 normal = normalize( finalNormal );", "vec3 viewPosition = normalize( vViewPosition );", "#if MAX_POINT_LIGHTS > 0", "vec3 pointDiffuse = vec3( 0.0 );", "vec3 pointSpecular = vec3( 0.0 );", "for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "vec3 pointVector = lPosition.xyz + vViewPosition.xyz;", "float pointDistance = 1.0;", "if ( pointLightDistance[ i ] > 0.0 )", "pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );", "pointVector = normalize( pointVector );", "#ifdef WRAP_AROUND", "float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );", "float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );", "vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );", "#else", "float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );", "#endif", "pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;", "vec3 pointHalfVector = normalize( pointVector + viewPosition );", "float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );", "float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float specularNormalization = ( uShininess + 2.0001 ) / 8.0;", "vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );", "pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;", "#else", "pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;", "#endif", "}", "#endif", "#if MAX_SPOT_LIGHTS > 0", "vec3 spotDiffuse = vec3( 0.0 );", "vec3 spotSpecular = vec3( 0.0 );", "for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "vec3 spotVector = lPosition.xyz + vViewPosition.xyz;", "float spotDistance = 1.0;", "if ( spotLightDistance[ i ] > 0.0 )", "spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );", "spotVector = normalize( spotVector );", "float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );", "if ( spotEffect > spotLightAngleCos[ i ] ) {", "spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );", "#ifdef WRAP_AROUND", "float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );", "float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );", "vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );", "#else", "float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );", "#endif", "spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;", "vec3 spotHalfVector = normalize( spotVector + viewPosition );", "float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );", "float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float specularNormalization = ( uShininess + 2.0001 ) / 8.0;", "vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );", "spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;", "#else", "spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;", "#endif", "}", "}", "#endif", "#if MAX_DIR_LIGHTS > 0", "vec3 dirDiffuse = vec3( 0.0 );", "vec3 dirSpecular = vec3( 0.0 );", "for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {", "vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );", "vec3 dirVector = normalize( lDirection.xyz );", "#ifdef WRAP_AROUND", "float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );", "float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );", "vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );", "#else", "float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );", "#endif", "dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;", "vec3 dirHalfVector = normalize( dirVector + viewPosition );", "float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );", "float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float specularNormalization = ( uShininess + 2.0001 ) / 8.0;", "vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );", "dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;", "#else", "dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;", "#endif", "}", "#endif", "#if MAX_HEMI_LIGHTS > 0", "vec3 hemiDiffuse  = vec3( 0.0 );", "vec3 hemiSpecular = vec3( 0.0 );", "for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {", "vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );", "vec3 lVector = normalize( lDirection.xyz );", "float dotProduct = dot( normal, lVector );", "float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;", "vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );", "hemiDiffuse += uDiffuseColor * hemiColor;", "vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );", "float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;", "float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );", "vec3 lVectorGround = -lVector;", "vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );", "float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;", "float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );", "#ifdef PHYSICALLY_BASED_SHADING", "float dotProductGround = dot( normal, lVectorGround );", "float specularNormalization = ( uShininess + 2.0001 ) / 8.0;", "vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );", "vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );", "hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );", "#else", "hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;", "#endif", "}", "#endif", "vec3 totalDiffuse = vec3( 0.0 );", "vec3 totalSpecular = vec3( 0.0 );", "#if MAX_DIR_LIGHTS > 0", "totalDiffuse += dirDiffuse;", "totalSpecular += dirSpecular;", "#endif", "#if MAX_HEMI_LIGHTS > 0", "totalDiffuse += hemiDiffuse;", "totalSpecular += hemiSpecular;", "#endif", "#if MAX_POINT_LIGHTS > 0", "totalDiffuse += pointDiffuse;", "totalSpecular += pointSpecular;", "#endif", "#if MAX_SPOT_LIGHTS > 0", "totalDiffuse += spotDiffuse;", "totalSpecular += spotSpecular;", "#endif", "#ifdef METAL", "gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );", "#else", "gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;", "#endif", "if ( enableReflection ) {", "vec3 vReflect;", "vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );", "if ( useRefract ) {", "vReflect = refract( cameraToVertex, normal, uRefractionRatio );", "} else {", "vReflect = reflect( cameraToVertex, normal );", "}", "vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );", "#ifdef GAMMA_INPUT", "cubeColor.xyz *= cubeColor.xyz;", "#endif", "gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );", "}", THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n"),
            vertexShader: ["attribute vec4 tangent;", "uniform vec2 uOffset;", "uniform vec2 uRepeat;", "uniform bool enableDisplacement;", "#ifdef VERTEX_TEXTURES", "uniform sampler2D tDisplacement;", "uniform float uDisplacementScale;", "uniform float uDisplacementBias;", "#endif", "varying vec3 vTangent;", "varying vec3 vBinormal;", "varying vec3 vNormal;", "varying vec2 vUv;", "varying vec3 vWorldPosition;", "varying vec3 vViewPosition;", THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, "#ifdef USE_SKINNING", "vNormal = normalize( normalMatrix * skinnedNormal.xyz );", "vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );", "vTangent = normalize( normalMatrix * skinnedTangent.xyz );", "#else", "vNormal = normalize( normalMatrix * normal );", "vTangent = normalize( normalMatrix * tangent.xyz );", "#endif", "vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );", "vUv = uv * uRepeat + uOffset;", "vec3 displacedPosition;", "#ifdef VERTEX_TEXTURES", "if ( enableDisplacement ) {", "vec3 dv = texture2D( tDisplacement, uv ).xyz;", "float df = uDisplacementScale * dv.x + uDisplacementBias;", "displacedPosition = position + normalize( normal ) * df;", "} else {", "#ifdef USE_SKINNING", "vec4 skinVertex = vec4( position, 1.0 );", "vec4 skinned  = boneMatX * skinVertex * skinWeight.x;", "skinned 	  += boneMatY * skinVertex * skinWeight.y;", "displacedPosition  = skinned.xyz;", "#else", "displacedPosition = position;", "#endif", "}", "#else", "#ifdef USE_SKINNING", "vec4 skinVertex = vec4( position, 1.0 );", "vec4 skinned  = boneMatX * skinVertex * skinWeight.x;", "skinned 	  += boneMatY * skinVertex * skinWeight.y;", "displacedPosition  = skinned.xyz;", "#else", "displacedPosition = position;", "#endif", "#endif", "vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );", "vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );", "gl_Position = projectionMatrix * mvPosition;", "vWorldPosition = worldPosition.xyz;", "vViewPosition = -mvPosition.xyz;", "#ifdef USE_SHADOWMAP", "for( int i = 0; i < MAX_SHADOWS; i ++ ) {", "vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;", "}", "#endif", "}"].join("\n")
        },
        cube: {
            uniforms: {
                tCube: {
                    type: "t",
                    value: null
                },
                tFlip: {
                    type: "f",
                    value: -1
                }
            },
            vertexShader: ["varying vec3 vWorldPosition;", "void main() {", "vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", "vWorldPosition = worldPosition.xyz;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform samplerCube tCube;", "uniform float tFlip;", "varying vec3 vWorldPosition;", "void main() {", "gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", "}"].join("\n")
        },
        depthRGBA: {
            uniforms: {},
            vertexShader: [THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, "}"].join("\n"),
            fragmentShader: ["vec4 pack_depth( const in float depth ) {", "const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "vec4 res = fract( depth * bit_shift );", "res -= res.xxyz * bit_mask;", "return res;", "}", "void main() {", "gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );", "}"].join("\n")
        }
    }, THREE.WebGLRenderer = function(a) {
        function b(a) {
            a.__webglVertexBuffer = Mb.createBuffer(), a.__webglColorBuffer = Mb.createBuffer(), Sb.info.memory.geometries++
        }

        function c(a) {
            a.__webglVertexBuffer = Mb.createBuffer(), a.__webglColorBuffer = Mb.createBuffer(), a.__webglLineDistanceBuffer = Mb.createBuffer(), Sb.info.memory.geometries++
        }

        function d(a) {
            a.__webglVertexBuffer = Mb.createBuffer(), a.__webglColorBuffer = Mb.createBuffer(), a.__webglNormalBuffer = Mb.createBuffer(), Sb.info.memory.geometries++
        }

        function e(a) {
            a.__webglVertexBuffer = Mb.createBuffer(), a.__webglNormalBuffer = Mb.createBuffer(), a.__webglTangentBuffer = Mb.createBuffer(), a.__webglColorBuffer = Mb.createBuffer(), a.__webglUVBuffer = Mb.createBuffer(), a.__webglUV2Buffer = Mb.createBuffer(), a.__webglSkinIndicesBuffer = Mb.createBuffer(), a.__webglSkinWeightsBuffer = Mb.createBuffer(), a.__webglFaceBuffer = Mb.createBuffer(), a.__webglLineBuffer = Mb.createBuffer();
            var b, c;
            if (a.numMorphTargets)
                for (a.__webglMorphTargetsBuffers = [], b = 0, c = a.numMorphTargets; c > b; b++) a.__webglMorphTargetsBuffers.push(Mb.createBuffer());
            if (a.numMorphNormals)
                for (a.__webglMorphNormalsBuffers = [], b = 0, c = a.numMorphNormals; c > b; b++) a.__webglMorphNormalsBuffers.push(Mb.createBuffer());
            Sb.info.memory.geometries++
        }

        function f(a) {
            if (a.__webglCustomAttributesList)
                for (var b in a.__webglCustomAttributesList) Mb.deleteBuffer(a.__webglCustomAttributesList[b].buffer)
        }

        function g(a, b) {
            var c = a.vertices.length,
                d = b.material;
            if (d.attributes) {
                void 0 === a.__webglCustomAttributesList && (a.__webglCustomAttributesList = []);
                for (var e in d.attributes) {
                    var f = d.attributes[e];
                    if (!f.__webglInitialized || f.createUniqueBuffers) {
                        f.__webglInitialized = !0;
                        var g = 1;
                        "v2" === f.type ? g = 2 : "v3" === f.type ? g = 3 : "v4" === f.type ? g = 4 : "c" === f.type && (g = 3), f.size = g, f.array = new Float32Array(c * g), f.buffer = Mb.createBuffer(), f.buffer.belongsToAttribute = e, f.needsUpdate = !0
                    }
                    a.__webglCustomAttributesList.push(f)
                }
            }
        }

        function h(a, b) {
            var c = a.vertices.length;
            a.__vertexArray = new Float32Array(3 * c), a.__colorArray = new Float32Array(3 * c), a.__sortArray = [], a.__webglParticleCount = c, g(a, b)
        }

        function i(a, b) {
            var c = a.vertices.length;
            a.__vertexArray = new Float32Array(3 * c), a.__colorArray = new Float32Array(3 * c), a.__lineDistanceArray = new Float32Array(1 * c), a.__webglLineCount = c, g(a, b)
        }

        function j(a, b) {
            var c = a.vertices.length;
            a.__vertexArray = new Float32Array(3 * c), a.__colorArray = new Float32Array(3 * c), a.__normalArray = new Float32Array(3 * c), a.__webglVertexCount = c, g(a, b)
        }

        function k(a, b) {
            var c = b.geometry,
                d = a.faces3,
                e = a.faces4,
                f = 3 * d.length + 4 * e.length,
                g = 1 * d.length + 2 * e.length,
                h = 3 * d.length + 4 * e.length,
                i = l(b, a),
                j = p(i),
                k = n(i),
                m = o(i);
            a.__vertexArray = new Float32Array(3 * f), k && (a.__normalArray = new Float32Array(3 * f)), c.hasTangents && (a.__tangentArray = new Float32Array(4 * f)), m && (a.__colorArray = new Float32Array(3 * f)), j && ((c.faceUvs.length > 0 || c.faceVertexUvs.length > 0) && (a.__uvArray = new Float32Array(2 * f)), (c.faceUvs.length > 1 || c.faceVertexUvs.length > 1) && (a.__uv2Array = new Float32Array(2 * f))), b.geometry.skinWeights.length && b.geometry.skinIndices.length && (a.__skinIndexArray = new Float32Array(4 * f), a.__skinWeightArray = new Float32Array(4 * f)), a.__faceArray = new Uint16Array(3 * g), a.__lineArray = new Uint16Array(2 * h);
            var q, r;
            if (a.numMorphTargets)
                for (a.__morphTargetsArrays = [], q = 0, r = a.numMorphTargets; r > q; q++) a.__morphTargetsArrays.push(new Float32Array(3 * f));
            if (a.numMorphNormals)
                for (a.__morphNormalsArrays = [], q = 0, r = a.numMorphNormals; r > q; q++) a.__morphNormalsArrays.push(new Float32Array(3 * f));
            if (a.__webglFaceCount = 3 * g, a.__webglLineCount = 2 * h, i.attributes) {
                void 0 === a.__webglCustomAttributesList && (a.__webglCustomAttributesList = []);
                for (var s in i.attributes) {
                    var t = i.attributes[s],
                        u = {};
                    for (var v in t) u[v] = t[v];
                    if (!u.__webglInitialized || u.createUniqueBuffers) {
                        u.__webglInitialized = !0;
                        var w = 1;
                        "v2" === u.type ? w = 2 : "v3" === u.type ? w = 3 : "v4" === u.type ? w = 4 : "c" === u.type && (w = 3), u.size = w, u.array = new Float32Array(f * w), u.buffer = Mb.createBuffer(), u.buffer.belongsToAttribute = s, t.needsUpdate = !0, u.__original = t
                    }
                    a.__webglCustomAttributesList.push(u)
                }
            }
            a.__inittedArrays = !0
        }

        function l(a, b) {
            return a.material instanceof THREE.MeshFaceMaterial ? a.material.materials[b.materialIndex] : a.material
        }

        function m(a) {
            return a && void 0 !== a.shading && a.shading === THREE.SmoothShading
        }

        function n(a) {
            return a instanceof THREE.MeshBasicMaterial && !a.envMap || a instanceof THREE.MeshDepthMaterial ? !1 : m(a) ? THREE.SmoothShading : THREE.FlatShading
        }

        function o(a) {
            return a.vertexColors ? a.vertexColors : !1
        }

        function p(a) {
            return a.map || a.lightMap || a.bumpMap || a.normalMap || a.specularMap || a instanceof THREE.ShaderMaterial ? !0 : !1
        }

        function q(a) {
            var b, c, d;
            for (b in a.attributes) d = "index" === b ? Mb.ELEMENT_ARRAY_BUFFER : Mb.ARRAY_BUFFER, c = a.attributes[b], void 0 === c.numItems && (c.numItems = c.array.length), c.buffer = Mb.createBuffer(), Mb.bindBuffer(d, c.buffer), Mb.bufferData(d, c.array, Mb.STATIC_DRAW)
        }

        function r(a, b, c) {
            var d, e, f, g, h, i, j, k, l, m, n, o, p = a.vertices,
                q = p.length,
                r = a.colors,
                s = r.length,
                t = a.__vertexArray,
                u = a.__colorArray,
                v = a.__sortArray,
                w = a.verticesNeedUpdate,
                x = (a.elementsNeedUpdate, a.colorsNeedUpdate),
                y = a.__webglCustomAttributesList;
            if (c.sortParticles) {
                for (vc.copy(uc), vc.multiply(c.matrixWorld), d = 0; q > d; d++) f = p[d], wc.copy(f), wc.applyProjection(vc), v[d] = [wc.z, d];
                for (v.sort(A), d = 0; q > d; d++) f = p[v[d][1]], g = 3 * d, t[g] = f.x, t[g + 1] = f.y, t[g + 2] = f.z;
                for (e = 0; s > e; e++) g = 3 * e, i = r[v[e][1]], u[g] = i.r, u[g + 1] = i.g, u[g + 2] = i.b;
                if (y)
                    for (j = 0, k = y.length; k > j; j++)
                        if (o = y[j], void 0 === o.boundTo || "vertices" === o.boundTo)
                            if (g = 0, m = o.value.length, 1 === o.size)
                                for (l = 0; m > l; l++) h = v[l][1], o.array[l] = o.value[h];
                            else if (2 === o.size)
                    for (l = 0; m > l; l++) h = v[l][1], n = o.value[h], o.array[g] = n.x, o.array[g + 1] = n.y, g += 2;
                else if (3 === o.size)
                    if ("c" === o.type)
                        for (l = 0; m > l; l++) h = v[l][1], n = o.value[h], o.array[g] = n.r, o.array[g + 1] = n.g, o.array[g + 2] = n.b, g += 3;
                    else
                        for (l = 0; m > l; l++) h = v[l][1], n = o.value[h], o.array[g] = n.x, o.array[g + 1] = n.y, o.array[g + 2] = n.z, g += 3;
                else if (4 === o.size)
                    for (l = 0; m > l; l++) h = v[l][1], n = o.value[h], o.array[g] = n.x, o.array[g + 1] = n.y, o.array[g + 2] = n.z, o.array[g + 3] = n.w, g += 4
            } else {
                if (w)
                    for (d = 0; q > d; d++) f = p[d], g = 3 * d, t[g] = f.x, t[g + 1] = f.y, t[g + 2] = f.z;
                if (x)
                    for (e = 0; s > e; e++) i = r[e], g = 3 * e, u[g] = i.r, u[g + 1] = i.g, u[g + 2] = i.b;
                if (y)
                    for (j = 0, k = y.length; k > j; j++)
                        if (o = y[j], o.needsUpdate && (void 0 === o.boundTo || "vertices" === o.boundTo))
                            if (m = o.value.length, g = 0, 1 === o.size)
                                for (l = 0; m > l; l++) o.array[l] = o.value[l];
                            else if (2 === o.size)
                    for (l = 0; m > l; l++) n = o.value[l], o.array[g] = n.x, o.array[g + 1] = n.y, g += 2;
                else if (3 === o.size)
                    if ("c" === o.type)
                        for (l = 0; m > l; l++) n = o.value[l], o.array[g] = n.r, o.array[g + 1] = n.g, o.array[g + 2] = n.b, g += 3;
                    else
                        for (l = 0; m > l; l++) n = o.value[l], o.array[g] = n.x, o.array[g + 1] = n.y, o.array[g + 2] = n.z, g += 3;
                else if (4 === o.size)
                    for (l = 0; m > l; l++) n = o.value[l], o.array[g] = n.x, o.array[g + 1] = n.y, o.array[g + 2] = n.z, o.array[g + 3] = n.w, g += 4
            }
            if ((w || c.sortParticles) && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglVertexBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, t, b)), (x || c.sortParticles) && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglColorBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, u, b)), y)
                for (j = 0, k = y.length; k > j; j++) o = y[j], (o.needsUpdate || c.sortParticles) && (Mb.bindBuffer(Mb.ARRAY_BUFFER, o.buffer), Mb.bufferData(Mb.ARRAY_BUFFER, o.array, b))
        }

        function s(a, b) {
            var c, d, e, f, g, h, i, j, k, l, m, n, o = a.vertices,
                p = a.colors,
                q = a.lineDistances,
                r = o.length,
                s = p.length,
                t = q.length,
                u = a.__vertexArray,
                v = a.__colorArray,
                w = a.__lineDistanceArray,
                x = a.verticesNeedUpdate,
                y = a.colorsNeedUpdate,
                z = a.lineDistancesNeedUpdate,
                A = a.__webglCustomAttributesList;
            if (x) {
                for (c = 0; r > c; c++) f = o[c], g = 3 * c, u[g] = f.x, u[g + 1] = f.y, u[g + 2] = f.z;
                Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglVertexBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, u, b)
            }
            if (y) {
                for (d = 0; s > d; d++) h = p[d], g = 3 * d, v[g] = h.r, v[g + 1] = h.g, v[g + 2] = h.b;
                Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglColorBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, v, b)
            }
            if (z) {
                for (e = 0; t > e; e++) w[e] = q[e];
                Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglLineDistanceBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, w, b)
            }
            if (A)
                for (i = 0, j = A.length; j > i; i++)
                    if (n = A[i], n.needsUpdate && (void 0 === n.boundTo || "vertices" === n.boundTo)) {
                        if (g = 0, l = n.value.length, 1 === n.size)
                            for (k = 0; l > k; k++) n.array[k] = n.value[k];
                        else if (2 === n.size)
                            for (k = 0; l > k; k++) m = n.value[k], n.array[g] = m.x, n.array[g + 1] = m.y, g += 2;
                        else if (3 === n.size)
                            if ("c" === n.type)
                                for (k = 0; l > k; k++) m = n.value[k], n.array[g] = m.r, n.array[g + 1] = m.g, n.array[g + 2] = m.b, g += 3;
                            else
                                for (k = 0; l > k; k++) m = n.value[k], n.array[g] = m.x, n.array[g + 1] = m.y, n.array[g + 2] = m.z, g += 3;
                        else if (4 === n.size)
                            for (k = 0; l > k; k++) m = n.value[k], n.array[g] = m.x, n.array[g + 1] = m.y, n.array[g + 2] = m.z, n.array[g + 3] = m.w, g += 4;
                        Mb.bindBuffer(Mb.ARRAY_BUFFER, n.buffer), Mb.bufferData(Mb.ARRAY_BUFFER, n.array, b)
                    }
        }

        function t(a, b) {
            var c, d, e, f, g, h, i, j, k, l, m, n, o, p = a.vertices,
                q = a.colors,
                r = a.normals,
                s = p.length,
                t = q.length,
                u = r.length,
                v = a.__vertexArray,
                w = a.__colorArray,
                x = a.__normalArray,
                y = a.verticesNeedUpdate,
                z = a.colorsNeedUpdate,
                A = a.normalsNeedUpdate,
                B = a.__webglCustomAttributesList;
            if (y) {
                for (c = 0; s > c; c++) f = p[c], g = 3 * c, v[g] = f.x, v[g + 1] = f.y, v[g + 2] = f.z;
                Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglVertexBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, v, b)
            }
            if (z) {
                for (d = 0; t > d; d++) h = q[d], g = 3 * d, w[g] = h.r, w[g + 1] = h.g, w[g + 2] = h.b;
                Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglColorBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, w, b)
            }
            if (A) {
                for (e = 0; u > e; e++) i = r[e], g = 3 * e, x[g] = i.x, x[g + 1] = i.y, x[g + 2] = i.z;
                Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglNormalBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, x, b)
            }
            if (B)
                for (j = 0, k = B.length; k > j; j++)
                    if (n = B[j], n.needsUpdate && (void 0 === n.boundTo || "vertices" === n.boundTo)) {
                        if (g = 0, m = n.value.length, 1 === n.size)
                            for (l = 0; m > l; l++) n.array[l] = n.value[l];
                        else if (2 === n.size)
                            for (l = 0; m > l; l++) o = n.value[l], n.array[g] = o.x, n.array[g + 1] = o.y, g += 2;
                        else if (3 === n.size)
                            if ("c" === n.type)
                                for (l = 0; m > l; l++) o = n.value[l], n.array[g] = o.r, n.array[g + 1] = o.g, n.array[g + 2] = o.b, g += 3;
                            else
                                for (l = 0; m > l; l++) o = n.value[l], n.array[g] = o.x, n.array[g + 1] = o.y, n.array[g + 2] = o.z, g += 3;
                        else if (4 === n.size)
                            for (l = 0; m > l; l++) o = n.value[l], n.array[g] = o.x, n.array[g + 1] = o.y, n.array[g + 2] = o.z, n.array[g + 3] = o.w, g += 4;
                        Mb.bindBuffer(Mb.ARRAY_BUFFER, n.buffer), Mb.bufferData(Mb.ARRAY_BUFFER, n.array, b)
                    }
        }

        function u(a, b, c, d, e) {
            if (a.__inittedArrays) {
                var f, g, h, i, j, k, l, m, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, $, _, ab, bb, cb = n(e),
                    db = o(e),
                    eb = p(e),
                    fb = cb === THREE.SmoothShading,
                    gb = 0,
                    hb = 0,
                    ib = 0,
                    jb = 0,
                    kb = 0,
                    lb = 0,
                    mb = 0,
                    nb = 0,
                    ob = 0,
                    pb = 0,
                    qb = 0,
                    rb = 0,
                    sb = 0,
                    tb = a.__vertexArray,
                    ub = a.__uvArray,
                    vb = a.__uv2Array,
                    wb = a.__normalArray,
                    xb = a.__tangentArray,
                    yb = a.__colorArray,
                    zb = a.__skinIndexArray,
                    Ab = a.__skinWeightArray,
                    Bb = a.__morphTargetsArrays,
                    Cb = a.__morphNormalsArrays,
                    Db = a.__webglCustomAttributesList,
                    Eb = a.__faceArray,
                    Fb = a.__lineArray,
                    Gb = b.geometry,
                    Hb = Gb.verticesNeedUpdate,
                    Ib = Gb.elementsNeedUpdate,
                    Jb = Gb.uvsNeedUpdate,
                    Kb = Gb.normalsNeedUpdate,
                    Lb = Gb.tangentsNeedUpdate,
                    Nb = Gb.colorsNeedUpdate,
                    Ob = Gb.morphTargetsNeedUpdate,
                    Pb = Gb.vertices,
                    Qb = a.faces3,
                    Rb = a.faces4,
                    Sb = Gb.faces,
                    Tb = Gb.faceVertexUvs[0],
                    Ub = Gb.faceVertexUvs[1],
                    Vb = (Gb.colors, Gb.skinIndices),
                    Wb = Gb.skinWeights,
                    Xb = Gb.morphTargets,
                    Yb = Gb.morphNormals;
                if (Hb) {
                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], t = Pb[i.a], u = Pb[i.b], v = Pb[i.c], tb[hb] = t.x, tb[hb + 1] = t.y, tb[hb + 2] = t.z, tb[hb + 3] = u.x, tb[hb + 4] = u.y, tb[hb + 5] = u.z, tb[hb + 6] = v.x, tb[hb + 7] = v.y, tb[hb + 8] = v.z, hb += 9;
                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], t = Pb[i.a], u = Pb[i.b], v = Pb[i.c], w = Pb[i.d], tb[hb] = t.x, tb[hb + 1] = t.y, tb[hb + 2] = t.z, tb[hb + 3] = u.x, tb[hb + 4] = u.y, tb[hb + 5] = u.z, tb[hb + 6] = v.x, tb[hb + 7] = v.y, tb[hb + 8] = v.z, tb[hb + 9] = w.x, tb[hb + 10] = w.y, tb[hb + 11] = w.z, hb += 12;
                    Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglVertexBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, tb, c)
                }
                if (Ob)
                    for (W = 0, X = Xb.length; X > W; W++) {
                        for (qb = 0, f = 0, g = Qb.length; g > f; f++) $ = Qb[f], i = Sb[$], t = Xb[W].vertices[i.a], u = Xb[W].vertices[i.b], v = Xb[W].vertices[i.c], Y = Bb[W], Y[qb] = t.x, Y[qb + 1] = t.y, Y[qb + 2] = t.z, Y[qb + 3] = u.x, Y[qb + 4] = u.y, Y[qb + 5] = u.z, Y[qb + 6] = v.x, Y[qb + 7] = v.y, Y[qb + 8] = v.z, e.morphNormals && (fb ? (_ = Yb[W].vertexNormals[$], B = _.a, C = _.b, D = _.c) : (B = Yb[W].faceNormals[$], C = B, D = B), Z = Cb[W], Z[qb] = B.x, Z[qb + 1] = B.y, Z[qb + 2] = B.z, Z[qb + 3] = C.x, Z[qb + 4] = C.y, Z[qb + 5] = C.z, Z[qb + 6] = D.x, Z[qb + 7] = D.y, Z[qb + 8] = D.z), qb += 9;
                        for (f = 0, g = Rb.length; g > f; f++) $ = Rb[f], i = Sb[$], t = Xb[W].vertices[i.a], u = Xb[W].vertices[i.b], v = Xb[W].vertices[i.c], w = Xb[W].vertices[i.d], Y = Bb[W], Y[qb] = t.x, Y[qb + 1] = t.y, Y[qb + 2] = t.z, Y[qb + 3] = u.x, Y[qb + 4] = u.y, Y[qb + 5] = u.z, Y[qb + 6] = v.x, Y[qb + 7] = v.y, Y[qb + 8] = v.z, Y[qb + 9] = w.x, Y[qb + 10] = w.y, Y[qb + 11] = w.z, e.morphNormals && (fb ? (_ = Yb[W].vertexNormals[$], B = _.a, C = _.b, D = _.c, E = _.d) : (B = Yb[W].faceNormals[$], C = B, D = B, E = B), Z = Cb[W], Z[qb] = B.x, Z[qb + 1] = B.y, Z[qb + 2] = B.z, Z[qb + 3] = C.x, Z[qb + 4] = C.y, Z[qb + 5] = C.z, Z[qb + 6] = D.x, Z[qb + 7] = D.y, Z[qb + 8] = D.z, Z[qb + 9] = E.x, Z[qb + 10] = E.y, Z[qb + 11] = E.z), qb += 12;
                        Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglMorphTargetsBuffers[W]), Mb.bufferData(Mb.ARRAY_BUFFER, Bb[W], c), e.morphNormals && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglMorphNormalsBuffers[W]), Mb.bufferData(Mb.ARRAY_BUFFER, Cb[W], c))
                    }
                if (Wb.length) {
                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], J = Wb[i.a], K = Wb[i.b], L = Wb[i.c], Ab[pb] = J.x, Ab[pb + 1] = J.y, Ab[pb + 2] = J.z, Ab[pb + 3] = J.w, Ab[pb + 4] = K.x, Ab[pb + 5] = K.y, Ab[pb + 6] = K.z, Ab[pb + 7] = K.w, Ab[pb + 8] = L.x, Ab[pb + 9] = L.y, Ab[pb + 10] = L.z, Ab[pb + 11] = L.w, N = Vb[i.a], O = Vb[i.b], P = Vb[i.c], zb[pb] = N.x, zb[pb + 1] = N.y, zb[pb + 2] = N.z, zb[pb + 3] = N.w, zb[pb + 4] = O.x, zb[pb + 5] = O.y, zb[pb + 6] = O.z, zb[pb + 7] = O.w, zb[pb + 8] = P.x, zb[pb + 9] = P.y, zb[pb + 10] = P.z, zb[pb + 11] = P.w, pb += 12;
                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], J = Wb[i.a], K = Wb[i.b], L = Wb[i.c], M = Wb[i.d], Ab[pb] = J.x, Ab[pb + 1] = J.y, Ab[pb + 2] = J.z, Ab[pb + 3] = J.w, Ab[pb + 4] = K.x, Ab[pb + 5] = K.y, Ab[pb + 6] = K.z, Ab[pb + 7] = K.w, Ab[pb + 8] = L.x, Ab[pb + 9] = L.y, Ab[pb + 10] = L.z, Ab[pb + 11] = L.w, Ab[pb + 12] = M.x, Ab[pb + 13] = M.y, Ab[pb + 14] = M.z, Ab[pb + 15] = M.w, N = Vb[i.a], O = Vb[i.b], P = Vb[i.c], Q = Vb[i.d], zb[pb] = N.x, zb[pb + 1] = N.y, zb[pb + 2] = N.z, zb[pb + 3] = N.w, zb[pb + 4] = O.x, zb[pb + 5] = O.y, zb[pb + 6] = O.z, zb[pb + 7] = O.w, zb[pb + 8] = P.x, zb[pb + 9] = P.y, zb[pb + 10] = P.z, zb[pb + 11] = P.w, zb[pb + 12] = Q.x, zb[pb + 13] = Q.y, zb[pb + 14] = Q.z, zb[pb + 15] = Q.w, pb += 16;
                    pb > 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglSkinIndicesBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, zb, c), Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglSkinWeightsBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, Ab, c))
                }
                if (Nb && db) {
                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], l = i.vertexColors, m = i.color, 3 === l.length && db === THREE.VertexColors ? (F = l[0], G = l[1], H = l[2]) : (F = m, G = m, H = m), yb[ob] = F.r, yb[ob + 1] = F.g, yb[ob + 2] = F.b, yb[ob + 3] = G.r, yb[ob + 4] = G.g, yb[ob + 5] = G.b, yb[ob + 6] = H.r, yb[ob + 7] = H.g, yb[ob + 8] = H.b, ob += 9;
                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], l = i.vertexColors, m = i.color, 4 === l.length && db === THREE.VertexColors ? (F = l[0], G = l[1], H = l[2], I = l[3]) : (F = m, G = m, H = m, I = m), yb[ob] = F.r, yb[ob + 1] = F.g, yb[ob + 2] = F.b, yb[ob + 3] = G.r, yb[ob + 4] = G.g, yb[ob + 5] = G.b, yb[ob + 6] = H.r, yb[ob + 7] = H.g, yb[ob + 8] = H.b, yb[ob + 9] = I.r, yb[ob + 10] = I.g, yb[ob + 11] = I.b, ob += 12;
                    ob > 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglColorBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, yb, c))
                }
                if (Lb && Gb.hasTangents) {
                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], q = i.vertexTangents, x = q[0], y = q[1], z = q[2], xb[mb] = x.x, xb[mb + 1] = x.y, xb[mb + 2] = x.z, xb[mb + 3] = x.w, xb[mb + 4] = y.x, xb[mb + 5] = y.y, xb[mb + 6] = y.z, xb[mb + 7] = y.w, xb[mb + 8] = z.x, xb[mb + 9] = z.y, xb[mb + 10] = z.z, xb[mb + 11] = z.w, mb += 12;
                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], q = i.vertexTangents, x = q[0], y = q[1], z = q[2], A = q[3], xb[mb] = x.x, xb[mb + 1] = x.y, xb[mb + 2] = x.z, xb[mb + 3] = x.w, xb[mb + 4] = y.x, xb[mb + 5] = y.y, xb[mb + 6] = y.z, xb[mb + 7] = y.w, xb[mb + 8] = z.x, xb[mb + 9] = z.y, xb[mb + 10] = z.z, xb[mb + 11] = z.w, xb[mb + 12] = A.x, xb[mb + 13] = A.y, xb[mb + 14] = A.z, xb[mb + 15] = A.w, mb += 16;
                    Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglTangentBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, xb, c)
                }
                if (Kb && cb) {
                    for (f = 0, g = Qb.length; g > f; f++)
                        if (i = Sb[Qb[f]], j = i.vertexNormals, k = i.normal, 3 === j.length && fb)
                            for (R = 0; 3 > R; R++) T = j[R], wb[lb] = T.x, wb[lb + 1] = T.y, wb[lb + 2] = T.z, lb += 3;
                        else
                            for (R = 0; 3 > R; R++) wb[lb] = k.x, wb[lb + 1] = k.y, wb[lb + 2] = k.z, lb += 3;
                    for (f = 0, g = Rb.length; g > f; f++)
                        if (i = Sb[Rb[f]], j = i.vertexNormals, k = i.normal, 4 === j.length && fb)
                            for (R = 0; 4 > R; R++) T = j[R], wb[lb] = T.x, wb[lb + 1] = T.y, wb[lb + 2] = T.z, lb += 3;
                        else
                            for (R = 0; 4 > R; R++) wb[lb] = k.x, wb[lb + 1] = k.y, wb[lb + 2] = k.z, lb += 3;
                    Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglNormalBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, wb, c)
                }
                if (Jb && Tb && eb) {
                    for (f = 0, g = Qb.length; g > f; f++)
                        if (h = Qb[f], r = Tb[h], void 0 !== r)
                            for (R = 0; 3 > R; R++) U = r[R], ub[ib] = U.x, ub[ib + 1] = U.y, ib += 2;
                    for (f = 0, g = Rb.length; g > f; f++)
                        if (h = Rb[f], r = Tb[h], void 0 !== r)
                            for (R = 0; 4 > R; R++) U = r[R], ub[ib] = U.x, ub[ib + 1] = U.y, ib += 2;
                    ib > 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglUVBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, ub, c))
                }
                if (Jb && Ub && eb) {
                    for (f = 0, g = Qb.length; g > f; f++)
                        if (h = Qb[f], s = Ub[h], void 0 !== s)
                            for (R = 0; 3 > R; R++) V = s[R], vb[jb] = V.x, vb[jb + 1] = V.y, jb += 2;
                    for (f = 0, g = Rb.length; g > f; f++)
                        if (h = Rb[f], s = Ub[h], void 0 !== s)
                            for (R = 0; 4 > R; R++) V = s[R], vb[jb] = V.x, vb[jb + 1] = V.y, jb += 2;
                    jb > 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglUV2Buffer), Mb.bufferData(Mb.ARRAY_BUFFER, vb, c))
                }
                if (Ib) {
                    for (f = 0, g = Qb.length; g > f; f++) Eb[kb] = gb, Eb[kb + 1] = gb + 1, Eb[kb + 2] = gb + 2, kb += 3, Fb[nb] = gb, Fb[nb + 1] = gb + 1, Fb[nb + 2] = gb, Fb[nb + 3] = gb + 2, Fb[nb + 4] = gb + 1, Fb[nb + 5] = gb + 2, nb += 6, gb += 3;
                    for (f = 0, g = Rb.length; g > f; f++) Eb[kb] = gb, Eb[kb + 1] = gb + 1, Eb[kb + 2] = gb + 3, Eb[kb + 3] = gb + 1, Eb[kb + 4] = gb + 2, Eb[kb + 5] = gb + 3, kb += 6, Fb[nb] = gb, Fb[nb + 1] = gb + 1, Fb[nb + 2] = gb, Fb[nb + 3] = gb + 3, Fb[nb + 4] = gb + 1, Fb[nb + 5] = gb + 2, Fb[nb + 6] = gb + 2, Fb[nb + 7] = gb + 3, nb += 8, gb += 4;
                    Mb.bindBuffer(Mb.ELEMENT_ARRAY_BUFFER, a.__webglFaceBuffer), Mb.bufferData(Mb.ELEMENT_ARRAY_BUFFER, Eb, c), Mb.bindBuffer(Mb.ELEMENT_ARRAY_BUFFER, a.__webglLineBuffer), Mb.bufferData(Mb.ELEMENT_ARRAY_BUFFER, Fb, c)
                }
                if (Db)
                    for (R = 0, S = Db.length; S > R; R++)
                        if (bb = Db[R], bb.__original.needsUpdate) {
                            if (rb = 0, sb = 0, 1 === bb.size) {
                                if (void 0 === bb.boundTo || "vertices" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], bb.array[rb] = bb.value[i.a], bb.array[rb + 1] = bb.value[i.b], bb.array[rb + 2] = bb.value[i.c], rb += 3;
                                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], bb.array[rb] = bb.value[i.a], bb.array[rb + 1] = bb.value[i.b], bb.array[rb + 2] = bb.value[i.c], bb.array[rb + 3] = bb.value[i.d], rb += 4
                                } else if ("faces" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) ab = bb.value[Qb[f]], bb.array[rb] = ab, bb.array[rb + 1] = ab, bb.array[rb + 2] = ab, rb += 3;
                                    for (f = 0, g = Rb.length; g > f; f++) ab = bb.value[Rb[f]], bb.array[rb] = ab, bb.array[rb + 1] = ab, bb.array[rb + 2] = ab, bb.array[rb + 3] = ab, rb += 4
                                }
                            } else if (2 === bb.size) {
                                if (void 0 === bb.boundTo || "vertices" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], t = bb.value[i.a], u = bb.value[i.b], v = bb.value[i.c], bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = u.x, bb.array[rb + 3] = u.y, bb.array[rb + 4] = v.x, bb.array[rb + 5] = v.y, rb += 6;
                                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], t = bb.value[i.a], u = bb.value[i.b], v = bb.value[i.c], w = bb.value[i.d], bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = u.x, bb.array[rb + 3] = u.y, bb.array[rb + 4] = v.x, bb.array[rb + 5] = v.y, bb.array[rb + 6] = w.x, bb.array[rb + 7] = w.y, rb += 8
                                } else if ("faces" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) ab = bb.value[Qb[f]], t = ab, u = ab, v = ab, bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = u.x, bb.array[rb + 3] = u.y, bb.array[rb + 4] = v.x, bb.array[rb + 5] = v.y, rb += 6;
                                    for (f = 0, g = Rb.length; g > f; f++) ab = bb.value[Rb[f]], t = ab, u = ab, v = ab, w = ab, bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = u.x, bb.array[rb + 3] = u.y, bb.array[rb + 4] = v.x, bb.array[rb + 5] = v.y, bb.array[rb + 6] = w.x, bb.array[rb + 7] = w.y, rb += 8
                                }
                            } else if (3 === bb.size) {
                                var Zb;
                                if (Zb = "c" === bb.type ? ["r", "g", "b"] : ["x", "y", "z"], void 0 === bb.boundTo || "vertices" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], t = bb.value[i.a], u = bb.value[i.b], v = bb.value[i.c], bb.array[rb] = t[Zb[0]], bb.array[rb + 1] = t[Zb[1]], bb.array[rb + 2] = t[Zb[2]], bb.array[rb + 3] = u[Zb[0]], bb.array[rb + 4] = u[Zb[1]], bb.array[rb + 5] = u[Zb[2]], bb.array[rb + 6] = v[Zb[0]], bb.array[rb + 7] = v[Zb[1]], bb.array[rb + 8] = v[Zb[2]], rb += 9;
                                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], t = bb.value[i.a], u = bb.value[i.b], v = bb.value[i.c], w = bb.value[i.d], bb.array[rb] = t[Zb[0]], bb.array[rb + 1] = t[Zb[1]], bb.array[rb + 2] = t[Zb[2]], bb.array[rb + 3] = u[Zb[0]], bb.array[rb + 4] = u[Zb[1]], bb.array[rb + 5] = u[Zb[2]], bb.array[rb + 6] = v[Zb[0]], bb.array[rb + 7] = v[Zb[1]], bb.array[rb + 8] = v[Zb[2]], bb.array[rb + 9] = w[Zb[0]], bb.array[rb + 10] = w[Zb[1]], bb.array[rb + 11] = w[Zb[2]], rb += 12
                                } else if ("faces" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) ab = bb.value[Qb[f]], t = ab, u = ab, v = ab, bb.array[rb] = t[Zb[0]], bb.array[rb + 1] = t[Zb[1]], bb.array[rb + 2] = t[Zb[2]], bb.array[rb + 3] = u[Zb[0]], bb.array[rb + 4] = u[Zb[1]], bb.array[rb + 5] = u[Zb[2]], bb.array[rb + 6] = v[Zb[0]], bb.array[rb + 7] = v[Zb[1]], bb.array[rb + 8] = v[Zb[2]], rb += 9;
                                    for (f = 0, g = Rb.length; g > f; f++) ab = bb.value[Rb[f]], t = ab, u = ab, v = ab, w = ab, bb.array[rb] = t[Zb[0]], bb.array[rb + 1] = t[Zb[1]], bb.array[rb + 2] = t[Zb[2]], bb.array[rb + 3] = u[Zb[0]], bb.array[rb + 4] = u[Zb[1]], bb.array[rb + 5] = u[Zb[2]], bb.array[rb + 6] = v[Zb[0]], bb.array[rb + 7] = v[Zb[1]], bb.array[rb + 8] = v[Zb[2]], bb.array[rb + 9] = w[Zb[0]], bb.array[rb + 10] = w[Zb[1]], bb.array[rb + 11] = w[Zb[2]], rb += 12
                                } else if ("faceVertices" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) ab = bb.value[Qb[f]], t = ab[0], u = ab[1], v = ab[2], bb.array[rb] = t[Zb[0]], bb.array[rb + 1] = t[Zb[1]], bb.array[rb + 2] = t[Zb[2]], bb.array[rb + 3] = u[Zb[0]], bb.array[rb + 4] = u[Zb[1]], bb.array[rb + 5] = u[Zb[2]], bb.array[rb + 6] = v[Zb[0]], bb.array[rb + 7] = v[Zb[1]], bb.array[rb + 8] = v[Zb[2]], rb += 9;
                                    for (f = 0, g = Rb.length; g > f; f++) ab = bb.value[Rb[f]], t = ab[0], u = ab[1], v = ab[2], w = ab[3], bb.array[rb] = t[Zb[0]], bb.array[rb + 1] = t[Zb[1]], bb.array[rb + 2] = t[Zb[2]], bb.array[rb + 3] = u[Zb[0]], bb.array[rb + 4] = u[Zb[1]], bb.array[rb + 5] = u[Zb[2]], bb.array[rb + 6] = v[Zb[0]], bb.array[rb + 7] = v[Zb[1]], bb.array[rb + 8] = v[Zb[2]], bb.array[rb + 9] = w[Zb[0]], bb.array[rb + 10] = w[Zb[1]], bb.array[rb + 11] = w[Zb[2]], rb += 12
                                }
                            } else if (4 === bb.size)
                                if (void 0 === bb.boundTo || "vertices" === bb.boundTo) {
                                    for (f = 0, g = Qb.length; g > f; f++) i = Sb[Qb[f]], t = bb.value[i.a], u = bb.value[i.b], v = bb.value[i.c], bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = t.z, bb.array[rb + 3] = t.w, bb.array[rb + 4] = u.x, bb.array[rb + 5] = u.y, bb.array[rb + 6] = u.z, bb.array[rb + 7] = u.w, bb.array[rb + 8] = v.x, bb.array[rb + 9] = v.y, bb.array[rb + 10] = v.z, bb.array[rb + 11] = v.w, rb += 12;
                                    for (f = 0, g = Rb.length; g > f; f++) i = Sb[Rb[f]], t = bb.value[i.a], u = bb.value[i.b], v = bb.value[i.c], w = bb.value[i.d], bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = t.z, bb.array[rb + 3] = t.w, bb.array[rb + 4] = u.x, bb.array[rb + 5] = u.y, bb.array[rb + 6] = u.z, bb.array[rb + 7] = u.w, bb.array[rb + 8] = v.x, bb.array[rb + 9] = v.y, bb.array[rb + 10] = v.z, bb.array[rb + 11] = v.w, bb.array[rb + 12] = w.x, bb.array[rb + 13] = w.y, bb.array[rb + 14] = w.z, bb.array[rb + 15] = w.w, rb += 16
                                } else if ("faces" === bb.boundTo) {
                                for (f = 0, g = Qb.length; g > f; f++) ab = bb.value[Qb[f]], t = ab, u = ab, v = ab, bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = t.z, bb.array[rb + 3] = t.w, bb.array[rb + 4] = u.x, bb.array[rb + 5] = u.y, bb.array[rb + 6] = u.z, bb.array[rb + 7] = u.w, bb.array[rb + 8] = v.x, bb.array[rb + 9] = v.y, bb.array[rb + 10] = v.z, bb.array[rb + 11] = v.w, rb += 12;
                                for (f = 0, g = Rb.length; g > f; f++) ab = bb.value[Rb[f]], t = ab, u = ab, v = ab, w = ab, bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = t.z, bb.array[rb + 3] = t.w, bb.array[rb + 4] = u.x, bb.array[rb + 5] = u.y, bb.array[rb + 6] = u.z, bb.array[rb + 7] = u.w, bb.array[rb + 8] = v.x, bb.array[rb + 9] = v.y, bb.array[rb + 10] = v.z, bb.array[rb + 11] = v.w, bb.array[rb + 12] = w.x, bb.array[rb + 13] = w.y, bb.array[rb + 14] = w.z, bb.array[rb + 15] = w.w, rb += 16
                            } else if ("faceVertices" === bb.boundTo) {
                                for (f = 0, g = Qb.length; g > f; f++) ab = bb.value[Qb[f]], t = ab[0], u = ab[1], v = ab[2], bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = t.z, bb.array[rb + 3] = t.w, bb.array[rb + 4] = u.x, bb.array[rb + 5] = u.y, bb.array[rb + 6] = u.z, bb.array[rb + 7] = u.w, bb.array[rb + 8] = v.x, bb.array[rb + 9] = v.y, bb.array[rb + 10] = v.z, bb.array[rb + 11] = v.w, rb += 12;
                                for (f = 0, g = Rb.length; g > f; f++) ab = bb.value[Rb[f]], t = ab[0], u = ab[1], v = ab[2], w = ab[3], bb.array[rb] = t.x, bb.array[rb + 1] = t.y, bb.array[rb + 2] = t.z, bb.array[rb + 3] = t.w, bb.array[rb + 4] = u.x, bb.array[rb + 5] = u.y, bb.array[rb + 6] = u.z, bb.array[rb + 7] = u.w, bb.array[rb + 8] = v.x, bb.array[rb + 9] = v.y, bb.array[rb + 10] = v.z, bb.array[rb + 11] = v.w, bb.array[rb + 12] = w.x, bb.array[rb + 13] = w.y, bb.array[rb + 14] = w.z, bb.array[rb + 15] = w.w, rb += 16
                            }
                            Mb.bindBuffer(Mb.ARRAY_BUFFER, bb.buffer), Mb.bufferData(Mb.ARRAY_BUFFER, bb.array, c)
                        }
                d && (delete a.__inittedArrays, delete a.__colorArray, delete a.__normalArray, delete a.__tangentArray, delete a.__uvArray, delete a.__uv2Array, delete a.__faceArray, delete a.__vertexArray, delete a.__lineArray, delete a.__skinIndexArray, delete a.__skinWeightArray)
            }
        }

        function v(a, b, c) {
            var d, e, f = a.attributes;
            for (d in f) e = f[d], e.needsUpdate && ("index" === d ? (Mb.bindBuffer(Mb.ELEMENT_ARRAY_BUFFER, e.buffer), Mb.bufferData(Mb.ELEMENT_ARRAY_BUFFER, e.array, b)) : (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.buffer), Mb.bufferData(Mb.ARRAY_BUFFER, e.array, b)), e.needsUpdate = !1), c && !e.dynamic && (e.array = null)
        }

        function w(a) {
            sc[a] || (Mb.enableVertexAttribArray(a), sc[a] = !0)
        }

        function x() {
            for (var a in sc) sc[a] && (Mb.disableVertexAttribArray(a), sc[a] = !1)
        }

        function y(a, b, c) {
            var d = a.program.attributes;
            if (-1 !== c.morphTargetBase && d.position >= 0 ? (Mb.bindBuffer(Mb.ARRAY_BUFFER, b.__webglMorphTargetsBuffers[c.morphTargetBase]), w(d.position), Mb.vertexAttribPointer(d.position, 3, Mb.FLOAT, !1, 0, 0)) : d.position >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, b.__webglVertexBuffer), w(d.position), Mb.vertexAttribPointer(d.position, 3, Mb.FLOAT, !1, 0, 0)), c.morphTargetForcedOrder.length)
                for (var e = 0, f = c.morphTargetForcedOrder, g = c.morphTargetInfluences; e < a.numSupportedMorphTargets && e < f.length;) d["morphTarget" + e] >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, b.__webglMorphTargetsBuffers[f[e]]), w(d["morphTarget" + e]), Mb.vertexAttribPointer(d["morphTarget" + e], 3, Mb.FLOAT, !1, 0, 0)), d["morphNormal" + e] >= 0 && a.morphNormals && (Mb.bindBuffer(Mb.ARRAY_BUFFER, b.__webglMorphNormalsBuffers[f[e]]), w(d["morphNormal" + e]), Mb.vertexAttribPointer(d["morphNormal" + e], 3, Mb.FLOAT, !1, 0, 0)), c.__webglMorphTargetInfluences[e] = g[f[e]], e++;
            else {
                var h, i, j = [],
                    g = c.morphTargetInfluences,
                    k = g.length;
                for (i = 0; k > i; i++) h = g[i], h > 0 && j.push([h, i]);
                j.length > a.numSupportedMorphTargets ? (j.sort(A), j.length = a.numSupportedMorphTargets) : j.length > a.numSupportedMorphNormals ? j.sort(A) : 0 === j.length && j.push([0, 0]);
                for (var l, e = 0; e < a.numSupportedMorphTargets;) j[e] ? (l = j[e][1], d["morphTarget" + e] >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, b.__webglMorphTargetsBuffers[l]), w(d["morphTarget" + e]), Mb.vertexAttribPointer(d["morphTarget" + e], 3, Mb.FLOAT, !1, 0, 0)), d["morphNormal" + e] >= 0 && a.morphNormals && (Mb.bindBuffer(Mb.ARRAY_BUFFER, b.__webglMorphNormalsBuffers[l]), w(d["morphNormal" + e]), Mb.vertexAttribPointer(d["morphNormal" + e], 3, Mb.FLOAT, !1, 0, 0)), c.__webglMorphTargetInfluences[e] = g[l]) : c.__webglMorphTargetInfluences[e] = 0, e++
            }
            null !== a.program.uniforms.morphTargetInfluences && Mb.uniform1fv(a.program.uniforms.morphTargetInfluences, c.__webglMorphTargetInfluences)
        }

        function z(a, b) {
            return a.z !== b.z ? b.z - a.z : a.id - b.id
        }

        function A(a, b) {
            return b[0] - a[0]
        }

        function B(a, b, c) {
            if (a.length)
                for (var d = 0, e = a.length; e > d; d++) Vb = null, Zb = null, cc = -1, gc = -1, hc = -1, ac = -1, bc = -1, Yb = -1, Xb = -1, yc = !0, a[d].render(b, c, qc, rc), Vb = null, Zb = null, cc = -1, gc = -1, hc = -1, ac = -1, bc = -1, Yb = -1, Xb = -1, yc = !0
        }

        function C(a, b, c, d, e, f, g, h) {
            var i, j, k, l, m, n, o;
            b ? (m = a.length - 1, n = -1, o = -1) : (m = 0, n = a.length, o = 1);
            for (var p = m; p !== n; p += o)
                if (i = a[p], i.render) {
                    if (j = i.object, k = i.buffer, h) l = h;
                    else {
                        if (l = i[c], !l) continue;
                        g && Sb.setBlending(l.blending, l.blendEquation, l.blendSrc, l.blendDst), Sb.setDepthTest(l.depthTest), Sb.setDepthWrite(l.depthWrite), hb(l.polygonOffset, l.polygonOffsetFactor, l.polygonOffsetUnits)
                    }
                    Sb.setMaterialFaces(l), k instanceof THREE.BufferGeometry ? Sb.renderBufferDirect(d, e, f, l, k, j) : Sb.renderBuffer(d, e, f, l, k, j)
                }
        }

        function D(a, b, c, d, e, f, g) {
            for (var h, i, j, k = 0, l = a.length; l > k; k++)
                if (h = a[k], i = h.object, i.visible) {
                    if (g) j = g;
                    else {
                        if (j = h[b], !j) continue;
                        f && Sb.setBlending(j.blending, j.blendEquation, j.blendSrc, j.blendDst), Sb.setDepthTest(j.depthTest), Sb.setDepthWrite(j.depthWrite), hb(j.polygonOffset, j.polygonOffsetFactor, j.polygonOffsetUnits)
                    }
                    Sb.renderImmediateObject(c, d, e, j, i)
                }
        }

        function E(a) {
            var b = a.object,
                c = b.material;
            c.transparent ? (a.transparent = c, a.opaque = null) : (a.opaque = c, a.transparent = null)
        }

        function F(a) {
            var b, c, d, e = a.object,
                f = a.buffer;
            d = e.material, d instanceof THREE.MeshFaceMaterial ? (c = f.materialIndex, b = d.materials[c], b.transparent ? (a.transparent = b, a.opaque = null) : (a.opaque = b, a.transparent = null)) : (b = d, b && (b.transparent ? (a.transparent = b, a.opaque = null) : (a.opaque = b, a.transparent = null)))
        }

        function G(a, b) {
            var c, d, e, f, g, h, i = {},
                j = a.morphTargets.length,
                k = a.morphNormals.length,
                l = b instanceof THREE.MeshFaceMaterial;
            for (a.geometryGroups = {}, c = 0, d = a.faces.length; d > c; c++) e = a.faces[c], f = l ? e.materialIndex : 0, void 0 === i[f] && (i[f] = {
                hash: f,
                counter: 0
            }), h = i[f].hash + "_" + i[f].counter, void 0 === a.geometryGroups[h] && (a.geometryGroups[h] = {
                faces3: [],
                faces4: [],
                materialIndex: f,
                vertices: 0,
                numMorphTargets: j,
                numMorphNormals: k
            }), g = e instanceof THREE.Face3 ? 3 : 4, a.geometryGroups[h].vertices + g > 65535 && (i[f].counter += 1, h = i[f].hash + "_" + i[f].counter, void 0 === a.geometryGroups[h] && (a.geometryGroups[h] = {
                faces3: [],
                faces4: [],
                materialIndex: f,
                vertices: 0,
                numMorphTargets: j,
                numMorphNormals: k
            })), e instanceof THREE.Face3 ? a.geometryGroups[h].faces3.push(c) : a.geometryGroups[h].faces4.push(c), a.geometryGroups[h].vertices += g;
            a.geometryGroupsList = [];
            for (var m in a.geometryGroups) a.geometryGroups[m].id = $b++, a.geometryGroupsList.push(a.geometryGroups[m])
        }

        function H(a, f) {
            var g, l, m, n;
            if (void 0 === a.__webglInit)
                if (a.__webglInit = !0, a._modelViewMatrix = new THREE.Matrix4, a._normalMatrix = new THREE.Matrix3, void 0 !== a.geometry && void 0 === a.geometry.__webglInit && (a.geometry.__webglInit = !0, a.geometry.addEventListener("dispose", Mc)), l = a.geometry, void 0 === l);
                else if (l instanceof THREE.BufferGeometry) q(l);
            else if (a instanceof THREE.Mesh) {
                m = a.material, void 0 === l.geometryGroups && G(l, m);
                for (g in l.geometryGroups) n = l.geometryGroups[g], n.__webglVertexBuffer || (e(n), k(n, a), l.verticesNeedUpdate = !0, l.morphTargetsNeedUpdate = !0, l.elementsNeedUpdate = !0, l.uvsNeedUpdate = !0, l.normalsNeedUpdate = !0, l.tangentsNeedUpdate = !0, l.colorsNeedUpdate = !0)
            } else a instanceof THREE.Ribbon ? l.__webglVertexBuffer || (d(l), j(l, a), l.verticesNeedUpdate = !0, l.colorsNeedUpdate = !0, l.normalsNeedUpdate = !0) : a instanceof THREE.Line ? l.__webglVertexBuffer || (c(l), i(l, a), l.verticesNeedUpdate = !0, l.colorsNeedUpdate = !0, l.lineDistancesNeedUpdate = !0) : a instanceof THREE.ParticleSystem && (l.__webglVertexBuffer || (b(l), h(l, a), l.verticesNeedUpdate = !0, l.colorsNeedUpdate = !0));
            if (void 0 === a.__webglActive) {
                if (a instanceof THREE.Mesh) {
                    if (l = a.geometry, l instanceof THREE.BufferGeometry) I(f.__webglObjects, l, a);
                    else if (l instanceof THREE.Geometry)
                        for (g in l.geometryGroups) n = l.geometryGroups[g], I(f.__webglObjects, n, a)
                } else a instanceof THREE.Ribbon || a instanceof THREE.Line || a instanceof THREE.ParticleSystem ? (l = a.geometry, I(f.__webglObjects, l, a)) : a instanceof THREE.ImmediateRenderObject || a.immediateRenderCallback ? J(f.__webglObjectsImmediate, a) : a instanceof THREE.Sprite ? f.__webglSprites.push(a) : a instanceof THREE.LensFlare && f.__webglFlares.push(a);
                a.__webglActive = !0
            }
        }

        function I(a, b, c) {
            a.push({
                id: null,
                buffer: b,
                object: c,
                opaque: null,
                transparent: null,
                z: 0
            })
        }

        function J(a, b) {
            a.push({
                id: null,
                object: b,
                opaque: null,
                transparent: null,
                z: 0
            })
        }

        function K(a) {
            var b, c, d, e = a.geometry;
            if (e instanceof THREE.BufferGeometry) v(e, Mb.DYNAMIC_DRAW, !e.dynamic);
            else if (a instanceof THREE.Mesh) {
                for (var f = 0, g = e.geometryGroupsList.length; g > f; f++) b = e.geometryGroupsList[f], d = l(a, b), e.buffersNeedUpdate && k(b, a), c = d.attributes && L(d), (e.verticesNeedUpdate || e.morphTargetsNeedUpdate || e.elementsNeedUpdate || e.uvsNeedUpdate || e.normalsNeedUpdate || e.colorsNeedUpdate || e.tangentsNeedUpdate || c) && u(b, a, Mb.DYNAMIC_DRAW, !e.dynamic, d);
                e.verticesNeedUpdate = !1, e.morphTargetsNeedUpdate = !1, e.elementsNeedUpdate = !1, e.uvsNeedUpdate = !1, e.normalsNeedUpdate = !1, e.colorsNeedUpdate = !1, e.tangentsNeedUpdate = !1, e.buffersNeedUpdate = !1, d.attributes && M(d)
            } else a instanceof THREE.Ribbon ? (d = l(a, e), c = d.attributes && L(d), (e.verticesNeedUpdate || e.colorsNeedUpdate || e.normalsNeedUpdate || c) && t(e, Mb.DYNAMIC_DRAW), e.verticesNeedUpdate = !1, e.colorsNeedUpdate = !1, e.normalsNeedUpdate = !1, d.attributes && M(d)) : a instanceof THREE.Line ? (d = l(a, e), c = d.attributes && L(d), (e.verticesNeedUpdate || e.colorsNeedUpdate || e.lineDistancesNeedUpdate || c) && s(e, Mb.DYNAMIC_DRAW), e.verticesNeedUpdate = !1, e.colorsNeedUpdate = !1, e.lineDistancesNeedUpdate = !1, d.attributes && M(d)) : a instanceof THREE.ParticleSystem && (d = l(a, e), c = d.attributes && L(d), (e.verticesNeedUpdate || e.colorsNeedUpdate || a.sortParticles || c) && r(e, Mb.DYNAMIC_DRAW, a), e.verticesNeedUpdate = !1, e.colorsNeedUpdate = !1, d.attributes && M(d))
        }

        function L(a) {
            for (var b in a.attributes)
                if (a.attributes[b].needsUpdate) return !0;
            return !1
        }

        function M(a) {
            for (var b in a.attributes) a.attributes[b].needsUpdate = !1
        }

        function N(a, b) {
            a instanceof THREE.Mesh || a instanceof THREE.ParticleSystem || a instanceof THREE.Ribbon || a instanceof THREE.Line ? O(b.__webglObjects, a) : a instanceof THREE.Sprite ? P(b.__webglSprites, a) : a instanceof THREE.LensFlare ? P(b.__webglFlares, a) : (a instanceof THREE.ImmediateRenderObject || a.immediateRenderCallback) && O(b.__webglObjectsImmediate, a), delete a.__webglActive
        }

        function O(a, b) {
            for (var c = a.length - 1; c >= 0; c--) a[c].object === b && a.splice(c, 1)
        }

        function P(a, b) {
            for (var c = a.length - 1; c >= 0; c--) a[c] === b && a.splice(c, 1)
        }

        function Q(a, b) {
            a.uniforms = THREE.UniformsUtils.clone(b.uniforms), a.vertexShader = b.vertexShader, a.fragmentShader = b.fragmentShader
        }

        function R(a, b, c, d, e) {
            _b = 0, d.needsUpdate && (d.program && Tc(d), Sb.initMaterial(d, b, c, e), d.needsUpdate = !1), d.morphTargets && (e.__webglMorphTargetInfluences || (e.__webglMorphTargetInfluences = new Float32Array(Sb.maxMorphTargets)));
            var f = !1,
                g = d.program,
                h = g.uniforms,
                i = d.uniforms;
            if (g !== Vb && (Mb.useProgram(g), Vb = g, f = !0), d.id !== Xb && (Xb = d.id, f = !0), (f || a !== Zb) && (Mb.uniformMatrix4fv(h.projectionMatrix, !1, a.projectionMatrix.elements), a !== Zb && (Zb = a)), d.skinning)
                if (Fc && e.useVertexTexture) {
                    if (null !== h.boneTexture) {
                        var j = ab();
                        Mb.uniform1i(h.boneTexture, j), Sb.setTexture(e.boneTexture, j)
                    }
                } else null !== h.boneGlobalMatrices && Mb.uniformMatrix4fv(h.boneGlobalMatrices, !1, e.boneMatrices);
            return f && (c && d.fog && W(i, c), (d instanceof THREE.MeshPhongMaterial || d instanceof THREE.MeshLambertMaterial || d.lights) && (yc && (fb(g, b), yc = !1), Z(i, zc)), (d instanceof THREE.MeshBasicMaterial || d instanceof THREE.MeshLambertMaterial || d instanceof THREE.MeshPhongMaterial) && S(i, d), d instanceof THREE.LineBasicMaterial ? T(i, d) : d instanceof THREE.LineDashedMaterial ? (T(i, d), U(i, d)) : d instanceof THREE.ParticleBasicMaterial ? V(i, d) : d instanceof THREE.MeshPhongMaterial ? X(i, d) : d instanceof THREE.MeshLambertMaterial ? Y(i, d) : d instanceof THREE.MeshDepthMaterial ? (i.mNear.value = a.near, i.mFar.value = a.far, i.opacity.value = d.opacity) : d instanceof THREE.MeshNormalMaterial && (i.opacity.value = d.opacity), e.receiveShadow && !d._shadowPass && $(i, b), bb(g, d.uniformsList), (d instanceof THREE.ShaderMaterial || d instanceof THREE.MeshPhongMaterial || d.envMap) && null !== h.cameraPosition && (wc.getPositionFromMatrix(a.matrixWorld), Mb.uniform3f(h.cameraPosition, wc.x, wc.y, wc.z)), (d instanceof THREE.MeshPhongMaterial || d instanceof THREE.MeshLambertMaterial || d instanceof THREE.ShaderMaterial || d.skinning) && null !== h.viewMatrix && Mb.uniformMatrix4fv(h.viewMatrix, !1, a.matrixWorldInverse.elements)), _(h, e), null !== h.modelMatrix && Mb.uniformMatrix4fv(h.modelMatrix, !1, e.matrixWorld.elements), g
        }

        function S(a, b) {
            a.opacity.value = b.opacity, Sb.gammaInput ? a.diffuse.value.copyGammaToLinear(b.color) : a.diffuse.value = b.color, a.map.value = b.map, a.lightMap.value = b.lightMap, a.specularMap.value = b.specularMap, b.bumpMap && (a.bumpMap.value = b.bumpMap, a.bumpScale.value = b.bumpScale), b.normalMap && (a.normalMap.value = b.normalMap, a.normalScale.value.copy(b.normalScale));
            var c;
            if (b.map ? c = b.map : b.specularMap ? c = b.specularMap : b.normalMap ? c = b.normalMap : b.bumpMap && (c = b.bumpMap), void 0 !== c) {
                var d = c.offset,
                    e = c.repeat;
                a.offsetRepeat.value.set(d.x, d.y, e.x, e.y)
            }
            a.envMap.value = b.envMap, a.flipEnvMap.value = b.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1, a.reflectivity.value = Sb.gammaInput ? b.reflectivity : b.reflectivity, a.refractionRatio.value = b.refractionRatio, a.combine.value = b.combine, a.useRefract.value = b.envMap && b.envMap.mapping instanceof THREE.CubeRefractionMapping
        }

        function T(a, b) {
            a.diffuse.value = b.color, a.opacity.value = b.opacity
        }

        function U(a, b) {
            a.dashSize.value = b.dashSize, a.totalSize.value = b.dashSize + b.gapSize, a.scale.value = b.scale
        }

        function V(a, b) {
            a.psColor.value = b.color, a.opacity.value = b.opacity, a.size.value = b.size, a.scale.value = Db.height / 2, a.map.value = b.map
        }

        function W(a, b) {
            a.fogColor.value = b.color, b instanceof THREE.Fog ? (a.fogNear.value = b.near, a.fogFar.value = b.far) : b instanceof THREE.FogExp2 && (a.fogDensity.value = b.density)
        }

        function X(a, b) {
            a.shininess.value = b.shininess, Sb.gammaInput ? (a.ambient.value.copyGammaToLinear(b.ambient), a.emissive.value.copyGammaToLinear(b.emissive), a.specular.value.copyGammaToLinear(b.specular)) : (a.ambient.value = b.ambient, a.emissive.value = b.emissive, a.specular.value = b.specular), b.wrapAround && a.wrapRGB.value.copy(b.wrapRGB)
        }

        function Y(a, b) {
            Sb.gammaInput ? (a.ambient.value.copyGammaToLinear(b.ambient), a.emissive.value.copyGammaToLinear(b.emissive)) : (a.ambient.value = b.ambient, a.emissive.value = b.emissive), b.wrapAround && a.wrapRGB.value.copy(b.wrapRGB)
        }

        function Z(a, b) {
            a.ambientLightColor.value = b.ambient, a.directionalLightColor.value = b.directional.colors, a.directionalLightDirection.value = b.directional.positions, a.pointLightColor.value = b.point.colors, a.pointLightPosition.value = b.point.positions, a.pointLightDistance.value = b.point.distances, a.spotLightColor.value = b.spot.colors, a.spotLightPosition.value = b.spot.positions, a.spotLightDistance.value = b.spot.distances, a.spotLightDirection.value = b.spot.directions, a.spotLightAngleCos.value = b.spot.anglesCos, a.spotLightExponent.value = b.spot.exponents, a.hemisphereLightSkyColor.value = b.hemi.skyColors, a.hemisphereLightGroundColor.value = b.hemi.groundColors, a.hemisphereLightDirection.value = b.hemi.positions
        }

        function $(a, b) {
            if (a.shadowMatrix)
                for (var c = 0, d = 0, e = b.length; e > d; d++) {
                    var f = b[d];
                    f.castShadow && (f instanceof THREE.SpotLight || f instanceof THREE.DirectionalLight && !f.shadowCascade) && (a.shadowMap.value[c] = f.shadowMap, a.shadowMapSize.value[c] = f.shadowMapSize, a.shadowMatrix.value[c] = f.shadowMatrix, a.shadowDarkness.value[c] = f.shadowDarkness, a.shadowBias.value[c] = f.shadowBias, c++)
                }
        }

        function _(a, b) {
            Mb.uniformMatrix4fv(a.modelViewMatrix, !1, b._modelViewMatrix.elements), a.normalMatrix && Mb.uniformMatrix3fv(a.normalMatrix, !1, b._normalMatrix.elements)
        }

        function ab() {
            var a = _b;
            return a >= Ac && console.warn("WebGLRenderer: trying to use " + a + " texture units while this GPU supports only " + Ac), _b += 1, a
        }

        function bb(a, b) {
            var c, d, e, f, g, h, i, j, k, l, m;
            for (k = 0, l = b.length; l > k; k++)
                if (f = a.uniforms[b[k][1]])
                    if (c = b[k][0], e = c.type, d = c.value, "i" === e) Mb.uniform1i(f, d);
                    else if ("f" === e) Mb.uniform1f(f, d);
            else if ("v2" === e) Mb.uniform2f(f, d.x, d.y);
            else if ("v3" === e) Mb.uniform3f(f, d.x, d.y, d.z);
            else if ("v4" === e) Mb.uniform4f(f, d.x, d.y, d.z, d.w);
            else if ("c" === e) Mb.uniform3f(f, d.r, d.g, d.b);
            else if ("iv1" === e) Mb.uniform1iv(f, d);
            else if ("iv" === e) Mb.uniform3iv(f, d);
            else if ("fv1" === e) Mb.uniform1fv(f, d);
            else if ("fv" === e) Mb.uniform3fv(f, d);
            else if ("v2v" === e) {
                for (void 0 === c._array && (c._array = new Float32Array(2 * d.length)), i = 0, j = d.length; j > i; i++) m = 2 * i, c._array[m] = d[i].x, c._array[m + 1] = d[i].y;
                Mb.uniform2fv(f, c._array)
            } else if ("v3v" === e) {
                for (void 0 === c._array && (c._array = new Float32Array(3 * d.length)), i = 0, j = d.length; j > i; i++) m = 3 * i, c._array[m] = d[i].x, c._array[m + 1] = d[i].y, c._array[m + 2] = d[i].z;
                Mb.uniform3fv(f, c._array)
            } else if ("v4v" === e) {
                for (void 0 === c._array && (c._array = new Float32Array(4 * d.length)), i = 0, j = d.length; j > i; i++) m = 4 * i, c._array[m] = d[i].x, c._array[m + 1] = d[i].y, c._array[m + 2] = d[i].z, c._array[m + 3] = d[i].w;
                Mb.uniform4fv(f, c._array)
            } else if ("m4" === e) void 0 === c._array && (c._array = new Float32Array(16)), d.flattenToArray(c._array), Mb.uniformMatrix4fv(f, !1, c._array);
            else if ("m4v" === e) {
                for (void 0 === c._array && (c._array = new Float32Array(16 * d.length)), i = 0, j = d.length; j > i; i++) d[i].flattenToArrayOffset(c._array, 16 * i);
                Mb.uniformMatrix4fv(f, !1, c._array)
            } else if ("t" === e) {
                if (g = d, h = ab(), Mb.uniform1i(f, h), !g) continue;
                g.image instanceof Array && 6 === g.image.length ? rb(g, h) : g instanceof THREE.WebGLRenderTargetCube ? sb(g, h) : Sb.setTexture(g, h)
            } else if ("tv" === e) {
                for (void 0 === c._array && (c._array = []), i = 0, j = c.value.length; j > i; i++) c._array[i] = ab();
                for (Mb.uniform1iv(f, c._array), i = 0, j = c.value.length; j > i; i++) g = c.value[i], h = c._array[i], g && Sb.setTexture(g, h)
            } else console.warn("THREE.WebGLRenderer: Unknown uniform type: " + e)
        }

        function cb(a, b) {
            a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse, a.matrixWorld), a._normalMatrix.getNormalMatrix(a._modelViewMatrix)
        }

        function db(a, b, c, d) {
            a[b] = c.r * c.r * d, a[b + 1] = c.g * c.g * d, a[b + 2] = c.b * c.b * d
        }

        function eb(a, b, c, d) {
            a[b] = c.r * d, a[b + 1] = c.g * d, a[b + 2] = c.b * d
        }

        function fb(a, b) {
            var c, d, e, f, g, h, i, j, k, l = 0,
                m = 0,
                n = 0,
                o = zc,
                p = o.directional.colors,
                q = o.directional.positions,
                r = o.point.colors,
                s = o.point.positions,
                t = o.point.distances,
                u = o.spot.colors,
                v = o.spot.positions,
                w = o.spot.distances,
                x = o.spot.directions,
                y = o.spot.anglesCos,
                z = o.spot.exponents,
                A = o.hemi.skyColors,
                B = o.hemi.groundColors,
                C = o.hemi.positions,
                D = 0,
                E = 0,
                F = 0,
                G = 0,
                H = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0,
                M = 0,
                N = 0,
                O = 0;
            for (c = 0, d = b.length; d > c; c++)
                if (e = b[c], !e.onlyShadow)
                    if (f = e.color, i = e.intensity, k = e.distance, e instanceof THREE.AmbientLight) {
                        if (!e.visible) continue;
                        Sb.gammaInput ? (l += f.r * f.r, m += f.g * f.g, n += f.b * f.b) : (l += f.r, m += f.g, n += f.b)
                    } else if (e instanceof THREE.DirectionalLight) {
                if (H += 1, !e.visible) continue;
                if (xc.getPositionFromMatrix(e.matrixWorld), wc.getPositionFromMatrix(e.target.matrixWorld), xc.sub(wc), xc.normalize(), 0 === xc.x && 0 === xc.y && 0 === xc.z) continue;
                L = 3 * D, q[L] = xc.x, q[L + 1] = xc.y, q[L + 2] = xc.z, Sb.gammaInput ? db(p, L, f, i * i) : eb(p, L, f, i), D += 1
            } else if (e instanceof THREE.PointLight) {
                if (I += 1, !e.visible) continue;
                M = 3 * E, Sb.gammaInput ? db(r, M, f, i * i) : eb(r, M, f, i), wc.getPositionFromMatrix(e.matrixWorld), s[M] = wc.x, s[M + 1] = wc.y, s[M + 2] = wc.z, t[E] = k, E += 1
            } else if (e instanceof THREE.SpotLight) {
                if (J += 1, !e.visible) continue;
                N = 3 * F, Sb.gammaInput ? db(u, N, f, i * i) : eb(u, N, f, i), wc.getPositionFromMatrix(e.matrixWorld), v[N] = wc.x, v[N + 1] = wc.y, v[N + 2] = wc.z, w[F] = k, xc.copy(wc), wc.getPositionFromMatrix(e.target.matrixWorld), xc.sub(wc), xc.normalize(), x[N] = xc.x, x[N + 1] = xc.y, x[N + 2] = xc.z, y[F] = Math.cos(e.angle), z[F] = e.exponent, F += 1
            } else if (e instanceof THREE.HemisphereLight) {
                if (K += 1, !e.visible) continue;
                if (xc.getPositionFromMatrix(e.matrixWorld), xc.normalize(), 0 === xc.x && 0 === xc.y && 0 === xc.z) continue;
                O = 3 * G, C[O] = xc.x, C[O + 1] = xc.y, C[O + 2] = xc.z, g = e.color, h = e.groundColor, Sb.gammaInput ? (j = i * i, db(A, O, g, j), db(B, O, h, j)) : (eb(A, O, g, i), eb(B, O, h, i)), G += 1
            }
            for (c = 3 * D, d = Math.max(p.length, 3 * H); d > c; c++) p[c] = 0;
            for (c = 3 * E, d = Math.max(r.length, 3 * I); d > c; c++) r[c] = 0;
            for (c = 3 * F, d = Math.max(u.length, 3 * J); d > c; c++) u[c] = 0;
            for (c = 3 * G, d = Math.max(A.length, 3 * K); d > c; c++) A[c] = 0;
            for (c = 3 * G, d = Math.max(B.length, 3 * K); d > c; c++) B[c] = 0;
            o.directional.length = D, o.point.length = E, o.spot.length = F, o.hemi.length = G, o.ambient[0] = l, o.ambient[1] = m, o.ambient[2] = n
        }

        function gb(a) {
            a !== lc && (Mb.lineWidth(a), lc = a)
        }

        function hb(a, b, c) {
            ic !== a && (a ? Mb.enable(Mb.POLYGON_OFFSET_FILL) : Mb.disable(Mb.POLYGON_OFFSET_FILL), ic = a), !a || jc === b && kc === c || (Mb.polygonOffset(b, c), jc = b, kc = c)
        }

        function ib(a) {
            var b, c, d = [];
            for (var e in a) b = a[e], b !== !1 && (c = "#define " + e + " " + b, d.push(c));
            return d.join("\n")
        }

        function jb(a, b, c, d, e, f, g) {
            var h, i, j, k, l, m = [];
            a ? m.push(a) : (m.push(b), m.push(c));
            for (j in f) m.push(j), m.push(f[j]);
            for (h in g) m.push(h), m.push(g[h]);
            for (l = m.join(), h = 0, i = Tb.length; i > h; h++) {
                var n = Tb[h];
                if (n.code === l) return n.usedTimes++, n.program
            }
            var o = "SHADOWMAP_TYPE_BASIC";
            g.shadowMapType === THREE.PCFShadowMap ? o = "SHADOWMAP_TYPE_PCF" : g.shadowMapType === THREE.PCFSoftShadowMap && (o = "SHADOWMAP_TYPE_PCF_SOFT");
            var p = ib(f);
            k = Mb.createProgram();
            var q = ["precision " + Eb + " float;", p, Ec ? "#define VERTEX_TEXTURES" : "", Sb.gammaInput ? "#define GAMMA_INPUT" : "", Sb.gammaOutput ? "#define GAMMA_OUTPUT" : "", Sb.physicallyBasedShading ? "#define PHYSICALLY_BASED_SHADING" : "", "#define MAX_DIR_LIGHTS " + g.maxDirLights, "#define MAX_POINT_LIGHTS " + g.maxPointLights, "#define MAX_SPOT_LIGHTS " + g.maxSpotLights, "#define MAX_HEMI_LIGHTS " + g.maxHemiLights, "#define MAX_SHADOWS " + g.maxShadows, "#define MAX_BONES " + g.maxBones, g.map ? "#define USE_MAP" : "", g.envMap ? "#define USE_ENVMAP" : "", g.lightMap ? "#define USE_LIGHTMAP" : "", g.bumpMap ? "#define USE_BUMPMAP" : "", g.normalMap ? "#define USE_NORMALMAP" : "", g.specularMap ? "#define USE_SPECULARMAP" : "", g.vertexColors ? "#define USE_COLOR" : "", g.skinning ? "#define USE_SKINNING" : "", g.useVertexTexture ? "#define BONE_TEXTURE" : "", g.boneTextureWidth ? "#define N_BONE_PIXEL_X " + g.boneTextureWidth.toFixed(1) : "", g.boneTextureHeight ? "#define N_BONE_PIXEL_Y " + g.boneTextureHeight.toFixed(1) : "", g.morphTargets ? "#define USE_MORPHTARGETS" : "", g.morphNormals ? "#define USE_MORPHNORMALS" : "", g.perPixel ? "#define PHONG_PER_PIXEL" : "", g.wrapAround ? "#define WRAP_AROUND" : "", g.doubleSided ? "#define DOUBLE_SIDED" : "", g.flipSided ? "#define FLIP_SIDED" : "", g.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", g.shadowMapEnabled ? "#define " + o : "", g.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", g.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", g.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "attribute vec2 uv2;", "#ifdef USE_COLOR", "attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "attribute vec3 morphTarget0;", "attribute vec3 morphTarget1;", "attribute vec3 morphTarget2;", "attribute vec3 morphTarget3;", "#ifdef USE_MORPHNORMALS", "attribute vec3 morphNormal0;", "attribute vec3 morphNormal1;", "attribute vec3 morphNormal2;", "attribute vec3 morphNormal3;", "#else", "attribute vec3 morphTarget4;", "attribute vec3 morphTarget5;", "attribute vec3 morphTarget6;", "attribute vec3 morphTarget7;", "#endif", "#endif", "#ifdef USE_SKINNING", "attribute vec4 skinIndex;", "attribute vec4 skinWeight;", "#endif", ""].join("\n"),
                r = ["precision " + Eb + " float;", g.bumpMap || g.normalMap ? "#extension GL_OES_standard_derivatives : enable" : "", p, "#define MAX_DIR_LIGHTS " + g.maxDirLights, "#define MAX_POINT_LIGHTS " + g.maxPointLights, "#define MAX_SPOT_LIGHTS " + g.maxSpotLights, "#define MAX_HEMI_LIGHTS " + g.maxHemiLights, "#define MAX_SHADOWS " + g.maxShadows, g.alphaTest ? "#define ALPHATEST " + g.alphaTest : "", Sb.gammaInput ? "#define GAMMA_INPUT" : "", Sb.gammaOutput ? "#define GAMMA_OUTPUT" : "", Sb.physicallyBasedShading ? "#define PHYSICALLY_BASED_SHADING" : "", g.useFog && g.fog ? "#define USE_FOG" : "", g.useFog && g.fogExp ? "#define FOG_EXP2" : "", g.map ? "#define USE_MAP" : "", g.envMap ? "#define USE_ENVMAP" : "", g.lightMap ? "#define USE_LIGHTMAP" : "", g.bumpMap ? "#define USE_BUMPMAP" : "", g.normalMap ? "#define USE_NORMALMAP" : "", g.specularMap ? "#define USE_SPECULARMAP" : "", g.vertexColors ? "#define USE_COLOR" : "", g.metal ? "#define METAL" : "", g.perPixel ? "#define PHONG_PER_PIXEL" : "", g.wrapAround ? "#define WRAP_AROUND" : "", g.doubleSided ? "#define DOUBLE_SIDED" : "", g.flipSided ? "#define FLIP_SIDED" : "", g.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", g.shadowMapEnabled ? "#define " + o : "", g.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", g.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", ""].join("\n"),
                s = nb("vertex", q + c),
                t = nb("fragment", r + b);
            Mb.attachShader(k, s), Mb.attachShader(k, t), Mb.linkProgram(k), Mb.getProgramParameter(k, Mb.LINK_STATUS) || console.error("Could not initialise shader\nVALIDATE_STATUS: " + Mb.getProgramParameter(k, Mb.VALIDATE_STATUS) + ", gl error [" + Mb.getError() + "]"), Mb.deleteShader(t), Mb.deleteShader(s), k.uniforms = {}, k.attributes = {};
            var u, v, w, x;
            u = ["viewMatrix", "modelViewMatrix", "projectionMatrix", "normalMatrix", "modelMatrix", "cameraPosition", "morphTargetInfluences"], u.push(g.useVertexTexture ? "boneTexture" : "boneGlobalMatrices");
            for (v in d) u.push(v);
            for (kb(k, u), u = ["position", "normal", "uv", "uv2", "tangent", "color", "skinIndex", "skinWeight", "lineDistance"], x = 0; x < g.maxMorphTargets; x++) u.push("morphTarget" + x);
            for (x = 0; x < g.maxMorphNormals; x++) u.push("morphNormal" + x);
            for (w in e) u.push(w);
            return lb(k, u), k.id = Ub++, Tb.push({
                program: k,
                code: l,
                usedTimes: 1
            }), Sb.info.memory.programs = Tb.length, k
        }

        function kb(a, b) {
            var c, d, e;
            for (c = 0, d = b.length; d > c; c++) e = b[c], a.uniforms[e] = Mb.getUniformLocation(a, e)
        }

        function lb(a, b) {
            var c, d, e;
            for (c = 0, d = b.length; d > c; c++) e = b[c], a.attributes[e] = Mb.getAttribLocation(a, e)
        }

        function mb(a) {
            for (var b = a.split("\n"), c = 0, d = b.length; d > c; c++) b[c] = c + 1 + ": " + b[c];
            return b.join("\n")
        }

        function nb(a, b) {
            var c;
            return "fragment" === a ? c = Mb.createShader(Mb.FRAGMENT_SHADER) : "vertex" === a && (c = Mb.createShader(Mb.VERTEX_SHADER)), Mb.shaderSource(c, b), Mb.compileShader(c), Mb.getShaderParameter(c, Mb.COMPILE_STATUS) ? c : (console.error(Mb.getShaderInfoLog(c)), console.error(mb(b)), null)
        }

        function ob(a) {
            return 0 === (a & a - 1)
        }

        function pb(a, b, c) {
            c ? (Mb.texParameteri(a, Mb.TEXTURE_WRAP_S, xb(b.wrapS)), Mb.texParameteri(a, Mb.TEXTURE_WRAP_T, xb(b.wrapT)), Mb.texParameteri(a, Mb.TEXTURE_MAG_FILTER, xb(b.magFilter)), Mb.texParameteri(a, Mb.TEXTURE_MIN_FILTER, xb(b.minFilter))) : (Mb.texParameteri(a, Mb.TEXTURE_WRAP_S, Mb.CLAMP_TO_EDGE), Mb.texParameteri(a, Mb.TEXTURE_WRAP_T, Mb.CLAMP_TO_EDGE), Mb.texParameteri(a, Mb.TEXTURE_MAG_FILTER, wb(b.magFilter)), Mb.texParameteri(a, Mb.TEXTURE_MIN_FILTER, wb(b.minFilter))), Qb && b.type !== THREE.FloatType && (b.anisotropy > 1 || b.__oldAnisotropy) && (Mb.texParameterf(a, Qb.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(b.anisotropy, Dc)), b.__oldAnisotropy = b.anisotropy)
        }

        function qb(a, b) {
            if (a.width <= b && a.height <= b) return a;
            var c = Math.max(a.width, a.height),
                d = Math.floor(a.width * b / c),
                e = Math.floor(a.height * b / c),
                f = document.createElement("canvas");
            f.width = d, f.height = e;
            var g = f.getContext("2d");
            return g.drawImage(a, 0, 0, a.width, a.height, 0, 0, d, e), f
        }

        function rb(a, b) {
            if (6 === a.image.length)
                if (a.needsUpdate) {
                    a.image.__webglTextureCube || (a.addEventListener("dispose", Nc), a.image.__webglTextureCube = Mb.createTexture(), Sb.info.memory.textures++), Mb.activeTexture(Mb.TEXTURE0 + b), Mb.bindTexture(Mb.TEXTURE_CUBE_MAP, a.image.__webglTextureCube), Mb.pixelStorei(Mb.UNPACK_FLIP_Y_WEBGL, a.flipY);
                    for (var c = a instanceof THREE.CompressedTexture, d = [], e = 0; 6 > e; e++) d[e] = Sb.autoScaleCubemaps && !c ? qb(a.image[e], Cc) : a.image[e];
                    var f = d[0],
                        g = ob(f.width) && ob(f.height),
                        h = xb(a.format),
                        i = xb(a.type);
                    pb(Mb.TEXTURE_CUBE_MAP, a, g);
                    for (var e = 0; 6 > e; e++)
                        if (c)
                            for (var j, k = d[e].mipmaps, l = 0, m = k.length; m > l; l++) j = k[l], Mb.compressedTexImage2D(Mb.TEXTURE_CUBE_MAP_POSITIVE_X + e, l, h, j.width, j.height, 0, j.data);
                        else Mb.texImage2D(Mb.TEXTURE_CUBE_MAP_POSITIVE_X + e, 0, h, h, i, d[e]);
                    a.generateMipmaps && g && Mb.generateMipmap(Mb.TEXTURE_CUBE_MAP), a.needsUpdate = !1, a.onUpdate && a.onUpdate()
                } else Mb.activeTexture(Mb.TEXTURE0 + b), Mb.bindTexture(Mb.TEXTURE_CUBE_MAP, a.image.__webglTextureCube)
        }

        function sb(a, b) {
            Mb.activeTexture(Mb.TEXTURE0 + b), Mb.bindTexture(Mb.TEXTURE_CUBE_MAP, a.__webglTexture)
        }

        function tb(a, b, c) {
            Mb.bindFramebuffer(Mb.FRAMEBUFFER, a), Mb.framebufferTexture2D(Mb.FRAMEBUFFER, Mb.COLOR_ATTACHMENT0, c, b.__webglTexture, 0)
        }

        function ub(a, b) {
            Mb.bindRenderbuffer(Mb.RENDERBUFFER, a), b.depthBuffer && !b.stencilBuffer ? (Mb.renderbufferStorage(Mb.RENDERBUFFER, Mb.DEPTH_COMPONENT16, b.width, b.height), Mb.framebufferRenderbuffer(Mb.FRAMEBUFFER, Mb.DEPTH_ATTACHMENT, Mb.RENDERBUFFER, a)) : b.depthBuffer && b.stencilBuffer ? (Mb.renderbufferStorage(Mb.RENDERBUFFER, Mb.DEPTH_STENCIL, b.width, b.height), Mb.framebufferRenderbuffer(Mb.FRAMEBUFFER, Mb.DEPTH_STENCIL_ATTACHMENT, Mb.RENDERBUFFER, a)) : Mb.renderbufferStorage(Mb.RENDERBUFFER, Mb.RGBA4, b.width, b.height)
        }

        function vb(a) {
            a instanceof THREE.WebGLRenderTargetCube ? (Mb.bindTexture(Mb.TEXTURE_CUBE_MAP, a.__webglTexture), Mb.generateMipmap(Mb.TEXTURE_CUBE_MAP), Mb.bindTexture(Mb.TEXTURE_CUBE_MAP, null)) : (Mb.bindTexture(Mb.TEXTURE_2D, a.__webglTexture), Mb.generateMipmap(Mb.TEXTURE_2D), Mb.bindTexture(Mb.TEXTURE_2D, null))
        }

        function wb(a) {
            return a === THREE.NearestFilter || a === THREE.NearestMipMapNearestFilter || a === THREE.NearestMipMapLinearFilter ? Mb.NEAREST : Mb.LINEAR
        }

        function xb(a) {
            if (a === THREE.RepeatWrapping) return Mb.REPEAT;
            if (a === THREE.ClampToEdgeWrapping) return Mb.CLAMP_TO_EDGE;
            if (a === THREE.MirroredRepeatWrapping) return Mb.MIRRORED_REPEAT;
            if (a === THREE.NearestFilter) return Mb.NEAREST;
            if (a === THREE.NearestMipMapNearestFilter) return Mb.NEAREST_MIPMAP_NEAREST;
            if (a === THREE.NearestMipMapLinearFilter) return Mb.NEAREST_MIPMAP_LINEAR;
            if (a === THREE.LinearFilter) return Mb.LINEAR;
            if (a === THREE.LinearMipMapNearestFilter) return Mb.LINEAR_MIPMAP_NEAREST;
            if (a === THREE.LinearMipMapLinearFilter) return Mb.LINEAR_MIPMAP_LINEAR;
            if (a === THREE.UnsignedByteType) return Mb.UNSIGNED_BYTE;
            if (a === THREE.UnsignedShort4444Type) return Mb.UNSIGNED_SHORT_4_4_4_4;
            if (a === THREE.UnsignedShort5551Type) return Mb.UNSIGNED_SHORT_5_5_5_1;
            if (a === THREE.UnsignedShort565Type) return Mb.UNSIGNED_SHORT_5_6_5;
            if (a === THREE.ByteType) return Mb.BYTE;
            if (a === THREE.ShortType) return Mb.SHORT;
            if (a === THREE.UnsignedShortType) return Mb.UNSIGNED_SHORT;
            if (a === THREE.IntType) return Mb.INT;
            if (a === THREE.UnsignedIntType) return Mb.UNSIGNED_INT;
            if (a === THREE.FloatType) return Mb.FLOAT;
            if (a === THREE.AlphaFormat) return Mb.ALPHA;
            if (a === THREE.RGBFormat) return Mb.RGB;
            if (a === THREE.RGBAFormat) return Mb.RGBA;
            if (a === THREE.LuminanceFormat) return Mb.LUMINANCE;
            if (a === THREE.LuminanceAlphaFormat) return Mb.LUMINANCE_ALPHA;
            if (a === THREE.AddEquation) return Mb.FUNC_ADD;
            if (a === THREE.SubtractEquation) return Mb.FUNC_SUBTRACT;
            if (a === THREE.ReverseSubtractEquation) return Mb.FUNC_REVERSE_SUBTRACT;
            if (a === THREE.ZeroFactor) return Mb.ZERO;
            if (a === THREE.OneFactor) return Mb.ONE;
            if (a === THREE.SrcColorFactor) return Mb.SRC_COLOR;
            if (a === THREE.OneMinusSrcColorFactor) return Mb.ONE_MINUS_SRC_COLOR;
            if (a === THREE.SrcAlphaFactor) return Mb.SRC_ALPHA;
            if (a === THREE.OneMinusSrcAlphaFactor) return Mb.ONE_MINUS_SRC_ALPHA;
            if (a === THREE.DstAlphaFactor) return Mb.DST_ALPHA;
            if (a === THREE.OneMinusDstAlphaFactor) return Mb.ONE_MINUS_DST_ALPHA;
            if (a === THREE.DstColorFactor) return Mb.DST_COLOR;
            if (a === THREE.OneMinusDstColorFactor) return Mb.ONE_MINUS_DST_COLOR;
            if (a === THREE.SrcAlphaSaturateFactor) return Mb.SRC_ALPHA_SATURATE;
            if (void 0 !== Rb) {
                if (a === THREE.RGB_S3TC_DXT1_Format) return Rb.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (a === THREE.RGBA_S3TC_DXT1_Format) return Rb.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (a === THREE.RGBA_S3TC_DXT3_Format) return Rb.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (a === THREE.RGBA_S3TC_DXT5_Format) return Rb.COMPRESSED_RGBA_S3TC_DXT5_EXT
            }
            return 0
        }

        function yb(a) {
            if (Fc && a && a.useVertexTexture) return 1024;
            var b = Mb.getParameter(Mb.MAX_VERTEX_UNIFORM_VECTORS),
                c = Math.floor((b - 20) / 4),
                d = c;
            return void 0 !== a && a instanceof THREE.SkinnedMesh && (d = Math.min(a.bones.length, d), d < a.bones.length && console.warn("WebGLRenderer: too many bones - " + a.bones.length + ", this GPU supports just " + d + " (try OpenGL instead of ANGLE)")), d
        }

        function zb(a) {
            for (var b = 0, c = 0, d = 0, e = 0, f = 0, g = a.length; g > f; f++) {
                var h = a[f];
                h.onlyShadow || (h instanceof THREE.DirectionalLight && b++, h instanceof THREE.PointLight && c++, h instanceof THREE.SpotLight && d++, h instanceof THREE.HemisphereLight && e++)
            }
            return {
                directional: b,
                point: c,
                spot: d,
                hemi: e
            }
        }

        function Ab(a) {
            for (var b = 0, c = 0, d = a.length; d > c; c++) {
                var e = a[c];
                e.castShadow && (e instanceof THREE.SpotLight && b++, e instanceof THREE.DirectionalLight && !e.shadowCascade && b++)
            }
            return b
        }

        function Bb() {
            try {
                if (!(Mb = Db.getContext("experimental-webgl", {
                        alpha: Fb,
                        premultipliedAlpha: Gb,
                        antialias: Hb,
                        stencil: Ib,
                        preserveDrawingBuffer: Jb
                    }))) throw "Error creating WebGL context."
            } catch (a) {
                console.error(a)
            }
            Nb = Mb.getExtension("OES_texture_float"), Ob = Mb.getExtension("OES_texture_float_linear"), Pb = Mb.getExtension("OES_standard_derivatives"), Qb = Mb.getExtension("EXT_texture_filter_anisotropic") || Mb.getExtension("MOZ_EXT_texture_filter_anisotropic") || Mb.getExtension("WEBKIT_EXT_texture_filter_anisotropic"), Rb = Mb.getExtension("WEBGL_compressed_texture_s3tc") || Mb.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || Mb.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"), Nb || console.log("THREE.WebGLRenderer: Float textures not supported."), Pb || console.log("THREE.WebGLRenderer: Standard derivatives not supported."), Qb || console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."), Rb || console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."), void 0 === Mb.getShaderPrecisionFormat && (Mb.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            })
        }

        function Cb() {
            Mb.clearColor(0, 0, 0, 1), Mb.clearDepth(1), Mb.clearStencil(0), Mb.enable(Mb.DEPTH_TEST), Mb.depthFunc(Mb.LEQUAL), Mb.frontFace(Mb.CCW), Mb.cullFace(Mb.BACK), Mb.enable(Mb.CULL_FACE), Mb.enable(Mb.BLEND), Mb.blendEquation(Mb.FUNC_ADD), Mb.blendFunc(Mb.SRC_ALPHA, Mb.ONE_MINUS_SRC_ALPHA), Mb.clearColor(Kb.r, Kb.g, Kb.b, Lb)
        }
        console.log("THREE.WebGLRenderer", THREE.REVISION), a = a || {};
        var Db = void 0 !== a.canvas ? a.canvas : document.createElement("canvas"),
            Eb = void 0 !== a.precision ? a.precision : "highp",
            Fb = void 0 !== a.alpha ? a.alpha : !0,
            Gb = void 0 !== a.premultipliedAlpha ? a.premultipliedAlpha : !0,
            Hb = void 0 !== a.antialias ? a.antialias : !1,
            Ib = void 0 !== a.stencil ? a.stencil : !0,
            Jb = void 0 !== a.preserveDrawingBuffer ? a.preserveDrawingBuffer : !1,
            Kb = new THREE.Color(0),
            Lb = 0;
        void 0 !== a.clearColor && (console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."), Kb.setHex(a.clearColor)), void 0 !== a.clearAlpha && (console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."), Lb = a.clearAlpha), this.domElement = Db, this.context = null, this.devicePixelRatio = void 0 !== a.devicePixelRatio ? a.devicePixelRatio : void 0 !== window.devicePixelRatio ? window.devicePixelRatio : 1, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.autoUpdateObjects = !0, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyBasedShading = !1, this.shadowMapEnabled = !1, this.shadowMapAutoUpdate = !0, this.shadowMapType = THREE.PCFShadowMap, this.shadowMapCullFace = THREE.CullFaceFront, this.shadowMapDebug = !1, this.shadowMapCascade = !1, this.maxMorphTargets = 8, this.maxMorphNormals = 4, this.autoScaleCubemaps = !0, this.renderPluginsPre = [], this.renderPluginsPost = [], this.info = {
            memory: {
                programs: 0,
                geometries: 0,
                textures: 0
            },
            render: {
                calls: 0,
                vertices: 0,
                faces: 0,
                points: 0
            }
        };
        var Mb, Nb, Ob, Pb, Qb, Rb, Sb = this,
            Tb = [],
            Ub = 0,
            Vb = null,
            Wb = null,
            Xb = -1,
            Yb = null,
            Zb = null,
            $b = 0,
            _b = 0,
            ac = -1,
            bc = -1,
            cc = -1,
            dc = -1,
            ec = -1,
            fc = -1,
            gc = -1,
            hc = -1,
            ic = null,
            jc = null,
            kc = null,
            lc = null,
            mc = 0,
            nc = 0,
            oc = 0,
            pc = 0,
            qc = 0,
            rc = 0,
            sc = {},
            tc = new THREE.Frustum,
            uc = new THREE.Matrix4,
            vc = new THREE.Matrix4,
            wc = new THREE.Vector3,
            xc = new THREE.Vector3,
            yc = !0,
            zc = {
                ambient: [0, 0, 0],
                directional: {
                    length: 0,
                    colors: new Array,
                    positions: new Array
                },
                point: {
                    length: 0,
                    colors: new Array,
                    positions: new Array,
                    distances: new Array
                },
                spot: {
                    length: 0,
                    colors: new Array,
                    positions: new Array,
                    distances: new Array,
                    directions: new Array,
                    anglesCos: new Array,
                    exponents: new Array
                },
                hemi: {
                    length: 0,
                    skyColors: new Array,
                    groundColors: new Array,
                    positions: new Array
                }
            };
        Bb(), Cb(), this.context = Mb;
        var Ac = Mb.getParameter(Mb.MAX_TEXTURE_IMAGE_UNITS),
            Bc = Mb.getParameter(Mb.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
            Cc = (Mb.getParameter(Mb.MAX_TEXTURE_SIZE), Mb.getParameter(Mb.MAX_CUBE_MAP_TEXTURE_SIZE)),
            Dc = Qb ? Mb.getParameter(Qb.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0,
            Ec = Bc > 0,
            Fc = Ec && Nb,
            Gc = (Rb ? Mb.getParameter(Mb.COMPRESSED_TEXTURE_FORMATS) : [], Mb.getShaderPrecisionFormat(Mb.VERTEX_SHADER, Mb.HIGH_FLOAT)),
            Hc = Mb.getShaderPrecisionFormat(Mb.VERTEX_SHADER, Mb.MEDIUM_FLOAT),
            Ic = (Mb.getShaderPrecisionFormat(Mb.VERTEX_SHADER, Mb.LOW_FLOAT), Mb.getShaderPrecisionFormat(Mb.FRAGMENT_SHADER, Mb.HIGH_FLOAT)),
            Jc = Mb.getShaderPrecisionFormat(Mb.FRAGMENT_SHADER, Mb.MEDIUM_FLOAT),
            Kc = (Mb.getShaderPrecisionFormat(Mb.FRAGMENT_SHADER, Mb.LOW_FLOAT), Mb.getShaderPrecisionFormat(Mb.VERTEX_SHADER, Mb.HIGH_INT), Mb.getShaderPrecisionFormat(Mb.VERTEX_SHADER, Mb.MEDIUM_INT), Mb.getShaderPrecisionFormat(Mb.VERTEX_SHADER, Mb.LOW_INT), Mb.getShaderPrecisionFormat(Mb.FRAGMENT_SHADER, Mb.HIGH_INT), Mb.getShaderPrecisionFormat(Mb.FRAGMENT_SHADER, Mb.MEDIUM_INT), Mb.getShaderPrecisionFormat(Mb.FRAGMENT_SHADER, Mb.LOW_INT), Gc.precision > 0 && Ic.precision > 0),
            Lc = Hc.precision > 0 && Jc.precision > 0;
        "highp" !== Eb || Kc || (Lc ? (Eb = "mediump", console.warn("WebGLRenderer: highp not supported, using mediump")) : (Eb = "lowp", console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))), "mediump" !== Eb || Lc || (Eb = "lowp", console.warn("WebGLRenderer: mediump not supported, using lowp")), this.getContext = function() {
            return Mb
        }, this.supportsVertexTextures = function() {
            return Ec
        }, this.supportsFloatTextures = function() {
            return Nb
        }, this.supportsStandardDerivatives = function() {
            return Pb
        }, this.supportsCompressedTextureS3TC = function() {
            return Rb
        }, this.getMaxAnisotropy = function() {
            return Dc
        }, this.getPrecision = function() {
            return Eb
        }, this.setSize = function(a, b, c) {
            Db.width = a * this.devicePixelRatio, Db.height = b * this.devicePixelRatio, 1 !== this.devicePixelRatio && c !== !1 && (Db.style.width = a + "px", Db.style.height = b + "px"), this.setViewport(0, 0, Db.width, Db.height)
        }, this.setViewport = function(a, b, c, d) {
            mc = void 0 !== a ? a : 0, nc = void 0 !== b ? b : 0, oc = void 0 !== c ? c : Db.width, pc = void 0 !== d ? d : Db.height, Mb.viewport(mc, nc, oc, pc)
        }, this.setScissor = function(a, b, c, d) {
            Mb.scissor(a, b, c, d)
        }, this.enableScissorTest = function(a) {
            a ? Mb.enable(Mb.SCISSOR_TEST) : Mb.disable(Mb.SCISSOR_TEST)
        }, this.setClearColor = function(a, b) {
            Kb.set(a), Lb = void 0 !== b ? b : 1, Mb.clearColor(Kb.r, Kb.g, Kb.b, Lb)
        }, this.setClearColorHex = function(a, b) {
            console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."), this.setClearColor(a, b)
        }, this.getClearColor = function() {
            return Kb
        }, this.getClearAlpha = function() {
            return Lb
        }, this.clear = function(a, b, c) {
            var d = 0;
            (void 0 === a || a) && (d |= Mb.COLOR_BUFFER_BIT), (void 0 === b || b) && (d |= Mb.DEPTH_BUFFER_BIT), (void 0 === c || c) && (d |= Mb.STENCIL_BUFFER_BIT), Mb.clear(d)
        }, this.clearTarget = function(a, b, c, d) {
            this.setRenderTarget(a), this.clear(b, c, d)
        }, this.addPostPlugin = function(a) {
            a.init(this), this.renderPluginsPost.push(a)
        }, this.addPrePlugin = function(a) {
            a.init(this), this.renderPluginsPre.push(a)
        }, this.updateShadowMap = function(a, b) {
            Vb = null, cc = -1, gc = -1, hc = -1, Yb = -1, Xb = -1, yc = !0, ac = -1, bc = -1, this.shadowMapPlugin.update(a, b)
        };
        var Mc = function(a) {
                var b = a.target;
                b.removeEventListener("dispose", Mc), Qc(b), Sb.info.memory.geometries--
            },
            Nc = function(a) {
                var b = a.target;
                b.removeEventListener("dispose", Nc), Rc(b), Sb.info.memory.textures--
            },
            Oc = function(a) {
                var b = a.target;
                b.removeEventListener("dispose", Oc), Sc(b), Sb.info.memory.textures--
            },
            Pc = function(a) {
                var b = a.target;
                b.removeEventListener("dispose", Pc), Tc(b)
            },
            Qc = function(a) {
                if (a.__webglInit = void 0, void 0 !== a.__webglVertexBuffer && Mb.deleteBuffer(a.__webglVertexBuffer), void 0 !== a.__webglNormalBuffer && Mb.deleteBuffer(a.__webglNormalBuffer), void 0 !== a.__webglTangentBuffer && Mb.deleteBuffer(a.__webglTangentBuffer), void 0 !== a.__webglColorBuffer && Mb.deleteBuffer(a.__webglColorBuffer), void 0 !== a.__webglUVBuffer && Mb.deleteBuffer(a.__webglUVBuffer), void 0 !== a.__webglUV2Buffer && Mb.deleteBuffer(a.__webglUV2Buffer), void 0 !== a.__webglSkinIndicesBuffer && Mb.deleteBuffer(a.__webglSkinIndicesBuffer), void 0 !== a.__webglSkinWeightsBuffer && Mb.deleteBuffer(a.__webglSkinWeightsBuffer), void 0 !== a.__webglFaceBuffer && Mb.deleteBuffer(a.__webglFaceBuffer), void 0 !== a.__webglLineBuffer && Mb.deleteBuffer(a.__webglLineBuffer), void 0 !== a.__webglLineDistanceBuffer && Mb.deleteBuffer(a.__webglLineDistanceBuffer), void 0 !== a.geometryGroups)
                    for (var b in a.geometryGroups) {
                        var c = a.geometryGroups[b];
                        if (void 0 !== c.numMorphTargets)
                            for (var d = 0, e = c.numMorphTargets; e > d; d++) Mb.deleteBuffer(c.__webglMorphTargetsBuffers[d]);
                        if (void 0 !== c.numMorphNormals)
                            for (var d = 0, e = c.numMorphNormals; e > d; d++) Mb.deleteBuffer(c.__webglMorphNormalsBuffers[d]);
                        f(c)
                    }
                f(a)
            },
            Rc = function(a) {
                if (a.image && a.image.__webglTextureCube) Mb.deleteTexture(a.image.__webglTextureCube);
                else {
                    if (!a.__webglInit) return;
                    a.__webglInit = !1, Mb.deleteTexture(a.__webglTexture)
                }
            },
            Sc = function(a) {
                if (a && a.__webglTexture)
                    if (Mb.deleteTexture(a.__webglTexture), a instanceof THREE.WebGLRenderTargetCube)
                        for (var b = 0; 6 > b; b++) Mb.deleteFramebuffer(a.__webglFramebuffer[b]), Mb.deleteRenderbuffer(a.__webglRenderbuffer[b]);
                    else Mb.deleteFramebuffer(a.__webglFramebuffer), Mb.deleteRenderbuffer(a.__webglRenderbuffer)
            },
            Tc = function(a) {
                var b = a.program;
                if (void 0 !== b) {
                    a.program = void 0;
                    var c, d, e, f = !1;
                    for (c = 0, d = Tb.length; d > c; c++)
                        if (e = Tb[c], e.program === b) {
                            e.usedTimes--, 0 === e.usedTimes && (f = !0);
                            break
                        }
                    if (f === !0) {
                        var g = [];
                        for (c = 0, d = Tb.length; d > c; c++) e = Tb[c], e.program !== b && g.push(e);
                        Tb = g, Mb.deleteProgram(b), Sb.info.memory.programs--
                    }
                }
            };
        this.renderBufferImmediate = function(a, b, c) {
            if (a.hasPositions && !a.__webglVertexBuffer && (a.__webglVertexBuffer = Mb.createBuffer()), a.hasNormals && !a.__webglNormalBuffer && (a.__webglNormalBuffer = Mb.createBuffer()), a.hasUvs && !a.__webglUvBuffer && (a.__webglUvBuffer = Mb.createBuffer()), a.hasColors && !a.__webglColorBuffer && (a.__webglColorBuffer = Mb.createBuffer()), a.hasPositions && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglVertexBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, a.positionArray, Mb.DYNAMIC_DRAW), Mb.enableVertexAttribArray(b.attributes.position), Mb.vertexAttribPointer(b.attributes.position, 3, Mb.FLOAT, !1, 0, 0)), a.hasNormals) {
                if (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglNormalBuffer), c.shading === THREE.FlatShading) {
                    var d, e, f, g, h, i, j, k, l, m, n, o, p, q, r = 3 * a.count;
                    for (q = 0; r > q; q += 9) p = a.normalArray, g = p[q], j = p[q + 1], m = p[q + 2], h = p[q + 3], k = p[q + 4], n = p[q + 5], i = p[q + 6], l = p[q + 7], o = p[q + 8], d = (g + h + i) / 3, e = (j + k + l) / 3, f = (m + n + o) / 3, p[q] = d, p[q + 1] = e, p[q + 2] = f, p[q + 3] = d, p[q + 4] = e, p[q + 5] = f, p[q + 6] = d, p[q + 7] = e, p[q + 8] = f
                }
                Mb.bufferData(Mb.ARRAY_BUFFER, a.normalArray, Mb.DYNAMIC_DRAW), Mb.enableVertexAttribArray(b.attributes.normal), Mb.vertexAttribPointer(b.attributes.normal, 3, Mb.FLOAT, !1, 0, 0)
            }
            a.hasUvs && c.map && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglUvBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, a.uvArray, Mb.DYNAMIC_DRAW), Mb.enableVertexAttribArray(b.attributes.uv), Mb.vertexAttribPointer(b.attributes.uv, 2, Mb.FLOAT, !1, 0, 0)), a.hasColors && c.vertexColors !== THREE.NoColors && (Mb.bindBuffer(Mb.ARRAY_BUFFER, a.__webglColorBuffer), Mb.bufferData(Mb.ARRAY_BUFFER, a.colorArray, Mb.DYNAMIC_DRAW), Mb.enableVertexAttribArray(b.attributes.color), Mb.vertexAttribPointer(b.attributes.color, 3, Mb.FLOAT, !1, 0, 0)), Mb.drawArrays(Mb.TRIANGLES, 0, a.count), a.count = 0
        }, this.renderBufferDirect = function(a, b, c, d, e, f) {
            if (d.visible !== !1) {
                var g, h, i, j, k = R(a, b, c, d, f),
                    l = k.attributes,
                    m = e.attributes,
                    n = !1,
                    o = d.wireframe ? 1 : 0,
                    p = 16777215 * e.id + 2 * k.id + o;
                if (p !== Yb && (Yb = p, n = !0), n && x(), f instanceof THREE.Mesh) {
                    var q = m.index;
                    if (q) {
                        var r = e.offsets;
                        r.length > 1 && (n = !0);
                        for (var s = 0, t = r.length; t > s; s++) {
                            var u = r[s].index;
                            if (n) {
                                for (h in m) "index" !== h && (i = l[h], g = m[h], j = g.itemSize, i >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, g.buffer), w(i), Mb.vertexAttribPointer(i, j, Mb.FLOAT, !1, 0, u * j * 4)));
                                Mb.bindBuffer(Mb.ELEMENT_ARRAY_BUFFER, q.buffer)
                            }
                            Mb.drawElements(Mb.TRIANGLES, r[s].count, Mb.UNSIGNED_SHORT, 2 * r[s].start), Sb.info.render.calls++, Sb.info.render.vertices += r[s].count, Sb.info.render.faces += r[s].count / 3
                        }
                    } else {
                        if (n)
                            for (h in m) "index" !== h && (i = l[h], g = m[h], j = g.itemSize, i >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, g.buffer), w(i), Mb.vertexAttribPointer(i, j, Mb.FLOAT, !1, 0, 0)));
                        var v = e.attributes.position;
                        Mb.drawArrays(Mb.TRIANGLES, 0, v.numItems / 3), Sb.info.render.calls++, Sb.info.render.vertices += v.numItems / 3, Sb.info.render.faces += v.numItems / 3 / 3
                    }
                } else if (f instanceof THREE.ParticleSystem) {
                    if (n) {
                        for (h in m) i = l[h], g = m[h], j = g.itemSize, i >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, g.buffer), w(i), Mb.vertexAttribPointer(i, j, Mb.FLOAT, !1, 0, 0));
                        var v = m.position;
                        Mb.drawArrays(Mb.POINTS, 0, v.numItems / 3), Sb.info.render.calls++, Sb.info.render.points += v.numItems / 3
                    }
                } else if (f instanceof THREE.Line && n) {
                    for (h in m) i = l[h], g = m[h], j = g.itemSize, i >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, g.buffer), w(i), Mb.vertexAttribPointer(i, j, Mb.FLOAT, !1, 0, 0));
                    var y = f.type === THREE.LineStrip ? Mb.LINE_STRIP : Mb.LINES;
                    gb(d.linewidth);
                    var v = m.position;
                    Mb.drawArrays(y, 0, v.numItems / 3), Sb.info.render.calls++, Sb.info.render.points += v.numItems
                }
            }
        }, this.renderBuffer = function(a, b, c, d, e, f) {
            if (d.visible !== !1) {
                var g, h, i, j = R(a, b, c, d, f),
                    k = j.attributes,
                    l = !1,
                    m = d.wireframe ? 1 : 0,
                    n = 16777215 * e.id + 2 * j.id + m;
                if (n !== Yb && (Yb = n, l = !0), l && x(), !d.morphTargets && k.position >= 0 ? l && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglVertexBuffer), w(k.position), Mb.vertexAttribPointer(k.position, 3, Mb.FLOAT, !1, 0, 0)) : f.morphTargetBase && y(d, e, f), l) {
                    if (e.__webglCustomAttributesList)
                        for (h = 0, i = e.__webglCustomAttributesList.length; i > h; h++) g = e.__webglCustomAttributesList[h], k[g.buffer.belongsToAttribute] >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, g.buffer), w(k[g.buffer.belongsToAttribute]), Mb.vertexAttribPointer(k[g.buffer.belongsToAttribute], g.size, Mb.FLOAT, !1, 0, 0));
                    k.color >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglColorBuffer), w(k.color), Mb.vertexAttribPointer(k.color, 3, Mb.FLOAT, !1, 0, 0)), k.normal >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglNormalBuffer), w(k.normal), Mb.vertexAttribPointer(k.normal, 3, Mb.FLOAT, !1, 0, 0)), k.tangent >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglTangentBuffer), w(k.tangent), Mb.vertexAttribPointer(k.tangent, 4, Mb.FLOAT, !1, 0, 0)), k.uv >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglUVBuffer), w(k.uv), Mb.vertexAttribPointer(k.uv, 2, Mb.FLOAT, !1, 0, 0)), k.uv2 >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglUV2Buffer), w(k.uv2), Mb.vertexAttribPointer(k.uv2, 2, Mb.FLOAT, !1, 0, 0)), d.skinning && k.skinIndex >= 0 && k.skinWeight >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglSkinIndicesBuffer), w(k.skinIndex), Mb.vertexAttribPointer(k.skinIndex, 4, Mb.FLOAT, !1, 0, 0), Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglSkinWeightsBuffer), w(k.skinWeight), Mb.vertexAttribPointer(k.skinWeight, 4, Mb.FLOAT, !1, 0, 0)), k.lineDistance >= 0 && (Mb.bindBuffer(Mb.ARRAY_BUFFER, e.__webglLineDistanceBuffer), w(k.lineDistance), Mb.vertexAttribPointer(k.lineDistance, 1, Mb.FLOAT, !1, 0, 0))
                }
                if (f instanceof THREE.Mesh) d.wireframe ? (gb(d.wireframeLinewidth), l && Mb.bindBuffer(Mb.ELEMENT_ARRAY_BUFFER, e.__webglLineBuffer), Mb.drawElements(Mb.LINES, e.__webglLineCount, Mb.UNSIGNED_SHORT, 0)) : (l && Mb.bindBuffer(Mb.ELEMENT_ARRAY_BUFFER, e.__webglFaceBuffer), Mb.drawElements(Mb.TRIANGLES, e.__webglFaceCount, Mb.UNSIGNED_SHORT, 0)), Sb.info.render.calls++, Sb.info.render.vertices += e.__webglFaceCount, Sb.info.render.faces += e.__webglFaceCount / 3;
                else if (f instanceof THREE.Line) {
                    var o = f.type === THREE.LineStrip ? Mb.LINE_STRIP : Mb.LINES;
                    gb(d.linewidth), Mb.drawArrays(o, 0, e.__webglLineCount), Sb.info.render.calls++
                } else f instanceof THREE.ParticleSystem ? (Mb.drawArrays(Mb.POINTS, 0, e.__webglParticleCount), Sb.info.render.calls++, Sb.info.render.points += e.__webglParticleCount) : f instanceof THREE.Ribbon && (Mb.drawArrays(Mb.TRIANGLE_STRIP, 0, e.__webglVertexCount), Sb.info.render.calls++)
            }
        }, this.render = function(a, b, c, d) {
            if (b instanceof THREE.Camera == !1) return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            var e, f, g, h, i, j = a.__lights,
                k = a.fog;
            for (Xb = -1, yc = !0, a.autoUpdate === !0 && a.updateMatrixWorld(), void 0 === b.parent && b.updateMatrixWorld(), b.matrixWorldInverse.getInverse(b.matrixWorld), uc.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse), tc.setFromMatrix(uc), this.autoUpdateObjects && this.initWebGLObjects(a), B(this.renderPluginsPre, a, b), Sb.info.render.calls = 0, Sb.info.render.vertices = 0, Sb.info.render.faces = 0, Sb.info.render.points = 0, this.setRenderTarget(c), (this.autoClear || d) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil), i = a.__webglObjects, e = 0, f = i.length; f > e; e++) g = i[e], h = g.object, g.id = e, g.render = !1, h.visible && ((h instanceof THREE.Mesh || h instanceof THREE.ParticleSystem) && h.frustumCulled && !tc.intersectsObject(h) || (cb(h, b), F(g), g.render = !0, this.sortObjects === !0 && (null !== h.renderDepth ? g.z = h.renderDepth : (wc.getPositionFromMatrix(h.matrixWorld), wc.applyProjection(uc), g.z = wc.z))));
            for (this.sortObjects && i.sort(z), i = a.__webglObjectsImmediate, e = 0, f = i.length; f > e; e++) g = i[e], h = g.object, h.visible && (cb(h, b), E(g));
            if (a.overrideMaterial) {
                var l = a.overrideMaterial;
                this.setBlending(l.blending, l.blendEquation, l.blendSrc, l.blendDst), this.setDepthTest(l.depthTest), this.setDepthWrite(l.depthWrite), hb(l.polygonOffset, l.polygonOffsetFactor, l.polygonOffsetUnits), C(a.__webglObjects, !1, "", b, j, k, !0, l), D(a.__webglObjectsImmediate, "", b, j, k, !1, l)
            } else {
                var l = null;
                this.setBlending(THREE.NoBlending), C(a.__webglObjects, !0, "opaque", b, j, k, !1, l), D(a.__webglObjectsImmediate, "opaque", b, j, k, !1, l), C(a.__webglObjects, !1, "transparent", b, j, k, !0, l), D(a.__webglObjectsImmediate, "transparent", b, j, k, !0, l)
            }
            B(this.renderPluginsPost, a, b), c && c.generateMipmaps && c.minFilter !== THREE.NearestFilter && c.minFilter !== THREE.LinearFilter && vb(c), this.setDepthTest(!0), this.setDepthWrite(!0)
        }, this.renderImmediateObject = function(a, b, c, d, e) {
            var f = R(a, b, c, d, e);
            Yb = -1, Sb.setMaterialFaces(d), e.immediateRenderCallback ? e.immediateRenderCallback(f, Mb, tc) : e.render(function(a) {
                Sb.renderBufferImmediate(a, f, d)
            })
        }, this.initWebGLObjects = function(a) {
            for (a.__webglObjects || (a.__webglObjects = [], a.__webglObjectsImmediate = [], a.__webglSprites = [], a.__webglFlares = []); a.__objectsAdded.length;) H(a.__objectsAdded[0], a), a.__objectsAdded.splice(0, 1);
            for (; a.__objectsRemoved.length;) N(a.__objectsRemoved[0], a), a.__objectsRemoved.splice(0, 1);
            for (var b = 0, c = a.__webglObjects.length; c > b; b++) {
                var d = a.__webglObjects[b].object;
                void 0 === d.__webglInit && (void 0 !== d.__webglActive && N(d, a), H(d, a)), K(d)
            }
        }, this.initMaterial = function(a, b, c, d) {
            a.addEventListener("dispose", Pc);
            var e, f, g, h, i, j, k;
            a instanceof THREE.MeshDepthMaterial ? k = "depth" : a instanceof THREE.MeshNormalMaterial ? k = "normal" : a instanceof THREE.MeshBasicMaterial ? k = "basic" : a instanceof THREE.MeshLambertMaterial ? k = "lambert" : a instanceof THREE.MeshPhongMaterial ? k = "phong" : a instanceof THREE.LineBasicMaterial ? k = "basic" : a instanceof THREE.LineDashedMaterial ? k = "dashed" : a instanceof THREE.ParticleBasicMaterial && (k = "particle_basic"), k && Q(a, THREE.ShaderLib[k]), h = zb(b), j = Ab(b), i = yb(d), g = {
                map: !!a.map,
                envMap: !!a.envMap,
                lightMap: !!a.lightMap,
                bumpMap: !!a.bumpMap,
                normalMap: !!a.normalMap,
                specularMap: !!a.specularMap,
                vertexColors: a.vertexColors,
                fog: c,
                useFog: a.fog,
                fogExp: c instanceof THREE.FogExp2,
                sizeAttenuation: a.sizeAttenuation,
                skinning: a.skinning,
                maxBones: i,
                useVertexTexture: Fc && d && d.useVertexTexture,
                boneTextureWidth: d && d.boneTextureWidth,
                boneTextureHeight: d && d.boneTextureHeight,
                morphTargets: a.morphTargets,
                morphNormals: a.morphNormals,
                maxMorphTargets: this.maxMorphTargets,
                maxMorphNormals: this.maxMorphNormals,
                maxDirLights: h.directional,
                maxPointLights: h.point,
                maxSpotLights: h.spot,
                maxHemiLights: h.hemi,
                maxShadows: j,
                shadowMapEnabled: this.shadowMapEnabled && d.receiveShadow,
                shadowMapType: this.shadowMapType,
                shadowMapDebug: this.shadowMapDebug,
                shadowMapCascade: this.shadowMapCascade,
                alphaTest: a.alphaTest,
                metal: a.metal,
                perPixel: a.perPixel,
                wrapAround: a.wrapAround,
                doubleSided: a.side === THREE.DoubleSide,
                flipSided: a.side === THREE.BackSide
            }, a.program = jb(k, a.fragmentShader, a.vertexShader, a.uniforms, a.attributes, a.defines, g);
            var l = a.program.attributes;
            if (a.morphTargets) {
                a.numSupportedMorphTargets = 0;
                var m, n = "morphTarget";
                for (f = 0; f < this.maxMorphTargets; f++) m = n + f, l[m] >= 0 && a.numSupportedMorphTargets++
            }
            if (a.morphNormals) {
                a.numSupportedMorphNormals = 0;
                var m, n = "morphNormal";
                for (f = 0; f < this.maxMorphNormals; f++) m = n + f, l[m] >= 0 && a.numSupportedMorphNormals++
            }
            a.uniformsList = [];
            for (e in a.uniforms) a.uniformsList.push([a.uniforms[e], e])
        }, this.setFaceCulling = function(a, b) {
            a === THREE.CullFaceNone ? Mb.disable(Mb.CULL_FACE) : (Mb.frontFace(b === THREE.FrontFaceDirectionCW ? Mb.CW : Mb.CCW), Mb.cullFace(a === THREE.CullFaceBack ? Mb.BACK : a === THREE.CullFaceFront ? Mb.FRONT : Mb.FRONT_AND_BACK), Mb.enable(Mb.CULL_FACE))
        }, this.setMaterialFaces = function(a) {
            var b = a.side === THREE.DoubleSide,
                c = a.side === THREE.BackSide;
            ac !== b && (b ? Mb.disable(Mb.CULL_FACE) : Mb.enable(Mb.CULL_FACE), ac = b), bc !== c && (Mb.frontFace(c ? Mb.CW : Mb.CCW), bc = c)
        }, this.setDepthTest = function(a) {
            gc !== a && (a ? Mb.enable(Mb.DEPTH_TEST) : Mb.disable(Mb.DEPTH_TEST), gc = a)
        }, this.setDepthWrite = function(a) {
            hc !== a && (Mb.depthMask(a), hc = a)
        }, this.setBlending = function(a, b, c, d) {
            a !== cc && (a === THREE.NoBlending ? Mb.disable(Mb.BLEND) : a === THREE.AdditiveBlending ? (Mb.enable(Mb.BLEND), Mb.blendEquation(Mb.FUNC_ADD), Mb.blendFunc(Mb.SRC_ALPHA, Mb.ONE)) : a === THREE.SubtractiveBlending ? (Mb.enable(Mb.BLEND), Mb.blendEquation(Mb.FUNC_ADD), Mb.blendFunc(Mb.ZERO, Mb.ONE_MINUS_SRC_COLOR)) : a === THREE.MultiplyBlending ? (Mb.enable(Mb.BLEND), Mb.blendEquation(Mb.FUNC_ADD), Mb.blendFunc(Mb.ZERO, Mb.SRC_COLOR)) : a === THREE.CustomBlending ? Mb.enable(Mb.BLEND) : (Mb.enable(Mb.BLEND), Mb.blendEquationSeparate(Mb.FUNC_ADD, Mb.FUNC_ADD), Mb.blendFuncSeparate(Mb.SRC_ALPHA, Mb.ONE_MINUS_SRC_ALPHA, Mb.ONE, Mb.ONE_MINUS_SRC_ALPHA)), cc = a), a === THREE.CustomBlending ? (b !== dc && (Mb.blendEquation(xb(b)), dc = b), (c !== ec || d !== fc) && (Mb.blendFunc(xb(c), xb(d)), ec = c, fc = d)) : (dc = null, ec = null, fc = null)
        }, this.setTexture = function(a, b) {
            if (a.needsUpdate) {
                a.__webglInit || (a.__webglInit = !0, a.addEventListener("dispose", Nc), a.__webglTexture = Mb.createTexture(), Sb.info.memory.textures++), Mb.activeTexture(Mb.TEXTURE0 + b), Mb.bindTexture(Mb.TEXTURE_2D, a.__webglTexture), Mb.pixelStorei(Mb.UNPACK_FLIP_Y_WEBGL, a.flipY), Mb.pixelStorei(Mb.UNPACK_PREMULTIPLY_ALPHA_WEBGL, a.premultiplyAlpha), Mb.pixelStorei(Mb.UNPACK_ALIGNMENT, a.unpackAlignment);
                var c = a.image,
                    d = ob(c.width) && ob(c.height),
                    e = xb(a.format),
                    f = xb(a.type);
                pb(Mb.TEXTURE_2D, a, d);
                var g, h = a.mipmaps;
                if (a instanceof THREE.DataTexture)
                    if (h.length > 0 && d) {
                        for (var i = 0, j = h.length; j > i; i++) g = h[i], Mb.texImage2D(Mb.TEXTURE_2D, i, e, g.width, g.height, 0, e, f, g.data);
                        a.generateMipmaps = !1
                    } else Mb.texImage2D(Mb.TEXTURE_2D, 0, e, c.width, c.height, 0, e, f, c.data);
                else if (a instanceof THREE.CompressedTexture)
                    for (var i = 0, j = h.length; j > i; i++) g = h[i], Mb.compressedTexImage2D(Mb.TEXTURE_2D, i, e, g.width, g.height, 0, g.data);
                else if (h.length > 0 && d) {
                    for (var i = 0, j = h.length; j > i; i++) g = h[i], Mb.texImage2D(Mb.TEXTURE_2D, i, e, e, f, g);
                    a.generateMipmaps = !1
                } else Mb.texImage2D(Mb.TEXTURE_2D, 0, e, e, f, a.image);
                a.generateMipmaps && d && Mb.generateMipmap(Mb.TEXTURE_2D), a.needsUpdate = !1, a.onUpdate && a.onUpdate()
            } else Mb.activeTexture(Mb.TEXTURE0 + b), Mb.bindTexture(Mb.TEXTURE_2D, a.__webglTexture)
        }, this.setRenderTarget = function(a) {
            var b = a instanceof THREE.WebGLRenderTargetCube;
            if (a && !a.__webglFramebuffer) {
                void 0 === a.depthBuffer && (a.depthBuffer = !0), void 0 === a.stencilBuffer && (a.stencilBuffer = !0), a.addEventListener("dispose", Oc), a.__webglTexture = Mb.createTexture(), Sb.info.memory.textures++;
                var c = ob(a.width) && ob(a.height),
                    d = xb(a.format),
                    e = xb(a.type);
                if (b) {
                    a.__webglFramebuffer = [], a.__webglRenderbuffer = [], Mb.bindTexture(Mb.TEXTURE_CUBE_MAP, a.__webglTexture), pb(Mb.TEXTURE_CUBE_MAP, a, c);
                    for (var f = 0; 6 > f; f++) a.__webglFramebuffer[f] = Mb.createFramebuffer(), a.__webglRenderbuffer[f] = Mb.createRenderbuffer(), Mb.texImage2D(Mb.TEXTURE_CUBE_MAP_POSITIVE_X + f, 0, d, a.width, a.height, 0, d, e, null), tb(a.__webglFramebuffer[f], a, Mb.TEXTURE_CUBE_MAP_POSITIVE_X + f), ub(a.__webglRenderbuffer[f], a);
                    c && Mb.generateMipmap(Mb.TEXTURE_CUBE_MAP)
                } else a.__webglFramebuffer = Mb.createFramebuffer(), a.__webglRenderbuffer = a.shareDepthFrom ? a.shareDepthFrom.__webglRenderbuffer : Mb.createRenderbuffer(), Mb.bindTexture(Mb.TEXTURE_2D, a.__webglTexture), pb(Mb.TEXTURE_2D, a, c), Mb.texImage2D(Mb.TEXTURE_2D, 0, d, a.width, a.height, 0, d, e, null), tb(a.__webglFramebuffer, a, Mb.TEXTURE_2D), a.shareDepthFrom ? a.depthBuffer && !a.stencilBuffer ? Mb.framebufferRenderbuffer(Mb.FRAMEBUFFER, Mb.DEPTH_ATTACHMENT, Mb.RENDERBUFFER, a.__webglRenderbuffer) : a.depthBuffer && a.stencilBuffer && Mb.framebufferRenderbuffer(Mb.FRAMEBUFFER, Mb.DEPTH_STENCIL_ATTACHMENT, Mb.RENDERBUFFER, a.__webglRenderbuffer) : ub(a.__webglRenderbuffer, a), c && Mb.generateMipmap(Mb.TEXTURE_2D);
                b ? Mb.bindTexture(Mb.TEXTURE_CUBE_MAP, null) : Mb.bindTexture(Mb.TEXTURE_2D, null), Mb.bindRenderbuffer(Mb.RENDERBUFFER, null), Mb.bindFramebuffer(Mb.FRAMEBUFFER, null)
            }
            var g, h, i, j, k;
            a ? (g = b ? a.__webglFramebuffer[a.activeCubeFace] : a.__webglFramebuffer, h = a.width, i = a.height, j = 0, k = 0) : (g = null, h = oc, i = pc, j = mc, k = nc), g !== Wb && (Mb.bindFramebuffer(Mb.FRAMEBUFFER, g), Mb.viewport(j, k, h, i), Wb = g), qc = h, rc = i
        }, this.shadowMapPlugin = new THREE.ShadowMapPlugin, this.addPrePlugin(this.shadowMapPlugin), this.addPostPlugin(new THREE.SpritePlugin), this.addPostPlugin(new THREE.LensFlarePlugin)
    }, THREE.WebGLRenderTarget = function(a, b, c) {
        this.width = a, this.height = b, c = c || {}, this.wrapS = void 0 !== c.wrapS ? c.wrapS : THREE.ClampToEdgeWrapping, this.wrapT = void 0 !== c.wrapT ? c.wrapT : THREE.ClampToEdgeWrapping, this.magFilter = void 0 !== c.magFilter ? c.magFilter : THREE.LinearFilter, this.minFilter = void 0 !== c.minFilter ? c.minFilter : THREE.LinearMipMapLinearFilter, this.anisotropy = void 0 !== c.anisotropy ? c.anisotropy : 1, this.offset = new THREE.Vector2(0, 0), this.repeat = new THREE.Vector2(1, 1), this.format = void 0 !== c.format ? c.format : THREE.RGBAFormat, this.type = void 0 !== c.type ? c.type : THREE.UnsignedByteType, this.depthBuffer = void 0 !== c.depthBuffer ? c.depthBuffer : !0, this.stencilBuffer = void 0 !== c.stencilBuffer ? c.stencilBuffer : !0, this.generateMipmaps = !0, this.shareDepthFrom = null
    }, THREE.WebGLRenderTarget.prototype = {
        constructor: THREE.WebGLRenderTarget,
        clone: function() {
            var a = new THREE.WebGLRenderTarget(this.width, this.height);
            return a.wrapS = this.wrapS, a.wrapT = this.wrapT, a.magFilter = this.magFilter, a.minFilter = this.minFilter, a.anisotropy = this.anisotropy, a.offset.copy(this.offset), a.repeat.copy(this.repeat), a.format = this.format, a.type = this.type, a.depthBuffer = this.depthBuffer, a.stencilBuffer = this.stencilBuffer, a.generateMipmaps = this.generateMipmaps, a.shareDepthFrom = this.shareDepthFrom, a
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype), THREE.WebGLRenderTargetCube = function(a, b, c) {
        THREE.WebGLRenderTarget.call(this, a, b, c), this.activeCubeFace = 0
    }, THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype), THREE.RenderableVertex = function() {
        this.positionWorld = new THREE.Vector3, this.positionScreen = new THREE.Vector4, this.visible = !0
    }, THREE.RenderableVertex.prototype.copy = function(a) {
        this.positionWorld.copy(a.positionWorld), this.positionScreen.copy(a.positionScreen)
    }, THREE.RenderableFace3 = function() {
        this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.v3 = new THREE.RenderableVertex, this.centroidModel = new THREE.Vector3, this.normalModel = new THREE.Vector3, this.normalModelView = new THREE.Vector3, this.vertexNormalsLength = 0, this.vertexNormalsModel = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3], this.vertexNormalsModelView = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3], this.color = null, this.material = null, this.uvs = [
            []
        ], this.z = 0
    }, THREE.RenderableFace4 = function() {
        this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.v3 = new THREE.RenderableVertex, this.v4 = new THREE.RenderableVertex, this.centroidModel = new THREE.Vector3, this.normalModel = new THREE.Vector3, this.normalModelView = new THREE.Vector3, this.vertexNormalsLength = 0, this.vertexNormalsModel = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3], this.vertexNormalsModelView = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3], this.color = null, this.material = null, this.uvs = [
            []
        ], this.z = 0
    }, THREE.RenderableObject = function() {
        this.id = 0, this.object = null, this.z = 0
    }, THREE.RenderableParticle = function() {
        this.id = 0, this.object = null, this.x = 0, this.y = 0, this.z = 0, this.rotation = null, this.scale = new THREE.Vector2, this.material = null
    }, THREE.RenderableLine = function() {
        this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.vertexColors = [new THREE.Color, new THREE.Color], this.material = null, this.z = 0
    }, THREE.GeometryUtils = {
        merge: function(a, b, c) {
            var d, e, f = a.vertices.length,
                g = (a.faceVertexUvs[0].length, b instanceof THREE.Mesh ? b.geometry : b),
                h = a.vertices,
                i = g.vertices,
                j = a.faces,
                k = g.faces,
                l = a.faceVertexUvs[0],
                m = g.faceVertexUvs[0];
            void 0 === c && (c = 0), b instanceof THREE.Mesh && (b.matrixAutoUpdate && b.updateMatrix(), d = b.matrix, e = (new THREE.Matrix3).getNormalMatrix(d));
            for (var n = 0, o = i.length; o > n; n++) {
                var p = i[n],
                    q = p.clone();
                d && q.applyMatrix4(d), h.push(q)
            }
            for (n = 0, o = k.length; o > n; n++) {
                var r, s, t, u = k[n],
                    v = u.vertexNormals,
                    w = u.vertexColors;
                u instanceof THREE.Face3 ? r = new THREE.Face3(u.a + f, u.b + f, u.c + f) : u instanceof THREE.Face4 && (r = new THREE.Face4(u.a + f, u.b + f, u.c + f, u.d + f)), r.normal.copy(u.normal), e && r.normal.applyMatrix3(e).normalize();
                for (var x = 0, y = v.length; y > x; x++) s = v[x].clone(), e && s.applyMatrix3(e).normalize(), r.vertexNormals.push(s);
                r.color.copy(u.color);
                for (var x = 0, y = w.length; y > x; x++) t = w[x], r.vertexColors.push(t.clone());
                r.materialIndex = u.materialIndex + c, r.centroid.copy(u.centroid), d && r.centroid.applyMatrix4(d), j.push(r)
            }
            for (n = 0, o = m.length; o > n; n++) {
                for (var z = m[n], A = [], x = 0, y = z.length; y > x; x++) A.push(new THREE.Vector2(z[x].x, z[x].y));
                l.push(A)
            }
        },
        removeMaterials: function(a, b) {
            for (var c = {}, d = 0, e = b.length; e > d; d++) c[b[d]] = !0;
            for (var f, g = [], d = 0, e = a.faces.length; e > d; d++) f = a.faces[d], f.materialIndex in c || g.push(f);
            a.faces = g
        },
        randomPointInTriangle: function() {
            var a = new THREE.Vector3;
            return function(b, c, d) {
                var e = new THREE.Vector3,
                    f = THREE.Math.random16(),
                    g = THREE.Math.random16();
                f + g > 1 && (f = 1 - f, g = 1 - g);
                var h = 1 - f - g;
                return e.copy(b), e.multiplyScalar(f), a.copy(c), a.multiplyScalar(g), e.add(a), a.copy(d), a.multiplyScalar(h), e.add(a), e
            }
        }(),
        randomPointInFace: function(a, b, c) {
            var d, e, f, g;
            if (a instanceof THREE.Face3) return d = b.vertices[a.a], e = b.vertices[a.b], f = b.vertices[a.c], THREE.GeometryUtils.randomPointInTriangle(d, e, f);
            if (a instanceof THREE.Face4) {
                d = b.vertices[a.a], e = b.vertices[a.b], f = b.vertices[a.c], g = b.vertices[a.d];
                var h, i;
                c ? a._area1 && a._area2 ? (h = a._area1, i = a._area2) : (h = THREE.GeometryUtils.triangleArea(d, e, g), i = THREE.GeometryUtils.triangleArea(e, f, g), a._area1 = h, a._area2 = i) : (h = THREE.GeometryUtils.triangleArea(d, e, g), i = THREE.GeometryUtils.triangleArea(e, f, g));
                var j = THREE.Math.random16() * (h + i);
                return h > j ? THREE.GeometryUtils.randomPointInTriangle(d, e, g) : THREE.GeometryUtils.randomPointInTriangle(e, f, g)
            }
        },
        randomPointsInGeometry: function(a, b) {
            function c(a) {
                function b(c, d) {
                    if (c > d) return c;
                    var e = c + Math.floor((d - c) / 2);
                    return n[e] > a ? b(c, e - 1) : n[e] < a ? b(e + 1, d) : e
                }
                var c = b(0, n.length - 1);
                return c
            }
            var d, e, f, g, h, i, j = a.faces,
                k = a.vertices,
                l = j.length,
                m = 0,
                n = [];
            for (e = 0; l > e; e++) d = j[e], d instanceof THREE.Face3 ? (f = k[d.a], g = k[d.b], h = k[d.c], d._area = THREE.GeometryUtils.triangleArea(f, g, h)) : d instanceof THREE.Face4 && (f = k[d.a], g = k[d.b], h = k[d.c], i = k[d.d], d._area1 = THREE.GeometryUtils.triangleArea(f, g, i), d._area2 = THREE.GeometryUtils.triangleArea(g, h, i), d._area = d._area1 + d._area2), m += d._area, n[e] = m;
            var o, p, q = [],
                r = {};
            for (e = 0; b > e; e++) o = THREE.Math.random16() * m, p = c(o), q[e] = THREE.GeometryUtils.randomPointInFace(j[p], a, !0), r[p] ? r[p] += 1 : r[p] = 1;
            return q
        },
        triangleArea: function() {
            var a = new THREE.Vector3,
                b = new THREE.Vector3;
            return function(c, d, e) {
                return a.subVectors(d, c), b.subVectors(e, c), a.cross(b), .5 * a.length()
            }
        }(),
        center: function(a) {
            a.computeBoundingBox();
            var b = a.boundingBox,
                c = new THREE.Vector3;
            return c.addVectors(b.min, b.max), c.multiplyScalar(-.5), a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x, c.y, c.z)), a.computeBoundingBox(), c
        },
        triangulateQuads: function(a) {
            var b, c, d, e, f = [],
                g = [],
                h = [];
            for (b = 0, c = a.faceUvs.length; c > b; b++) g[b] = [];
            for (b = 0, c = a.faceVertexUvs.length; c > b; b++) h[b] = [];
            for (b = 0, c = a.faces.length; c > b; b++) {
                var i = a.faces[b];
                if (i instanceof THREE.Face4) {
                    var j = i.a,
                        k = i.b,
                        l = i.c,
                        m = i.d,
                        n = new THREE.Face3,
                        o = new THREE.Face3;
                    for (n.color.copy(i.color), o.color.copy(i.color), n.materialIndex = i.materialIndex, o.materialIndex = i.materialIndex, n.a = j, n.b = k, n.c = m, o.a = k, o.b = l, o.c = m, 4 === i.vertexColors.length && (n.vertexColors[0] = i.vertexColors[0].clone(), n.vertexColors[1] = i.vertexColors[1].clone(), n.vertexColors[2] = i.vertexColors[3].clone(), o.vertexColors[0] = i.vertexColors[1].clone(), o.vertexColors[1] = i.vertexColors[2].clone(), o.vertexColors[2] = i.vertexColors[3].clone()), f.push(n, o), d = 0, e = a.faceVertexUvs.length; e > d; d++)
                        if (a.faceVertexUvs[d].length) {
                            var p = a.faceVertexUvs[d][b],
                                q = p[0],
                                r = p[1],
                                s = p[2],
                                t = p[3],
                                u = [q.clone(), r.clone(), t.clone()],
                                v = [r.clone(), s.clone(), t.clone()];
                            h[d].push(u, v)
                        }
                    for (d = 0, e = a.faceUvs.length; e > d; d++)
                        if (a.faceUvs[d].length) {
                            var w = a.faceUvs[d][b];
                            g[d].push(w, w)
                        }
                } else {
                    for (f.push(i), d = 0, e = a.faceUvs.length; e > d; d++) g[d].push(a.faceUvs[d][b]);
                    for (d = 0, e = a.faceVertexUvs.length; e > d; d++) h[d].push(a.faceVertexUvs[d][b])
                }
            }
            a.faces = f, a.faceUvs = g, a.faceVertexUvs = h, a.computeCentroids(), a.computeFaceNormals(), a.computeVertexNormals(), a.hasTangents && a.computeTangents()
        },
        setMaterialIndex: function(a, b, c, d) {
            for (var e = a.faces, f = c || 0, g = d || e.length - 1, h = f; g >= h; h++) e[h].materialIndex = b
        }
    }, THREE.ImageUtils = {
        crossOrigin: "anonymous",
        loadTexture: function(a, b, c) {
            var d = new Image,
                e = new THREE.Texture(d, b),
                f = new THREE.ImageLoader;
            return f.crossOrigin = this.crossOrigin, f.load(a, function(a) {
                e.image = a, e.needsUpdate = !0, c && c(e)
            }), e.sourceFile = a, e
        },
        loadCompressedTexture: function(a, b, c, d) {
            var e = new THREE.CompressedTexture;
            e.mapping = b;
            var f = new XMLHttpRequest;
            return f.onload = function() {
                var a = f.response,
                    b = THREE.ImageUtils.parseDDS(a, !0);
                e.format = b.format, e.mipmaps = b.mipmaps, e.image.width = b.width, e.image.height = b.height, e.generateMipmaps = !1, e.needsUpdate = !0, c && c(e)
            }, f.onerror = d, f.open("GET", a, !0), f.responseType = "arraybuffer", f.send(null), e
        },
        loadTextureCube: function(a, b, c, d) {
            var e = [];
            e.loadCount = 0;
            var f = new THREE.Texture;
            f.image = e, void 0 !== b && (f.mapping = b), f.flipY = !1;
            for (var g = 0, h = a.length; h > g; ++g) {
                var i = new Image;
                e[g] = i, i.onload = function() {
                    e.loadCount += 1, 6 === e.loadCount && (f.needsUpdate = !0, c && c(f))
                }, i.onerror = d, i.crossOrigin = this.crossOrigin, i.src = a[g]
            }
            return f
        },
        loadCompressedTextureCube: function(a, b, c, d) {
            var e = [];
            e.loadCount = 0;
            var f = new THREE.CompressedTexture;
            f.image = e, void 0 !== b && (f.mapping = b), f.flipY = !1, f.generateMipmaps = !1;
            var g = function(a, b) {
                return function() {
                    var d = a.response,
                        g = THREE.ImageUtils.parseDDS(d, !0);
                    b.format = g.format, b.mipmaps = g.mipmaps, b.width = g.width, b.height = g.height, e.loadCount += 1, 6 === e.loadCount && (f.format = g.format, f.needsUpdate = !0, c && c(f))
                }
            };
            if (a instanceof Array)
                for (var h = 0, i = a.length; i > h; ++h) {
                    var j = {};
                    e[h] = j;
                    var k = new XMLHttpRequest;
                    k.onload = g(k, j), k.onerror = d;
                    var l = a[h];
                    k.open("GET", l, !0), k.responseType = "arraybuffer", k.send(null)
                } else {
                    var l = a,
                        k = new XMLHttpRequest;
                    k.onload = function() {
                        var a = k.response,
                            b = THREE.ImageUtils.parseDDS(a, !0);
                        if (b.isCubemap) {
                            for (var d = b.mipmaps.length / b.mipmapCount, g = 0; d > g; g++) {
                                e[g] = {
                                    mipmaps: []
                                };
                                for (var h = 0; h < b.mipmapCount; h++) e[g].mipmaps.push(b.mipmaps[g * b.mipmapCount + h]), e[g].format = b.format, e[g].width = b.width, e[g].height = b.height
                            }
                            f.format = b.format, f.needsUpdate = !0, c && c(f)
                        }
                    }, k.onerror = d, k.open("GET", l, !0), k.responseType = "arraybuffer", k.send(null)
                }
            return f
        },
        parseDDS: function(a, b) {
            function c(a) {
                return a.charCodeAt(0) + (a.charCodeAt(1) << 8) + (a.charCodeAt(2) << 16) + (a.charCodeAt(3) << 24)
            }

            function d(a) {
                return String.fromCharCode(255 & a, a >> 8 & 255, a >> 16 & 255, a >> 24 & 255)
            }
            var e = {
                    mipmaps: [],
                    width: 0,
                    height: 0,
                    format: null,
                    mipmapCount: 1
                },
                f = 542327876,
                g = 131072,
                h = 512,
                i = 4,
                j = c("DXT1"),
                k = c("DXT3"),
                l = c("DXT5"),
                m = 31,
                n = 0,
                o = 1,
                p = 2,
                q = 3,
                r = 4,
                s = 7,
                t = 20,
                u = 21,
                v = 28,
                w = new Int32Array(a, 0, m);
            if (w[n] !== f) return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"), e;
            if (!w[t] & i) return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"), e;
            var x, y = w[u];
            switch (y) {
                case j:
                    x = 8, e.format = THREE.RGB_S3TC_DXT1_Format;
                    break;
                case k:
                    x = 16, e.format = THREE.RGBA_S3TC_DXT3_Format;
                    break;
                case l:
                    x = 16, e.format = THREE.RGBA_S3TC_DXT5_Format;
                    break;
                default:
                    return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ", d(y)), e
            }
            e.mipmapCount = 1, w[p] & g && b !== !1 && (e.mipmapCount = Math.max(1, w[s])), e.isCubemap = w[v] & h ? !0 : !1, e.width = w[r], e.height = w[q];
            for (var z = w[o] + 4, A = e.width, B = e.height, C = e.isCubemap ? 6 : 1, D = 0; C > D; D++) {
                for (var E = 0; E < e.mipmapCount; E++) {
                    var F = Math.max(4, A) / 4 * Math.max(4, B) / 4 * x,
                        G = new Uint8Array(a, z, F),
                        H = {
                            data: G,
                            width: A,
                            height: B
                        };
                    e.mipmaps.push(H), z += F, A = Math.max(.5 * A, 1), B = Math.max(.5 * B, 1)
                }
                A = e.width, B = e.height
            }
            return e
        },
        getNormalMap: function(a, b) {
            var c = function(a, b) {
                    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]]
                },
                d = function(a, b) {
                    return [a[0] - b[0], a[1] - b[1], a[2] - b[2]]
                },
                e = function(a) {
                    var b = Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
                    return [a[0] / b, a[1] / b, a[2] / b]
                };
            b = 1 | b;
            var f = a.width,
                g = a.height,
                h = document.createElement("canvas");
            h.width = f, h.height = g;
            var i = h.getContext("2d");
            i.drawImage(a, 0, 0);
            for (var j = i.getImageData(0, 0, f, g).data, k = i.createImageData(f, g), l = k.data, m = 0; f > m; m++)
                for (var n = 0; g > n; n++) {
                    var o = 0 > n - 1 ? 0 : n - 1,
                        p = n + 1 > g - 1 ? g - 1 : n + 1,
                        q = 0 > m - 1 ? 0 : m - 1,
                        r = m + 1 > f - 1 ? f - 1 : m + 1,
                        s = [],
                        t = [0, 0, j[4 * (n * f + m)] / 255 * b];
                    s.push([-1, 0, j[4 * (n * f + q)] / 255 * b]), s.push([-1, -1, j[4 * (o * f + q)] / 255 * b]), s.push([0, -1, j[4 * (o * f + m)] / 255 * b]), s.push([1, -1, j[4 * (o * f + r)] / 255 * b]), s.push([1, 0, j[4 * (n * f + r)] / 255 * b]), s.push([1, 1, j[4 * (p * f + r)] / 255 * b]), s.push([0, 1, j[4 * (p * f + m)] / 255 * b]), s.push([-1, 1, j[4 * (p * f + q)] / 255 * b]);
                    for (var u = [], v = s.length, w = 0; v > w; w++) {
                        var x = s[w],
                            y = s[(w + 1) % v];
                        x = d(x, t), y = d(y, t), u.push(e(c(x, y)))
                    }
                    for (var z = [0, 0, 0], w = 0; w < u.length; w++) z[0] += u[w][0], z[1] += u[w][1], z[2] += u[w][2];
                    z[0] /= u.length, z[1] /= u.length, z[2] /= u.length;
                    var A = 4 * (n * f + m);
                    l[A] = (z[0] + 1) / 2 * 255 | 0, l[A + 1] = (z[1] + 1) / 2 * 255 | 0, l[A + 2] = 255 * z[2] | 0, l[A + 3] = 255
                }
            return i.putImageData(k, 0, 0), h
        },
        generateDataTexture: function(a, b, c) {
            for (var d = a * b, e = new Uint8Array(3 * d), f = Math.floor(255 * c.r), g = Math.floor(255 * c.g), h = Math.floor(255 * c.b), i = 0; d > i; i++) e[3 * i] = f, e[3 * i + 1] = g, e[3 * i + 2] = h;
            var j = new THREE.DataTexture(e, a, b, THREE.RGBFormat);
            return j.needsUpdate = !0, j
        }
    }, THREE.SceneUtils = {
        createMultiMaterialObject: function(a, b) {
            for (var c = new THREE.Object3D, d = 0, e = b.length; e > d; d++) c.add(new THREE.Mesh(a, b[d]));
            return c
        },
        detach: function(a, b, c) {
            a.applyMatrix(b.matrixWorld), b.remove(a), c.add(a)
        },
        attach: function(a, b, c) {
            var d = new THREE.Matrix4;
            d.getInverse(c.matrixWorld), a.applyMatrix(d), b.remove(a), c.add(a)
        }
    }, THREE.FontUtils = {
        faces: {},
        face: "helvetiker",
        weight: "normal",
        style: "normal",
        size: 150,
        divisions: 10,
        getFace: function() {
            return this.faces[this.face][this.weight][this.style]
        },
        loadFace: function(a) {
            var b = a.familyName.toLowerCase(),
                c = this;
            c.faces[b] = c.faces[b] || {}, c.faces[b][a.cssFontWeight] = c.faces[b][a.cssFontWeight] || {}, c.faces[b][a.cssFontWeight][a.cssFontStyle] = a;
            c.faces[b][a.cssFontWeight][a.cssFontStyle] = a;
            return a
        },
        drawText: function(a) {
            var b, c = this.getFace(),
                d = this.size / c.resolution,
                e = 0,
                f = String(a).split(""),
                g = f.length,
                h = [];
            for (b = 0; g > b; b++) {
                var i = new THREE.Path,
                    j = this.extractGlyphPoints(f[b], c, d, e, i);
                e += j.offset, h.push(j.path)
            }
            var k = e / 2;
            return {
                paths: h,
                offset: k
            }
        },
        extractGlyphPoints: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y = [],
                z = b.glyphs[a] || b.glyphs["?"];
            if (z) {
                if (z.o)
                    for (i = z._cachedOutline || (z._cachedOutline = z.o.split(" ")), k = i.length, l = c, m = c, f = 0; k > f;) switch (j = i[f++]) {
                        case "m":
                            n = i[f++] * l + d, o = i[f++] * m, e.moveTo(n, o);
                            break;
                        case "l":
                            n = i[f++] * l + d, o = i[f++] * m, e.lineTo(n, o);
                            break;
                        case "q":
                            if (p = i[f++] * l + d, q = i[f++] * m, t = i[f++] * l + d, u = i[f++] * m, e.quadraticCurveTo(t, u, p, q), x = y[y.length - 1])
                                for (r = x.x, s = x.y, g = 1, h = this.divisions; h >= g; g++) {
                                    var A = g / h;
                                    THREE.Shape.Utils.b2(A, r, t, p), THREE.Shape.Utils.b2(A, s, u, q)
                                }
                            break;
                        case "b":
                            if (p = i[f++] * l + d, q = i[f++] * m, t = i[f++] * l + d, u = i[f++] * -m, v = i[f++] * l + d, w = i[f++] * -m, e.bezierCurveTo(p, q, t, u, v, w), x = y[y.length - 1])
                                for (r = x.x, s = x.y, g = 1, h = this.divisions; h >= g; g++) {
                                    var A = g / h;
                                    THREE.Shape.Utils.b3(A, r, t, v, p), THREE.Shape.Utils.b3(A, s, u, w, q)
                                }
                    }
                return {
                    offset: z.ha * c,
                    path: e
                }
            }
        }
    }, THREE.FontUtils.generateShapes = function(a, b) {
        b = b || {};
        var c = void 0 !== b.size ? b.size : 100,
            d = void 0 !== b.curveSegments ? b.curveSegments : 4,
            e = void 0 !== b.font ? b.font : "helvetiker",
            f = void 0 !== b.weight ? b.weight : "normal",
            g = void 0 !== b.style ? b.style : "normal";
        THREE.FontUtils.size = c, THREE.FontUtils.divisions = d, THREE.FontUtils.face = e, THREE.FontUtils.weight = f, THREE.FontUtils.style = g;
        for (var h = THREE.FontUtils.drawText(a), i = h.paths, j = [], k = 0, l = i.length; l > k; k++) Array.prototype.push.apply(j, i[k].toShapes());
        return j
    },
    function(a) {
        var b = 1e-10,
            c = function(a, b) {
                var c = a.length;
                if (3 > c) return null;
                var f, g, h, i = [],
                    j = [],
                    k = [];
                if (d(a) > 0)
                    for (g = 0; c > g; g++) j[g] = g;
                else
                    for (g = 0; c > g; g++) j[g] = c - 1 - g;
                var l = c,
                    m = 2 * l;
                for (g = l - 1; l > 2;) {
                    if (m-- <= 0) return console.log("Warning, unable to triangulate polygon!"), b ? k : i;
                    if (f = g, f >= l && (f = 0), g = f + 1, g >= l && (g = 0), h = g + 1, h >= l && (h = 0), e(a, f, g, h, l, j)) {
                        var n, o, p, q, r;
                        for (n = j[f], o = j[g], p = j[h], i.push([a[n], a[o], a[p]]), k.push([j[f], j[g], j[h]]), q = g, r = g + 1; l > r; q++, r++) j[q] = j[r];
                        l--, m = 2 * l
                    }
                }
                return b ? k : i
            },
            d = function(a) {
                for (var b = a.length, c = 0, d = b - 1, e = 0; b > e; d = e++) c += a[d].x * a[e].y - a[e].x * a[d].y;
                return .5 * c
            },
            e = function(a, c, d, e, f, g) {
                var h, i, j, k, l, m, n, o, p;
                if (i = a[g[c]].x, j = a[g[c]].y, k = a[g[d]].x, l = a[g[d]].y, m = a[g[e]].x, n = a[g[e]].y, b > (k - i) * (n - j) - (l - j) * (m - i)) return !1;
                var q, r, s, t, u, v, w, x, y, z, A, B, C, D, E;
                for (q = m - k, r = n - l, s = i - m, t = j - n, u = k - i, v = l - j, h = 0; f > h; h++)
                    if (h !== c && h !== d && h !== e && (o = a[g[h]].x, p = a[g[h]].y, w = o - i, x = p - j, y = o - k, z = p - l, A = o - m, B = p - n, E = q * z - r * y, C = u * x - v * w, D = s * B - t * A, E >= 0 && D >= 0 && C >= 0)) return !1;
                return !0
            };
        return a.Triangulate = c, a.Triangulate.area = d, a
    }(THREE.FontUtils), self._typeface_js = {
        faces: THREE.FontUtils.faces,
        loadFace: THREE.FontUtils.loadFace
    }, THREE.typeface_js = self._typeface_js, THREE.Curve = function() {}, THREE.Curve.prototype.getPoint = function() {
        return console.log("Warning, getPoint() not implemented!"), null
    }, THREE.Curve.prototype.getPointAt = function(a) {
        var b = this.getUtoTmapping(a);
        return this.getPoint(b)
    }, THREE.Curve.prototype.getPoints = function(a) {
        a || (a = 5);
        var b, c = [];
        for (b = 0; a >= b; b++) c.push(this.getPoint(b / a));
        return c
    }, THREE.Curve.prototype.getSpacedPoints = function(a) {
        a || (a = 5);
        var b, c = [];
        for (b = 0; a >= b; b++) c.push(this.getPointAt(b / a));
        return c
    }, THREE.Curve.prototype.getLength = function() {
        var a = this.getLengths();
        return a[a.length - 1]
    }, THREE.Curve.prototype.getLengths = function(a) {
        if (a || (a = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200), this.cacheArcLengths && this.cacheArcLengths.length == a + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        var b, c, d = [],
            e = this.getPoint(0),
            f = 0;
        for (d.push(0), c = 1; a >= c; c++) b = this.getPoint(c / a), f += b.distanceTo(e), d.push(f), e = b;
        return this.cacheArcLengths = d, d
    }, THREE.Curve.prototype.updateArcLengths = function() {
        this.needsUpdate = !0, this.getLengths()
    }, THREE.Curve.prototype.getUtoTmapping = function(a, b) {
        var c, d = this.getLengths(),
            e = 0,
            f = d.length;
        c = b ? b : a * d[f - 1];
        for (var g, h = 0, i = f - 1; i >= h;)
            if (e = Math.floor(h + (i - h) / 2), g = d[e] - c, 0 > g) h = e + 1;
            else {
                if (!(g > 0)) {
                    i = e;
                    break
                }
                i = e - 1
            }
        if (e = i, d[e] == c) {
            var j = e / (f - 1);
            return j
        }
        var k = d[e],
            l = d[e + 1],
            m = l - k,
            n = (c - k) / m,
            j = (e + n) / (f - 1);
        return j
    }, THREE.Curve.prototype.getTangent = function(a) {
        var b = 1e-4,
            c = a - b,
            d = a + b;
        0 > c && (c = 0), d > 1 && (d = 1);
        var e = this.getPoint(c),
            f = this.getPoint(d),
            g = f.clone().sub(e);
        return g.normalize()
    }, THREE.Curve.prototype.getTangentAt = function(a) {
        var b = this.getUtoTmapping(a);
        return this.getTangent(b)
    }, THREE.Curve.Utils = {
        tangentQuadraticBezier: function(a, b, c, d) {
            return 2 * (1 - a) * (c - b) + 2 * a * (d - c)
        },
        tangentCubicBezier: function(a, b, c, d, e) {
            return -3 * b * (1 - a) * (1 - a) + 3 * c * (1 - a) * (1 - a) - 6 * a * c * (1 - a) + 6 * a * d * (1 - a) - 3 * a * a * d + 3 * a * a * e
        },
        tangentSpline: function(a) {
            var b = 6 * a * a - 6 * a,
                c = 3 * a * a - 4 * a + 1,
                d = -6 * a * a + 6 * a,
                e = 3 * a * a - 2 * a;
            return b + c + d + e
        },
        interpolate: function(a, b, c, d, e) {
            var f = .5 * (c - a),
                g = .5 * (d - b),
                h = e * e,
                i = e * h;
            return (2 * b - 2 * c + f + g) * i + (-3 * b + 3 * c - 2 * f - g) * h + f * e + b
        }
    }, THREE.Curve.create = function(a, b) {
        return a.prototype = Object.create(THREE.Curve.prototype), a.prototype.getPoint = b, a
    }, THREE.CurvePath = function() {
        this.curves = [], this.bends = [], this.autoClose = !1
    }, THREE.CurvePath.prototype = Object.create(THREE.Curve.prototype), THREE.CurvePath.prototype.add = function(a) {
        this.curves.push(a)
    }, THREE.CurvePath.prototype.checkConnection = function() {}, THREE.CurvePath.prototype.closePath = function() {
        var a = this.curves[0].getPoint(0),
            b = this.curves[this.curves.length - 1].getPoint(1);
        a.equals(b) || this.curves.push(new THREE.LineCurve(b, a))
    }, THREE.CurvePath.prototype.getPoint = function(a) {
        for (var b, c, d = a * this.getLength(), e = this.getCurveLengths(), f = 0; f < e.length;) {
            if (e[f] >= d) {
                b = e[f] - d, c = this.curves[f];
                var g = 1 - b / c.getLength();
                return c.getPointAt(g)
            }
            f++
        }
        return null
    }, THREE.CurvePath.prototype.getLength = function() {
        var a = this.getCurveLengths();
        return a[a.length - 1]
    }, THREE.CurvePath.prototype.getCurveLengths = function() {
        if (this.cacheLengths && this.cacheLengths.length == this.curves.length) return this.cacheLengths;
        var a, b = [],
            c = 0,
            d = this.curves.length;
        for (a = 0; d > a; a++) c += this.curves[a].getLength(), b.push(c);
        return this.cacheLengths = b, b
    }, THREE.CurvePath.prototype.getBoundingBox = function() {
        var a, b, c, d, e, f, g = this.getPoints();
        a = b = Number.NEGATIVE_INFINITY, d = e = Number.POSITIVE_INFINITY;
        var h, i, j, k, l = g[0] instanceof THREE.Vector3;
        for (k = l ? new THREE.Vector3 : new THREE.Vector2, i = 0, j = g.length; j > i; i++) h = g[i], h.x > a ? a = h.x : h.x < d && (d = h.x), h.y > b ? b = h.y : h.y < e && (e = h.y), l && (h.z > c ? c = h.z : h.z < f && (f = h.z)), k.add(h);
        var m = {
            minX: d,
            minY: e,
            maxX: a,
            maxY: b,
            centroid: k.divideScalar(j)
        };
        return l && (m.maxZ = c, m.minZ = f), m
    }, THREE.CurvePath.prototype.createPointsGeometry = function(a) {
        var b = this.getPoints(a, !0);
        return this.createGeometry(b)
    }, THREE.CurvePath.prototype.createSpacedPointsGeometry = function(a) {
        var b = this.getSpacedPoints(a, !0);
        return this.createGeometry(b)
    }, THREE.CurvePath.prototype.createGeometry = function(a) {
        for (var b = new THREE.Geometry, c = 0; c < a.length; c++) b.vertices.push(new THREE.Vector3(a[c].x, a[c].y, a[c].z || 0));
        return b
    }, THREE.CurvePath.prototype.addWrapPath = function(a) {
        this.bends.push(a)
    }, THREE.CurvePath.prototype.getTransformedPoints = function(a, b) {
        var c, d, e = this.getPoints(a);
        for (b || (b = this.bends), c = 0, d = b.length; d > c; c++) e = this.getWrapPoints(e, b[c]);
        return e
    }, THREE.CurvePath.prototype.getTransformedSpacedPoints = function(a, b) {
        var c, d, e = this.getSpacedPoints(a);
        for (b || (b = this.bends), c = 0, d = b.length; d > c; c++) e = this.getWrapPoints(e, b[c]);
        return e
    }, THREE.CurvePath.prototype.getWrapPoints = function(a, b) {
        var c, d, e, f, g, h, i = this.getBoundingBox();
        for (c = 0, d = a.length; d > c; c++) {
            e = a[c], f = e.x, g = e.y, h = f / i.maxX, h = b.getUtoTmapping(h, f);
            var j = b.getPoint(h),
                k = b.getNormalVector(h).multiplyScalar(g);
            e.x = j.x + k.x, e.y = j.y + k.y
        }
        return a
    }, THREE.Gyroscope = function() {
        THREE.Object3D.call(this)
    }, THREE.Gyroscope.prototype = Object.create(THREE.Object3D.prototype), THREE.Gyroscope.prototype.updateMatrixWorld = function(a) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || a) && (this.parent ? (this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorld.decompose(this.translationWorld, this.quaternionWorld, this.scaleWorld), this.matrix.decompose(this.translationObject, this.quaternionObject, this.scaleObject), this.matrixWorld.compose(this.translationWorld, this.quaternionObject, this.scaleWorld)) : this.matrixWorld.copy(this.matrix), this.matrixWorldNeedsUpdate = !1, a = !0);
        for (var b = 0, c = this.children.length; c > b; b++) this.children[b].updateMatrixWorld(a)
    }, THREE.Gyroscope.prototype.translationWorld = new THREE.Vector3, THREE.Gyroscope.prototype.translationObject = new THREE.Vector3, THREE.Gyroscope.prototype.quaternionWorld = new THREE.Quaternion, THREE.Gyroscope.prototype.quaternionObject = new THREE.Quaternion, THREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3, THREE.Gyroscope.prototype.scaleObject = new THREE.Vector3, THREE.Path = function(a) {
        THREE.CurvePath.call(this), this.actions = [], a && this.fromPoints(a)
    }, THREE.Path.prototype = Object.create(THREE.CurvePath.prototype), THREE.PathActions = {
        MOVE_TO: "moveTo",
        LINE_TO: "lineTo",
        QUADRATIC_CURVE_TO: "quadraticCurveTo",
        BEZIER_CURVE_TO: "bezierCurveTo",
        CSPLINE_THRU: "splineThru",
        ARC: "arc",
        ELLIPSE: "ellipse"
    }, THREE.Path.prototype.fromPoints = function(a) {
        this.moveTo(a[0].x, a[0].y);
        for (var b = 1, c = a.length; c > b; b++) this.lineTo(a[b].x, a[b].y)
    }, THREE.Path.prototype.moveTo = function() {
        var a = Array.prototype.slice.call(arguments);
        this.actions.push({
            action: THREE.PathActions.MOVE_TO,
            args: a
        })
    }, THREE.Path.prototype.lineTo = function(a, b) {
        var c = Array.prototype.slice.call(arguments),
            d = this.actions[this.actions.length - 1].args,
            e = d[d.length - 2],
            f = d[d.length - 1],
            g = new THREE.LineCurve(new THREE.Vector2(e, f), new THREE.Vector2(a, b));
        this.curves.push(g), this.actions.push({
            action: THREE.PathActions.LINE_TO,
            args: c
        })
    }, THREE.Path.prototype.quadraticCurveTo = function(a, b, c, d) {
        var e = Array.prototype.slice.call(arguments),
            f = this.actions[this.actions.length - 1].args,
            g = f[f.length - 2],
            h = f[f.length - 1],
            i = new THREE.QuadraticBezierCurve(new THREE.Vector2(g, h), new THREE.Vector2(a, b), new THREE.Vector2(c, d));
        this.curves.push(i), this.actions.push({
            action: THREE.PathActions.QUADRATIC_CURVE_TO,
            args: e
        })
    }, THREE.Path.prototype.bezierCurveTo = function(a, b, c, d, e, f) {
        var g = Array.prototype.slice.call(arguments),
            h = this.actions[this.actions.length - 1].args,
            i = h[h.length - 2],
            j = h[h.length - 1],
            k = new THREE.CubicBezierCurve(new THREE.Vector2(i, j), new THREE.Vector2(a, b), new THREE.Vector2(c, d), new THREE.Vector2(e, f));
        this.curves.push(k), this.actions.push({
            action: THREE.PathActions.BEZIER_CURVE_TO,
            args: g
        })
    }, THREE.Path.prototype.splineThru = function(a) {
        var b = Array.prototype.slice.call(arguments),
            c = this.actions[this.actions.length - 1].args,
            d = c[c.length - 2],
            e = c[c.length - 1],
            f = [new THREE.Vector2(d, e)];
        Array.prototype.push.apply(f, a);
        var g = new THREE.SplineCurve(f);
        this.curves.push(g), this.actions.push({
            action: THREE.PathActions.CSPLINE_THRU,
            args: b
        })
    }, THREE.Path.prototype.arc = function(a, b, c, d, e, f) {
        var g = this.actions[this.actions.length - 1].args,
            h = g[g.length - 2],
            i = g[g.length - 1];
        this.absarc(a + h, b + i, c, d, e, f)
    }, THREE.Path.prototype.absarc = function(a, b, c, d, e, f) {
        this.absellipse(a, b, c, c, d, e, f)
    }, THREE.Path.prototype.ellipse = function(a, b, c, d, e, f, g) {
        var h = this.actions[this.actions.length - 1].args,
            i = h[h.length - 2],
            j = h[h.length - 1];
        this.absellipse(a + i, b + j, c, d, e, f, g)
    }, THREE.Path.prototype.absellipse = function(a, b, c, d, e, f, g) {
        var h = Array.prototype.slice.call(arguments),
            i = new THREE.EllipseCurve(a, b, c, d, e, f, g);
        this.curves.push(i);
        var j = i.getPoint(g ? 1 : 0);
        h.push(j.x), h.push(j.y), this.actions.push({
            action: THREE.PathActions.ELLIPSE,
            args: h
        })
    }, THREE.Path.prototype.getSpacedPoints = function(a) {
        a || (a = 40);
        for (var b = [], c = 0; a > c; c++) b.push(this.getPoint(c / a));
        return b
    }, THREE.Path.prototype.getPoints = function(a, b) {
        if (this.useSpacedPoints) return console.log("tata"), this.getSpacedPoints(a, b);
        a = a || 12;
        var c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = [];
        for (c = 0, d = this.actions.length; d > c; c++) switch (e = this.actions[c], f = e.action, g = e.args, f) {
            case THREE.PathActions.MOVE_TO:
                u.push(new THREE.Vector2(g[0], g[1]));
                break;
            case THREE.PathActions.LINE_TO:
                u.push(new THREE.Vector2(g[0], g[1]));
                break;
            case THREE.PathActions.QUADRATIC_CURVE_TO:
                for (h = g[2], i = g[3], l = g[0], m = g[1], u.length > 0 ? (p = u[u.length - 1], n = p.x, o = p.y) : (p = this.actions[c - 1].args, n = p[p.length - 2], o = p[p.length - 1]), q = 1; a >= q; q++) r = q / a, s = THREE.Shape.Utils.b2(r, n, l, h), t = THREE.Shape.Utils.b2(r, o, m, i), u.push(new THREE.Vector2(s, t));
                break;
            case THREE.PathActions.BEZIER_CURVE_TO:
                for (h = g[4], i = g[5], l = g[0], m = g[1], j = g[2], k = g[3], u.length > 0 ? (p = u[u.length - 1], n = p.x, o = p.y) : (p = this.actions[c - 1].args, n = p[p.length - 2], o = p[p.length - 1]), q = 1; a >= q; q++) r = q / a, s = THREE.Shape.Utils.b3(r, n, l, j, h), t = THREE.Shape.Utils.b3(r, o, m, k, i), u.push(new THREE.Vector2(s, t));
                break;
            case THREE.PathActions.CSPLINE_THRU:
                p = this.actions[c - 1].args;
                var v = new THREE.Vector2(p[p.length - 2], p[p.length - 1]),
                    w = [v],
                    x = a * g[0].length;
                w = w.concat(g[0]);
                var y = new THREE.SplineCurve(w);
                for (q = 1; x >= q; q++) u.push(y.getPointAt(q / x));
                break;
            case THREE.PathActions.ARC:
                var z, A = g[0],
                    B = g[1],
                    C = g[2],
                    D = g[3],
                    E = g[4],
                    F = !!g[5],
                    G = E - D,
                    H = 2 * a;
                for (q = 1; H >= q; q++) r = q / H, F || (r = 1 - r), z = D + r * G, s = A + C * Math.cos(z), t = B + C * Math.sin(z), u.push(new THREE.Vector2(s, t));
                break;
            case THREE.PathActions.ELLIPSE:
                var z, A = g[0],
                    B = g[1],
                    I = g[2],
                    J = g[3],
                    D = g[4],
                    E = g[5],
                    F = !!g[6],
                    G = E - D,
                    H = 2 * a;
                for (q = 1; H >= q; q++) r = q / H, F || (r = 1 - r), z = D + r * G, s = A + I * Math.cos(z), t = B + J * Math.sin(z), u.push(new THREE.Vector2(s, t))
        }
        var K = u[u.length - 1],
            L = 1e-10;
        return Math.abs(K.x - u[0].x) < L && Math.abs(K.y - u[0].y) < L && u.splice(u.length - 1, 1), b && u.push(u[0]), u
    }, THREE.Path.prototype.toShapes = function(a) {
        var b, c, d, e, f, g = [],
            h = new THREE.Path;
        for (b = 0, c = this.actions.length; c > b; b++) d = this.actions[b], f = d.args, e = d.action, e == THREE.PathActions.MOVE_TO && 0 != h.actions.length && (g.push(h), h = new THREE.Path), h[e].apply(h, f);
        if (0 != h.actions.length && g.push(h), 0 == g.length) return [];
        var i, j, k, l = [];
        if (1 == g.length) return j = g[0], k = new THREE.Shape, k.actions = j.actions, k.curves = j.curves, l.push(k), l;
        var m = !THREE.Shape.Utils.isClockWise(g[0].getPoints());
        if (m = a ? !m : m)
            for (k = new THREE.Shape, b = 0, c = g.length; c > b; b++) j = g[b], i = THREE.Shape.Utils.isClockWise(j.getPoints()), i = a ? !i : i, i ? (k.actions = j.actions, k.curves = j.curves, l.push(k), k = new THREE.Shape) : k.holes.push(j);
        else {
            for (k = void 0, b = 0, c = g.length; c > b; b++) j = g[b], i = THREE.Shape.Utils.isClockWise(j.getPoints()), i = a ? !i : i, i ? (k && l.push(k), k = new THREE.Shape, k.actions = j.actions, k.curves = j.curves) : k.holes.push(j);
            l.push(k)
        }
        return l
    }, THREE.Shape = function() {
        THREE.Path.apply(this, arguments), this.holes = []
    }, THREE.Shape.prototype = Object.create(THREE.Path.prototype), THREE.Shape.prototype.extrude = function(a) {
        var b = new THREE.ExtrudeGeometry(this, a);
        return b
    }, THREE.Shape.prototype.makeGeometry = function(a) {
        var b = new THREE.ShapeGeometry(this, a);
        return b
    }, THREE.Shape.prototype.getPointsHoles = function(a) {
        var b, c = this.holes.length,
            d = [];
        for (b = 0; c > b; b++) d[b] = this.holes[b].getTransformedPoints(a, this.bends);
        return d
    }, THREE.Shape.prototype.getSpacedPointsHoles = function(a) {
        var b, c = this.holes.length,
            d = [];
        for (b = 0; c > b; b++) d[b] = this.holes[b].getTransformedSpacedPoints(a, this.bends);
        return d
    }, THREE.Shape.prototype.extractAllPoints = function(a) {
        return {
            shape: this.getTransformedPoints(a),
            holes: this.getPointsHoles(a)
        }
    }, THREE.Shape.prototype.extractPoints = function(a) {
        return this.useSpacedPoints ? this.extractAllSpacedPoints(a) : this.extractAllPoints(a)
    }, THREE.Shape.prototype.extractAllSpacedPoints = function(a) {
        return {
            shape: this.getTransformedSpacedPoints(a),
            holes: this.getSpacedPointsHoles(a)
        }
    }, THREE.Shape.Utils = {
        removeHoles: function(a, b) {
            var c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s = a.concat(),
                t = s.concat(),
                u = [];
            for (g = 0; g < b.length; g++) {
                for (i = b[g], Array.prototype.push.apply(t, i), j = Number.POSITIVE_INFINITY, h = 0; h < i.length; h++) {
                    m = i[h];
                    var v = [];
                    for (l = 0; l < s.length; l++) n = s[l], k = m.distanceToSquared(n), v.push(k), j > k && (j = k, e = h, f = l)
                }
                c = f - 1 >= 0 ? f - 1 : s.length - 1, d = e - 1 >= 0 ? e - 1 : i.length - 1;
                var w = [i[e], s[f], s[c]],
                    x = THREE.FontUtils.Triangulate.area(w),
                    y = [i[e], i[d], s[f]],
                    z = THREE.FontUtils.Triangulate.area(y),
                    A = 1,
                    B = -1,
                    C = f,
                    D = e;
                f += A, e += B, 0 > f && (f += s.length), f %= s.length, 0 > e && (e += i.length), e %= i.length, c = f - 1 >= 0 ? f - 1 : s.length - 1, d = e - 1 >= 0 ? e - 1 : i.length - 1, w = [i[e], s[f], s[c]];
                var E = THREE.FontUtils.Triangulate.area(w);
                y = [i[e], i[d], s[f]];
                var F = THREE.FontUtils.Triangulate.area(y);
                x + z > E + F && (f = C, e = D, 0 > f && (f += s.length), f %= s.length, 0 > e && (e += i.length), e %= i.length, c = f - 1 >= 0 ? f - 1 : s.length - 1, d = e - 1 >= 0 ? e - 1 : i.length - 1), o = s.slice(0, f), p = s.slice(f), q = i.slice(e), r = i.slice(0, e);
                var G = [i[e], s[f], s[c]],
                    H = [i[e], i[d], s[f]];
                u.push(G), u.push(H), s = o.concat(q).concat(r).concat(p)
            }
            return {
                shape: s,
                isolatedPts: u,
                allpoints: t
            }
        },
        triangulateShape: function(a, b) {
            var c, d, e, f, g, h, i = THREE.Shape.Utils.removeHoles(a, b),
                j = i.shape,
                k = i.allpoints,
                l = i.isolatedPts,
                m = THREE.FontUtils.Triangulate(j, !1),
                n = {};
            for (c = 0, d = k.length; d > c; c++) g = k[c].x + ":" + k[c].y, void 0 !== n[g] && console.log("Duplicate point", g), n[g] = c;
            for (c = 0, d = m.length; d > c; c++)
                for (f = m[c], e = 0; 3 > e; e++) g = f[e].x + ":" + f[e].y, h = n[g], void 0 !== h && (f[e] = h);
            for (c = 0, d = l.length; d > c; c++)
                for (f = l[c], e = 0; 3 > e; e++) g = f[e].x + ":" + f[e].y, h = n[g], void 0 !== h && (f[e] = h);
            return m.concat(l)
        },
        isClockWise: function(a) {
            return THREE.FontUtils.Triangulate.area(a) < 0
        },
        b2p0: function(a, b) {
            var c = 1 - a;
            return c * c * b
        },
        b2p1: function(a, b) {
            return 2 * (1 - a) * a * b
        },
        b2p2: function(a, b) {
            return a * a * b
        },
        b2: function(a, b, c, d) {
            return this.b2p0(a, b) + this.b2p1(a, c) + this.b2p2(a, d)
        },
        b3p0: function(a, b) {
            var c = 1 - a;
            return c * c * c * b
        },
        b3p1: function(a, b) {
            var c = 1 - a;
            return 3 * c * c * a * b
        },
        b3p2: function(a, b) {
            var c = 1 - a;
            return 3 * c * a * a * b
        },
        b3p3: function(a, b) {
            return a * a * a * b
        },
        b3: function(a, b, c, d, e) {
            return this.b3p0(a, b) + this.b3p1(a, c) + this.b3p2(a, d) + this.b3p3(a, e)
        }
    }, THREE.LineCurve = function(a, b) {
        this.v1 = a, this.v2 = b
    }, THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype), THREE.LineCurve.prototype.getPoint = function(a) {
        var b = this.v2.clone().sub(this.v1);
        return b.multiplyScalar(a).add(this.v1), b
    }, THREE.LineCurve.prototype.getPointAt = function(a) {
        return this.getPoint(a)
    }, THREE.LineCurve.prototype.getTangent = function() {
        var a = this.v2.clone().sub(this.v1);
        return a.normalize()
    }, THREE.QuadraticBezierCurve = function(a, b, c) {
        this.v0 = a, this.v1 = b, this.v2 = c
    }, THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype), THREE.QuadraticBezierCurve.prototype.getPoint = function(a) {
        var b, c;
        return b = THREE.Shape.Utils.b2(a, this.v0.x, this.v1.x, this.v2.x), c = THREE.Shape.Utils.b2(a, this.v0.y, this.v1.y, this.v2.y), new THREE.Vector2(b, c)
    }, THREE.QuadraticBezierCurve.prototype.getTangent = function(a) {
        var b, c;
        b = THREE.Curve.Utils.tangentQuadraticBezier(a, this.v0.x, this.v1.x, this.v2.x), c = THREE.Curve.Utils.tangentQuadraticBezier(a, this.v0.y, this.v1.y, this.v2.y);
        var d = new THREE.Vector2(b, c);
        return d.normalize(), d
    }, THREE.CubicBezierCurve = function(a, b, c, d) {
        this.v0 = a, this.v1 = b, this.v2 = c, this.v3 = d
    }, THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype), THREE.CubicBezierCurve.prototype.getPoint = function(a) {
        var b, c;
        return b = THREE.Shape.Utils.b3(a, this.v0.x, this.v1.x, this.v2.x, this.v3.x), c = THREE.Shape.Utils.b3(a, this.v0.y, this.v1.y, this.v2.y, this.v3.y), new THREE.Vector2(b, c)
    }, THREE.CubicBezierCurve.prototype.getTangent = function(a) {
        var b, c;
        b = THREE.Curve.Utils.tangentCubicBezier(a, this.v0.x, this.v1.x, this.v2.x, this.v3.x), c = THREE.Curve.Utils.tangentCubicBezier(a, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
        var d = new THREE.Vector2(b, c);
        return d.normalize(), d
    }, THREE.SplineCurve = function(a) {
        this.points = void 0 == a ? [] : a
    }, THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype), THREE.SplineCurve.prototype.getPoint = function(a) {
        var b, c, d, e = new THREE.Vector2,
            f = [],
            g = this.points;
        return b = (g.length - 1) * a, c = Math.floor(b), d = b - c, f[0] = 0 == c ? c : c - 1, f[1] = c, f[2] = c > g.length - 2 ? g.length - 1 : c + 1, f[3] = c > g.length - 3 ? g.length - 1 : c + 2, e.x = THREE.Curve.Utils.interpolate(g[f[0]].x, g[f[1]].x, g[f[2]].x, g[f[3]].x, d), e.y = THREE.Curve.Utils.interpolate(g[f[0]].y, g[f[1]].y, g[f[2]].y, g[f[3]].y, d), e
    }, THREE.EllipseCurve = function(a, b, c, d, e, f, g) {
        this.aX = a, this.aY = b, this.xRadius = c, this.yRadius = d, this.aStartAngle = e, this.aEndAngle = f, this.aClockwise = g
    }, THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype), THREE.EllipseCurve.prototype.getPoint = function(a) {
        var b = this.aEndAngle - this.aStartAngle;
        this.aClockwise || (a = 1 - a);
        var c = this.aStartAngle + a * b,
            d = this.aX + this.xRadius * Math.cos(c),
            e = this.aY + this.yRadius * Math.sin(c);
        return new THREE.Vector2(d, e)
    }, THREE.ArcCurve = function(a, b, c, d, e, f) {
        THREE.EllipseCurve.call(this, a, b, c, c, d, e, f)
    }, THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype), THREE.LineCurve3 = THREE.Curve.create(function(a, b) {
        this.v1 = a, this.v2 = b
    }, function(a) {
        var b = new THREE.Vector3;
        return b.subVectors(this.v2, this.v1), b.multiplyScalar(a), b.add(this.v1), b
    }), THREE.QuadraticBezierCurve3 = THREE.Curve.create(function(a, b, c) {
        this.v0 = a, this.v1 = b, this.v2 = c
    }, function(a) {
        var b, c, d;
        return b = THREE.Shape.Utils.b2(a, this.v0.x, this.v1.x, this.v2.x), c = THREE.Shape.Utils.b2(a, this.v0.y, this.v1.y, this.v2.y), d = THREE.Shape.Utils.b2(a, this.v0.z, this.v1.z, this.v2.z), new THREE.Vector3(b, c, d)
    }), THREE.CubicBezierCurve3 = THREE.Curve.create(function(a, b, c, d) {
        this.v0 = a, this.v1 = b, this.v2 = c, this.v3 = d
    }, function(a) {
        var b, c, d;
        return b = THREE.Shape.Utils.b3(a, this.v0.x, this.v1.x, this.v2.x, this.v3.x), c = THREE.Shape.Utils.b3(a, this.v0.y, this.v1.y, this.v2.y, this.v3.y), d = THREE.Shape.Utils.b3(a, this.v0.z, this.v1.z, this.v2.z, this.v3.z), new THREE.Vector3(b, c, d)
    }), THREE.SplineCurve3 = THREE.Curve.create(function(a) {
        this.points = void 0 == a ? [] : a
    }, function(a) {
        var b, c, d, e = new THREE.Vector3,
            f = [],
            g = this.points;
        b = (g.length - 1) * a, c = Math.floor(b), d = b - c, f[0] = 0 == c ? c : c - 1, f[1] = c, f[2] = c > g.length - 2 ? g.length - 1 : c + 1, f[3] = c > g.length - 3 ? g.length - 1 : c + 2;
        var h = g[f[0]],
            i = g[f[1]],
            j = g[f[2]],
            k = g[f[3]];
        return e.x = THREE.Curve.Utils.interpolate(h.x, i.x, j.x, k.x, d), e.y = THREE.Curve.Utils.interpolate(h.y, i.y, j.y, k.y, d), e.z = THREE.Curve.Utils.interpolate(h.z, i.z, j.z, k.z, d), e
    }), THREE.ClosedSplineCurve3 = THREE.Curve.create(function(a) {
        this.points = void 0 == a ? [] : a
    }, function(a) {
        var b, c, d, e = new THREE.Vector3,
            f = [],
            g = this.points;
        return b = (g.length - 0) * a, c = Math.floor(b), d = b - c, c += c > 0 ? 0 : (Math.floor(Math.abs(c) / g.length) + 1) * g.length, f[0] = (c - 1) % g.length, f[1] = c % g.length, f[2] = (c + 1) % g.length, f[3] = (c + 2) % g.length, e.x = THREE.Curve.Utils.interpolate(g[f[0]].x, g[f[1]].x, g[f[2]].x, g[f[3]].x, d), e.y = THREE.Curve.Utils.interpolate(g[f[0]].y, g[f[1]].y, g[f[2]].y, g[f[3]].y, d), e.z = THREE.Curve.Utils.interpolate(g[f[0]].z, g[f[1]].z, g[f[2]].z, g[f[3]].z, d), e
    }), THREE.AnimationHandler = function() {
        var a = [],
            b = {},
            c = {};
        c.update = function(b) {
            for (var c = 0; c < a.length; c++) a[c].update(b)
        }, c.addToUpdate = function(b) {
            -1 === a.indexOf(b) && a.push(b)
        }, c.removeFromUpdate = function(b) {
            var c = a.indexOf(b); - 1 !== c && a.splice(c, 1)
        }, c.add = function(a) {
            void 0 !== b[a.name] && console.log("THREE.AnimationHandler.add: Warning! " + a.name + " already exists in library. Overwriting."), b[a.name] = a, e(a)
        }, c.get = function(a) {
            return "string" == typeof a ? b[a] ? b[a] : (console.log("THREE.AnimationHandler.get: Couldn't find animation " + a), null) : void 0
        }, c.parse = function(a) {
            var b = [];
            if (a instanceof THREE.SkinnedMesh)
                for (var c = 0; c < a.bones.length; c++) b.push(a.bones[c]);
            else d(a, b);
            return b
        };
        var d = function(a, b) {
                b.push(a);
                for (var c = 0; c < a.children.length; c++) d(a.children[c], b)
            },
            e = function(a) {
                if (a.initialized !== !0) {
                    for (var b = 0; b < a.hierarchy.length; b++) {
                        for (var c = 0; c < a.hierarchy[b].keys.length; c++)
                            if (a.hierarchy[b].keys[c].time < 0 && (a.hierarchy[b].keys[c].time = 0), void 0 !== a.hierarchy[b].keys[c].rot && !(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)) {
                                var d = a.hierarchy[b].keys[c].rot;
                                a.hierarchy[b].keys[c].rot = new THREE.Quaternion(d[0], d[1], d[2], d[3])
                            }
                        if (a.hierarchy[b].keys.length && void 0 !== a.hierarchy[b].keys[0].morphTargets) {
                            for (var e = {}, c = 0; c < a.hierarchy[b].keys.length; c++)
                                for (var f = 0; f < a.hierarchy[b].keys[c].morphTargets.length; f++) {
                                    var g = a.hierarchy[b].keys[c].morphTargets[f];
                                    e[g] = -1
                                }
                            a.hierarchy[b].usedMorphTargets = e;
                            for (var c = 0; c < a.hierarchy[b].keys.length; c++) {
                                var h = {};
                                for (var g in e) {
                                    for (var f = 0; f < a.hierarchy[b].keys[c].morphTargets.length; f++)
                                        if (a.hierarchy[b].keys[c].morphTargets[f] === g) {
                                            h[g] = a.hierarchy[b].keys[c].morphTargetsInfluences[f];
                                            break
                                        }
                                    f === a.hierarchy[b].keys[c].morphTargets.length && (h[g] = 0)
                                }
                                a.hierarchy[b].keys[c].morphTargetsInfluences = h
                            }
                        }
                        for (var c = 1; c < a.hierarchy[b].keys.length; c++) a.hierarchy[b].keys[c].time === a.hierarchy[b].keys[c - 1].time && (a.hierarchy[b].keys.splice(c, 1), c--);
                        for (var c = 0; c < a.hierarchy[b].keys.length; c++) a.hierarchy[b].keys[c].index = c
                    }
                    var i = parseInt(a.length * a.fps, 10);
                    a.JIT = {}, a.JIT.hierarchy = [];
                    for (var b = 0; b < a.hierarchy.length; b++) a.JIT.hierarchy.push(new Array(i));
                    a.initialized = !0
                }
            };
        return c.LINEAR = 0, c.CATMULLROM = 1, c.CATMULLROM_FORWARD = 2, c
    }(), THREE.Animation = function(a, b, c) {
        this.root = a, this.data = THREE.AnimationHandler.get(b), this.hierarchy = THREE.AnimationHandler.parse(a), this.currentTime = 0, this.timeScale = 1, this.isPlaying = !1, this.isPaused = !0, this.loop = !0, this.interpolationType = void 0 !== c ? c : THREE.AnimationHandler.LINEAR, this.points = [], this.target = new THREE.Vector3
    }, THREE.Animation.prototype.play = function(a, b) {
        if (this.isPlaying === !1) {
            this.isPlaying = !0, this.loop = void 0 !== a ? a : !0, this.currentTime = void 0 !== b ? b : 0;
            var c, d, e = this.hierarchy.length;
            for (c = 0; e > c; c++) {
                d = this.hierarchy[c], d.matrixAutoUpdate = !0, void 0 === d.animationCache && (d.animationCache = {}, d.animationCache.prevKey = {
                    pos: 0,
                    rot: 0,
                    scl: 0
                }, d.animationCache.nextKey = {
                    pos: 0,
                    rot: 0,
                    scl: 0
                }, d.animationCache.originalMatrix = d instanceof THREE.Bone ? d.skinMatrix : d.matrix);
                var f = d.animationCache.prevKey,
                    g = d.animationCache.nextKey;
                f.pos = this.data.hierarchy[c].keys[0], f.rot = this.data.hierarchy[c].keys[0], f.scl = this.data.hierarchy[c].keys[0], g.pos = this.getNextKeyWith("pos", c, 1), g.rot = this.getNextKeyWith("rot", c, 1), g.scl = this.getNextKeyWith("scl", c, 1)
            }
            this.update(0)
        }
        this.isPaused = !1, THREE.AnimationHandler.addToUpdate(this)
    }, THREE.Animation.prototype.pause = function() {
        this.isPaused === !0 ? THREE.AnimationHandler.addToUpdate(this) : THREE.AnimationHandler.removeFromUpdate(this), this.isPaused = !this.isPaused
    }, THREE.Animation.prototype.stop = function() {
        this.isPlaying = !1, this.isPaused = !1, THREE.AnimationHandler.removeFromUpdate(this)
    }, THREE.Animation.prototype.update = function(a) {
        if (this.isPlaying !== !1) {
            {
                var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q = ["pos", "rot", "scl"];
                this.data.JIT.hierarchy
            }
            this.currentTime += a * this.timeScale, m = this.currentTime, l = this.currentTime = this.currentTime % this.data.length, k = parseInt(Math.min(l * this.data.fps, this.data.length * this.data.fps), 10);
            for (var r = 0, s = this.hierarchy.length; s > r; r++) {
                i = this.hierarchy[r], j = i.animationCache;
                for (var t = 0; 3 > t; t++) {
                    if (b = q[t], g = j.prevKey[b], h = j.nextKey[b], h.time <= m) {
                        if (m > l) {
                            if (!this.loop) return void this.stop();
                            for (g = this.data.hierarchy[r].keys[0], h = this.getNextKeyWith(b, r, 1); h.time < l;) g = h, h = this.getNextKeyWith(b, r, h.index + 1)
                        } else
                            do g = h, h = this.getNextKeyWith(b, r, h.index + 1); while (h.time < l);
                        j.prevKey[b] = g, j.nextKey[b] = h
                    }
                    i.matrixAutoUpdate = !0, i.matrixWorldNeedsUpdate = !0, c = (l - g.time) / (h.time - g.time), e = g[b], f = h[b], (0 > c || c > 1) && (console.log("THREE.Animation.update: Warning! Scale out of bounds:" + c + " on bone " + r), c = 0 > c ? 0 : 1), "pos" === b ? (d = i.position, this.interpolationType === THREE.AnimationHandler.LINEAR ? (d.x = e[0] + (f[0] - e[0]) * c, d.y = e[1] + (f[1] - e[1]) * c, d.z = e[2] + (f[2] - e[2]) * c) : (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) && (this.points[0] = this.getPrevKeyWith("pos", r, g.index - 1).pos, this.points[1] = e, this.points[2] = f, this.points[3] = this.getNextKeyWith("pos", r, h.index + 1).pos, c = .33 * c + .33, n = this.interpolateCatmullRom(this.points, c), d.x = n[0], d.y = n[1], d.z = n[2], this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD && (o = this.interpolateCatmullRom(this.points, 1.01 * c), this.target.set(o[0], o[1], o[2]), this.target.sub(d), this.target.y = 0, this.target.normalize(), p = Math.atan2(this.target.x, this.target.z), i.rotation.set(0, p, 0)))) : "rot" === b ? THREE.Quaternion.slerp(e, f, i.quaternion, c) : "scl" === b && (d = i.scale, d.x = e[0] + (f[0] - e[0]) * c, d.y = e[1] + (f[1] - e[1]) * c, d.z = e[2] + (f[2] - e[2]) * c)
                }
            }
        }
    }, THREE.Animation.prototype.interpolateCatmullRom = function(a, b) {
        var c, d, e, f, g, h, i, j, k, l = [],
            m = [];
        return c = (a.length - 1) * b, d = Math.floor(c), e = c - d, l[0] = 0 === d ? d : d - 1, l[1] = d, l[2] = d > a.length - 2 ? d : d + 1, l[3] = d > a.length - 3 ? d : d + 2, h = a[l[0]], i = a[l[1]], j = a[l[2]], k = a[l[3]], f = e * e, g = e * f, m[0] = this.interpolate(h[0], i[0], j[0], k[0], e, f, g), m[1] = this.interpolate(h[1], i[1], j[1], k[1], e, f, g), m[2] = this.interpolate(h[2], i[2], j[2], k[2], e, f, g), m
    }, THREE.Animation.prototype.interpolate = function(a, b, c, d, e, f, g) {
        var h = .5 * (c - a),
            i = .5 * (d - b);
        return (2 * (b - c) + h + i) * g + (-3 * (b - c) - 2 * h - i) * f + h * e + b
    }, THREE.Animation.prototype.getNextKeyWith = function(a, b, c) {
        var d = this.data.hierarchy[b].keys;
        for (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? c = c < d.length - 1 ? c : d.length - 1 : c %= d.length; c < d.length; c++)
            if (void 0 !== d[c][a]) return d[c];
        return this.data.hierarchy[b].keys[0]
    }, THREE.Animation.prototype.getPrevKeyWith = function(a, b, c) {
        var d = this.data.hierarchy[b].keys;
        for (c = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? c > 0 ? c : 0 : c >= 0 ? c : c + d.length; c >= 0; c--)
            if (void 0 !== d[c][a]) return d[c];
        return this.data.hierarchy[b].keys[d.length - 1]
    }, THREE.KeyFrameAnimation = function(a, b, c) {
        this.root = a, this.data = THREE.AnimationHandler.get(b), this.hierarchy = THREE.AnimationHandler.parse(a), this.currentTime = 0, this.timeScale = .001, this.isPlaying = !1, this.isPaused = !0, this.loop = !0, this.JITCompile = void 0 !== c ? c : !0;
        for (var d = 0, e = this.hierarchy.length; e > d; d++) {
            var f = this.data.hierarchy[d].keys,
                g = this.data.hierarchy[d].sids,
                h = this.hierarchy[d];
            if (f.length && g) {
                for (var i = 0; i < g.length; i++) {
                    var j = g[i],
                        k = this.getNextKeyWith(j, d, 0);
                    k && k.apply(j)
                }
                h.matrixAutoUpdate = !1, this.data.hierarchy[d].node.updateMatrix(), h.matrixWorldNeedsUpdate = !0
            }
        }
    }, THREE.KeyFrameAnimation.prototype.play = function(a, b) {
        if (!this.isPlaying) {
            this.isPlaying = !0, this.loop = void 0 !== a ? a : !0, this.currentTime = void 0 !== b ? b : 0, this.startTimeMs = b, this.startTime = 1e7, this.endTime = -this.startTime;
            var c, d, e, f = this.hierarchy.length;
            for (c = 0; f > c; c++) {
                d = this.hierarchy[c], e = this.data.hierarchy[c], void 0 === e.animationCache && (e.animationCache = {}, e.animationCache.prevKey = null, e.animationCache.nextKey = null, e.animationCache.originalMatrix = d instanceof THREE.Bone ? d.skinMatrix : d.matrix);
                var g = this.data.hierarchy[c].keys;
                g.length && (e.animationCache.prevKey = g[0], e.animationCache.nextKey = g[1], this.startTime = Math.min(g[0].time, this.startTime), this.endTime = Math.max(g[g.length - 1].time, this.endTime))
            }
            this.update(0)
        }
        this.isPaused = !1, THREE.AnimationHandler.addToUpdate(this)
    }, THREE.KeyFrameAnimation.prototype.pause = function() {
        this.isPaused ? THREE.AnimationHandler.addToUpdate(this) : THREE.AnimationHandler.removeFromUpdate(this), this.isPaused = !this.isPaused
    }, THREE.KeyFrameAnimation.prototype.stop = function() {
        this.isPlaying = !1, this.isPaused = !1, THREE.AnimationHandler.removeFromUpdate(this);
        for (var a = 0; a < this.data.hierarchy.length; a++) {
            var b = this.hierarchy[a],
                c = this.data.hierarchy[a];
            if (void 0 !== c.animationCache) {
                var d = c.animationCache.originalMatrix;
                b instanceof THREE.Bone ? (d.copy(b.skinMatrix), b.skinMatrix = d) : (d.copy(b.matrix), b.matrix = d), delete c.animationCache
            }
        }
    }, THREE.KeyFrameAnimation.prototype.update = function(a) {
        if (this.isPlaying) {
            var b, c, d, e, f, g, h, i, j = this.data.JIT.hierarchy;
            if (this.currentTime += a * this.timeScale, h = this.currentTime, g = this.currentTime = this.currentTime % this.data.length, g < this.startTimeMs && (g = this.currentTime = this.startTimeMs + g), f = parseInt(Math.min(g * this.data.fps, this.data.length * this.data.fps), 10), i = h > g, i && !this.loop) {
                for (var k = 0, l = this.hierarchy.length; l > k; k++) {
                    var m = this.data.hierarchy[k].keys,
                        n = this.data.hierarchy[k].sids,
                        o = m.length - 1,
                        p = this.hierarchy[k];
                    if (m.length) {
                        for (var q = 0; q < n.length; q++) {
                            var r = n[q],
                                s = this.getPrevKeyWith(r, k, o);
                            s && s.apply(r)
                        }
                        this.data.hierarchy[k].node.updateMatrix(), p.matrixWorldNeedsUpdate = !0
                    }
                }
                return void this.stop()
            }
            if (!(g < this.startTime)) {
                for (var k = 0, l = this.hierarchy.length; l > k; k++) {
                    d = this.hierarchy[k], e = this.data.hierarchy[k];
                    var m = e.keys,
                        t = e.animationCache;
                    if (this.JITCompile && void 0 !== j[k][f]) d instanceof THREE.Bone ? (d.skinMatrix = j[k][f], d.matrixWorldNeedsUpdate = !1) : (d.matrix = j[k][f], d.matrixWorldNeedsUpdate = !0);
                    else if (m.length) {
                        if (this.JITCompile && t && (d instanceof THREE.Bone ? d.skinMatrix = t.originalMatrix : d.matrix = t.originalMatrix), b = t.prevKey, c = t.nextKey, b && c) {
                            if (c.time <= h) {
                                if (i && this.loop)
                                    for (b = m[0], c = m[1]; c.time < g;) b = c, c = m[b.index + 1];
                                else if (!i)
                                    for (var u = m.length - 1; c.time < g && c.index !== u;) b = c, c = m[b.index + 1];
                                t.prevKey = b, t.nextKey = c
                            }
                            c.time >= g ? b.interpolate(c, g) : b.interpolate(c, c.time)
                        }
                        this.data.hierarchy[k].node.updateMatrix(), d.matrixWorldNeedsUpdate = !0
                    }
                }
                if (this.JITCompile && void 0 === j[0][f]) {
                    this.hierarchy[0].updateMatrixWorld(!0);
                    for (var k = 0; k < this.hierarchy.length; k++) j[k][f] = this.hierarchy[k] instanceof THREE.Bone ? this.hierarchy[k].skinMatrix.clone() : this.hierarchy[k].matrix.clone()
                }
            }
        }
    }, THREE.KeyFrameAnimation.prototype.getNextKeyWith = function(a, b, c) {
        var d = this.data.hierarchy[b].keys;
        for (c %= d.length; c < d.length; c++)
            if (d[c].hasTarget(a)) return d[c];
        return d[0]
    }, THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function(a, b, c) {
        var d = this.data.hierarchy[b].keys;
        for (c = c >= 0 ? c : c + d.length; c >= 0; c--)
            if (d[c].hasTarget(a)) return d[c];
        return d[d.length - 1]
    }, THREE.CubeCamera = function(a, b, c) {
        THREE.Object3D.call(this);
        var d = 90,
            e = 1,
            f = new THREE.PerspectiveCamera(d, e, a, b);
        f.up.set(0, -1, 0), f.lookAt(new THREE.Vector3(1, 0, 0)), this.add(f);
        var g = new THREE.PerspectiveCamera(d, e, a, b);
        g.up.set(0, -1, 0), g.lookAt(new THREE.Vector3(-1, 0, 0)), this.add(g);
        var h = new THREE.PerspectiveCamera(d, e, a, b);
        h.up.set(0, 0, 1), h.lookAt(new THREE.Vector3(0, 1, 0)), this.add(h);
        var i = new THREE.PerspectiveCamera(d, e, a, b);
        i.up.set(0, 0, -1), i.lookAt(new THREE.Vector3(0, -1, 0)), this.add(i);
        var j = new THREE.PerspectiveCamera(d, e, a, b);
        j.up.set(0, -1, 0), j.lookAt(new THREE.Vector3(0, 0, 1)), this.add(j);
        var k = new THREE.PerspectiveCamera(d, e, a, b);
        k.up.set(0, -1, 0), k.lookAt(new THREE.Vector3(0, 0, -1)), this.add(k), this.renderTarget = new THREE.WebGLRenderTargetCube(c, c, {
            format: THREE.RGBFormat,
            magFilter: THREE.LinearFilter,
            minFilter: THREE.LinearFilter
        }), this.updateCubeMap = function(a, b) {
            var c = this.renderTarget,
                d = c.generateMipmaps;
            c.generateMipmaps = !1, c.activeCubeFace = 0, a.render(b, f, c), c.activeCubeFace = 1, a.render(b, g, c), c.activeCubeFace = 2, a.render(b, h, c), c.activeCubeFace = 3, a.render(b, i, c), c.activeCubeFace = 4, a.render(b, j, c), c.generateMipmaps = d, c.activeCubeFace = 5, a.render(b, k, c)
        }
    }, THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype), THREE.CombinedCamera = function(a, b, c, d, e, f, g) {
        THREE.Camera.call(this), this.fov = c, this.left = -a / 2, this.right = a / 2, this.top = b / 2, this.bottom = -b / 2, this.cameraO = new THREE.OrthographicCamera(a / -2, a / 2, b / 2, b / -2, f, g), this.cameraP = new THREE.PerspectiveCamera(c, a / b, d, e), this.zoom = 1, this.toPerspective()
    }, THREE.CombinedCamera.prototype = Object.create(THREE.Camera.prototype), THREE.CombinedCamera.prototype.toPerspective = function() {
        this.near = this.cameraP.near, this.far = this.cameraP.far, this.cameraP.fov = this.fov / this.zoom, this.cameraP.updateProjectionMatrix(), this.projectionMatrix = this.cameraP.projectionMatrix, this.inPerspectiveMode = !0, this.inOrthographicMode = !1
    }, THREE.CombinedCamera.prototype.toOrthographic = function() {
        var a = this.fov,
            b = this.cameraP.aspect,
            c = this.cameraP.near,
            d = this.cameraP.far,
            e = (c + d) / 2,
            f = Math.tan(a / 2) * e,
            g = 2 * f,
            h = g * b,
            i = h / 2;
        f /= this.zoom, i /= this.zoom, this.cameraO.left = -i, this.cameraO.right = i, this.cameraO.top = f, this.cameraO.bottom = -f, this.cameraO.updateProjectionMatrix(), this.near = this.cameraO.near, this.far = this.cameraO.far, this.projectionMatrix = this.cameraO.projectionMatrix, this.inPerspectiveMode = !1, this.inOrthographicMode = !0
    }, THREE.CombinedCamera.prototype.setSize = function(a, b) {
        this.cameraP.aspect = a / b, this.left = -a / 2, this.right = a / 2, this.top = b / 2, this.bottom = -b / 2
    }, THREE.CombinedCamera.prototype.setFov = function(a) {
        this.fov = a, this.inPerspectiveMode ? this.toPerspective() : this.toOrthographic()
    }, THREE.CombinedCamera.prototype.updateProjectionMatrix = function() {
        this.inPerspectiveMode ? this.toPerspective() : (this.toPerspective(), this.toOrthographic())
    }, THREE.CombinedCamera.prototype.setLens = function(a, b) {
        void 0 === b && (b = 24);
        var c = 2 * THREE.Math.radToDeg(Math.atan(b / (2 * a)));
        return this.setFov(c), c
    }, THREE.CombinedCamera.prototype.setZoom = function(a) {
        this.zoom = a, this.inPerspectiveMode ? this.toPerspective() : this.toOrthographic()
    }, THREE.CombinedCamera.prototype.toFrontView = function() {
        this.rotation.x = 0, this.rotation.y = 0, this.rotation.z = 0, this.rotationAutoUpdate = !1
    }, THREE.CombinedCamera.prototype.toBackView = function() {
        this.rotation.x = 0, this.rotation.y = Math.PI, this.rotation.z = 0, this.rotationAutoUpdate = !1
    }, THREE.CombinedCamera.prototype.toLeftView = function() {
        this.rotation.x = 0, this.rotation.y = -Math.PI / 2, this.rotation.z = 0, this.rotationAutoUpdate = !1
    }, THREE.CombinedCamera.prototype.toRightView = function() {
        this.rotation.x = 0, this.rotation.y = Math.PI / 2, this.rotation.z = 0, this.rotationAutoUpdate = !1
    }, THREE.CombinedCamera.prototype.toTopView = function() {
        this.rotation.x = -Math.PI / 2, this.rotation.y = 0, this.rotation.z = 0, this.rotationAutoUpdate = !1
    }, THREE.CombinedCamera.prototype.toBottomView = function() {
        this.rotation.x = Math.PI / 2, this.rotation.y = 0, this.rotation.z = 0, this.rotationAutoUpdate = !1
    }, THREE.CircleGeometry = function(a, b, c, d) {
        THREE.Geometry.call(this), a = a || 50, c = void 0 !== c ? c : 0, d = void 0 !== d ? d : 2 * Math.PI, b = void 0 !== b ? Math.max(3, b) : 8;
        var e, f = [],
            g = new THREE.Vector3,
            h = new THREE.Vector2(.5, .5);
        for (this.vertices.push(g), f.push(h), e = 0; b >= e; e++) {
            var i = new THREE.Vector3,
                j = c + e / b * d;
            i.x = a * Math.cos(j), i.y = a * Math.sin(j), this.vertices.push(i), f.push(new THREE.Vector2((i.x / a + 1) / 2, (i.y / a + 1) / 2))
        }
        var k = new THREE.Vector3(0, 0, 1);
        for (e = 1; b >= e; e++) {
            var l = e,
                m = e + 1,
                n = 0;
            this.faces.push(new THREE.Face3(l, m, n, [k, k, k])), this.faceVertexUvs[0].push([f[e], f[e + 1], h])
        }
        this.computeCentroids(), this.computeFaceNormals(), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, a)
    }, THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.CubeGeometry = function(a, b, c, d, e, f) {
        function g(a, b, c, d, e, f, g, i) {
            var j, k, l, m = h.widthSegments,
                n = h.heightSegments,
                o = e / 2,
                p = f / 2,
                q = h.vertices.length;
            "x" === a && "y" === b || "y" === a && "x" === b ? j = "z" : "x" === a && "z" === b || "z" === a && "x" === b ? (j = "y", n = h.depthSegments) : ("z" === a && "y" === b || "y" === a && "z" === b) && (j = "x", m = h.depthSegments);
            var r = m + 1,
                s = n + 1,
                t = e / m,
                u = f / n,
                v = new THREE.Vector3;
            for (v[j] = g > 0 ? 1 : -1, l = 0; s > l; l++)
                for (k = 0; r > k; k++) {
                    var w = new THREE.Vector3;
                    w[a] = (k * t - o) * c, w[b] = (l * u - p) * d, w[j] = g, h.vertices.push(w)
                }
            for (l = 0; n > l; l++)
                for (k = 0; m > k; k++) {
                    var x = k + r * l,
                        y = k + r * (l + 1),
                        z = k + 1 + r * (l + 1),
                        A = k + 1 + r * l,
                        B = new THREE.Face4(x + q, y + q, z + q, A + q);
                    B.normal.copy(v), B.vertexNormals.push(v.clone(), v.clone(), v.clone(), v.clone()), B.materialIndex = i, h.faces.push(B), h.faceVertexUvs[0].push([new THREE.Vector2(k / m, 1 - l / n), new THREE.Vector2(k / m, 1 - (l + 1) / n), new THREE.Vector2((k + 1) / m, 1 - (l + 1) / n), new THREE.Vector2((k + 1) / m, 1 - l / n)])
                }
        }
        THREE.Geometry.call(this);
        var h = this;
        this.width = a, this.height = b, this.depth = c, this.widthSegments = d || 1, this.heightSegments = e || 1, this.depthSegments = f || 1;
        var i = this.width / 2,
            j = this.height / 2,
            k = this.depth / 2;
        g("z", "y", -1, -1, this.depth, this.height, i, 0), g("z", "y", 1, -1, this.depth, this.height, -i, 1), g("x", "z", 1, 1, this.width, this.depth, j, 2), g("x", "z", 1, -1, this.width, this.depth, -j, 3), g("x", "y", 1, -1, this.width, this.height, k, 4), g("x", "y", -1, -1, this.width, this.height, -k, 5), this.computeCentroids(), this.mergeVertices()
    }, THREE.CubeGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.CylinderGeometry = function(a, b, c, d, e, f) {
        THREE.Geometry.call(this), this.radiusTop = a = void 0 !== a ? a : 20, this.radiusBottom = b = void 0 !== b ? b : 20, this.height = c = void 0 !== c ? c : 100, this.radialSegments = d = d || 8, this.heightSegments = e = e || 1, this.openEnded = f = void 0 !== f ? f : !1;
        var g, h, i = c / 2,
            j = [],
            k = [];
        for (h = 0; e >= h; h++) {
            var l = [],
                m = [],
                n = h / e,
                o = n * (b - a) + a;
            for (g = 0; d >= g; g++) {
                var p = g / d,
                    q = new THREE.Vector3;
                q.x = o * Math.sin(p * Math.PI * 2), q.y = -n * c + i, q.z = o * Math.cos(p * Math.PI * 2), this.vertices.push(q), l.push(this.vertices.length - 1), m.push(new THREE.Vector2(p, 1 - n))
            }
            j.push(l), k.push(m)
        }
        var r, s, t = (b - a) / c;
        for (g = 0; d > g; g++)
            for (0 !== a ? (r = this.vertices[j[0][g]].clone(), s = this.vertices[j[0][g + 1]].clone()) : (r = this.vertices[j[1][g]].clone(), s = this.vertices[j[1][g + 1]].clone()), r.setY(Math.sqrt(r.x * r.x + r.z * r.z) * t).normalize(), s.setY(Math.sqrt(s.x * s.x + s.z * s.z) * t).normalize(), h = 0; e > h; h++) {
                var u = j[h][g],
                    v = j[h + 1][g],
                    w = j[h + 1][g + 1],
                    x = j[h][g + 1],
                    y = r.clone(),
                    z = r.clone(),
                    A = s.clone(),
                    B = s.clone(),
                    C = k[h][g].clone(),
                    D = k[h + 1][g].clone(),
                    E = k[h + 1][g + 1].clone(),
                    F = k[h][g + 1].clone();
                this.faces.push(new THREE.Face4(u, v, w, x, [y, z, A, B])), this.faceVertexUvs[0].push([C, D, E, F])
            }
        if (f === !1 && a > 0)
            for (this.vertices.push(new THREE.Vector3(0, i, 0)), g = 0; d > g; g++) {
                var u = j[0][g],
                    v = j[0][g + 1],
                    w = this.vertices.length - 1,
                    y = new THREE.Vector3(0, 1, 0),
                    z = new THREE.Vector3(0, 1, 0),
                    A = new THREE.Vector3(0, 1, 0),
                    C = k[0][g].clone(),
                    D = k[0][g + 1].clone(),
                    E = new THREE.Vector2(D.u, 0);
                this.faces.push(new THREE.Face3(u, v, w, [y, z, A])), this.faceVertexUvs[0].push([C, D, E])
            }
        if (f === !1 && b > 0)
            for (this.vertices.push(new THREE.Vector3(0, -i, 0)), g = 0; d > g; g++) {
                var u = j[h][g + 1],
                    v = j[h][g],
                    w = this.vertices.length - 1,
                    y = new THREE.Vector3(0, -1, 0),
                    z = new THREE.Vector3(0, -1, 0),
                    A = new THREE.Vector3(0, -1, 0),
                    C = k[h][g + 1].clone(),
                    D = k[h][g].clone(),
                    E = new THREE.Vector2(D.u, 1);
                this.faces.push(new THREE.Face3(u, v, w, [y, z, A])), this.faceVertexUvs[0].push([C, D, E])
            }
        this.computeCentroids(), this.computeFaceNormals()
    }, THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.ExtrudeGeometry = function(a, b) {
        return "undefined" == typeof a ? void(a = []) : (THREE.Geometry.call(this), a = a instanceof Array ? a : [a], this.shapebb = a[a.length - 1].getBoundingBox(), this.addShapeList(a, b), this.computeCentroids(), void this.computeFaceNormals())
    }, THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.ExtrudeGeometry.prototype.addShapeList = function(a, b) {
        for (var c = a.length, d = 0; c > d; d++) {
            var e = a[d];
            this.addShape(e, b)
        }
    }, THREE.ExtrudeGeometry.prototype.addShape = function(a, b) {
        function c(a, b, c) {
            return b || console.log("die"), b.clone().multiplyScalar(c).add(a)
        }

        function d(a, b, c) {
            return f(a, b, c)
        }

        function e(a, b, c) {
            var d = Math.atan2(b.y - a.y, b.x - a.x),
                e = Math.atan2(c.y - a.y, c.x - a.x);
            d > e && (e += 2 * Math.PI);
            var f = (d + e) / 2,
                g = -Math.cos(f),
                h = -Math.sin(f),
                i = new THREE.Vector2(g, h);
            return i
        }

        function f(a, b, c) {
            var d, f, g, h, i, j, k = THREE.ExtrudeGeometry.__v1,
                l = THREE.ExtrudeGeometry.__v2,
                m = THREE.ExtrudeGeometry.__v3,
                n = THREE.ExtrudeGeometry.__v4,
                o = THREE.ExtrudeGeometry.__v5,
                p = THREE.ExtrudeGeometry.__v6;
            return k.set(a.x - b.x, a.y - b.y), l.set(a.x - c.x, a.y - c.y), d = k.normalize(), f = l.normalize(), m.set(-d.y, d.x), n.set(f.y, -f.x), o.copy(a).add(m), p.copy(a).add(n), o.equals(p) ? n.clone() : (o.copy(b).add(m), p.copy(c).add(n), g = d.dot(n), h = p.sub(o).dot(n), 0 === g && (console.log("Either infinite or no solutions!"), console.log(0 === h ? "Its finite solutions." : "Too bad, no solutions.")), i = h / g, 0 > i ? e(a, b, c) : (j = d.multiplyScalar(i).add(o), j.sub(a).clone()))
        }

        function g() {
            if (v) {
                var a = 0,
                    b = U * a;
                for (X = 0; V > X; X++) T = M[X], k(T[2] + b, T[1] + b, T[0] + b, !0);
                for (a = x + 2 * u, b = U * a, X = 0; V > X; X++) T = M[X], k(T[0] + b, T[1] + b, T[2] + b, !1)
            } else {
                for (X = 0; V > X; X++) T = M[X], k(T[2], T[1], T[0], !0);
                for (X = 0; V > X; X++) T = M[X], k(T[0] + U * x, T[1] + U * x, T[2] + U * x, !1)
            }
        }

        function h() {
            var a = 0;
            for (i(N, a), a += N.length, E = 0, F = K.length; F > E; E++) D = K[E], i(D, a), a += D.length
        }

        function i(a, b) {
            var c, d;
            for (X = a.length; --X >= 0;) {
                c = X, d = X - 1, 0 > d && (d = a.length - 1);
                var e = 0,
                    f = x + 2 * u;
                for (e = 0; f > e; e++) {
                    var g = U * e,
                        h = U * (e + 1),
                        i = b + c + g,
                        j = b + d + g,
                        k = b + d + h,
                        m = b + c + h;
                    l(i, j, k, m, a, e, f, c, d)
                }
            }
        }

        function j(a, b, c) {
            G.vertices.push(new THREE.Vector3(a, b, c))
        }

        function k(c, d, e, f) {
            c += H, d += H, e += H, G.faces.push(new THREE.Face3(c, d, e, null, null, A));
            var g = f ? C.generateBottomUV(G, a, b, c, d, e) : C.generateTopUV(G, a, b, c, d, e);
            G.faceVertexUvs[0].push(g)
        }

        function l(c, d, e, f, g, h, i, j, k) {
            c += H, d += H, e += H, f += H, G.faces.push(new THREE.Face4(c, d, e, f, null, null, B));
            var l = C.generateSideWallUV(G, a, g, b, c, d, e, f, h, i, j, k);
            G.faceVertexUvs[0].push(l)
        } {
            var m, n, o, p, q, r = void 0 !== b.amount ? b.amount : 100,
                s = void 0 !== b.bevelThickness ? b.bevelThickness : 6,
                t = void 0 !== b.bevelSize ? b.bevelSize : s - 2,
                u = void 0 !== b.bevelSegments ? b.bevelSegments : 3,
                v = void 0 !== b.bevelEnabled ? b.bevelEnabled : !0,
                w = void 0 !== b.curveSegments ? b.curveSegments : 12,
                x = void 0 !== b.steps ? b.steps : 1,
                y = b.extrudePath,
                z = !1,
                A = b.material,
                B = b.extrudeMaterial,
                C = void 0 !== b.UVGenerator ? b.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;
            this.shapebb
        }
        y && (m = y.getSpacedPoints(x), z = !0, v = !1, n = void 0 !== b.frames ? b.frames : new THREE.TubeGeometry.FrenetFrames(y, x, !1), o = new THREE.Vector3, p = new THREE.Vector3, q = new THREE.Vector3), v || (u = 0, s = 0, t = 0);
        var D, E, F, G = this,
            H = this.vertices.length,
            I = a.extractPoints(w),
            J = I.shape,
            K = I.holes,
            L = !THREE.Shape.Utils.isClockWise(J);
        if (L) {
            for (J = J.reverse(), E = 0, F = K.length; F > E; E++) D = K[E], THREE.Shape.Utils.isClockWise(D) && (K[E] = D.reverse());
            L = !1
        }
        var M = THREE.Shape.Utils.triangulateShape(J, K),
            N = J;
        for (E = 0, F = K.length; F > E; E++) D = K[E], J = J.concat(D);
        for (var O, P, Q, R, S, T, U = J.length, V = M.length, W = (N.length, 180 / Math.PI, []), X = 0, Y = N.length, Z = Y - 1, $ = X + 1; Y > X; X++, Z++, $++) {
            Z === Y && (Z = 0), $ === Y && ($ = 0); {
                N[X], N[Z], N[$]
            }
            W[X] = d(N[X], N[Z], N[$])
        }
        var _, ab = [],
            bb = W.concat();
        for (E = 0, F = K.length; F > E; E++) {
            for (D = K[E], _ = [], X = 0, Y = D.length, Z = Y - 1, $ = X + 1; Y > X; X++, Z++, $++) Z === Y && (Z = 0), $ === Y && ($ = 0), _[X] = d(D[X], D[Z], D[$]);
            ab.push(_), bb = bb.concat(_)
        }
        for (O = 0; u > O; O++) {
            for (Q = O / u, R = s * (1 - Q), P = t * Math.sin(Q * Math.PI / 2), X = 0, Y = N.length; Y > X; X++) S = c(N[X], W[X], P), j(S.x, S.y, -R);
            for (E = 0, F = K.length; F > E; E++)
                for (D = K[E], _ = ab[E], X = 0, Y = D.length; Y > X; X++) S = c(D[X], _[X], P), j(S.x, S.y, -R)
        }
        for (P = t, X = 0; U > X; X++) S = v ? c(J[X], bb[X], P) : J[X], z ? (p.copy(n.normals[0]).multiplyScalar(S.x), o.copy(n.binormals[0]).multiplyScalar(S.y), q.copy(m[0]).add(p).add(o), j(q.x, q.y, q.z)) : j(S.x, S.y, 0);
        var cb;
        for (cb = 1; x >= cb; cb++)
            for (X = 0; U > X; X++) S = v ? c(J[X], bb[X], P) : J[X], z ? (p.copy(n.normals[cb]).multiplyScalar(S.x), o.copy(n.binormals[cb]).multiplyScalar(S.y), q.copy(m[cb]).add(p).add(o), j(q.x, q.y, q.z)) : j(S.x, S.y, r / x * cb);
        for (O = u - 1; O >= 0; O--) {
            for (Q = O / u, R = s * (1 - Q), P = t * Math.sin(Q * Math.PI / 2), X = 0, Y = N.length; Y > X; X++) S = c(N[X], W[X], P), j(S.x, S.y, r + R);
            for (E = 0, F = K.length; F > E; E++)
                for (D = K[E], _ = ab[E], X = 0, Y = D.length; Y > X; X++) S = c(D[X], _[X], P), z ? j(S.x, S.y + m[x - 1].y, m[x - 1].x + R) : j(S.x, S.y, r + R)
        }
        g(), h()
    }, THREE.ExtrudeGeometry.WorldUVGenerator = {
        generateTopUV: function(a, b, c, d, e, f) {
            var g = a.vertices[d].x,
                h = a.vertices[d].y,
                i = a.vertices[e].x,
                j = a.vertices[e].y,
                k = a.vertices[f].x,
                l = a.vertices[f].y;
            return [new THREE.Vector2(g, h), new THREE.Vector2(i, j), new THREE.Vector2(k, l)]
        },
        generateBottomUV: function(a, b, c, d, e, f) {
            return this.generateTopUV(a, b, c, d, e, f)
        },
        generateSideWallUV: function(a, b, c, d, e, f, g, h) {
            var i = a.vertices[e].x,
                j = a.vertices[e].y,
                k = a.vertices[e].z,
                l = a.vertices[f].x,
                m = a.vertices[f].y,
                n = a.vertices[f].z,
                o = a.vertices[g].x,
                p = a.vertices[g].y,
                q = a.vertices[g].z,
                r = a.vertices[h].x,
                s = a.vertices[h].y,
                t = a.vertices[h].z;
            return Math.abs(j - m) < .01 ? [new THREE.Vector2(i, 1 - k), new THREE.Vector2(l, 1 - n), new THREE.Vector2(o, 1 - q), new THREE.Vector2(r, 1 - t)] : [new THREE.Vector2(j, 1 - k), new THREE.Vector2(m, 1 - n), new THREE.Vector2(p, 1 - q), new THREE.Vector2(s, 1 - t)]
        }
    }, THREE.ExtrudeGeometry.__v1 = new THREE.Vector2, THREE.ExtrudeGeometry.__v2 = new THREE.Vector2, THREE.ExtrudeGeometry.__v3 = new THREE.Vector2, THREE.ExtrudeGeometry.__v4 = new THREE.Vector2, THREE.ExtrudeGeometry.__v5 = new THREE.Vector2, THREE.ExtrudeGeometry.__v6 = new THREE.Vector2, THREE.ShapeGeometry = function(a, b) {
        THREE.Geometry.call(this), a instanceof Array == !1 && (a = [a]), this.shapebb = a[a.length - 1].getBoundingBox(), this.addShapeList(a, b), this.computeCentroids(), this.computeFaceNormals()
    }, THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.ShapeGeometry.prototype.addShapeList = function(a, b) {
        for (var c = 0, d = a.length; d > c; c++) this.addShape(a[c], b);
        return this
    }, THREE.ShapeGeometry.prototype.addShape = function(a, b) {
        void 0 === b && (b = {});
        var c, d, e, f = void 0 !== b.curveSegments ? b.curveSegments : 12,
            g = b.material,
            h = void 0 === b.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : b.UVGenerator,
            i = (this.shapebb, this.vertices.length),
            j = a.extractPoints(f),
            k = j.shape,
            l = j.holes,
            m = !THREE.Shape.Utils.isClockWise(k);
        if (m) {
            for (k = k.reverse(), c = 0, d = l.length; d > c; c++) e = l[c], THREE.Shape.Utils.isClockWise(e) && (l[c] = e.reverse());
            m = !1
        }
        var n = THREE.Shape.Utils.triangulateShape(k, l),
            o = k;
        for (c = 0, d = l.length; d > c; c++) e = l[c], k = k.concat(e); {
            var p, q, r = k.length,
                s = n.length;
            o.length
        }
        for (c = 0; r > c; c++) p = k[c], this.vertices.push(new THREE.Vector3(p.x, p.y, 0));
        for (c = 0; s > c; c++) {
            q = n[c];
            var t = q[0] + i,
                u = q[1] + i,
                v = q[2] + i;
            this.faces.push(new THREE.Face3(t, u, v, null, null, g)), this.faceVertexUvs[0].push(h.generateBottomUV(this, a, b, t, u, v))
        }
    }, THREE.LatheGeometry = function(a, b, c, d) {
        THREE.Geometry.call(this), b = b || 12, c = c || 0, d = d || 2 * Math.PI;
        for (var e = 1 / (a.length - 1), f = 1 / b, g = 0, h = b; h >= g; g++)
            for (var i = c + g * f * d, j = Math.cos(i), k = Math.sin(i), l = 0, m = a.length; m > l; l++) {
                var n = a[l],
                    o = new THREE.Vector3;
                o.x = j * n.x - k * n.y, o.y = k * n.x + j * n.y, o.z = n.z, this.vertices.push(o)
            }
        for (var p = a.length, g = 0, h = b; h > g; g++)
            for (var l = 0, m = a.length - 1; m > l; l++) {
                var q = l + p * g,
                    r = q,
                    s = q + p,
                    j = q + 1 + p,
                    t = q + 1;
                this.faces.push(new THREE.Face4(r, s, j, t));
                var u = g * f,
                    v = l * e,
                    w = u + f,
                    x = v + e;
                this.faceVertexUvs[0].push([new THREE.Vector2(u, v), new THREE.Vector2(w, v), new THREE.Vector2(w, x), new THREE.Vector2(u, x)])
            }
        this.mergeVertices(), this.computeCentroids(), this.computeFaceNormals(), this.computeVertexNormals()
    }, THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.PlaneGeometry = function(a, b, c, d) {
        THREE.Geometry.call(this), this.width = a, this.height = b, this.widthSegments = c || 1, this.heightSegments = d || 1;
        var e, f, g = a / 2,
            h = b / 2,
            i = this.widthSegments,
            j = this.heightSegments,
            k = i + 1,
            l = j + 1,
            m = this.width / i,
            n = this.height / j,
            o = new THREE.Vector3(0, 0, 1);
        for (f = 0; l > f; f++)
            for (e = 0; k > e; e++) {
                var p = e * m - g,
                    q = f * n - h;
                this.vertices.push(new THREE.Vector3(p, -q, 0))
            }
        for (f = 0; j > f; f++)
            for (e = 0; i > e; e++) {
                var r = e + k * f,
                    s = e + k * (f + 1),
                    t = e + 1 + k * (f + 1),
                    u = e + 1 + k * f,
                    v = new THREE.Face4(r, s, t, u);
                v.normal.copy(o), v.vertexNormals.push(o.clone(), o.clone(), o.clone(), o.clone()), this.faces.push(v), this.faceVertexUvs[0].push([new THREE.Vector2(e / i, 1 - f / j), new THREE.Vector2(e / i, 1 - (f + 1) / j), new THREE.Vector2((e + 1) / i, 1 - (f + 1) / j), new THREE.Vector2((e + 1) / i, 1 - f / j)])
            }
        this.computeCentroids()
    }, THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.RingGeometry = function(a, b, c, d, e, f) {
        THREE.Geometry.call(this), a = a || 0, b = b || 50, e = void 0 !== e ? e : 0, f = void 0 !== f ? f : 2 * Math.PI, c = void 0 !== c ? Math.max(3, c) : 8, d = void 0 !== d ? Math.max(3, d) : 8;
        var g, h, i = [],
            j = a,
            k = (b - a) / d;
        for (g = 0; d >= g; g++) {
            for (h = 0; c >= h; h++) {
                var l = new THREE.Vector3,
                    m = e + h / c * f;
                l.x = j * Math.cos(m), l.y = j * Math.sin(m), this.vertices.push(l), i.push(new THREE.Vector2((l.x / j + 1) / 2, -(l.y / j + 1) / 2 + 1))
            }
            j += k
        }
        var n = new THREE.Vector3(0, 0, 1);
        for (g = 0; d > g; g++) {
            var o = g * c;
            for (h = 0; c >= h; h++) {
                var m = h + o,
                    p = m + g,
                    q = m + c + g,
                    r = m + c + 1 + g;
                this.faces.push(new THREE.Face3(p, q, r, [n, n, n])), this.faceVertexUvs[0].push([i[p], i[q], i[r]]), p = m + g, q = m + c + 1 + g, r = m + 1 + g, this.faces.push(new THREE.Face3(p, q, r, [n, n, n])), this.faceVertexUvs[0].push([i[p], i[q], i[r]])
            }
        }
        this.computeCentroids(), this.computeFaceNormals(), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, j)
    }, THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.SphereGeometry = function(a, b, c, d, e, f, g) {
        THREE.Geometry.call(this), this.radius = a = a || 50, this.widthSegments = b = Math.max(3, Math.floor(b) || 8), this.heightSegments = c = Math.max(2, Math.floor(c) || 6), this.phiStart = d = void 0 !== d ? d : 0, this.phiLength = e = void 0 !== e ? e : 2 * Math.PI, this.thetaStart = f = void 0 !== f ? f : 0, this.thetaLength = g = void 0 !== g ? g : Math.PI;
        var h, i, j = [],
            k = [];
        for (i = 0; c >= i; i++) {
            var l = [],
                m = [];
            for (h = 0; b >= h; h++) {
                var n = h / b,
                    o = i / c,
                    p = new THREE.Vector3;
                p.x = -a * Math.cos(d + n * e) * Math.sin(f + o * g), p.y = a * Math.cos(f + o * g), p.z = a * Math.sin(d + n * e) * Math.sin(f + o * g), this.vertices.push(p), l.push(this.vertices.length - 1), m.push(new THREE.Vector2(n, 1 - o))
            }
            j.push(l), k.push(m)
        }
        for (i = 0; i < this.heightSegments; i++)
            for (h = 0; h < this.widthSegments; h++) {
                var q = j[i][h + 1],
                    r = j[i][h],
                    s = j[i + 1][h],
                    t = j[i + 1][h + 1],
                    u = this.vertices[q].clone().normalize(),
                    v = this.vertices[r].clone().normalize(),
                    w = this.vertices[s].clone().normalize(),
                    x = this.vertices[t].clone().normalize(),
                    y = k[i][h + 1].clone(),
                    z = k[i][h].clone(),
                    A = k[i + 1][h].clone(),
                    B = k[i + 1][h + 1].clone();
                Math.abs(this.vertices[q].y) === this.radius ? (this.faces.push(new THREE.Face3(q, s, t, [u, w, x])), this.faceVertexUvs[0].push([y, A, B])) : Math.abs(this.vertices[s].y) === this.radius ? (this.faces.push(new THREE.Face3(q, r, s, [u, v, w])), this.faceVertexUvs[0].push([y, z, A])) : (this.faces.push(new THREE.Face4(q, r, s, t, [u, v, w, x])), this.faceVertexUvs[0].push([y, z, A, B]))
            }
        this.computeCentroids(), this.computeFaceNormals(), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, a)
    }, THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TextGeometry = function(a, b) {
        b = b || {};
        var c = THREE.FontUtils.generateShapes(a, b);
        b.amount = void 0 !== b.height ? b.height : 50, void 0 === b.bevelThickness && (b.bevelThickness = 10), void 0 === b.bevelSize && (b.bevelSize = 8), void 0 === b.bevelEnabled && (b.bevelEnabled = !1), THREE.ExtrudeGeometry.call(this, c, b)
    }, THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype), THREE.TorusGeometry = function(a, b, c, d, e) {
        THREE.Geometry.call(this);
        this.radius = a || 100, this.tube = b || 40, this.radialSegments = c || 8, this.tubularSegments = d || 6, this.arc = e || 2 * Math.PI;
        for (var f = new THREE.Vector3, g = [], h = [], i = 0; i <= this.radialSegments; i++)
            for (var j = 0; j <= this.tubularSegments; j++) {
                var k = j / this.tubularSegments * this.arc,
                    l = i / this.radialSegments * Math.PI * 2;
                f.x = this.radius * Math.cos(k), f.y = this.radius * Math.sin(k);
                var m = new THREE.Vector3;
                m.x = (this.radius + this.tube * Math.cos(l)) * Math.cos(k), m.y = (this.radius + this.tube * Math.cos(l)) * Math.sin(k), m.z = this.tube * Math.sin(l), this.vertices.push(m), g.push(new THREE.Vector2(j / this.tubularSegments, i / this.radialSegments)), h.push(m.clone().sub(f).normalize())
            }
        for (var i = 1; i <= this.radialSegments; i++)
            for (var j = 1; j <= this.tubularSegments; j++) {
                var n = (this.tubularSegments + 1) * i + j - 1,
                    o = (this.tubularSegments + 1) * (i - 1) + j - 1,
                    p = (this.tubularSegments + 1) * (i - 1) + j,
                    q = (this.tubularSegments + 1) * i + j,
                    r = new THREE.Face4(n, o, p, q, [h[n], h[o], h[p], h[q]]);
                r.normal.add(h[n]), r.normal.add(h[o]), r.normal.add(h[p]), r.normal.add(h[q]), r.normal.normalize(), this.faces.push(r), this.faceVertexUvs[0].push([g[n].clone(), g[o].clone(), g[p].clone(), g[q].clone()])
            }
        this.computeCentroids()
    }, THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TorusKnotGeometry = function(a, b, c, d, e, f, g) {
        function h(a, b, c, d, e) {
            var f = Math.cos(a),
                g = Math.sin(a),
                h = b / c * a,
                i = Math.cos(h),
                j = d * (2 + i) * .5 * f,
                k = d * (2 + i) * g * .5,
                l = e * d * Math.sin(h) * .5;
            return new THREE.Vector3(j, k, l)
        }
        THREE.Geometry.call(this);
        var i = this;
        this.radius = a || 100, this.tube = b || 40, this.radialSegments = c || 64, this.tubularSegments = d || 8, this.p = e || 2, this.q = f || 3, this.heightScale = g || 1, this.grid = new Array(this.radialSegments);
        for (var j = new THREE.Vector3, k = new THREE.Vector3, l = new THREE.Vector3, m = 0; m < this.radialSegments; ++m) {
            this.grid[m] = new Array(this.tubularSegments);
            var n = m / this.radialSegments * 2 * this.p * Math.PI,
                o = h(n, this.q, this.p, this.radius, this.heightScale),
                p = h(n + .01, this.q, this.p, this.radius, this.heightScale);
            j.subVectors(p, o), k.addVectors(p, o), l.crossVectors(j, k), k.crossVectors(l, j), l.normalize(), k.normalize();
            for (var q = 0; q < this.tubularSegments; ++q) {
                var r = q / this.tubularSegments * 2 * Math.PI,
                    s = -this.tube * Math.cos(r),
                    t = this.tube * Math.sin(r),
                    u = new THREE.Vector3;
                u.x = o.x + s * k.x + t * l.x, u.y = o.y + s * k.y + t * l.y, u.z = o.z + s * k.z + t * l.z, this.grid[m][q] = i.vertices.push(u) - 1
            }
        }
        for (var m = 0; m < this.radialSegments; ++m)
            for (var q = 0; q < this.tubularSegments; ++q) {
                var v = (m + 1) % this.radialSegments,
                    w = (q + 1) % this.tubularSegments,
                    x = this.grid[m][q],
                    y = this.grid[v][q],
                    z = this.grid[v][w],
                    A = this.grid[m][w],
                    B = new THREE.Vector2(m / this.radialSegments, q / this.tubularSegments),
                    C = new THREE.Vector2((m + 1) / this.radialSegments, q / this.tubularSegments),
                    D = new THREE.Vector2((m + 1) / this.radialSegments, (q + 1) / this.tubularSegments),
                    E = new THREE.Vector2(m / this.radialSegments, (q + 1) / this.tubularSegments);
                this.faces.push(new THREE.Face4(x, y, z, A)), this.faceVertexUvs[0].push([B, C, D, E])
            }
        this.computeCentroids(), this.computeFaceNormals(), this.computeVertexNormals()
    }, THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TubeGeometry = function(a, b, c, d, e) {
        function f(a, b, c) {
            return A.vertices.push(new THREE.Vector3(a, b, c)) - 1
        }
        THREE.Geometry.call(this), this.path = a, this.segments = b || 64, this.radius = c || 1, this.radialSegments = d || 8, this.closed = e || !1, this.grid = [];
        var g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A = this,
            B = this.segments + 1,
            C = new THREE.Vector3,
            D = new THREE.TubeGeometry.FrenetFrames(this.path, this.segments, this.closed),
            E = D.tangents,
            F = D.normals,
            G = D.binormals;
        for (this.tangents = E, this.normals = F, this.binormals = G, o = 0; B > o; o++)
            for (this.grid[o] = [], j = o / (B - 1), n = a.getPointAt(j), g = E[o], h = F[o], i = G[o], p = 0; p < this.radialSegments; p++) k = p / this.radialSegments * 2 * Math.PI, l = -this.radius * Math.cos(k), m = this.radius * Math.sin(k), C.copy(n), C.x += l * h.x + m * i.x, C.y += l * h.y + m * i.y, C.z += l * h.z + m * i.z, this.grid[o][p] = f(C.x, C.y, C.z);
        for (o = 0; o < this.segments; o++)
            for (p = 0; p < this.radialSegments; p++) q = this.closed ? (o + 1) % this.segments : o + 1, r = (p + 1) % this.radialSegments, s = this.grid[o][p], t = this.grid[q][p], u = this.grid[q][r], v = this.grid[o][r], w = new THREE.Vector2(o / this.segments, p / this.radialSegments), x = new THREE.Vector2((o + 1) / this.segments, p / this.radialSegments), y = new THREE.Vector2((o + 1) / this.segments, (p + 1) / this.radialSegments), z = new THREE.Vector2(o / this.segments, (p + 1) / this.radialSegments), this.faces.push(new THREE.Face4(s, t, u, v)), this.faceVertexUvs[0].push([w, x, y, z]);
        this.computeCentroids(), this.computeFaceNormals(), this.computeVertexNormals()
    }, THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TubeGeometry.FrenetFrames = function(a, b, c) {
        function d() {
            n[0] = new THREE.Vector3, o[0] = new THREE.Vector3, f = Number.MAX_VALUE, g = Math.abs(m[0].x), h = Math.abs(m[0].y), i = Math.abs(m[0].z), f >= g && (f = g, l.set(1, 0, 0)), f >= h && (f = h, l.set(0, 1, 0)), f >= i && l.set(0, 0, 1), p.crossVectors(m[0], l).normalize(), n[0].crossVectors(m[0], p), o[0].crossVectors(m[0], n[0])
        }
        var e, f, g, h, i, j, k, l = (new THREE.Vector3, new THREE.Vector3),
            m = (new THREE.Vector3, []),
            n = [],
            o = [],
            p = new THREE.Vector3,
            q = new THREE.Matrix4,
            r = b + 1,
            s = 1e-4;
        for (this.tangents = m, this.normals = n, this.binormals = o, j = 0; r > j; j++) k = j / (r - 1), m[j] = a.getTangentAt(k), m[j].normalize();
        for (d(), j = 1; r > j; j++) n[j] = n[j - 1].clone(), o[j] = o[j - 1].clone(), p.crossVectors(m[j - 1], m[j]), p.length() > s && (p.normalize(), e = Math.acos(THREE.Math.clamp(m[j - 1].dot(m[j]), -1, 1)), n[j].applyMatrix4(q.makeRotationAxis(p, e))), o[j].crossVectors(m[j], n[j]);
        if (c)
            for (e = Math.acos(THREE.Math.clamp(n[0].dot(n[r - 1]), -1, 1)), e /= r - 1, m[0].dot(p.crossVectors(n[0], n[r - 1])) > 0 && (e = -e), j = 1; r > j; j++) n[j].applyMatrix4(q.makeRotationAxis(m[j], e * j)), o[j].crossVectors(m[j], n[j])
    }, THREE.PolyhedronGeometry = function(a, b, c, d) {
        function e(a) {
            var b = a.normalize().clone();
            b.index = k.vertices.push(b) - 1;
            var c = h(a) / 2 / Math.PI + .5,
                d = i(a) / Math.PI + .5;
            return b.uv = new THREE.Vector2(c, 1 - d), b
        }

        function f(a, b, c) {
            var d = new THREE.Face3(a.index, b.index, c.index, [a.clone(), b.clone(), c.clone()]);
            d.centroid.add(a).add(b).add(c).divideScalar(3), k.faces.push(d);
            var e = h(d.centroid);
            k.faceVertexUvs[0].push([j(a.uv, a, e), j(b.uv, b, e), j(c.uv, c, e)])
        }

        function g(a, b) {
            for (var c = Math.pow(2, b), d = (Math.pow(4, b), e(k.vertices[a.a])), g = e(k.vertices[a.b]), h = e(k.vertices[a.c]), i = [], j = 0; c >= j; j++) {
                i[j] = [];
                for (var l = e(d.clone().lerp(h, j / c)), m = e(g.clone().lerp(h, j / c)), n = c - j, o = 0; n >= o; o++) i[j][o] = 0 == o && j == c ? l : e(l.clone().lerp(m, o / n))
            }
            for (var j = 0; c > j; j++)
                for (var o = 0; 2 * (c - j) - 1 > o; o++) {
                    var p = Math.floor(o / 2);
                    o % 2 == 0 ? f(i[j][p + 1], i[j + 1][p], i[j][p]) : f(i[j][p + 1], i[j + 1][p + 1], i[j + 1][p])
                }
        }

        function h(a) {
            return Math.atan2(a.z, -a.x)
        }

        function i(a) {
            return Math.atan2(-a.y, Math.sqrt(a.x * a.x + a.z * a.z))
        }

        function j(a, b, c) {
            return 0 > c && 1 === a.x && (a = new THREE.Vector2(a.x - 1, a.y)), 0 === b.x && 0 === b.z && (a = new THREE.Vector2(c / 2 / Math.PI + .5, a.y)), a.clone()
        }
        THREE.Geometry.call(this), c = c || 1, d = d || 0;
        for (var k = this, l = 0, m = a.length; m > l; l++) e(new THREE.Vector3(a[l][0], a[l][1], a[l][2]));
        for (var n = this.vertices, o = [], l = 0, m = b.length; m > l; l++) {
            var p = n[b[l][0]],
                q = n[b[l][1]],
                r = n[b[l][2]];
            o[l] = new THREE.Face3(p.index, q.index, r.index, [p.clone(), q.clone(), r.clone()])
        }
        for (var l = 0, m = o.length; m > l; l++) g(o[l], d);
        for (var l = 0, m = this.faceVertexUvs[0].length; m > l; l++) {
            var s = this.faceVertexUvs[0][l],
                t = s[0].x,
                u = s[1].x,
                v = s[2].x,
                w = Math.max(t, Math.max(u, v)),
                x = Math.min(t, Math.min(u, v));
            w > .9 && .1 > x && (.2 > t && (s[0].x += 1), .2 > u && (s[1].x += 1), .2 > v && (s[2].x += 1))
        }
        for (var l = 0, m = this.vertices.length; m > l; l++) this.vertices[l].multiplyScalar(c);
        this.mergeVertices(), this.computeCentroids(), this.computeFaceNormals(), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, c)
    }, THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.IcosahedronGeometry = function(a, b) {
        this.radius = a, this.detail = b;
        var c = (1 + Math.sqrt(5)) / 2,
            d = [
                [-1, c, 0],
                [1, c, 0],
                [-1, -c, 0],
                [1, -c, 0],
                [0, -1, c],
                [0, 1, c],
                [0, -1, -c],
                [0, 1, -c],
                [c, 0, -1],
                [c, 0, 1],
                [-c, 0, -1],
                [-c, 0, 1]
            ],
            e = [
                [0, 11, 5],
                [0, 5, 1],
                [0, 1, 7],
                [0, 7, 10],
                [0, 10, 11],
                [1, 5, 9],
                [5, 11, 4],
                [11, 10, 2],
                [10, 7, 6],
                [7, 1, 8],
                [3, 9, 4],
                [3, 4, 2],
                [3, 2, 6],
                [3, 6, 8],
                [3, 8, 9],
                [4, 9, 5],
                [2, 4, 11],
                [6, 2, 10],
                [8, 6, 7],
                [9, 8, 1]
            ];
        THREE.PolyhedronGeometry.call(this, d, e, a, b)
    }, THREE.IcosahedronGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.OctahedronGeometry = function(a, b) {
        var c = [
                [1, 0, 0],
                [-1, 0, 0],
                [0, 1, 0],
                [0, -1, 0],
                [0, 0, 1],
                [0, 0, -1]
            ],
            d = [
                [0, 2, 4],
                [0, 4, 3],
                [0, 3, 5],
                [0, 5, 2],
                [1, 2, 5],
                [1, 5, 3],
                [1, 3, 4],
                [1, 4, 2]
            ];
        THREE.PolyhedronGeometry.call(this, c, d, a, b)
    }, THREE.OctahedronGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TetrahedronGeometry = function(a, b) {
        var c = [
                [1, 1, 1],
                [-1, -1, 1],
                [-1, 1, -1],
                [1, -1, -1]
            ],
            d = [
                [2, 1, 0],
                [0, 3, 2],
                [1, 3, 0],
                [2, 3, 1]
            ];
        THREE.PolyhedronGeometry.call(this, c, d, a, b)
    }, THREE.TetrahedronGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.ParametricGeometry = function(a, b, c, d) {
        THREE.Geometry.call(this);
        var e = this.vertices,
            f = this.faces,
            g = this.faceVertexUvs[0];
        d = void 0 === d ? !1 : d;
        var h, i, j, k, l, m = b + 1;
        for (h = 0; c >= h; h++)
            for (l = h / c, i = 0; b >= i; i++) k = i / b, j = a(k, l), e.push(j);
        var n, o, p, q, r, s, t, u;
        for (h = 0; c > h; h++)
            for (i = 0; b > i; i++) n = h * m + i, o = h * m + i + 1, p = (h + 1) * m + i, q = (h + 1) * m + i + 1, r = new THREE.Vector2(i / b, h / c), s = new THREE.Vector2((i + 1) / b, h / c), t = new THREE.Vector2(i / b, (h + 1) / c), u = new THREE.Vector2((i + 1) / b, (h + 1) / c), d ? (f.push(new THREE.Face3(n, o, p)), f.push(new THREE.Face3(o, q, p)), g.push([r, s, t]), g.push([s, u, t])) : (f.push(new THREE.Face4(n, o, q, p)), g.push([r, s, u, t]));
        this.computeCentroids(), this.computeFaceNormals(), this.computeVertexNormals()
    }, THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.AxisHelper = function(a) {
        a = a || 1;
        var b = new THREE.Geometry;
        b.vertices.push(new THREE.Vector3, new THREE.Vector3(a, 0, 0), new THREE.Vector3, new THREE.Vector3(0, a, 0), new THREE.Vector3, new THREE.Vector3(0, 0, a)), b.colors.push(new THREE.Color(16711680), new THREE.Color(16755200), new THREE.Color(65280), new THREE.Color(11206400), new THREE.Color(255), new THREE.Color(43775));
        var c = new THREE.LineBasicMaterial({
            vertexColors: THREE.VertexColors
        });
        THREE.Line.call(this, b, c, THREE.LinePieces)
    }, THREE.AxisHelper.prototype = Object.create(THREE.Line.prototype), THREE.ArrowHelper = function(a, b, c, d) {
        THREE.Object3D.call(this), void 0 === d && (d = 16776960), void 0 === c && (c = 1), this.position = b;
        var e = new THREE.Geometry;
        e.vertices.push(new THREE.Vector3(0, 0, 0)), e.vertices.push(new THREE.Vector3(0, 1, 0)), this.line = new THREE.Line(e, new THREE.LineBasicMaterial({
            color: d
        })), this.line.matrixAutoUpdate = !1, this.add(this.line);
        var f = new THREE.CylinderGeometry(0, .05, .25, 5, 1);
        f.applyMatrix((new THREE.Matrix4).makeTranslation(0, .875, 0)), this.cone = new THREE.Mesh(f, new THREE.MeshBasicMaterial({
            color: d
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(a), this.setLength(c)
    }, THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype), THREE.ArrowHelper.prototype.setDirection = function() {
        var a, b = new THREE.Vector3;
        return function(c) {
            c.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : c.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (b.set(c.z, 0, -c.x).normalize(), a = Math.acos(c.y), this.quaternion.setFromAxisAngle(b, a))
        }
    }(), THREE.ArrowHelper.prototype.setLength = function(a) {
        this.scale.set(a, a, a)
    }, THREE.ArrowHelper.prototype.setColor = function(a) {
        this.line.material.color.setHex(a), this.cone.material.color.setHex(a)
    }, THREE.BoxHelper = function(a) {
        var b = [new THREE.Vector3(1, 1, 1), new THREE.Vector3(-1, 1, 1), new THREE.Vector3(-1, -1, 1), new THREE.Vector3(1, -1, 1), new THREE.Vector3(1, 1, -1), new THREE.Vector3(-1, 1, -1), new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, -1, -1)];
        this.vertices = b;
        var c = new THREE.Geometry;
        c.vertices.push(b[0], b[1], b[1], b[2], b[2], b[3], b[3], b[0], b[4], b[5], b[5], b[6], b[6], b[7], b[7], b[4], b[0], b[4], b[1], b[5], b[2], b[6], b[3], b[7]), THREE.Line.call(this, c, new THREE.LineBasicMaterial({
            color: 16776960
        }), THREE.LinePieces), void 0 !== a && this.update(a)
    }, THREE.BoxHelper.prototype = Object.create(THREE.Line.prototype), THREE.BoxHelper.prototype.update = function(a) {
        var b = a.geometry;
        null === b.boundingBox && b.computeBoundingBox();
        var c = b.boundingBox.min,
            d = b.boundingBox.max,
            e = this.vertices;
        e[0].set(d.x, d.y, d.z), e[1].set(c.x, d.y, d.z), e[2].set(c.x, c.y, d.z), e[3].set(d.x, c.y, d.z), e[4].set(d.x, d.y, c.z), e[5].set(c.x, d.y, c.z), e[6].set(c.x, c.y, c.z), e[7].set(d.x, c.y, c.z), this.geometry.computeBoundingSphere(), this.geometry.verticesNeedUpdate = !0, this.matrixAutoUpdate = !1, this.matrixWorld = a.matrixWorld
    }, THREE.BoundingBoxHelper = function(a, b) {
        var c = b || 8947848;
        this.object = a, this.box = new THREE.Box3, THREE.Mesh.call(this, new THREE.CubeGeometry(1, 1, 1), new THREE.MeshBasicMaterial({
            color: c,
            wireframe: !0
        }))
    }, THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype), THREE.BoundingBoxHelper.prototype.update = function() {
        this.box.setFromObject(this.object), this.box.size(this.scale), this.box.center(this.position)
    }, THREE.CameraHelper = function(a) {
        function b(a, b, d) {
            c(a, d), c(b, d)
        }

        function c(a, b) {
            d.vertices.push(new THREE.Vector3), d.colors.push(new THREE.Color(b)), void 0 === f[a] && (f[a] = []), f[a].push(d.vertices.length - 1)
        }
        var d = new THREE.Geometry,
            e = new THREE.LineBasicMaterial({
                color: 16777215,
                vertexColors: THREE.FaceColors
            }),
            f = {},
            g = 16755200,
            h = 16711680,
            i = 43775,
            j = 16777215,
            k = 3355443;
        b("n1", "n2", g), b("n2", "n4", g), b("n4", "n3", g), b("n3", "n1", g), b("f1", "f2", g), b("f2", "f4", g), b("f4", "f3", g), b("f3", "f1", g), b("n1", "f1", g), b("n2", "f2", g), b("n3", "f3", g), b("n4", "f4", g), b("p", "n1", h), b("p", "n2", h), b("p", "n3", h), b("p", "n4", h), b("u1", "u2", i), b("u2", "u3", i), b("u3", "u1", i), b("c", "t", j), b("p", "c", k), b("cn1", "cn2", k), b("cn3", "cn4", k), b("cf1", "cf2", k), b("cf3", "cf4", k), THREE.Line.call(this, d, e, THREE.LinePieces), this.camera = a, this.matrixWorld = a.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = f, this.update()
    }, THREE.CameraHelper.prototype = Object.create(THREE.Line.prototype), THREE.CameraHelper.prototype.update = function() {
        var a = new THREE.Vector3,
            b = new THREE.Camera,
            c = new THREE.Projector;
        return function() {
            function d(d, f, g, h) {
                a.set(f, g, h), c.unprojectVector(a, b);
                var i = e.pointMap[d];
                if (void 0 !== i)
                    for (var j = 0, k = i.length; k > j; j++) e.geometry.vertices[i[j]].copy(a)
            }
            var e = this,
                f = 1,
                g = 1;
            b.projectionMatrix.copy(this.camera.projectionMatrix), d("c", 0, 0, -1), d("t", 0, 0, 1), d("n1", -f, -g, -1), d("n2", f, -g, -1), d("n3", -f, g, -1), d("n4", f, g, -1), d("f1", -f, -g, 1), d("f2", f, -g, 1), d("f3", -f, g, 1), d("f4", f, g, 1), d("u1", .7 * f, 1.1 * g, -1), d("u2", .7 * -f, 1.1 * g, -1), d("u3", 0, 2 * g, -1), d("cf1", -f, 0, 1), d("cf2", f, 0, 1), d("cf3", 0, -g, 1), d("cf4", 0, g, 1), d("cn1", -f, 0, -1), d("cn2", f, 0, -1), d("cn3", 0, -g, -1), d("cn4", 0, g, -1), this.geometry.verticesNeedUpdate = !0
        }
    }(), THREE.DirectionalLightHelper = function(a, b) {
        THREE.Object3D.call(this), this.light = a, this.light.updateMatrixWorld(), this.matrixWorld = a.matrixWorld, this.matrixAutoUpdate = !1;
        var c = new THREE.PlaneGeometry(b, b),
            d = new THREE.MeshBasicMaterial({
                wireframe: !0,
                fog: !1
            });
        d.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.lightPlane = new THREE.Mesh(c, d), this.add(this.lightPlane), c = new THREE.Geometry, c.vertices.push(new THREE.Vector3), c.vertices.push(new THREE.Vector3), c.computeLineDistances(), d = new THREE.LineBasicMaterial({
            fog: !1
        }), d.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine = new THREE.Line(c, d), this.add(this.targetLine), this.update()
    }, THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype), THREE.DirectionalLightHelper.prototype.update = function() {
        var a = new THREE.Vector3;
        return function() {
            a.getPositionFromMatrix(this.light.matrixWorld).negate(), this.lightPlane.lookAt(a), this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine.geometry.vertices[1].copy(a), this.targetLine.geometry.verticesNeedUpdate = !0, this.targetLine.material.color.copy(this.lightPlane.material.color)
        }
    }(), THREE.FaceNormalsHelper = function(a, b, c, d) {
        this.object = a, this.size = b || 1;
        for (var e = c || 16776960, f = d || 1, g = new THREE.Geometry, h = this.object.geometry.faces, i = 0, j = h.length; j > i; i++) g.vertices.push(new THREE.Vector3), g.vertices.push(new THREE.Vector3);
        THREE.Line.call(this, g, new THREE.LineBasicMaterial({
            color: e,
            linewidth: f
        }), THREE.LinePieces), this.matrixAutoUpdate = !1, this.normalMatrix = new THREE.Matrix3, this.update()
    }, THREE.FaceNormalsHelper.prototype = Object.create(THREE.Line.prototype), THREE.FaceNormalsHelper.prototype.update = function() {
        var a = new THREE.Vector3;
        return function() {
            this.object.updateMatrixWorld(!0), this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
            for (var b = this.geometry.vertices, c = this.object.geometry.faces, d = this.object.matrixWorld, e = 0, f = c.length; f > e; e++) {
                var g = c[e];
                a.copy(g.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);
                var h = 2 * e;
                b[h].copy(g.centroid).applyMatrix4(d), b[h + 1].addVectors(b[h], a)
            }
            return this.geometry.verticesNeedUpdate = !0, this
        }
    }(), THREE.GridHelper = function(a, b) {
        var c = new THREE.Geometry,
            d = new THREE.LineBasicMaterial({
                vertexColors: THREE.VertexColors
            });
        this.color1 = new THREE.Color(4473924), this.color2 = new THREE.Color(8947848);
        for (var e = -a; a >= e; e += b) {
            c.vertices.push(new THREE.Vector3(-a, 0, e), new THREE.Vector3(a, 0, e), new THREE.Vector3(e, 0, -a), new THREE.Vector3(e, 0, a));
            var f = 0 === e ? this.color1 : this.color2;
            c.colors.push(f, f, f, f)
        }
        THREE.Line.call(this, c, d, THREE.LinePieces)
    }, THREE.GridHelper.prototype = Object.create(THREE.Line.prototype), THREE.GridHelper.prototype.setColors = function(a, b) {
        this.color1.set(a), this.color2.set(b), this.geometry.colorsNeedUpdate = !0
    }, THREE.HemisphereLightHelper = function(a, b) {
        THREE.Object3D.call(this), this.light = a, this.light.updateMatrixWorld(), this.matrixWorld = a.matrixWorld, this.matrixAutoUpdate = !1, this.colors = [new THREE.Color, new THREE.Color];
        var c = new THREE.SphereGeometry(b, 4, 2);
        c.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2));
        for (var d = 0, e = 8; e > d; d++) c.faces[d].color = this.colors[4 > d ? 0 : 1];
        var f = new THREE.MeshBasicMaterial({
            vertexColors: THREE.FaceColors,
            wireframe: !0
        });
        this.lightSphere = new THREE.Mesh(c, f), this.add(this.lightSphere), this.update()
    }, THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype), THREE.HemisphereLightHelper.prototype.update = function() {
        var a = new THREE.Vector3;
        return function() {
            this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity), this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity), this.lightSphere.lookAt(a.getPositionFromMatrix(this.light.matrixWorld).negate()), this.lightSphere.geometry.colorsNeedUpdate = !0
        }
    }(), THREE.PointLightHelper = function(a, b) {
        this.light = a, this.light.updateMatrixWorld();
        var c = new THREE.SphereGeometry(b, 4, 2),
            d = new THREE.MeshBasicMaterial({
                wireframe: !0,
                fog: !1
            });
        d.color.copy(this.light.color).multiplyScalar(this.light.intensity), THREE.Mesh.call(this, c, d), this.matrixWorld = this.light.matrixWorld, this.matrixAutoUpdate = !1
    }, THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype), THREE.PointLightHelper.prototype.update = function() {
        this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
    }, THREE.SpotLightHelper = function(a) {
        THREE.Object3D.call(this), this.light = a, this.light.updateMatrixWorld(), this.matrixWorld = a.matrixWorld, this.matrixAutoUpdate = !1;
        var b = new THREE.CylinderGeometry(0, 1, 1, 8, 1, !0);
        b.applyMatrix((new THREE.Matrix4).makeTranslation(0, -.5, 0)), b.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2));
        var c = new THREE.MeshBasicMaterial({
            wireframe: !0,
            fog: !1
        });
        this.cone = new THREE.Mesh(b, c), this.add(this.cone), this.update()
    }, THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype), THREE.SpotLightHelper.prototype.update = function() {
        var a = new THREE.Vector3;
        return function() {
            var b = this.light.distance ? this.light.distance : 1e4,
                c = b * Math.tan(this.light.angle);
            this.cone.scale.set(c, c, b), this.cone.lookAt(a.getPositionFromMatrix(this.light.matrixWorld).negate()), this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
        }
    }(), THREE.VertexNormalsHelper = function(a, b, c, d) {
        this.object = a, this.size = b || 1;
        for (var e = c || 16711680, f = d || 1, g = new THREE.Geometry, h = (a.geometry.vertices, a.geometry.faces), i = 0, j = h.length; j > i; i++)
            for (var k = h[i], l = 0, m = k.vertexNormals.length; m > l; l++) g.vertices.push(new THREE.Vector3), g.vertices.push(new THREE.Vector3);
        THREE.Line.call(this, g, new THREE.LineBasicMaterial({
            color: e,
            linewidth: f
        }), THREE.LinePieces), this.matrixAutoUpdate = !1, this.normalMatrix = new THREE.Matrix3, this.update()
    }, THREE.VertexNormalsHelper.prototype = Object.create(THREE.Line.prototype), THREE.VertexNormalsHelper.prototype.update = function() {
        var a = new THREE.Vector3;
        return function() {
            var b = ["a", "b", "c", "d"];
            this.object.updateMatrixWorld(!0), this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
            for (var c = this.geometry.vertices, d = this.object.geometry.vertices, e = this.object.geometry.faces, f = this.object.matrixWorld, g = 0, h = 0, i = e.length; i > h; h++)
                for (var j = e[h], k = 0, l = j.vertexNormals.length; l > k; k++) {
                    var m = j[b[k]],
                        n = d[m],
                        o = j.vertexNormals[k];
                    c[g].copy(n).applyMatrix4(f), a.copy(o).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size), a.add(c[g]), g += 1, c[g].copy(a), g += 1
                }
            return this.geometry.verticesNeedUpdate = !0, this
        }
    }(), THREE.VertexTangentsHelper = function(a, b, c, d) {
        this.object = a, this.size = b || 1;
        for (var e = c || 255, f = d || 1, g = new THREE.Geometry, h = (a.geometry.vertices, a.geometry.faces), i = 0, j = h.length; j > i; i++)
            for (var k = h[i], l = 0, m = k.vertexTangents.length; m > l; l++) g.vertices.push(new THREE.Vector3), g.vertices.push(new THREE.Vector3);
        THREE.Line.call(this, g, new THREE.LineBasicMaterial({
            color: e,
            linewidth: f
        }), THREE.LinePieces), this.matrixAutoUpdate = !1, this.update()
    }, THREE.VertexTangentsHelper.prototype = Object.create(THREE.Line.prototype), THREE.VertexTangentsHelper.prototype.update = function() {
        var a = new THREE.Vector3;
        return function() {
            var b = ["a", "b", "c", "d"];
            this.object.updateMatrixWorld(!0);
            for (var c = this.geometry.vertices, d = this.object.geometry.vertices, e = this.object.geometry.faces, f = this.object.matrixWorld, g = 0, h = 0, i = e.length; i > h; h++)
                for (var j = e[h], k = 0, l = j.vertexTangents.length; l > k; k++) {
                    var m = j[b[k]],
                        n = d[m],
                        o = j.vertexTangents[k];
                    c[g].copy(n).applyMatrix4(f), a.copy(o).transformDirection(f).multiplyScalar(this.size), a.add(c[g]), g += 1, c[g].copy(a), g += 1
                }
            return this.geometry.verticesNeedUpdate = !0, this
        }
    }(), THREE.WireframeHelper = function(a) {
        for (var b = [0, 0], c = {}, d = function(a, b) {
                return a - b
            }, e = ["a", "b", "c", "d"], f = new THREE.Geometry, g = a.geometry.vertices, h = a.geometry.faces, i = 0, j = h.length; j > i; i++)
            for (var k = h[i], l = k instanceof THREE.Face4 ? 4 : 3, m = 0; l > m; m++) {
                b[0] = k[e[m]], b[1] = k[e[(m + 1) % l]], b.sort(d);
                var n = b.toString();
                void 0 === c[n] && (f.vertices.push(g[b[0]]), f.vertices.push(g[b[1]]), c[n] = !0)
            }
        THREE.Line.call(this, f, new THREE.LineBasicMaterial({
            color: 16777215
        }), THREE.LinePieces), this.matrixAutoUpdate = !1, this.matrixWorld = a.matrixWorld
    }, THREE.WireframeHelper.prototype = Object.create(THREE.Line.prototype), THREE.ImmediateRenderObject = function() {
        THREE.Object3D.call(this), this.render = function() {}
    }, THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype), THREE.LensFlare = function(a, b, c, d, e) {
        THREE.Object3D.call(this), this.lensFlares = [], this.positionScreen = new THREE.Vector3, this.customUpdateCallback = void 0, void 0 !== a && this.add(a, b, c, d, e)
    }, THREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype), THREE.LensFlare.prototype.add = function(a, b, c, d, e, f) {
        void 0 === b && (b = -1), void 0 === c && (c = 0), void 0 === f && (f = 1), void 0 === e && (e = new THREE.Color(16777215)), void 0 === d && (d = THREE.NormalBlending), c = Math.min(c, Math.max(0, c)), this.lensFlares.push({
            texture: a,
            size: b,
            distance: c,
            x: 0,
            y: 0,
            z: 0,
            scale: 1,
            rotation: 1,
            opacity: f,
            color: e,
            blending: d
        })
    }, THREE.LensFlare.prototype.updateLensFlares = function() {
        var a, b, c = this.lensFlares.length,
            d = 2 * -this.positionScreen.x,
            e = 2 * -this.positionScreen.y;
        for (a = 0; c > a; a++) b = this.lensFlares[a], b.x = this.positionScreen.x + d * b.distance, b.y = this.positionScreen.y + e * b.distance, b.wantedRotation = b.x * Math.PI * .25, b.rotation += .25 * (b.wantedRotation - b.rotation)
    }, THREE.MorphBlendMesh = function(a, b) {
        THREE.Mesh.call(this, a, b), this.animationsMap = {}, this.animationsList = [];
        var c = this.geometry.morphTargets.length,
            d = "__default",
            e = 0,
            f = c - 1,
            g = c / 1;
        this.createAnimation(d, e, f, g), this.setAnimationWeight(d, 1)
    }, THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype), THREE.MorphBlendMesh.prototype.createAnimation = function(a, b, c, d) {
        var e = {
            startFrame: b,
            endFrame: c,
            length: c - b + 1,
            fps: d,
            duration: (c - b) / d,
            lastFrame: 0,
            currentFrame: 0,
            active: !1,
            time: 0,
            direction: 1,
            weight: 1,
            directionBackwards: !1,
            mirroredLoop: !1
        };
        this.animationsMap[a] = e, this.animationsList.push(e)
    }, THREE.MorphBlendMesh.prototype.autoCreateAnimations = function(a) {
        for (var b, c = /([a-z]+)(\d+)/, d = {}, e = this.geometry, f = 0, g = e.morphTargets.length; g > f; f++) {
            var h = e.morphTargets[f],
                i = h.name.match(c);
            if (i && i.length > 1) {
                {
                    var j = i[1];
                    i[2]
                }
                d[j] || (d[j] = {
                    start: 1 / 0,
                    end: -1 / 0
                });
                var k = d[j];
                f < k.start && (k.start = f), f > k.end && (k.end = f), b || (b = j)
            }
        }
        for (var j in d) {
            var k = d[j];
            this.createAnimation(j, k.start, k.end, a)
        }
        this.firstAnimation = b
    }, THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(a) {
        var b = this.animationsMap[a];
        b && (b.direction = 1, b.directionBackwards = !1)
    }, THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(a) {
        var b = this.animationsMap[a];
        b && (b.direction = -1, b.directionBackwards = !0)
    }, THREE.MorphBlendMesh.prototype.setAnimationFPS = function(a, b) {
        var c = this.animationsMap[a];
        c && (c.fps = b, c.duration = (c.end - c.start) / c.fps)
    }, THREE.MorphBlendMesh.prototype.setAnimationDuration = function(a, b) {
        var c = this.animationsMap[a];
        c && (c.duration = b, c.fps = (c.end - c.start) / c.duration)
    }, THREE.MorphBlendMesh.prototype.setAnimationWeight = function(a, b) {
        var c = this.animationsMap[a];
        c && (c.weight = b)
    }, THREE.MorphBlendMesh.prototype.setAnimationTime = function(a, b) {
        var c = this.animationsMap[a];
        c && (c.time = b)
    }, THREE.MorphBlendMesh.prototype.getAnimationTime = function(a) {
        var b = 0,
            c = this.animationsMap[a];
        return c && (b = c.time), b
    }, THREE.MorphBlendMesh.prototype.getAnimationDuration = function(a) {
        var b = -1,
            c = this.animationsMap[a];
        return c && (b = c.duration), b
    }, THREE.MorphBlendMesh.prototype.playAnimation = function(a) {
        var b = this.animationsMap[a];
        b ? (b.time = 0, b.active = !0) : console.warn("animation[" + a + "] undefined")
    }, THREE.MorphBlendMesh.prototype.stopAnimation = function(a) {
        var b = this.animationsMap[a];
        b && (b.active = !1)
    }, THREE.MorphBlendMesh.prototype.update = function(a) {
        for (var b = 0, c = this.animationsList.length; c > b; b++) {
            var d = this.animationsList[b];
            if (d.active) {
                var e = d.duration / d.length;
                d.time += d.direction * a, d.mirroredLoop ? (d.time > d.duration || d.time < 0) && (d.direction *= -1, d.time > d.duration && (d.time = d.duration, d.directionBackwards = !0), d.time < 0 && (d.time = 0, d.directionBackwards = !1)) : (d.time = d.time % d.duration, d.time < 0 && (d.time += d.duration));
                var f = d.startFrame + THREE.Math.clamp(Math.floor(d.time / e), 0, d.length - 1),
                    g = d.weight;
                f !== d.currentFrame && (this.morphTargetInfluences[d.lastFrame] = 0, this.morphTargetInfluences[d.currentFrame] = 1 * g, this.morphTargetInfluences[f] = 0, d.lastFrame = d.currentFrame, d.currentFrame = f);
                var h = d.time % e / e;
                d.directionBackwards && (h = 1 - h), this.morphTargetInfluences[d.currentFrame] = h * g, this.morphTargetInfluences[d.lastFrame] = (1 - h) * g
            }
        }
    }, THREE.LensFlarePlugin = function() {
        function a(a, c) {
            var d = b.createProgram(),
                e = b.createShader(b.FRAGMENT_SHADER),
                f = b.createShader(b.VERTEX_SHADER),
                g = "precision " + c + " float;\n";
            return b.shaderSource(e, g + a.fragmentShader), b.shaderSource(f, g + a.vertexShader), b.compileShader(e), b.compileShader(f), b.attachShader(d, e), b.attachShader(d, f), b.linkProgram(d), d
        }
        var b, c, d, e = {};
        this.init = function(f) {
            b = f.context, c = f, d = f.getPrecision(), e.vertices = new Float32Array(16), e.faces = new Uint16Array(6);
            var g = 0;
            e.vertices[g++] = -1, e.vertices[g++] = -1, e.vertices[g++] = 0, e.vertices[g++] = 0, e.vertices[g++] = 1, e.vertices[g++] = -1, e.vertices[g++] = 1, e.vertices[g++] = 0, e.vertices[g++] = 1, e.vertices[g++] = 1, e.vertices[g++] = 1, e.vertices[g++] = 1, e.vertices[g++] = -1, e.vertices[g++] = 1, e.vertices[g++] = 0, e.vertices[g++] = 1, g = 0, e.faces[g++] = 0, e.faces[g++] = 1, e.faces[g++] = 2, e.faces[g++] = 0, e.faces[g++] = 2, e.faces[g++] = 3, e.vertexBuffer = b.createBuffer(), e.elementBuffer = b.createBuffer(), b.bindBuffer(b.ARRAY_BUFFER, e.vertexBuffer), b.bufferData(b.ARRAY_BUFFER, e.vertices, b.STATIC_DRAW), b.bindBuffer(b.ELEMENT_ARRAY_BUFFER, e.elementBuffer), b.bufferData(b.ELEMENT_ARRAY_BUFFER, e.faces, b.STATIC_DRAW), e.tempTexture = b.createTexture(), e.occlusionTexture = b.createTexture(), b.bindTexture(b.TEXTURE_2D, e.tempTexture), b.texImage2D(b.TEXTURE_2D, 0, b.RGB, 16, 16, 0, b.RGB, b.UNSIGNED_BYTE, null), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_S, b.CLAMP_TO_EDGE), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_T, b.CLAMP_TO_EDGE), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MAG_FILTER, b.NEAREST), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MIN_FILTER, b.NEAREST), b.bindTexture(b.TEXTURE_2D, e.occlusionTexture), b.texImage2D(b.TEXTURE_2D, 0, b.RGBA, 16, 16, 0, b.RGBA, b.UNSIGNED_BYTE, null), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_S, b.CLAMP_TO_EDGE), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_T, b.CLAMP_TO_EDGE), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MAG_FILTER, b.NEAREST), b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MIN_FILTER, b.NEAREST), b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS) <= 0 ? (e.hasVertexTexture = !1, e.program = a(THREE.ShaderFlares.lensFlare, d)) : (e.hasVertexTexture = !0, e.program = a(THREE.ShaderFlares.lensFlareVertexTexture, d)), e.attributes = {}, e.uniforms = {}, e.attributes.vertex = b.getAttribLocation(e.program, "position"), e.attributes.uv = b.getAttribLocation(e.program, "uv"), e.uniforms.renderType = b.getUniformLocation(e.program, "renderType"), e.uniforms.map = b.getUniformLocation(e.program, "map"), e.uniforms.occlusionMap = b.getUniformLocation(e.program, "occlusionMap"), e.uniforms.opacity = b.getUniformLocation(e.program, "opacity"), e.uniforms.color = b.getUniformLocation(e.program, "color"), e.uniforms.scale = b.getUniformLocation(e.program, "scale"), e.uniforms.rotation = b.getUniformLocation(e.program, "rotation"), e.uniforms.screenPosition = b.getUniformLocation(e.program, "screenPosition")
        }, this.render = function(a, d, f, g) {
            var h = a.__webglFlares,
                i = h.length;
            if (i) {
                var j = new THREE.Vector3,
                    k = g / f,
                    l = .5 * f,
                    m = .5 * g,
                    n = 16 / g,
                    o = new THREE.Vector2(n * k, n),
                    p = new THREE.Vector3(1, 1, 0),
                    q = new THREE.Vector2(1, 1),
                    r = e.uniforms,
                    s = e.attributes;
                b.useProgram(e.program), b.enableVertexAttribArray(e.attributes.vertex), b.enableVertexAttribArray(e.attributes.uv), b.uniform1i(r.occlusionMap, 0), b.uniform1i(r.map, 1), b.bindBuffer(b.ARRAY_BUFFER, e.vertexBuffer), b.vertexAttribPointer(s.vertex, 2, b.FLOAT, !1, 16, 0), b.vertexAttribPointer(s.uv, 2, b.FLOAT, !1, 16, 8), b.bindBuffer(b.ELEMENT_ARRAY_BUFFER, e.elementBuffer), b.disable(b.CULL_FACE), b.depthMask(!1);
                var t, u, v, w, x;
                for (t = 0; i > t; t++)
                    if (n = 16 / g, o.set(n * k, n), w = h[t], j.set(w.matrixWorld.elements[12], w.matrixWorld.elements[13], w.matrixWorld.elements[14]), j.applyMatrix4(d.matrixWorldInverse), j.applyProjection(d.projectionMatrix), p.copy(j), q.x = p.x * l + l, q.y = p.y * m + m, e.hasVertexTexture || q.x > 0 && q.x < f && q.y > 0 && q.y < g)
                        for (b.activeTexture(b.TEXTURE1), b.bindTexture(b.TEXTURE_2D, e.tempTexture), b.copyTexImage2D(b.TEXTURE_2D, 0, b.RGB, q.x - 8, q.y - 8, 16, 16, 0), b.uniform1i(r.renderType, 0), b.uniform2f(r.scale, o.x, o.y), b.uniform3f(r.screenPosition, p.x, p.y, p.z), b.disable(b.BLEND), b.enable(b.DEPTH_TEST), b.drawElements(b.TRIANGLES, 6, b.UNSIGNED_SHORT, 0), b.activeTexture(b.TEXTURE0), b.bindTexture(b.TEXTURE_2D, e.occlusionTexture), b.copyTexImage2D(b.TEXTURE_2D, 0, b.RGBA, q.x - 8, q.y - 8, 16, 16, 0), b.uniform1i(r.renderType, 1), b.disable(b.DEPTH_TEST), b.activeTexture(b.TEXTURE1), b.bindTexture(b.TEXTURE_2D, e.tempTexture), b.drawElements(b.TRIANGLES, 6, b.UNSIGNED_SHORT, 0), w.positionScreen.copy(p), w.customUpdateCallback ? w.customUpdateCallback(w) : w.updateLensFlares(), b.uniform1i(r.renderType, 2), b.enable(b.BLEND), u = 0, v = w.lensFlares.length; v > u; u++) x = w.lensFlares[u], x.opacity > .001 && x.scale > .001 && (p.x = x.x, p.y = x.y, p.z = x.z, n = x.size * x.scale / g, o.x = n * k, o.y = n, b.uniform3f(r.screenPosition, p.x, p.y, p.z), b.uniform2f(r.scale, o.x, o.y), b.uniform1f(r.rotation, x.rotation), b.uniform1f(r.opacity, x.opacity), b.uniform3f(r.color, x.color.r, x.color.g, x.color.b), c.setBlending(x.blending, x.blendEquation, x.blendSrc, x.blendDst), c.setTexture(x.texture, 1), b.drawElements(b.TRIANGLES, 6, b.UNSIGNED_SHORT, 0));
                b.enable(b.CULL_FACE), b.enable(b.DEPTH_TEST), b.depthMask(!0)
            }
        }
    }, THREE.ShadowMapPlugin = function() {
        function a(a, b) {
            var c = new THREE.DirectionalLight;
            c.isVirtual = !0, c.onlyShadow = !0, c.castShadow = !0, c.shadowCameraNear = a.shadowCameraNear, c.shadowCameraFar = a.shadowCameraFar, c.shadowCameraLeft = a.shadowCameraLeft, c.shadowCameraRight = a.shadowCameraRight, c.shadowCameraBottom = a.shadowCameraBottom, c.shadowCameraTop = a.shadowCameraTop, c.shadowCameraVisible = a.shadowCameraVisible, c.shadowDarkness = a.shadowDarkness, c.shadowBias = a.shadowCascadeBias[b], c.shadowMapWidth = a.shadowCascadeWidth[b], c.shadowMapHeight = a.shadowCascadeHeight[b], c.pointsWorld = [], c.pointsFrustum = [];
            for (var d = c.pointsWorld, e = c.pointsFrustum, f = 0; 8 > f; f++) d[f] = new THREE.Vector3, e[f] = new THREE.Vector3;
            var g = a.shadowCascadeNearZ[b],
                h = a.shadowCascadeFarZ[b];
            return e[0].set(-1, -1, g), e[1].set(1, -1, g), e[2].set(-1, 1, g), e[3].set(1, 1, g), e[4].set(-1, -1, h), e[5].set(1, -1, h), e[6].set(-1, 1, h), e[7].set(1, 1, h), c
        }

        function b(a, b) {
            var c = a.shadowCascadeArray[b];
            c.position.copy(a.position), c.target.position.copy(a.target.position), c.lookAt(c.target), c.shadowCameraVisible = a.shadowCameraVisible, c.shadowDarkness = a.shadowDarkness, c.shadowBias = a.shadowCascadeBias[b];
            var d = a.shadowCascadeNearZ[b],
                e = a.shadowCascadeFarZ[b],
                f = c.pointsFrustum;
            f[0].z = d, f[1].z = d, f[2].z = d, f[3].z = d, f[4].z = e, f[5].z = e, f[6].z = e, f[7].z = e
        }

        function c(a, b) {
            var c = b.shadowCamera,
                d = b.pointsFrustum,
                e = b.pointsWorld;
            m.set(1 / 0, 1 / 0, 1 / 0), n.set(-1 / 0, -1 / 0, -1 / 0);
            for (var f = 0; 8 > f; f++) {
                var g = e[f];
                g.copy(d[f]), THREE.ShadowMapPlugin.__projector.unprojectVector(g, a), g.applyMatrix4(c.matrixWorldInverse), g.x < m.x && (m.x = g.x), g.x > n.x && (n.x = g.x), g.y < m.y && (m.y = g.y), g.y > n.y && (n.y = g.y), g.z < m.z && (m.z = g.z), g.z > n.z && (n.z = g.z)
            }
            c.left = m.x, c.right = n.x, c.top = n.y, c.bottom = m.y, c.updateProjectionMatrix()
        }

        function d(a) {
            return a.material instanceof THREE.MeshFaceMaterial ? a.material.materials[0] : a.material
        }
        var e, f, g, h, i, j, k = new THREE.Frustum,
            l = new THREE.Matrix4,
            m = new THREE.Vector3,
            n = new THREE.Vector3,
            o = new THREE.Vector3;
        this.init = function(a) {
            e = a.context, f = a;
            var b = THREE.ShaderLib.depthRGBA,
                c = THREE.UniformsUtils.clone(b.uniforms);
            g = new THREE.ShaderMaterial({
                fragmentShader: b.fragmentShader,
                vertexShader: b.vertexShader,
                uniforms: c
            }), h = new THREE.ShaderMaterial({
                fragmentShader: b.fragmentShader,
                vertexShader: b.vertexShader,
                uniforms: c,
                morphTargets: !0
            }), i = new THREE.ShaderMaterial({
                fragmentShader: b.fragmentShader,
                vertexShader: b.vertexShader,
                uniforms: c,
                skinning: !0
            }), j = new THREE.ShaderMaterial({
                fragmentShader: b.fragmentShader,
                vertexShader: b.vertexShader,
                uniforms: c,
                morphTargets: !0,
                skinning: !0
            }), g._shadowPass = !0, h._shadowPass = !0, i._shadowPass = !0, j._shadowPass = !0
        }, this.render = function(a, b) {
            f.shadowMapEnabled && f.shadowMapAutoUpdate && this.update(a, b)
        }, this.update = function(m, n) {
            var p, q, r, s, t, u, v, w, x, y, z, A, B, C, D = [],
                E = 0,
                F = null;
            for (e.clearColor(1, 1, 1, 1), e.disable(e.BLEND), e.enable(e.CULL_FACE), e.frontFace(e.CCW), e.cullFace(f.shadowMapCullFace === THREE.CullFaceFront ? e.FRONT : e.BACK), f.setDepthTest(!0), p = 0, q = m.__lights.length; q > p; p++)
                if (B = m.__lights[p], B.castShadow)
                    if (B instanceof THREE.DirectionalLight && B.shadowCascade)
                        for (t = 0; t < B.shadowCascadeCount; t++) {
                            var G;
                            if (B.shadowCascadeArray[t]) G = B.shadowCascadeArray[t];
                            else {
                                G = a(B, t), G.originalCamera = n;
                                var H = new THREE.Gyroscope;
                                H.position = B.shadowCascadeOffset, H.add(G), H.add(G.target), n.add(H), B.shadowCascadeArray[t] = G, console.log("Created virtualLight", G)
                            }
                            b(B, t), D[E] = G, E++
                        } else D[E] = B, E++;
            for (p = 0, q = D.length; q > p; p++) {
                if (B = D[p], !B.shadowMap) {
                    var I = THREE.LinearFilter;
                    f.shadowMapType === THREE.PCFSoftShadowMap && (I = THREE.NearestFilter);
                    var J = {
                        minFilter: I,
                        magFilter: I,
                        format: THREE.RGBAFormat
                    };
                    B.shadowMap = new THREE.WebGLRenderTarget(B.shadowMapWidth, B.shadowMapHeight, J), B.shadowMapSize = new THREE.Vector2(B.shadowMapWidth, B.shadowMapHeight), B.shadowMatrix = new THREE.Matrix4
                }
                if (!B.shadowCamera) {
                    if (B instanceof THREE.SpotLight) B.shadowCamera = new THREE.PerspectiveCamera(B.shadowCameraFov, B.shadowMapWidth / B.shadowMapHeight, B.shadowCameraNear, B.shadowCameraFar);
                    else {
                        if (!(B instanceof THREE.DirectionalLight)) {
                            console.error("Unsupported light type for shadow");
                            continue
                        }
                        B.shadowCamera = new THREE.OrthographicCamera(B.shadowCameraLeft, B.shadowCameraRight, B.shadowCameraTop, B.shadowCameraBottom, B.shadowCameraNear, B.shadowCameraFar)
                    }
                    m.add(B.shadowCamera), m.autoUpdate === !0 && m.updateMatrixWorld()
                }
                for (B.shadowCameraVisible && !B.cameraHelper && (B.cameraHelper = new THREE.CameraHelper(B.shadowCamera), B.shadowCamera.add(B.cameraHelper)), B.isVirtual && G.originalCamera == n && c(n, B), u = B.shadowMap, v = B.shadowMatrix, w = B.shadowCamera, w.position.getPositionFromMatrix(B.matrixWorld), o.getPositionFromMatrix(B.target.matrixWorld), w.lookAt(o), w.updateMatrixWorld(), w.matrixWorldInverse.getInverse(w.matrixWorld), B.cameraHelper && (B.cameraHelper.visible = B.shadowCameraVisible), B.shadowCameraVisible && B.cameraHelper.update(), v.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), v.multiply(w.projectionMatrix), v.multiply(w.matrixWorldInverse), l.multiplyMatrices(w.projectionMatrix, w.matrixWorldInverse), k.setFromMatrix(l), f.setRenderTarget(u), f.clear(), C = m.__webglObjects, r = 0, s = C.length; s > r; r++) z = C[r], A = z.object, z.render = !1, A.visible && A.castShadow && ((A instanceof THREE.Mesh || A instanceof THREE.ParticleSystem) && A.frustumCulled && !k.intersectsObject(A) || (A._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse, A.matrixWorld), z.render = !0));
                var K, L, M;
                for (r = 0, s = C.length; s > r; r++) z = C[r], z.render && (A = z.object, x = z.buffer, K = d(A), L = A.geometry.morphTargets.length > 0 && K.morphTargets, M = A instanceof THREE.SkinnedMesh && K.skinning, y = A.customDepthMaterial ? A.customDepthMaterial : M ? L ? j : i : L ? h : g, x instanceof THREE.BufferGeometry ? f.renderBufferDirect(w, m.__lights, F, y, x, A) : f.renderBuffer(w, m.__lights, F, y, x, A));
                for (C = m.__webglObjectsImmediate, r = 0, s = C.length; s > r; r++) z = C[r], A = z.object, A.visible && A.castShadow && (A._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse, A.matrixWorld), f.renderImmediateObject(w, m.__lights, F, g, A))
            }
            var N = f.getClearColor(),
                O = f.getClearAlpha();
            e.clearColor(N.r, N.g, N.b, O), e.enable(e.BLEND), f.shadowMapCullFace === THREE.CullFaceFront && e.cullFace(e.BACK)
        }
    }, THREE.ShadowMapPlugin.__projector = new THREE.Projector, THREE.SpritePlugin = function() {
        function a(a, b) {
            var d = c.createProgram(),
                e = c.createShader(c.FRAGMENT_SHADER),
                f = c.createShader(c.VERTEX_SHADER),
                g = "precision " + b + " float;\n";
            return c.shaderSource(e, g + a.fragmentShader), c.shaderSource(f, g + a.vertexShader), c.compileShader(e), c.compileShader(f), c.attachShader(d, e), c.attachShader(d, f), c.linkProgram(d), d
        }

        function b(a, b) {
            return a.z !== b.z ? b.z - a.z : b.id - a.id
        }
        var c, d, e, f = {};
        this.init = function(b) {
            c = b.context, d = b, e = b.getPrecision(), f.vertices = new Float32Array(16), f.faces = new Uint16Array(6);
            var g = 0;
            f.vertices[g++] = -1, f.vertices[g++] = -1, f.vertices[g++] = 0, f.vertices[g++] = 0, f.vertices[g++] = 1, f.vertices[g++] = -1, f.vertices[g++] = 1, f.vertices[g++] = 0, f.vertices[g++] = 1, f.vertices[g++] = 1, f.vertices[g++] = 1, f.vertices[g++] = 1, f.vertices[g++] = -1, f.vertices[g++] = 1, f.vertices[g++] = 0, f.vertices[g++] = 1, g = 0, f.faces[g++] = 0, f.faces[g++] = 1, f.faces[g++] = 2, f.faces[g++] = 0, f.faces[g++] = 2, f.faces[g++] = 3, f.vertexBuffer = c.createBuffer(), f.elementBuffer = c.createBuffer(), c.bindBuffer(c.ARRAY_BUFFER, f.vertexBuffer), c.bufferData(c.ARRAY_BUFFER, f.vertices, c.STATIC_DRAW), c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, f.elementBuffer), c.bufferData(c.ELEMENT_ARRAY_BUFFER, f.faces, c.STATIC_DRAW), f.program = a(THREE.ShaderSprite.sprite, e), f.attributes = {}, f.uniforms = {}, f.attributes.position = c.getAttribLocation(f.program, "position"), f.attributes.uv = c.getAttribLocation(f.program, "uv"), f.uniforms.uvOffset = c.getUniformLocation(f.program, "uvOffset"), f.uniforms.uvScale = c.getUniformLocation(f.program, "uvScale"), f.uniforms.rotation = c.getUniformLocation(f.program, "rotation"), f.uniforms.scale = c.getUniformLocation(f.program, "scale"), f.uniforms.alignment = c.getUniformLocation(f.program, "alignment"), f.uniforms.color = c.getUniformLocation(f.program, "color"), f.uniforms.map = c.getUniformLocation(f.program, "map"), f.uniforms.opacity = c.getUniformLocation(f.program, "opacity"), f.uniforms.useScreenCoordinates = c.getUniformLocation(f.program, "useScreenCoordinates"), f.uniforms.sizeAttenuation = c.getUniformLocation(f.program, "sizeAttenuation"), f.uniforms.screenPosition = c.getUniformLocation(f.program, "screenPosition"), f.uniforms.modelViewMatrix = c.getUniformLocation(f.program, "modelViewMatrix"), f.uniforms.projectionMatrix = c.getUniformLocation(f.program, "projectionMatrix"), f.uniforms.fogType = c.getUniformLocation(f.program, "fogType"), f.uniforms.fogDensity = c.getUniformLocation(f.program, "fogDensity"), f.uniforms.fogNear = c.getUniformLocation(f.program, "fogNear"), f.uniforms.fogFar = c.getUniformLocation(f.program, "fogFar"), f.uniforms.fogColor = c.getUniformLocation(f.program, "fogColor"), f.uniforms.alphaTest = c.getUniformLocation(f.program, "alphaTest")
        }, this.render = function(a, e, g, h) {
            var i = a.__webglSprites,
                j = i.length;
            if (j) {
                var k = f.attributes,
                    l = f.uniforms,
                    m = h / g,
                    n = .5 * g,
                    o = .5 * h;
                c.useProgram(f.program), c.enableVertexAttribArray(k.position), c.enableVertexAttribArray(k.uv), c.disable(c.CULL_FACE), c.enable(c.BLEND), c.bindBuffer(c.ARRAY_BUFFER, f.vertexBuffer), c.vertexAttribPointer(k.position, 2, c.FLOAT, !1, 16, 0), c.vertexAttribPointer(k.uv, 2, c.FLOAT, !1, 16, 8), c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, f.elementBuffer), c.uniformMatrix4fv(l.projectionMatrix, !1, e.projectionMatrix.elements), c.activeTexture(c.TEXTURE0), c.uniform1i(l.map, 0);
                var p = 0,
                    q = 0,
                    r = a.fog;
                r ? (c.uniform3f(l.fogColor, r.color.r, r.color.g, r.color.b), r instanceof THREE.Fog ? (c.uniform1f(l.fogNear, r.near), c.uniform1f(l.fogFar, r.far), c.uniform1i(l.fogType, 1), p = 1, q = 1) : r instanceof THREE.FogExp2 && (c.uniform1f(l.fogDensity, r.density), c.uniform1i(l.fogType, 2), p = 2, q = 2)) : (c.uniform1i(l.fogType, 0), p = 0, q = 0);
                var s, t, u, v, w, x = [];
                for (s = 0; j > s; s++) t = i[s], u = t.material, t.visible && 0 !== u.opacity && (u.useScreenCoordinates ? t.z = -t.position.z : (t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, t.matrixWorld), t.z = -t._modelViewMatrix.elements[14]));
                for (i.sort(b), s = 0; j > s; s++) t = i[s], u = t.material, t.visible && 0 !== u.opacity && u.map && u.map.image && u.map.image.width && (c.uniform1f(l.alphaTest, u.alphaTest), u.useScreenCoordinates === !0 ? (c.uniform1i(l.useScreenCoordinates, 1), c.uniform3f(l.screenPosition, (t.position.x * d.devicePixelRatio - n) / n, (o - t.position.y * d.devicePixelRatio) / o, Math.max(0, Math.min(1, t.position.z))), x[0] = d.devicePixelRatio, x[1] = d.devicePixelRatio) : (c.uniform1i(l.useScreenCoordinates, 0), c.uniform1i(l.sizeAttenuation, u.sizeAttenuation ? 1 : 0), c.uniformMatrix4fv(l.modelViewMatrix, !1, t._modelViewMatrix.elements), x[0] = 1, x[1] = 1), w = a.fog && u.fog ? q : 0, p !== w && (c.uniform1i(l.fogType, w), p = w), v = 1 / (u.scaleByViewport ? h : 1), x[0] *= v * m * t.scale.x, x[1] *= v * t.scale.y, c.uniform2f(l.uvScale, u.uvScale.x, u.uvScale.y), c.uniform2f(l.uvOffset, u.uvOffset.x, u.uvOffset.y), c.uniform2f(l.alignment, u.alignment.x, u.alignment.y), c.uniform1f(l.opacity, u.opacity), c.uniform3f(l.color, u.color.r, u.color.g, u.color.b), c.uniform1f(l.rotation, t.rotation), c.uniform2fv(l.scale, x), d.setBlending(u.blending, u.blendEquation, u.blendSrc, u.blendDst), d.setDepthTest(u.depthTest), d.setDepthWrite(u.depthWrite), d.setTexture(u.map, 0), c.drawElements(c.TRIANGLES, 6, c.UNSIGNED_SHORT, 0));
                c.enable(c.CULL_FACE)
            }
        }
    }, THREE.DepthPassPlugin = function() {
        function a(a) {
            return a.material instanceof THREE.MeshFaceMaterial ? a.material.materials[0] : a.material
        }
        this.enabled = !1, this.renderTarget = null;
        var b, c, d, e, f, g, h = new THREE.Frustum,
            i = new THREE.Matrix4;
        this.init = function(a) {
            b = a.context, c = a;
            var h = THREE.ShaderLib.depthRGBA,
                i = THREE.UniformsUtils.clone(h.uniforms);
            d = new THREE.ShaderMaterial({
                fragmentShader: h.fragmentShader,
                vertexShader: h.vertexShader,
                uniforms: i
            }), e = new THREE.ShaderMaterial({
                fragmentShader: h.fragmentShader,
                vertexShader: h.vertexShader,
                uniforms: i,
                morphTargets: !0
            }), f = new THREE.ShaderMaterial({
                fragmentShader: h.fragmentShader,
                vertexShader: h.vertexShader,
                uniforms: i,
                skinning: !0
            }), g = new THREE.ShaderMaterial({
                fragmentShader: h.fragmentShader,
                vertexShader: h.vertexShader,
                uniforms: i,
                morphTargets: !0,
                skinning: !0
            }), d._shadowPass = !0, e._shadowPass = !0, f._shadowPass = !0, g._shadowPass = !0
        }, this.render = function(a, b) {
            this.enabled && this.update(a, b)
        }, this.update = function(j, k) {
            var l, m, n, o, p, q, r, s = null;
            for (b.clearColor(1, 1, 1, 1), b.disable(b.BLEND), c.setDepthTest(!0), j.autoUpdate === !0 && j.updateMatrixWorld(), k.matrixWorldInverse.getInverse(k.matrixWorld), i.multiplyMatrices(k.projectionMatrix, k.matrixWorldInverse), h.setFromMatrix(i), c.setRenderTarget(this.renderTarget), c.clear(), r = j.__webglObjects, l = 0, m = r.length; m > l; l++) p = r[l], q = p.object, p.render = !1, q.visible && ((q instanceof THREE.Mesh || q instanceof THREE.ParticleSystem) && q.frustumCulled && !h.intersectsObject(q) || (q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse, q.matrixWorld), p.render = !0));
            var t, u, v;
            for (l = 0, m = r.length; m > l; l++)
                if (p = r[l], p.render) {
                    if (q = p.object, n = p.buffer, q instanceof THREE.ParticleSystem && !q.customDepthMaterial) continue;
                    t = a(q), t && c.setMaterialFaces(q.material), u = q.geometry.morphTargets.length > 0 && t.morphTargets, v = q instanceof THREE.SkinnedMesh && t.skinning, o = q.customDepthMaterial ? q.customDepthMaterial : v ? u ? g : f : u ? e : d, n instanceof THREE.BufferGeometry ? c.renderBufferDirect(k, j.__lights, s, o, n, q) : c.renderBuffer(k, j.__lights, s, o, n, q)
                }
            for (r = j.__webglObjectsImmediate, l = 0, m = r.length; m > l; l++) p = r[l], q = p.object, q.visible && (q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse, q.matrixWorld), c.renderImmediateObject(k, j.__lights, s, d, q));
            var w = c.getClearColor(),
                x = c.getClearAlpha();
            b.clearColor(w.r, w.g, w.b, x), b.enable(b.BLEND)
        }
    }, THREE.ShaderFlares = {
        lensFlareVertexTexture: {
            vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
        },
        lensFlare: {
            vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
            fragmentShader: ["precision mediump float;", "uniform lowp int renderType;", "uniform sampler2D map;", "uniform sampler2D occlusionMap;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;", "visibility = ( 1.0 - visibility / 4.0 );", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * visibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
        }
    }, THREE.ShaderSprite = {
        sprite: {
            vertexShader: ["uniform int useScreenCoordinates;", "uniform int sizeAttenuation;", "uniform vec3 screenPosition;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 alignment;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position + alignment;", "vec2 rotatedPosition;", "rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;", "rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;", "vec4 finalPosition;", "if( useScreenCoordinates != 0 ) {", "finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );", "} else {", "finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );", "}", "gl_Position = finalPosition;", "}"].join("\n"),
            fragmentShader: ["uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")
        }
    },
    function(a) {
        function b(a) {
            a = a || {}, this.settings = a, null == a.statusInterval && (a.statusInterval = 5e3), null == a.loggingDelay && (a.loggingDelay = 2e4), null == a.noProgressTimeout && (a.noProgressTimeout = 1 / 0);
            var b, d = [],
                e = [],
                f = Date.now(),
                g = {
                    QUEUED: 0,
                    WAITING: 1,
                    LOADED: 2,
                    ERROR: 3,
                    TIMEOUT: 4
                },
                h = function(a) {
                    return null == a ? [] : Array.isArray(a) ? a : [a]
                };
            this.add = function(a) {
                a.tags = new c(a.tags), null == a.priority && (a.priority = 1 / 0), d.push({
                    resource: a,
                    status: g.QUEUED
                })
            }, this.addProgressListener = function(a, b) {
                e.push({
                    callback: a,
                    tags: new c(b)
                })
            }, this.addCompletionListener = function(a, b) {
                e.push({
                    tags: new c(b),
                    callback: function(b) {
                        b.completedCount === b.totalCount && a(b)
                    }
                })
            };
            var i = function(a) {
                a = h(a);
                var b = function(b) {
                    for (var c = b.resource, d = 1 / 0, e = 0; e < c.tags.length; e++)
                        for (var f = 0; f < Math.min(a.length, d) && !(c.tags.all[e] === a[f] && d > f && (d = f, 0 === d)) && 0 !== d; f++);
                    return d
                };
                return function(a, c) {
                    var d = b(a),
                        e = b(c);
                    return e > d ? -1 : d > e ? 1 : a.priority < c.priority ? -1 : a.priority > c.priority ? 1 : 0
                }
            };
            this.start = function(a) {
                b = Date.now();
                var c = i(a);
                d.sort(c);
                for (var e = 0, f = d.length; f > e; e++) {
                    var h = d[e];
                    h.status = g.WAITING, h.resource.start(this)
                }
                setTimeout(j, 100)
            };
            var j = function() {
                for (var b = !1, c = Date.now() - f, e = c >= a.noProgressTimeout, h = c >= a.loggingDelay, i = 0, k = d.length; k > i; i++) {
                    var l = d[i];
                    l.status === g.WAITING && (l.resource.checkStatus && l.resource.checkStatus(), l.status === g.WAITING && (e ? l.resource.onTimeout() : b = !0))
                }
                h && b && m(), b && setTimeout(j, a.statusInterval)
            };
            this.isBusy = function() {
                for (var a = 0, b = d.length; b > a; a++)
                    if (d[a].status === g.QUEUED || d[a].status === g.WAITING) return !0;
                return !1
            };
            var k = function(a, b) {
                var c, h, i, j, k, m = null;
                for (c = 0, h = d.length; h > c; c++)
                    if (d[c].resource === a) {
                        m = d[c];
                        break
                    }
                if (null != m && m.status === g.WAITING)
                    for (m.status = b, f = Date.now(), i = a.tags.length, c = 0, h = e.length; h > c; c++) j = e[c], k = 0 === j.tags.length ? !0 : a.tags.intersects(j.tags), k && l(m, j)
            };
            this.onLoad = function(a) {
                k(a, g.LOADED)
            }, this.onError = function(a) {
                k(a, g.ERROR)
            }, this.onTimeout = function(a) {
                k(a, g.TIMEOUT)
            };
            var l = function(a, b) {
                    var c, e, f, h, i = 0,
                        j = 0;
                    for (c = 0, e = d.length; e > c; c++) f = d[c], h = !1, h = 0 === b.tags.length ? !0 : f.resource.tags.intersects(b.tags), h && (j++, (f.status === g.LOADED || f.status === g.ERROR || f.status === g.TIMEOUT) && i++);
                    b.callback({
                        resource: a.resource,
                        loaded: a.status === g.LOADED,
                        error: a.status === g.ERROR,
                        timeout: a.status === g.TIMEOUT,
                        completedCount: i,
                        totalCount: j
                    })
                },
                m = this.log = function(a) {
                    if (window.console) {
                        var c = Math.round((Date.now() - b) / 1e3);
                        window.console.log("PxLoader elapsed: " + c + " sec");
                        for (var e = 0, f = d.length; f > e; e++) {
                            var h = d[e];
                            if (a || h.status === g.WAITING) {
                                var i = "PxLoader: #" + e + " " + h.resource.getName();
                                switch (h.status) {
                                    case g.QUEUED:
                                        i += " (Not Started)";
                                        break;
                                    case g.WAITING:
                                        i += " (Waiting)";
                                        break;
                                    case g.LOADED:
                                        i += " (Loaded)";
                                        break;
                                    case g.ERROR:
                                        i += " (Error)";
                                        break;
                                    case g.TIMEOUT:
                                        i += " (Timeout)"
                                }
                                h.resource.tags.length > 0 && (i += " Tags: [" + h.resource.tags.all.join(",") + "]"), window.console.log(i)
                            }
                        }
                    }
                }
        }

        function c(a) {
            if (this.all = [], this.first = null, this.length = 0, this.lookup = {}, a) {
                if (Array.isArray(a)) this.all = a.slice(0);
                else if ("object" == typeof a)
                    for (var b in a) a.hasOwnProperty(b) && this.all.push(b);
                else this.all.push(a);
                this.length = this.all.length, this.length > 0 && (this.first = this.all[0]);
                for (var c = 0; c < this.length; c++) this.lookup[this.all[c]] = !0
            }
        }
        c.prototype.intersects = function(a) {
            if (0 === this.length || 0 === a.length) return !1;
            if (1 === this.length && 1 === a.length) return this.first === a.first;
            if (a.length < this.length) return a.intersects(this);
            for (var b in this.lookup)
                if (a.lookup[b]) return !0;
            return !1
        }, "function" == typeof define && define.amd && define("PxLoader", [], function() {
            return b
        }), a.PxLoader = b
    }(this), Date.now || (Date.now = function() {
        return (new Date).getTime()
    }), Array.isArray || (Array.isArray = function(a) {
        return "[object Array]" === Object.prototype.toString.call(a)
    }), PxLoader.prototype.addImage = function(a, b, c) {
        var d = new PxLoaderImage(a, b, c);
        return this.add(d), d.img
    }, "function" == typeof define && define.amd && define("PxLoaderImage", [], function() {
        return PxLoaderImage
    }), PxLoader.prototype.addSound = function(a, b, c, d) {
        var e = new PxLoaderSound(a, b, c, d);
        return this.add(e), e.sound
    }, "function" == typeof define && define.amd && define("PxLoaderSound", [], function() {
        return PxLoaderSound
    }), PxLoader.prototype.addVideo = function(a, b, c) {
        var d = new PxLoaderVideo(a, b, c);
        return this.add(d), d.vid
    }, "function" == typeof define && define.amd && define("PxLoaderVideo", [], function() {
        return PxLoaderVideo
    });
var MMPDatas = MMPDatas || {};
MMPDatas.about_slides = [{
        text: "DIGITAL<br/>NATIVE<br/>A-TEAM",
        type: "text"
    }, {
        img: "pad.png",
        title: "We are",
        text: "A specialist in digital<br/>activation strategy and brand engagement<br/>through online experience.",
        type: "slide"
    }, {
        img: "rules.png",
        title: "We create",
        text: "Tailor-made<br/>solutions designed to fit to your needs<br/>with cutting-edge technologies.",
        type: "slide"
    }], MMPDatas.awards_infos = [{
        title: "This is it",
        subtitle: "Our wheel<br/>of Fame",
        type: "intro"
    }, {
        id: 1,
        img: "fwa.png",
        price: "20",
        type: "price"
    }, {
        id: 2,
        img: "cannes-lion.png",
        price: "4",
        type: "price"
    }, {
        id: 3,
        img: "strategies.png",
        price: "4",
        type: "price"
    }, {
        id: 4,
        img: "eurobest.png",
        price: "2",
        type: "price"
    }, {
        id: 5,
        img: "cutting-edge.png",
        price: "2",
        type: "price"
    }], MMPDatas.constants = {
        desktopMinWidth: 980,
        desktopMinHeight: 980,
        shapeAngle: 21,
        work: {
            duration: 7e3,
            thumbWidth: 865,
            thumbHeight: 1290
        },
        about: {
            duration: 5e3
        },
        awards: {
            infosDuration: 2800,
            projectDuration: 2e3
        }
    }, MMPDatas.mmp_projects = [{
        id: 1,
        slug: "bmw-facecity",
        title: "BMW - Face City",
        titleCase: "BMW - Face city",
        link: "http://facecity.makemepulse.com/",
        corporate: "JWT Paris",
        year: 2012,
        color: "#42a5f5",
        colorButton: "#56baff",
        type: "desktop",
        client: "BMW",
        img: "wheel-bmw-facecity.svg",
        studycase: !0,
        footerCaseProjects: {
            left: 10,
            mid: 2,
            right: 11
        },
        wheel: !0,
        wheelOrder: 1,
        prices: [{
            price: "fwa",
            type: "fwa-site-day",
            status: "Site of The Day"
        }]
    }, {
        id: 2,
        slug: "greenpeace-rainbow-warrior",
        title: "New Rainbow Warrior<br/>Greenpeace",
        titleCase: "Greenpeace - New Rainbow Warrior",
        link: "http://anewwarrior.ddbparis.net/",
        corporate: "DDB Paris & 84.Paris",
        year: 2011,
        color: "#006e44",
        colorButton: "#008753",
        type: "desktop",
        client: "Greenpeace",
        img: "wheel-greenpeace-warrior.svg",
        studycase: !0,
        footerCaseProjects: {
            left: 12,
            mid: 8,
            right: 1
        },
        wheel: !0,
        wheelOrder: 11,
        prices: [{
            price: "fwa",
            type: "fwa-site-month",
            status: "Site of The Month"
        }, {
            price: "cannes-lion",
            type: "cannes-lion",
            status: "1 Bronze + 3 Silver"
        }, {
            price: "eurobest",
            type: "eurobest",
            status: "Interactive Silver"
        }]
    }, {
        id: 3,
        slug: "nissan",
        title: "Nissan",
        titleCase: "",
        link: "",
        corporate: "",
        year: 2014,
        color: "#00FF00",
        colorButton: "#1e88e5",
        type: "desktop",
        client: "Nissan",
        img: "wheel-nissan.svg",
        studycase: !1,
        wheel: !0,
        wheelOrder: 8,
        prices: [{
            price: "fwa",
            type: "fwa-site-day",
            status: "Site of The Day"
        }]
    }, {
        id: 4,
        slug: "issey-miyake",
        title: "Issey Miyake",
        titleCase: "Issey Miyake - Parfums",
        link: "http://www.isseymiyakeparfums.com/fr/experiences/please-the-world",
        corporate: "Wunderman",
        year: 2012,
        color: "#b20068",
        colorButton: "#cc0077",
        type: "desktop",
        client: "Issey Miyake",
        img: "wheel-issey-miyake.svg",
        studycase: !0,
        footerCaseProjects: {
            left: 15,
            mid: 14,
            right: 9
        },
        wheel: !0,
        wheelOrder: 9,
        prices: [{
            price: "strategies",
            type: "gp-strategies",
            status: "Prix Stratégies du Luxe 2013<br/>Mini-sites + Applications mobiles<br/>Coup de coeur du jury"
        }, {
            price: "fwa",
            type: "fwa-mobile-day",
            status: "Mobile of The Day"
        }]
    }, {
        id: 5,
        slug: "les-meningo",
        title: "Les Méningo<br/>Pfizer",
        titleCase: "",
        link: "",
        corporate: "",
        year: 2014,
        color: "#0000FF",
        colorButton: "#1e88e5",
        type: "desktop",
        client: "Les Méningo",
        img: "wheel-meningo.svg",
        studycase: !1,
        wheel: !0,
        wheelOrder: 6,
        prices: [{
            price: "strategies",
            type: "gp-strategies",
            status: "Grand Prix<br/>Marketing Digital"
        }, {
            price: "fwa",
            type: "fwa-site-day",
            status: "Site of The Day"
        }]
    }, {
        id: 6,
        slug: "ma-dame-gaultier",
        title: "Ma Dame<br/>Jean-Paul Gaultier",
        titleCase: "",
        link: "",
        corporate: "",
        year: 2014,
        color: "#0000FF",
        colorButton: "#1e88e5",
        type: "desktop",
        client: "Jean-Paul Gaultier",
        img: "wheel-jp-gaultier.svg",
        studycase: !1,
        wheel: !0,
        wheelOrder: 5,
        prices: [{
            price: "fwa",
            type: "fwa-site-day",
            status: "Site of The Day"
        }]
    }, {
        id: 7,
        slug: "easy-calendar",
        title: "Easy Calendar",
        titleCase: "",
        link: "",
        corporate: "",
        year: 2014,
        color: "#0000FF",
        colorButton: "#1e88e5",
        type: "desktop",
        client: "Easy Calendar",
        img: "wheel-easy-calendar.svg",
        studycase: !1,
        wheel: !0,
        wheelOrder: 10,
        prices: [{
            price: "fwa",
            type: "fwa-mobile-day",
            status: "Mobile of The Day"
        }]
    }, {
        id: 8,
        slug: "loccitane-grasse",
        title: "L’Occitane — Collection de Grasse",
        titleCase: "Collection de Grasse",
        link: "",
        corporate: "L’Occitane en Provence",
        year: 2013,
        color: "#f6be1a",
        colorButton: "#fdd835",
        type: "desktop",
        client: "L'Occitane",
        img: "",
        studycase: !0,
        footerCaseProjects: {
            left: 15,
            mid: 11,
            right: 4
        },
        wheel: !1,
        prices: []
    }, {
        id: 9,
        slug: "nestle-specialt",
        title: "Special.T Ô Green",
        titleCase: "Nestlé Special.T - Ô Green",
        link: "http://ogreen.special-t.com/",
        corporate: "Publicis Modem",
        year: 2014,
        color: "#ad9865",
        colorButton: "#c7ae73",
        type: "desktop",
        client: "Nestle",
        img: "wheel-ogreen.svg",
        studycase: !0,
        footerCaseProjects: {
            left: 1,
            mid: 15,
            right: 14
        },
        wheel: !0,
        wheelOrder: 3,
        prices: [{
            price: "fwa",
            type: "fwa-site-day",
            status: "Site of The Day"
        }, {
            price: "cutting-edge",
            type: "cutting-edge",
            status: "Adobe Cutting-Edge Award"
        }, {
            price: "awwwards",
            type: "awwwards",
            status: "Site of The Day"
        }]
    }, {
        id: 10,
        slug: "longchamp-quadritown",
        title: "Longchamp Paris — Quadritown",
        titleCase: "Longchamp Paris - Quadritown",
        link: "http://events.longchamp.com/btl/fr/game",
        corporate: "Wunderman",
        year: 2013,
        color: "#40c4ff",
        colorButton: "#80d8ff",
        type: "desktop",
        client: "Longchamp",
        img: "",
        studycase: !0,
        footerCaseProjects: {
            left: 8,
            mid: 12,
            right: 1
        },
        wheel: !1,
        prices: []
    }, {
        id: 11,
        slug: "protocoles-sabrage-ghmumm",
        title: "G.H. Mumm — Champagne Protocoles",
        titleCase: "G. H. Mumm - Champagne Protocoles",
        link: "",
        corporate: "You to You",
        year: 2013,
        color: "#cf0a32",
        colorButton: "#e80c38",
        type: "desktop",
        client: "Ghmumm",
        img: "",
        studycase: !0,
        footerCaseProjects: {
            left: 4,
            mid: 8,
            right: 14
        },
        wheel: !1,
        prices: []
    }, {
        id: 12,
        slug: "one-piece-pirate",
        title: "One Piece — Pirate Warriors",
        titleCase: "One Piece - Pirate Warriors",
        link: "",
        corporate: "Namco Bandai Games",
        year: "2012 & 2013",
        color: "#ff9800",
        colorButton: "#ffb74d",
        type: "desktop",
        client: "One Piece",
        img: "",
        studycase: !0,
        footerCaseProjects: {
            left: 8,
            mid: 2,
            right: 9
        },
        wheel: !1,
        prices: []
    }, {
        id: 13,
        slug: "berocca",
        title: "Boostez Romain",
        titleCase: "",
        link: "",
        corporate: "",
        year: 2014,
        color: "#0000FF",
        colorButton: "#f44336",
        type: "desktop",
        client: "Berocca",
        img: "",
        studycase: !1,
        wheel: !1,
        prices: []
    }, {
        id: 14,
        slug: "watchdogs-hide",
        title: "H_IDE by Watchdogs",
        titleCase: "Ubisoft - H_IDE by Watchdogs",
        link: "https://itunes.apple.com/fr/app/hide-by-watch-dogs/id672672245?mt=8",
        corporate: "BETC",
        year: 2013,
        color: "#212121",
        colorButton: "#3b3b3b",
        type: "desktop",
        client: "Watchdogs",
        img: "wheel-watchdogs-hide.svg",
        studycase: !0,
        footerCaseProjects: {
            left: 4,
            mid: 11,
            right: 15
        },
        wheel: !0,
        wheelOrder: 2,
        prices: [{
            price: "fwa",
            type: "fwa-mobile-day",
            status: "Mobile Of The Day"
        }, {
            price: "eurobest",
            type: "eurobest",
            status: "Interactive Silver"
        }]
    }, {
        id: 15,
        slug: "disneyland-ratbooth",
        client: "Disneyland",
        title: "Disneyland Paris<br/>Ratbooth",
        titleCase: "Disneyland Paris - Ratbooth",
        link: "https://itunes.apple.com/us/app/rat-booth/id881879567?mt=8",
        corporate: "BETC Digital",
        year: 2014,
        color: "#303f9f",
        colorButton: "#1a237e",
        type: "desktop",
        client: "Disneyland",
        img: "wheel-ratatouille.svg",
        studycase: !0,
        footerCaseProjects: {
            left: 2,
            mid: 1,
            right: 14
        },
        wheel: !0,
        wheelOrder: 4,
        prices: [{
            price: "fwa",
            type: "fwa-mobile-day",
            status: "Mobile Of The Day"
        }]
    }, {
        id: 16,
        slug: "myink",
        title: "Myink",
        titleCase: "",
        link: "",
        corporate: "",
        year: 2014,
        color: "#303f9f",
        colorButton: "#1a237e",
        type: "desktop",
        client: "MYINK",
        img: "wheel-myink.svg",
        studycase: !1,
        wheel: !0,
        wheelOrder: 7,
        prices: [{
            price: "fwa",
            type: "fwa-site-day",
            status: "Site Of The Day"
        }]
    }], MMPDatas.routes = [{
        partial: "navigation",
        type: "partial",
        element: "#navigation",
        onload: !0
    }, {
        partial: "webgl",
        type: "partial",
        element: "#webgl",
        onload: !0
    }, {
        id: 0,
        name: "home",
        partial: "one-page/home",
        type: "partial",
        element: ".subview__home",
        onload: !1,
        controller: "HomePage",
        slug: "/"
    }, {
        id: 0,
        name: "home",
        partial: "one-page/work",
        type: "partial",
        element: ".subview__work",
        onload: !1
    }, {
        id: 0,
        name: "home",
        partial: "one-page/about",
        type: "partial",
        element: ".subview__about",
        onload: !1
    }, {
        id: 0,
        name: "home",
        partial: "one-page/awards",
        type: "partial",
        element: ".subview__awards",
        onload: !1
    }, {
        id: 0,
        name: "home",
        type: "page",
        partial: "one-page/contact",
        element: ".subview__contact",
        onload: !1
    }, {
        id: 1,
        name: "bmw-facecity",
        type: "case",
        partial: "cases/bmw-facecity",
        element: ".case__bmw-facecity",
        onload: !1,
        controller: "BmwCase",
        slug: "bmw-facecity"
    }, {
        id: 8,
        name: "loccitane-grasse",
        type: "case",
        partial: "cases/loccitane-grasse",
        element: ".case__loccitane-grasse",
        onload: !1,
        controller: "OccitaneCase",
        slug: "loccitane-grasse"
    }, {
        id: 4,
        name: "issey-miyake",
        type: "case",
        partial: "cases/issey-miyake",
        element: ".case__issey-miyake",
        onload: !1,
        controller: "IsseyMiyakeCase",
        slug: "issey-miyake"
    }, {
        id: 10,
        name: "longchamp-quadritown",
        type: "case",
        partial: "cases/longchamp-quadritown",
        element: ".case__longchamp-quadritown",
        onload: !1,
        controller: "LongchampsCase",
        slug: "longchamp-quadritown"
    }, {
        id: 2,
        name: "greenpeace-rainbow-warrior",
        type: "case",
        partial: "cases/greenpeace-rainbow-warrior",
        element: ".case__greenpeace-rainbow-warrior",
        onload: !1,
        controller: "GreenpeaceCase",
        slug: "greenpeace-rainbow-warrior"
    }, {
        id: 14,
        name: "watchdogs-hide",
        type: "case",
        partial: "cases/watchdogs-hide",
        element: ".case__watchdogs-hide",
        onload: !1,
        controller: "WatchdogsCase",
        slug: "watchdogs-hide"
    }, {
        id: 12,
        name: "one-piece-pirate",
        type: "case",
        partial: "cases/one-piece-pirate",
        element: ".case__one-piece-pirate",
        onload: !1,
        controller: "OnePieceCase",
        slug: "one-piece-pirate"
    }, {
        id: 11,
        name: "protocoles-sabrage-ghmumm",
        type: "case",
        partial: "cases/protocoles-sabrage-ghmumm",
        element: ".case__protocoles-sabrage-ghmumm",
        onload: !1,
        controller: "GhmummCase",
        slug: "protocoles-sabrage-ghmumm"
    }, {
        id: 9,
        name: "nestle-specialt",
        type: "case",
        partial: "cases/nestle-specialt",
        element: ".case__nestle-specialt",
        onload: !1,
        controller: "NestleCase",
        slug: "nestle-specialt"
    }, {
        id: 15,
        type: "case",
        name: "disneyland-ratbooth",
        partial: "cases/disneyland-ratbooth",
        element: ".case__disneyland-ratbooth",
        onload: !1,
        controller: "RatboothCase",
        slug: "disneyland-ratbooth"
    }], MMPDatas.works_slides_multiple = [{
        id: 1,
        multiple: !0,
        position: 4,
        thumb: ["uploads/slider/longchamps1.jpg", "uploads/slider/longchamps2.jpg", "uploads/slider/longchamps3.jpg"],
        thumb_hover: ["uploads/slider/longchamps-hover.jpg", "uploads/slider/longchamps-hover.jpg", "uploads/slider/longchamps-hover.jpg"],
        title: "Jeu de rapidité",
        brand: "Longchamps"
    }, {
        id: 2,
        multiple: !0,
        position: 2,
        thumb: ["uploads/slider/ogreen1.jpg", "uploads/slider/ogreen2.jpg", "uploads/slider/ogreen3.jpg"],
        thumb_hover: ["uploads/slider/ogreen1-hover.jpg", "uploads/slider/ogreen2-hover.jpg", "uploads/slider/ogreen3-hover.jpg"],
        title: "Jeu de rapidité",
        brand: "Longchamps"
    }], MMPDatas.works_slides_single = [{
        id: 14,
        position: 1,
        thumb: "watchdogs-hide.jpg",
        thumb_hover: "watchdogs-hide-hover.jpg",
        title: "WatchDogs<br/>H_IDE",
        brand: "Ubisoft",
        mobile: !0
    }, {
        id: 15,
        position: 2,
        thumb: "ratatouille.jpg",
        thumb_hover: "ratatouille-hover.jpg",
        title: "Disneyland Paris<br/>Ratbooth",
        brand: "Disneyland",
        mobile: !0
    }, {
        id: 10,
        position: 4,
        thumb: "longchamp.jpg",
        thumb_hover: "longchamp-hover.jpg",
        title: "Longchamp<br/>Quadri Town",
        brand: "Longchamp Paris",
        mobile: !1
    }, {
        id: 1,
        position: 5,
        thumb: "bmw-facecity.jpg",
        thumb_hover: "bmw-facecity-hover.jpg",
        title: "BMW<br/>Face City",
        brand: "BMW Serie 1",
        mobile: !1
    }, {
        id: 11,
        position: 6,
        thumb: "ghmumm.jpg",
        thumb_hover: "ghmumm-hover.jpg",
        title: "Savez-vous<br/>sabrer<br/>le champagne ?",
        brand: "G.H. Mumm",
        mobile: !1
    }, {
        id: 12,
        position: 7,
        thumb: "one-piece.jpg",
        thumb_hover: "one-piece-hover.jpg",
        title: "One Piece<br/>Pirate Warriors",
        brand: "Namco Bandai Games",
        mobile: !1
    }, {
        id: 2,
        position: 8,
        thumb: "greenpeace.jpg",
        thumb_hover: "greenpeace-hover.jpg",
        title: "New Rainbow<br/>Warrior",
        brand: "Greenpeace",
        mobile: !1
    }, {
        id: 8,
        position: 9,
        thumb: "occitane-grasse.jpg",
        thumb_hover: "occitane-grasse-hover.jpg",
        title: "Collection de Grasse",
        brand: "L'Occitane en Provence",
        mobile: !1
    }, {
        id: 9,
        position: 3,
        thumb: "special-t.jpg",
        thumb_hover: "special-t-hover.jpg",
        title: "Ô Green",
        brand: "Nestlé Special.T",
        mobile: !0
    }, {
        id: 4,
        position: 10,
        thumb: "issey-miyake.jpg",
        thumb_hover: "issey-miyake-hover.jpg",
        title: "Pleats Please",
        brand: "Issey Miyake",
        mobile: !1
    }],
    function() {
        var a, b, c, d, e, f, g, h, i, j;
        a = window.device, window.device = {}, c = window.document.body, j = window.navigator.userAgent.toLowerCase(), device.osx = function() {
            return d("mac os x")
        }, device.ios = function() {
            return device.iphone() || device.ipod() || device.ipad()
        }, device.iphone = function() {
            return d("iphone")
        }, device.ipod = function() {
            return d("ipod")
        }, device.ipad = function() {
            return d("ipad")
        }, device.android = function() {
            return d("android")
        }, device.chrome = function() {
            return d("chrome")
        }, device.ie = function() {
            return d("msie")
        }, device.ie10 = function() {
            return d("msie 10.0")
        }, device.ie12 = function() {
            return d("msie 12.0")
        }, device.ie11 = function() {
            return d("msie 10.0")
        }, device.ie10 = function() {
            return d("msie 10.0")
        }, device.ie9 = function() {
            return d("msie 9.0")
        }, device.ie8 = function() {
            return d("msie 8.0")
        }, device.androidPhone = function() {
            return device.android() && d("mobile")
        }, device.androidTablet = function() {
            return device.android() && !d("mobile")
        }, device.blackberry = function() {
            return d("blackberry") || d("bb10") || d("rim")
        }, device.blackberryPhone = function() {
            return device.blackberry() && !d("tablet")
        }, device.blackberryTablet = function() {
            return device.blackberry() && d("tablet")
        }, device.windows = function() {
            return d("windows")
        }, device.windowsPhone = function() {
            return device.windows() && d("phone")
        }, device.windowsTablet = function() {
            return device.windows() && d("touch") && !device.windowsPhone()
        }, device.fxos = function() {
            return (d("(mobile;") || d("(tablet;")) && d("; rv:")
        }, device.fxosPhone = function() {
            return device.fxos() && d("mobile")
        }, device.fxosTablet = function() {
            return device.fxos() && d("tablet")
        }, device.meego = function() {
            return d("meego")
        }, device.cordova = function() {
            return window.cordova && "file:" === location.protocol
        }, device.nodeWebkit = function() {
            return "object" == typeof window.process
        }, device.mobile = function() {
            return device.androidPhone() || device.iphone() || device.ipod() || device.windowsPhone() || device.blackberryPhone() || device.fxosPhone() || device.meego()
        }, device.tablet = function() {
            return device.ipad() || device.androidTablet() || device.blackberryTablet() || device.windowsTablet() || device.fxosTablet()
        }, device.desktop = function() {
            return !device.tablet() && !device.mobile()
        }, device.nexus5 = function() {
            return d("nexus 5")
        }, device.portrait = function() {
            return window.innerHeight / window.innerWidth > 1
        }, device.landscape = function() {
            return window.innerHeight / window.innerWidth < 1
        }, device.noConflict = function() {
            return window.device = a, this
        }, d = function(a) {
            return -1 !== j.indexOf(a)
        }, f = function(a) {
            var b;
            return b = new RegExp(a, "i"), c.className.match(b)
        }, b = function(a) {
            return f(a) ? void 0 : c.className += " " + a
        }, h = function(a) {
            return f(a) ? c.className = c.className.replace(a, "") : void 0
        }, device.ios() ? device.ipad() ? b("ios ipad tablet") : device.iphone() ? b("ios iphone mobile") : device.ipod() && b("ios ipod mobile") : b(device.android() ? device.androidTablet() ? "android tablet" : "android mobile" : device.blackberry() ? device.blackberryTablet() ? "blackberry tablet" : "blackberry mobile" : device.windows() ? device.windowsTablet() ? "windows tablet" : device.windowsPhone() ? "windows mobile" : "desktop" : device.fxos() ? device.fxosTablet() ? "fxos tablet" : "fxos mobile" : device.meego() ? "meego mobile" : device.nodeWebkit() ? "node-webkit" : device.osx() ? "osx" : "desktop"), device.cordova() && b("cordova"), device.chrome() && b("chrome"), device.ie() && (b("ie"), b(device.ie8() ? "ie8" : device.ie9() ? "ie9" : device.ie10() ? "ie10" : device.ie11() ? "ie11" : device.ie12() ? "ie12" : "ie-unknown")), e = function() {
            return device.landscape() ? (h("portrait"), b("landscape")) : (h("landscape"), b("portrait"))
        }, i = "onorientationchange" in window, g = i ? "orientationchange" : "resize", window.addEventListener ? window.addEventListener(g, e, !1) : window.attachEvent ? window.attachEvent(g, e) : window[g] = e, e(), window.BrowserDetect = function() {
            function a() {}
            return a.isOSX = window.device.osx(), a.isIpad = window.device.ios() && window.device.ipad(), a.isIphone = window.device.ios() && (window.device.iphone() || window.device.ipod), a.isIos = window.device.ios(), a.isAndroidTablet = window.device.android() && window.device.androidTablet(), window.device.android() && !window.device.androidTablet() && (a.isAndroidPhone = !0), a.isAndroid = window.device.android(), a.isTablet = window.device.tablet(), a.isMobile = window.device.mobile(), a.isDesktop = window.device.desktop(), a.isNexus5 = window.device.nexus5(), a.isWindow = window.device.windows(), a.isWindowsPhone = window.device.windowsPhone(), a.isWindowsTablet = window.device.windowsTablet(), a.isChrome = window.device.chrome(), a.isIE = window.device.ie(), a.isIE8 = window.device.ie8(), a.isIE9 = window.device.ie9(), a.isIE10 = window.device.ie10(), a.isIE11 = window.device.ie11(), a.isIE12 = window.device.ie12(), a
        }(), window.OrientationDetect = function() {
            function a() {}
            return a.isLandscape = window.device.landscape(), a.isPortrait = window.device.portrait(), a
        }()
    }.call(this),
    function() {
        this.App = function() {
            function a() {}
            return a.Constants = MMPDatas.constants, a.ui = {}, a.CDN_URL = "http://dki887u7q00gv.cloudfront.net", a.IMAGES_DIR = "" + a.CDN_URL + "/images", a.UPLOADS_DIR = "" + a.CDN_URL + "/uploads", a.VIEWS_DIR = "" + a.CDN_URL + "/views", a.ABS_PATH = "/", a.CASES_PATH = "/work/", a.CASES_PREFIX = "/work/", a.MIN_DESKTOP_WIDTH = 1e3, a
        }()
    }.call(this),
    function() {
        var a;
        a = function() {
            function a() {
                this.mobilePortrait = window.matchMedia("(orientation: portrait)"), this.mobileLandscape = window.matchMedia("(orientation: landscape)"), this.mobile = window.matchMedia("(max-device-width : 480px)"), this.desktop = window.matchMedia("(min-width : 481px)")
            }
            return a.prototype.current = function() {
                return this.mobile.matches ? "mobile" : this.desktop.matches ? "desktop" : void 0
            }, a.prototype.isDesktop = function() {
                return "desktop" === this.current() ? !0 : !1
            }, a.prototype.isMobile = function() {
                return "mobile" === this.current() ? !0 : !1
            }, a.prototype.orientation = function() {
                return this.mobileLandscape.matches ? "landscape" : this.mobilePortrait.matches ? "portrait" : void 0
            }, a
        }(), window.Context = new a
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.TemplateManager = function() {
            function b() {
                this.progressDone = a(this.progressDone, this), this.next = a(this.next, this), this.progress = 0, this.size = this.done = null
            }
            return b.prototype.load = function(a, b, c) {
                return $.get("" + App.VIEWS_DIR + "/" + a + ".html", function(a) {
                    return $(b).length > 0 ? ($(b).append(a), $(b).removeClass("inactive")) : void 0
                }).done(c)
            }, b.prototype.loadMultiples = function(a, b) {
                return this.templates = a, this.done = b, this.progress = 0, this.templates.length ? (this.size = this.templates.length - 1, this.next()) : void 0
            }, b.prototype.next = function() {
                return this.progress < this.size ? (this.load(this.templates[this.progress][0], this.templates[this.progress][1], this.next), void this.progress++) : this.load(this.templates[this.progress][0], this.templates[this.progress][1], this.progressDone)
            }, b.prototype.progressDone = function() {
                return this.done()
            }, b
        }(), this.App.TemplateManager = new App.TemplateManager
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        void 0 === Function.prototype.name && void 0 !== Object.defineProperty && Object.defineProperty(Function.prototype, "name", {
            get: function() {
                var a, b;
                return a = /function\s([^(]{1,})\(/, b = a.exec(this.toString()), b && b.length > 1 ? b[1].trim() : ""
            },
            set: function() {}
        }), App.Router = function() {
            function b() {
                this.beforeShow = a(this.beforeShow, this), this.resolve = a(this.resolve, this), this.navigate = a(this.navigate, this), this.routingHandler = a(this.routingHandler, this), this.current = {}, this.last = {}, this.routes = [], this.start = "/", this.instances = [], this.notFound = !1, this.useLoader = !0
            }
            return b.prototype.initialize = function(a, b) {
                var c, d, e;
                if (this.routes = a, this.start = b, a.length) {
                    for (page.base(this.start), c = d = 0, e = this.routes.length; e >= 0 ? e > d : d > e; c = e >= 0 ? ++d : --d) this.instances.push(this.initializeRoute(this.routes[c])), page(this.routes[c].slug, this.resolve, this.beforeShow);
                    return page("*", this.routingHandler), page({
                        click: !1
                    })
                }
            }, b.prototype.routingHandler = function() {
                return page.replace(this.routes[0].slug, {
                    path: this.routes[0].slug
                }, !0, !0), window.location = this.routes[0].slug
            }, b.prototype.initializeRoute = function(a) {
                var b;
                return b = a.controller, new window.App[b](a)
            }, b.prototype.navigate = function(a, b) {
                return null == b && (b = !0), this.useLoader = b, "" !== a && a !== this.current.route ? page(a) : void 0
            }, b.prototype.resolve = function(a, b) {
                var c = this;
                return this.setRoute(a), a.init ? this.current.view.load(a, b) : (this.useLoader && App.Loader.show(!0), this.last.view.hide(function() {
                    return c.last.view.dispose(), c.current.view.load(a, b)
                }))
            }, b.prototype.beforeShow = function(a) {
                return a.init ? this.current.view.show() : (this.useLoader = !0, this.current.view.show())
            }, b.prototype.setRoute = function(a) {
                var b;
                return b = this.matchRoute(a.path), this.last = this.current, null != b ? this.current = {
                    view: this.matchController(b),
                    route: a.path
                } : this.redirectRouteNotFound()
            }, b.prototype.redirectRouteNotFound = function() {
                return this.current = {
                    view: this.instances[0],
                    route: this.routes[0].slug
                }
            }, b.prototype.matchRoute = function(a) {
                var b, c, d, e;
                for (b = null, c = d = 0, e = this.routes.length; e >= 0 ? e > d : d > e; c = e >= 0 ? ++d : --d) a === this.routes[c].slug && (b = this.routes[c].controller);
                return null != b ? b : void 0
            }, b.prototype.matchController = function(a) {
                var b, c, d, e;
                for (c = null, b = d = 0, e = this.instances.length; e >= 0 ? e > d : d > e; b = e >= 0 ? ++d : --d) this.instances[b].__name__ === a && (c = this.instances[b]);
                return null != c ? c : void 0
            }, b
        }(), this.App.Router = new App.Router
    }.call(this),
    function() {
        App.SVGLoader = function() {
            function a(a, c) {
                this.el = a, this.options = b({}, c), b(this.options, c), this._init()
            }
            var b;
            return b = function(a, b) {
                var c;
                for (c in b) b.hasOwnProperty(c) && (a[c] = b[c]);
                return a
            }, a
        }(), App.SVGLoader.prototype.options = {
            speedIn: 500,
            easingIn: mina.linear
        }, App.SVGLoader.prototype._init = function() {
            var a, b, c;
            c = Snap(this.el.querySelector("svg")), this.path = c.select("path"), this.initialPath = this.path.attr("d"), b = this.el.getAttribute("data-opening"), this.openingSteps = b ? b.split(";") : "", this.openingStepsTotal = b ? this.openingSteps.length : 0, 0 !== this.openingStepsTotal && (a = this.el.getAttribute("data-closing") ? this.el.getAttribute("data-closing") : this.initialPath, this.closingSteps = a ? a.split(";") : "", this.closingStepsTotal = a ? this.closingSteps.length : 0, this.isAnimating = !1, this.options.speedOut || (this.options.speedOut = this.options.speedIn), this.options.easingOut || (this.options.easingOut = this.options.easingIn))
        }, App.SVGLoader.prototype.show = function() {
            var a, b;
            return this.isAnimating ? !1 : (this.isAnimating = !0, b = this, a = function() {
                $(b.el).addClass("pageload-loading")
            }, this._animateSVG("in", a), void $(this.el).addClass("show"))
        }, App.SVGLoader.prototype.hide = function() {
            var a;
            a = this, $(this.el).removeClass("pageload-loading"), this._animateSVG("out", function() {
                a.path.attr("d", a.initialPath), $(a.el).removeClass("show"), a.isAnimating = !1
            })
        }, App.SVGLoader.prototype._animateSVG = function(a, b) {
            var c, d, e, f, g, h, i;
            f = this, e = 0, h = "out" === a ? this.closingSteps : this.openingSteps, i = "out" === a ? this.closingStepsTotal : this.openingStepsTotal, g = "out" === a ? f.options.speedOut : f.options.speedIn, c = "out" === a ? f.options.easingOut : f.options.easingIn, (d = function(a) {
                return a > i - 1 ? void(b && "function" == typeof b && b()) : (f.path.animate({
                    path: h[a]
                }, g, c, function() {
                    d(a)
                }), void a++)
            })(e)
        }
    }.call(this),
    function() {
        var a;
        a = function() {
            function a() {}
            return a.prototype.drawSector = function(a, b, c, d, e, f, g, h, i, j) {
                var k, l, m, n, o, p, q, r, s;
                return null == j && (j = ""), "degree" === g ? (k = Math.PI / 180, m = a + c * Math.cos(-d * k), n = a + c * Math.cos(-e * k), o = a + c / 2 * Math.cos(-(d + (e - d) / 2) * k), p = b + c * Math.sin(-d * k), q = b + c * Math.sin(-e * k), r = b + c / 2 * Math.sin(-(d + (e - d) / 2) * k)) : (m = a + c * Math.cos(d), n = a + c * Math.cos(e), o = a + c / 2 * Math.cos(-(d + (e - d) / 2)), p = b + c * Math.sin(d), q = b + c * Math.sin(e), r = b + c / 2 * Math.sin(-(d + (e - d) / 2))), l = ["M" + a + "," + b, "L" + m + "," + p, "A" + c + "," + c, 0, "0,1", n + "," + q, "z"], l.middle = {
                    x: o,
                    y: r
                }, s = "", "" !== j && (s = "clickable"), "<path d='" + l.join(" ") + ("' class='sector " + s + "' data-project-id='") + h + "' href='" + j + "' data-rad='" + i + "'/>"
            }, a.prototype.drawArc = function(a, b, c, d, e, f) {
                var g, h, i, j, k, l, m, n;
                return "degree" === f ? (g = Math.PI / 180, i = a + c * Math.cos(-d * g), j = a + c * Math.cos(-e * g), k = a + c / 2 * Math.cos(-(d + (e - d) / 2) * g), l = b + c * Math.sin(-d * g), m = b + c * Math.sin(-e * g), n = b + c / 2 * Math.sin(-(d + (e - d) / 2) * g)) : (i = a + c * Math.cos(d), j = a + c * Math.cos(e), k = a + c / 2 * Math.cos(-(d + (e - d) / 2)), l = b + c * Math.sin(d), m = b + c * Math.sin(e), n = b + c / 2 * Math.sin(-(d + (e - d) / 2))), h = ["M" + i + "," + l, "A" + c + "," + c, 0, "0,1", j + "," + m], h.middle = {
                    x: k,
                    y: n
                }, "<path d='" + h.join(" ") + "' class='arc'/>"
            }, a.prototype.drawDonut = function(a, b, c, d) {
                var e, f, g;
                return f = b + d, g = b + c, e = "M" + a + " " + f + "A" + d + " " + d + " 0 1 1 " + (a + .001) + " " + f, e += "M" + a + " " + g + "A" + c + " " + c + " 0 1 0 " + (a - .001) + " " + g, "<path d='" + e + "' class='donut' />"
            }, a.prototype.drawCircle = function(a, b, c) {
                var d;
                return d = "M" + a + "," + b + " m " + -c + ",0 a " + c + "," + c + " 0 1, 0 " + 2 * c + ", 0 a " + c + "," + c + " 0 1, 0 -" + 2 * c + ", 0", "<path d='" + d + "' class='circle' />"
            }, a.prototype.radians = function(a) {
                return a * Math.PI / 180
            }, a.prototype.degrees = function(a) {
                return 360 * a / Math.PI
            }, a
        }(), this.App.SVGCircle = new a
    }.call(this),
    function() {
        App.ColoredMap = function() {
            function a(a, b) {
                this._custom_map_style = [], this._container = a, this._classMap = b, this._absURL = window.location.href.substring(0, window.location.href.length - 2), this._load()
            }
            return a.prototype._load = function() {
                return this._custom_map_style = [{
                    featureType: "landscape",
                    stylers: [{
                        color: "#f1f1f1"
                    }]
                }, {
                    featureType: "poi",
                    stylers: [{
                        visibility: "off"
                    }]
                }, {
                    featureType: "poi",
                    stylers: [{
                        visibility: "off"
                    }]
                }, {
                    featureType: "road",
                    stylers: [{
                        color: "#ffffff"
                    }]
                }, {
                    featureType: "road",
                    elementType: "geometry.stroke",
                    stylers: [{
                        color: "#ebebeb"
                    }, {
                        weight: 2.8
                    }]
                }, {
                    featureType: "road",
                    elementType: "labels.text.fill",
                    stylers: [{
                        color: "#808080"
                    }]
                }, {
                    featureType: "water",
                    stylers: [{
                        visibility: "off"
                    }]
                }, {}], $(this._container).find(this._classMap).gmap3({
                    action: "addStyledMap",
                    id: "custom_map",
                    options: {
                        name: "Custom Map"
                    },
                    style: this._custom_map_style
                }, {
                    action: "setStyledMap",
                    map: {
                        options: {
                            center: new google.maps.LatLng(48.884688, 2.3151),
                            zoom: 17,
                            mapTypeId: "custom_map",
                            disableDoubleClickZoom: !1,
                            mapTypeControl: !1,
                            scrollwheel: !1,
                            scaleControl: !1,
                            disableDefaultUI: !0
                        }
                    }
                }, {
                    action: "addMarker",
                    latLng: [48.884388, 2.3151],
                    animation: google.maps.Animation.DROP,
                    icon: "" + App.IMAGES_DIR + "/pin.png"
                })
            }, a.prototype.reset = function() {
                var a;
                return a = $(this._container).find(this._classMap).data("gmap3"), a.destroy({}), $(this._container).find(this._classMap).data("gmap3", null), this._load()
            }, a
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ScrollManager = function() {
            function b() {}
            var c, d;
            return d = null, c = function() {
                function b() {
                    this.scroll = a(this.scroll, this), this.scrollable = !1, this.animations = []
                }
                return b.prototype.addElement = function(a) {
                    return this.animations.push(a)
                }, b.prototype.clear = function() {
                    return this.animations = null
                }, b.prototype.scroll = function() {
                    var a, b, c, d, e;
                    if (this.scrollable && (b = document.documentElement.scrollTop || document.body.scrollTop, this.animations.length > 0)) {
                        for (e = [], a = c = 0, d = this.animations.length; d > c; a = c += 1) b >= this.animations[a].top ? this.animations[a].visited ? e.push(void 0) : (this.animations[a].visited = !0, null != this.animations[a].sequence ? e.push(this._animateWithSequence(this.animations[a])) : (null != this.animations[a]["class"] && (this.animations[a].delay > 0 ? this._animateWithDelay(this.animations[a]) : $(this.animations[a].elem).addClass(this.animations[a]["class"])), e.push(null != this.animations[a].callback ? this._animateWithCallback(this.animations[a]) : void 0))) : e.push(void 0);
                        return e
                    }
                }, b.prototype._animateWithDelay = function(a) {
                    return window.setTimeout(function() {
                        return $(a.elem).addClass(a["class"])
                    }, a.delay)
                }, b.prototype._animateWithCallback = function(a) {
                    switch (a.callback.fn) {
                        case "playVideo":
                            return this._playVideo(a.callback.args[0]);
                        default:
                            console.error("no method found")
                    }
                }, b.prototype._animateWithSequence = function(a) {
                    var b, c, d;
                    return b = $(a.elem).find(a.sequence.spawn), d = function() {
                        var a, d, e, f;
                        for (f = [], a = d = 0, e = b.length; e > d; a = d += 1) f.push(c(b[a], a));
                        return f
                    }, c = function(b, c) {
                        return window.setTimeout(function() {
                            return $(b).addClass(a["class"])
                        }, c * a.sequence.delay)
                    }, null != b.length ? a.delay > 0 ? window.setTimeout(d, a.delay) : d() : void 0
                }, b.prototype._playVideo = function(a) {
                    var b;
                    return b = document.getElementById(a), b.play()
                }, b
            }(), b.prototype.get = function() {
                return null != d ? d : d = new c
            }, b.prototype.add = function(a) {
                return a.visited = !1, d.addElement(a)
            }, b.prototype.start = function() {
                return d.scrollable = !0
            }, b.prototype.clear = function() {
                return d.clear()
            }, b.prototype.scroll = function() {
                return d.scroll()
            }, b.prototype.dispose = function() {
                return d.scrollable = !1, d.clear()
            }, b
        }.call(this), this.App.ScrollManager = new App.ScrollManager, this.App.ScrollManager.get()
    }.call(this),
    function() {
        Math.clamp = function(a, b, c) {
            return Math.max(b, Math.min(c, a))
        }
    }(),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.Loader = function() {
            function b() {
                this.counter = a(this.counter, this), this.setCounter = a(this.setCounter, this), this.mouseWheel = a(this.mouseWheel, this), this.hidden = a(this.hidden, this), this.onFinished = a(this.onFinished, this), this.hide = a(this.hide, this), this._progressLoading = a(this._progressLoading, this), this.preload = a(this.preload, this), this.draw = a(this.draw, this), this.repeat = a(this.repeat, this), this.animate = a(this.animate, this), this.loadSVG(), this.createCanvas(), this.show(!1), this.mobileNoPreloadClasses = ".mobile--hide img,        .study-case__bloc--video-demo img,        .study-case__bloc-video img,        .study-case__bloc--steps img,         .study-case__bloc--pixel-art img,        .study-case__footer img,        .study-case__bloc--3D-experiment img,        .study-case__bloc--cross-experience img,        .study-case__bloc--watercolor-board img,        .study-case__bloc--full-responsive img,        .study-case__bloc--computer img,        .study-case__bloc-compo img,        .study-case__bloc--tracking img,        .study-case__bloc--demo img,        .study-case__bloc--decrypting-system img"
            }
            return b.prototype.canvas = null, b.prototype.ctx = null, b.prototype.c0 = null, b.prototype.c1 = null, b.prototype.c2 = null, b.prototype.p0 = null, b.prototype.mW = 0, b.prototype.mH = 0, b.prototype.tm = null, b.prototype.percent = 0, b.prototype.loop = !1, b.prototype.svgAnimation = !1, b.prototype.isScroll = !0, b.prototype.playing = !1, b.prototype.container = ".loader", b.prototype.overlay = ".loader--overlay", b.prototype.percentLabel = ".percent", b.prototype.SVGElements = {}, b.prototype.createCanvas = function() {
                return this.canvas = document.getElementById("loader--canvas"), this.ctx = this.canvas.getContext("2d"), this.mW = parseInt($(this.canvas).width() / 2), this.mH = parseInt($(this.canvas).height() / 2), TweenMax.set(this.canvas, {
                    autoAlpha: 0
                })
            }, b.prototype.animate = function() {
                var a, b, c;
                return this.p0 = {
                    r1: 49,
                    r2: 52,
                    r3: 60,
                    b1: 1,
                    b2: 3,
                    b3: 5,
                    a: 1
                }, this.c0 = {
                    r: this.p0.r2,
                    b: this.p0.b2,
                    a: this.p0.a,
                    rgb: "255,255,255"
                }, b = {
                    r1: 120
                }, this.c1 = {
                    r: this.p0.r2,
                    b: this.p0.b2,
                    a: this.p0.a,
                    rgb: "50,52,59"
                }, c = {
                    r1: 130
                }, this.c2 = {
                    r: this.p0.r2,
                    b: this.p0.b2,
                    a: this.p0.a,
                    rgb: "50,52,59"
                }, a = 0, this.tm = new TimelineMax({
                    paused: !0,
                    onUpdate: this.draw,
                    repeat: -1,
                    onRepeat: this.repeat
                }), this.tm.to(this.c0, .05, {
                    r: this.p0.r1
                }, a), this.tm.to(this.c0, .2, {
                    r: this.p0.r2
                }, a += .1), this.tm.to(this.c0, .05, {
                    r: this.p0.r1
                }, a += .2), this.tm.to(this.c0, .2, {
                    r: this.p0.r2
                }, a += .1), this.tm.to(this.c0, 1.4, {
                    r: this.p0.r3,
                    b: this.p0.b3
                }, a += .2), this.tm.to(this.c0, 1.4, {
                    r: this.p0.r2,
                    b: this.p0.b2
                }, a += 1.5), this.tm.to(this.c1, .8, {
                    r: b.r1,
                    a: 0,
                    b: this.p0.b1
                }, 0), this.tm.to(this.c2, .9, {
                    r: c.r1,
                    b: this.p0.b1
                }, .3), this.tm.to(this.c2, 2, {
                    r: this.p0.r1,
                    ease: Sine.easeIn
                }, 1.2), this.setCounter(0), this.tm.play(), this.loop = !0
            }, b.prototype.repeat = function() {
                return this.loop ? void 0 : (this.tm.pause(0), null != this.tm && this.tm.clear(), TweenMax.fromTo(this.percentLabel, .2, {
                    autoAlpha: 1
                }, {
                    autoAlpha: 0
                }), TweenMax.fromTo(this.canvas, .2, {
                    autoAlpha: 1
                }, {
                    delay: .1,
                    autoAlpha: 0
                }))
            }, b.prototype.draw = function() {
                return this.ctx.clearRect(0, 0, 2 * this.mW, 2 * this.mH), this.drawCircle(this.c2), this.drawCircle(this.c1), this.drawCircle(this.c0)
            }, b.prototype.drawCircle = function(a) {
                return this.ctx.strokeStyle = "rgba(" + a.rgb + ", " + a.a + ")", this.ctx.lineWidth = a.b, this.ctx.beginPath(), this.ctx.arc(this.mW, this.mH, a.r, 0, 2 * Math.PI, !0), this.ctx.closePath(), this.ctx.stroke()
            }, b.prototype.preload = function(a) {
                var b, c, d, e, f, g, h = this;
                for (this.callback = null != a ? a : null, $(this.percentLabel).removeClass("hide"), this._pxLoader = null, this._pxLoader = new PxLoader, this._pxLoader.addCompletionListener(this.onFinished), this._pxLoader.addProgressListener(this._progressLoading), this.onFinishedFired = !1, this.elemsToLoad = $("img, video").length, this.elemsLoaded = [], c = $("img"), BrowserDetect.isMobile && (c = $("img").not(this.mobileNoPreloadClasses)), g = $("img"), d = function() {
                        return h._pxLoader.addImage(b.src, ["image"], 2)
                    }, e = 0, f = g.length; f > e; e++) b = g[e], d();
                return this._pxLoader.start()
            }, b.prototype._progressLoading = function(a) {
                return this.setCounter(100 * a.completedCount / a.totalCount)
            }, b.prototype.show = function(a) {
                return this.playing ? void 0 : ($(this.percentLabel).addClass("hide"), this.playing = !0, $(this.container).removeClass("hide"), this.mouseWheel(), this.svgAnimation = a, this.svgAnimation && this.showSVG(), TweenMax.to($(this.container), .6, {
                    autoAlpha: 1
                }), (BrowserDetect.isTablet || BrowserDetect.isMobile) && $(this.overlay).removeClass("hide"), TweenMax.fromTo(this.canvas, .2, {
                    autoAlpha: 0
                }, {
                    autoAlpha: 1,
                    delay: .5
                }), TweenMax.fromTo(this.percentLabel, .2, {
                    autoAlpha: 0
                }, {
                    autoAlpha: 1,
                    delay: .7
                }), this.animate())
            }, b.prototype.hide = function(a) {
                return $(window).scrollTop(0), this.svgAnimation = a, this.loop = !1
            }, b.prototype.onFinished = function() {
                return this.svgAnimation && this.hideSVG(), TweenMax.to($(this.container), .3, {
                    autoAlpha: 0,
                    onComplete: this.hidden
                }), this.callback ? this.callback() : void 0
            }, b.prototype.hidden = function() {
                return $(this.overlay).addClass("hide"), $(this.container).addClass("hide"), this.mouseWheel(), this.playing = !1
            }, b.prototype.mouseWheel = function() {
                var a = this;
                return this.isScroll = !this.isScroll, $("body").on("mousewheel", function(b) {
                    return a.isScroll ? void 0 : b.preventDefault()
                })
            }, b.prototype.setCounter = function(a) {
                return this.percent = Math.round(a), $(this.percentLabel).html(this.percent + "%")
            }, b.prototype.counter = function() {
                return this.percent += .8, this.percent <= 101 ? $(this.percentLabel).html(parseInt(this.percent) + "%") : void 0
            }, b.prototype.loadSVG = function() {
                var a;
                return BrowserDetect.isTablet || BrowserDetect.isMobile ? void 0 : (a = {
                    speedIn: 400,
                    easingIn: mina.easeinout
                }, this.SVGElements.top = new App.SVGLoader($("#loader-top")[0], a), this.SVGElements.bottom = new App.SVGLoader($("#loader-bottom")[0], a))
            }, b.prototype.showSVG = function() {
                return BrowserDetect.isTablet || BrowserDetect.isMobile ? void 0 : (this.SVGElements.top.show(), this.SVGElements.bottom.show())
            }, b.prototype.hideSVG = function() {
                return BrowserDetect.isTablet || BrowserDetect.isMobile ? void 0 : (this.SVGElements.top.hide(), this.SVGElements.bottom.hide())
            }, b
        }(), this.App.Loader = new App.Loader
    }.call(this),
    function() {
        App.Shaders = function() {
            var a;
            return a = {}, a.height_buff_VS = "varying vec2 vUvs;\n\nvoid main() {\n  vUvs = uv;\n  gl_Position = vec4( position, 1.0 );\n}", a.height_buff_FS = "varying vec2 vUvs;\n\nuniform float time;\n\nuniform sampler2D mbump;\nuniform sampler2D wbump;\n\nconst vec3 lightDir = vec3(1.0,1.0,1.0);\n\nvec2 hash( vec2 p )\n{\n  p = vec2( dot(p,vec2(127.1,311.7)),\n    dot(p,vec2(269.5,183.3)) );\n\n  return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n  vec2 n_i = floor( p );\n  vec2 n_f = fract( p );\n\n  vec2 n_u = n_f*n_f*(3.0-2.0*n_f);\n\n  return 6.28 * mix( mix( dot( hash( n_i + vec2(0.0,0.0) ), n_f - vec2(0.0,0.0) ),\n    dot( hash( n_i + vec2(1.0,0.0) ), n_f - vec2(1.0,0.0) ), n_u.x),\n  mix( dot( hash( n_i + vec2(0.0,1.0) ), n_f - vec2(0.0,1.0) ),\n    dot( hash( n_i + vec2(1.0,1.0) ), n_f - vec2(1.0,1.0) ), n_u.x), n_u.y);\n}\n\nfloat applyNoise(vec2 p) {\n  float n =\n    (cos( noise(p.xy*vec2(40.0, 20.0) )+time )+1.01)*.01 +\n    (cos( noise(p.xy*vec2(8.0, 4.0) )+time/5.0 )+1.01)*.04\n  ;\n  return n;\n}\n\n\n\nvec4 pack_depth( const in float depth ) {\n\n  const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n  const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n  vec4 res = fract( depth * bit_shift );\n  res -= res.xxyz * bit_mask;\n  return res;\n\n}\n\nfloat unpackDepth( const in vec4 rgba_depth ) {\n\n  const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n  float depth = dot( rgba_depth, bit_shift );\n  return depth;\n\n}\n\n\nvoid main(){\n\n  // Color\n  float height = \n    applyNoise(vUvs) +\n    unpackDepth( texture2D( mbump, vUvs ) )+\n    texture2D( wbump, vUvs ).r * .1;\n  gl_FragColor = pack_depth( height );\n\n}\n\n\n", a.plane_vt_VS = "\nvarying vec2 vUv;\nvarying vec3 vColor;\n\nuniform float time;\nuniform float noiseIntensity;\nuniform vec2 mouseposition;\n\nuniform vec3 colorLight;\nuniform vec3 colorShadow;\nuniform vec3 colorFog;\n\nuniform sampler2D heightTex;\n\nconst vec3 lightDir = vec3(0.0,.9,.9);\nconst float r = 30.0;\n\n#ifdef BUMP_LIGHT\nuniform sampler2D lbumpTex;\nuniform sampler2D wbumpTex;\n#endif\n\n#ifdef HORIZON\n  varying float vAlpha;\n#endif\n\n\n\nfloat unpackDepth( const in vec4 rgba_depth ) {\n\n  const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n  float depth = dot( rgba_depth, bit_shift );\n  return depth;\n\n}\n\nfloat getHeight( vec2 p ){\n  #ifdef BUMP\n  return unpackDepth( texture2D( heightTex, p ) )*noiseIntensity;\n  #else\n  return (unpackDepth( texture2D( lbumpTex, p ) ) + texture2D( wbumpTex, p ).r * .1 )*noiseIntensity;\n  #endif\n} \n\nvoid main() {\n\n  vUv = uv;\n\n\n  float height = getHeight( uv );\n\n  vec3 pos = vec3( position.xy, height );\n\n\n\n\n  float hc =     getHeight(normal.xy);\n  float dhx = getHeight(normal.xy+vec2(.0078125,0.0)) - hc;\n  float dhy = getHeight(normal.xy+vec2(0.0,.015625)) - hc;\n\n  vec3 nrm = normalize( vec3( -dhx, -dhy, 3.125 ) );\n\n  float ldot = clamp( dot(nrm, lightDir), 0.0, 1.0 );\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n  \n\n\n\n  \n  #ifdef BUMP_LIGHT\n  vec4 heightPixel = texture2D( lbumpTex, uv );\n\n\n  float heightm = unpackDepth( heightPixel )*100.0;\n  heightm += texture2D( wbumpTex, uv ).r*8.0;\n\n  vColor = ((1.0+ (ldot*height/10.0)+( heightm *.5)) * mix(colorLight,colorShadow,ldot));\n  #else\n  vColor = mix(colorLight,colorShadow,ldot);\n  #endif\n\n  float fog = (gl_Position.z/200.0 );\n  vColor = mix( colorFog, vColor, 1.0 - fog );\n\n  #ifdef HORIZON\n    vAlpha = fog*2.0 - 1.0;\n  #endif\n}", a.plane_vt_FS = "varying vec2 vUv;\nvarying vec3 vColor;\nuniform float time;\n\n\n#ifdef HORIZON\n  varying float vAlpha;\n#endif\n\nvoid main() {\n\n  // colour is RGBA: u, v, 0, 1\n\n#ifdef HORIZON\n  gl_FragColor = vec4	( vColor.xyz, vAlpha );\n\n#else\n  gl_FragColor = vec4	( vColor.xyz, 1. );\n\n#endif\n\n\n\n}", a.planeVS = "varying vec2 vUv;\nvarying vec3 vColor;\n\nuniform float time;\nuniform float waveR;\nuniform float clicked;\nuniform vec2 mouseposition;\n\nuniform vec3 colorLight;\nuniform vec3 colorShadow;\n\nconst vec3 lightDir = vec3(1.0,1.0,.5);\nconst float r = 30.0;\n\n\nvec2 hash( vec2 p )\n{\n  p = vec2( dot(p,vec2(127.1,311.7)),\n    dot(p,vec2(269.5,183.3)) );\n\n  return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n  vec2 n_i = floor( p );\n  vec2 n_f = fract( p );\n\n  vec2 n_u = n_f*n_f*(3.0-2.0*n_f);\n\n  return 6.28 * mix( mix( dot( hash( n_i + vec2(0.0,0.0) ), n_f - vec2(0.0,0.0) ),\n    dot( hash( n_i + vec2(1.0,0.0) ), n_f - vec2(1.0,0.0) ), n_u.x),\n  mix( dot( hash( n_i + vec2(0.0,1.0) ), n_f - vec2(0.0,1.0) ),\n    dot( hash( n_i + vec2(1.0,1.0) ), n_f - vec2(1.0,1.0) ), n_u.x), n_u.y);\n}\n\nvec3 applyNoise(vec2 p, float coef) {\n  float n =\n    cos( noise(p.xy*.1)+time ) +\n    cos( noise(p.xy*.01)+time/5.0 )*4.0\n  ;\n  return vec3(p, n*coef);\n}\n\n\n\n\nvoid main() {\n\n  vUv = uv;\n\n\n  float dist = length(position.xy - mouseposition);\n\n  float coef = 1.5+ clamp(1.0-dist/20.0, 0.0, 1.0)*2.0;\n  vec3 pos = applyNoise(position.xy, coef);\n\n  // Wave\n  float posRadius = clamp(1.0 - abs((dist - waveR)/20.0), 0.0, 1.0);\n  pos.z += posRadius*10.0;\n\n\n  // Color\n  vec3 center = applyNoise(normal.xy, coef);\n  vec3 centerX = applyNoise(normal.xy+vec2(1.5,0.0), coef)-center;\n  vec3 centerY = applyNoise(normal.xy+vec2(0.0,1.5), coef)-center;\n\n  center = normalize(cross(centerX, centerY));\n\n  float i = dot(center, lightDir);\n\n  i = clamp(i, 0.0, 1.0);\n\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n\n  vColor = mix(colorLight,colorShadow,i) * (1.0-gl_Position.w/300.0 );\n}", a.planeFS = "varying vec2 vUv;\nvarying vec3 vColor;\nuniform float time;\n\nvoid main() {\n\n  // colour is RGBA: u, v, 0, 1\n  gl_FragColor = vec4	( vColor.xyz, 1. );\n\n\n\n}", a.wave_VS = "varying vec2 vPos;\n\n\n\nvoid main() {\n  vPos = vec2( 400.0, 200.0 ) * (uv-.5);\n  gl_Position = vec4( position, 1.0 );\n}", a.wave_FS = "varying vec2 vPos;\n\nuniform float radius;\nuniform float intensity;\nuniform vec2 center;\n\n\n\n\nvec4 pack_depth( const in float depth ) {\n\n  const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n  const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n  vec4 res = fract( depth * bit_shift );\n  res -= res.xxyz * bit_mask;\n  return res;\n\n}\n\n\nvoid main() {\n\n\n\n  float dist = length(vPos - center);\n\n\n  // Wave\n  float wave = intensity * clamp( 1.0 - abs((dist - radius)/20.0) , 0.0, 1.0);\n\n  gl_FragColor = vec4( wave, 0.0, 0.0, 1.0);\n  \n\n}", a.mbumpc_VS = "varying vec2 vUvs;\n\nvoid main() {\n  vUvs = uv;\n  gl_Position = vec4( position, 1.0 );\n}", a.mbumpc_FS = "varying vec2 vUvs;\n\nuniform float time;\nuniform float power;\nuniform vec2 mouse;\n\nuniform sampler2D cache;\n\nvec4 pack_depth( const in float depth ) {\n\n  const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n  const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n  vec4 res = fract( depth * bit_shift );\n  res -= res.xxyz * bit_mask;\n  return res;\n\n}\n\n\nfloat unpackDepth( const in vec4 rgba_depth ) {\n\n  const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n  float depth = dot( rgba_depth, bit_shift );\n  return depth;\n\n}\n\n\nvoid main(){\n\n  // Color\n  float last = unpackDepth( texture2D( cache, vUvs ) );\n  last *= .95;\n\n  vec2 xy = vec2( 400.0, 200.0 ) * (vUvs-.5); // TODO spe varying\n  float dist = length( xy - mouse );\n\n  float push = power*(0.1 - dist/150.0);\n\n  float height = clamp( max( last, push ), 0.0, 1.0);\n\n  gl_FragColor = pack_depth( height );\n\n}\n\n\n", a.caustics_VS = "varying vec2 vUvs;\n\nvoid main() {\n  vUvs = uv;\n  gl_Position = vec4( position, 1.0 );\n}", a.caustics_FS = "varying vec2 vUvs;\n\nuniform float opacity;\nuniform vec3 bgColor;\nuniform vec2 gcA;\nuniform vec2 gcB;\n\nuniform sampler2D caustics;\n\n\n\n\n\n\nvoid main() {\n\n	float g = (\n		clamp( 1.0 - (length( vUvs - gcA )*2.0), 0.0, 1.0) + \n		clamp( 1.0 - (length( vUvs - gcB )*2.0), 0.0, 1.0) \n		)*2.0 + 1.0;\n\n	vec3 cColor = texture2D( caustics, vUvs ).rgb * (opacity * g);\n\n	vec3 result = 1.0 - ((1.0 - cColor) * (1.0 - bgColor));\n\n 	gl_FragColor = vec4( result, 1.0 );\n  \n}", a
        }()
    }.call(this),
    function() {
        App.HeightBuffer = function() {
            var a, b;
            return a = function() {
                function a(a, c) {
                    var d;
                    this.offsetIndex = 0, this.time = 0, this.scene = new THREE.Scene, this.camera = new THREE.OrthographicCamera(-.5, .5, .5, -.5, -100, 100), this.camera.position.z = 0, this.scene.add(this.camera), this.uniforms = THREE.UniformsUtils.clone(b), this.material = new THREE.ShaderMaterial({
                        uniforms: this.uniforms,
                        vertexShader: App.Shaders.height_buff_VS,
                        fragmentShader: App.Shaders.height_buff_FS
                    }), this.quad = new THREE.Mesh(new THREE.PlaneGeometry(2, 2), this.material), this.quad.position.z = 0, this.scene.add(this.quad), d = {
                        minFilter: THREE.NearestFilter,
                        magFilter: THREE.NearestFilter,
                        wrapS: THREE.RepeatWrapping,
                        wrapT: THREE.RepeatWrapping,
                        format: THREE.RGBAFormat,
                        depthBuffer: !1,
                        stencilBuffer: !1
                    }, this.target = new THREE.WebGLRenderTarget(a, c, d)
                }
                return a.prototype.step = function(a) {
                    return this.time += a, this.uniforms.time.value = this.time
                }, a.prototype.setMouseBump = function(a) {
                    return this.uniforms.mbump.value = a
                }, a.prototype.setWaveBump = function(a) {
                    return this.uniforms.wbump.value = a
                }, a.prototype.render = function(a) {
                    return a.render(this.scene, this.camera, this.target)
                }, a
            }(), b = {
                time: {
                    type: "f",
                    value: 0
                },
                mbump: {
                    type: "t",
                    value: null
                },
                wbump: {
                    type: "t",
                    value: null
                }
            }, a
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.Caustics = function() {
            var b, c, d;
            return c = 2.5, b = function() {
                function b() {
                    this.textureLoaded = a(this.textureLoaded, this);
                    var b, e, f;
                    this.view = new THREE.Object3D, this.time = 0, this.gcA_angle = 0, this.gcB_angle = 1, this.gcA_rad = .3, this.gcB_rad = .2, this.scene = new THREE.Scene, this.camera = new THREE.OrthographicCamera(-.5, .5, .5, -.5, -100, 100), this.camera.position.z = 0, this.scene.add(this.camera), this.uniforms = THREE.UniformsUtils.clone(d), this.material = new THREE.ShaderMaterial({
                        uniforms: this.uniforms,
                        vertexShader: App.Shaders.caustics_VS,
                        fragmentShader: App.Shaders.caustics_FS
                    }), this.geom = new THREE.PlaneGeometry(2, 2), this.quad = new THREE.Mesh(this.geom, this.material), this.quad.position.z = 0, this.scene.add(this.quad), f = {
                        minFilter: THREE.LinearFilter,
                        magFilter: THREE.LinearFilter,
                        wrapS: THREE.ClampToEdgeWrapping,
                        wrapT: THREE.ClampToEdgeWrapping,
                        format: THREE.RGBFormat,
                        depthBuffer: !1,
                        stencilBuffer: !1
                    }, this.target = new THREE.WebGLRenderTarget(256, 128, f), this.vpMaterial = new THREE.MeshBasicMaterial({
                        map: this.target
                    }), this.viewPlane = new THREE.Mesh(new THREE.PlaneGeometry(50 * c, 25 * c), this.vpMaterial), this.viewPlane.rotation.x = Math.PI / 2, this.viewPlane.position.z = 12.5 * c, b = new THREE.Geometry, b.vertices = [new THREE.Vector3(-100, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(100, 0, 0)], b.colors = [new THREE.Color(0), new THREE.Color(16777215), new THREE.Color(0)], e = new THREE.LineBasicMaterial({
                        color: 16777215,
                        opacity: .4,
                        linewidth: 1,
                        vertexColors: THREE.VertexColors
                    }), e.transparent = !0, this.hline = new THREE.Line(b, e), this.hline.renderDepth = 0, this.hline.position.y = -.1, this.ready = !1, this.loadTexture(), this.view.add(this.viewPlane), this.view.add(this.hline)
                }
                return b.prototype.setBGColor = function(a) {
                    return this.uniforms.bgColor.value = new THREE.Color(a)
                }, b.prototype.loadTexture = function() {
                    var a;
                    return a = "" + App.IMAGES_DIR + "/home/caustic_moon.jpg", this.texture = THREE.ImageUtils.loadTexture(a, {}, this.textureLoaded), this.uniforms.caustics.value = this.texture
                }, b.prototype.step = function(a) {
                    return this.gcA_angle += a, this.gcB_angle -= a, this.uniforms.gcA.value.x = Math.cos(this.gcA_angle) * this.gcA_rad + .5, this.uniforms.gcA.value.y = Math.sin(this.gcA_angle) * this.gcA_rad * 2, this.uniforms.gcB.value.x = Math.cos(this.gcB_angle) * this.gcB_rad + .5, this.uniforms.gcB.value.y = Math.sin(this.gcB_angle) * this.gcB_rad * 2
                }, b.prototype.render = function(a) {
                    return a.render(this.scene, this.camera, this.target)
                }, b.prototype.textureLoaded = function() {
                    return this.ready = !0
                }, b
            }(), d = {
                caustics: {
                    type: "t",
                    value: null
                },
                opacity: {
                    type: "f",
                    value: .1
                },
                bgColor: {
                    type: "c",
                    value: null
                },
                gcA: {
                    type: "v2",
                    value: new THREE.Vector2
                },
                gcB: {
                    type: "v2",
                    value: new THREE.Vector2
                }
            }, b
        }()
    }.call(this),
    function() {
        App.WaveBuffer = function() {
            var a, b, c, d, e, f, g;
            return a = function() {
                function a() {
                    var a;
                    a = "" + App.UPLOADS_DIR + "/sounds/bass1.ogg", this.el = document.createElement("audio"), this.el.src = a, this.el.play()
                }
                return a
            }(), g = [], f = {
                grab: function() {
                    var a;
                    return a = 0 === g.length ? new b : g.pop(), a.init(), a
                },
                release: function(a) {
                    return g.push(a)
                }
            }, d = new THREE.PlaneGeometry(2, 2), c = function() {
                function b(a, b) {
                    var c;
                    this.scene = new THREE.Scene, this.camera = new THREE.OrthographicCamera(-.5, .5, .5, -.5, -100, 100), this.camera.position.z = 0, this.scene.add(this.camera), c = {
                        minFilter: THREE.NearestFilter,
                        magFilter: THREE.NearestFilter,
                        wrapS: THREE.RepeatWrapping,
                        wrapT: THREE.RepeatWrapping,
                        format: THREE.RGBFormat,
                        depthBuffer: !1,
                        stencilBuffer: !1
                    }, this.target = new THREE.WebGLRenderTarget(a, b, c), this.waves = []
                }
                return b.prototype.step = function(a) {
                    var b, c, d, e;
                    for (e = this.waves, b = d = e.length - 1; d >= 0; b = d += -1) c = e[b], c.step(a) || this.waves.splice(b, 1)
                }, b.prototype.getBuffer = function() {
                    return this.target
                }, b.prototype.render = function(a) {
                    return a.render(this.scene, this.camera, this.target)
                }, b.prototype.addWaveAt = function(b) {
                    var c;
                    c = f.grab(), c.uniforms.center.value = b, this.scene.add(c.mesh), this.waves.push(c), new a
                }, b
            }(), b = function() {
                function a() {
                    this.radius = 0, this.uniforms = THREE.UniformsUtils.clone(e), this.mat = new THREE.ShaderMaterial({
                        uniforms: this.uniforms,
                        vertexShader: App.Shaders.wave_VS,
                        fragmentShader: App.Shaders.wave_FS
                    }), this.mat.blending = THREE.AdditiveBlending, this.mat.transparent = !0, this.mat.depthTest = !1, this.mat.depthWrite = !1, this.mesh = new THREE.Mesh(d, this.mat)
                }
                return a.prototype.init = function() {
                    return this.radius = 0
                }, a.prototype.step = function(a) {
                    var b;
                    return this.radius += 70 * a, this.uniforms.radius.value = this.radius, b = this.radius < 20 ? this.radius / 20 : 1 - this.radius / 160, this.uniforms.intensity.value = b, this.radius > 160 ? (this.release(), !1) : !0
                }, a.prototype.release = function() {
                    var a;
                    return a = this.mesh.parent, null != a && a.remove(this.mesh), f.release(this)
                }, a
            }(), e = {
                radius: {
                    type: "f",
                    value: 0
                },
                center: {
                    type: "v2",
                    value: null
                },
                intensity: {
                    type: "f",
                    value: 0
                }
            }, c
        }()
    }.call(this),
    function() {
        App.MouseBump = function() {
            var a, b;
            return a = function() {
                function a(a, c) {
                    var d;
                    this._firstRender = !0, this.offsetIndex = 0, this.time = 0, this.scene = new THREE.Scene, this.camera = new THREE.OrthographicCamera(-.5, .5, .5, -.5, -100, 100), this.camera.position.z = 0, this.scene.add(this.camera), this.uniforms = THREE.UniformsUtils.clone(b), this.material = new THREE.ShaderMaterial({
                        uniforms: this.uniforms,
                        vertexShader: App.Shaders.mbumpc_VS,
                        fragmentShader: App.Shaders.mbumpc_FS
                    }), this.geom = new THREE.PlaneGeometry(2, 2), this.quad = new THREE.Mesh(this.geom, this.material), this.quad.position.z = 0, this.scene.add(this.quad), d = {
                        minFilter: THREE.NearestFilter,
                        magFilter: THREE.NearestFilter,
                        wrapS: THREE.RepeatWrapping,
                        wrapT: THREE.RepeatWrapping,
                        format: THREE.RGBAFormat,
                        depthBuffer: !1,
                        stencilBuffer: !1
                    }, this.targetA = new THREE.WebGLRenderTarget(a, c, d), this.targetB = new THREE.WebGLRenderTarget(a, c, d), this.isA = !0
                }
                return a.prototype.setMouse = function(a) {
                    return this.uniforms.mouse.value = a
                }, a.prototype.setVelocity = function(a) {
                    return a /= 2, a = Math.min(1, a), this.uniforms.power.value = a
                }, a.prototype.step = function(a) {
                    return this.time += a, this.uniforms.time.value = this.time, this.uniforms.time.value = this.time
                }, a.prototype.render = function(a) {
                    var b, c;
                    return c = this.getBuffer(), b = this.getCache(), this.uniforms.cache.value = b, this._firstRender && (this._firstRender = !1, a.setClearColorHex(0, 0), a.clearTarget(this.targetA, !0), a.clearTarget(this.targetB, !0), a.setClearColorHex(1184536, 1)), a.render(this.scene, this.camera, c), this.isA = !this.isA
                }, a.prototype.getBuffer = function() {
                    var a;
                    return a = this.isA ? this.targetA : this.targetB
                }, a.prototype.getCache = function() {
                    var a;
                    return a = this.isA ? this.targetB : this.targetA
                }, a
            }(), b = {
                time: {
                    type: "f",
                    value: 0
                },
                cache: {
                    type: "t",
                    value: null
                },
                mouse: {
                    type: "v2",
                    value: null
                },
                power: {
                    type: "f",
                    value: null
                }
            }, a
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.GLExpe = function() {
            var b, c, d, e, f, g, h, i, j, k;
            return h = 400, g = 200, j = 128, i = 64, d = 60, k = new THREE.Vector3, f = function() {
                function c(b) {
                    this.$canvas = b, this.mouseup = a(this.mouseup, this), this.mousedown = a(this.mousedown, this), this.mousemove = a(this.mousemove, this), this.updateSize = a(this.updateSize, this), this.render = a(this.render, this), this.show = a(this.show, this), this.canvas = b[0], this.time = 0, this.setupScene(), this.setupGeom(), this.setupEngine(), this.running = !1, this.velocity = 0, this.svelocity = 0
                }
                return c.prototype.show = function() {
                    return this.running ? void 0 : (this.running = !0, this.render(), this.setupInputs())
                }, c.prototype.hide = function() {
                    return this.running ? (this.running = !1, this.releaseInputs()) : void 0
                }, c.prototype.dispose = function() {
                    return this.hide(), this.engine.dispose()
                }, c.prototype.render = function() {
                    var a;
                    if (this.running) return a = .016, this.svelocity += .1 * (this.velocity - this.svelocity), this.engine.step(a), this.engine.prerender(a), this.renderer.render(this.scene, this.camera), requestAnimationFrame(this.render)
                }, c.prototype.updateSize = function(a) {
                    var b, c, e, f, h, i, j;
                    return b = $(window), j = b.width(), h = b.height(), this.renderer.setSize(j, h), this.camera.aspect = e = j / h, this.camera.updateProjectionMatrix(), i = THREE.Math.degToRad(d / 2), f = 2 * -(a / h) + 1, c = Math.atan(f * Math.tan(i)), this.camera.lookAt(new THREE.Vector3(0, g / 2 - 1, 10)), this.camera.rotation.x -= c
                }, c.prototype.setupScene = function() {
                    return this.scene = new THREE.Scene, this.camera = new THREE.PerspectiveCamera(d, window.innerWidth / window.innerHeight, .1, 2e3), this.planeWidth = 400, this.planeDepth = 200, this.camera.position.z = 35, this.camera.position.y = -g / 2, this.camera.position.x = 0, this.camera.lookAt(new THREE.Vector3(0, g / 2, 0)), this.scene.add(this.camera), this.projector = new THREE.Projector, this.renderer = new THREE.WebGLRenderer({
                        canvas: this.canvas
                    }), this.intersection = new THREE.Vector2(0, 0)
                }, c.prototype.setupGeom = function() {
                    return this.planeGeometry = new THREE.PlaneGeometry(h, g, j, i)
                }, c.prototype.setupInputs = function() {
                    return BrowserDetect.isTablet ? document.addEventListener("touchmove", this.mousemove) : document.addEventListener("mousemove", this.mousemove), BrowserDetect.isTablet ? document.addEventListener("touchend", this.mousedown) : document.addEventListener("mousedown", this.mousedown), document.addEventListener("mouseup", this.mouseup)
                }, c.prototype.releaseInputs = function() {
                    return BrowserDetect.isTablet ? document.removeEventListener("touchmove", this.mousemove) : document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mousedown", this.mousedown), document.removeEventListener("mouseup", this.mouseup)
                }, c.prototype.setupEngine = function() {
                    return this.engine = new b(this), this.engine.setup()
                }, c.prototype.mousemove = function(a) {
                    var b, c, d, e, f, g, h, i;
                    return BrowserDetect.isTablet ? (h = a.touches[0].clientX, i = a.touches[0].clientY) : (a.preventDefault(), h = a.clientX, i = a.clientY), e = h / window.innerWidth * 2 - 1, f = 2 * -(i / window.innerHeight) + 1, g = new THREE.Vector3(e, f, .5), this.projector.unprojectVector(g, this.camera), g = g.sub(this.camera.position), g = g.normalize(), k.copy(this.intersection), this.intersection.copy(this.camera.position), d = this.camera.position.z / -g.z, isNaN(d) || (this.intersection.x = this.camera.position.x + d * g.x, this.intersection.y = this.camera.position.y + d * g.y), b = k.x - this.intersection.x, c = k.y - this.intersection.y, this.velocity = Math.sqrt(b * b + c * c), this.engine.mousemove(this.intersection)
                }, c.prototype.mousedown = function(a) {
                    return this.engine.mousedown(a)
                }, c.prototype.mouseup = function(a) {
                    return this.engine.mouseup(a)
                }, c
            }(), c = 1184536, b = function() {
                function b(b) {
                    this.expe = b, this.mouseup = a(this.mouseup, this), this.mousedown = a(this.mousedown, this), this.mousemove = a(this.mousemove, this), this.hbuffer = new App.HeightBuffer(j, i), this.mouseBump = new App.MouseBump(j, i), this.waveBuff = new App.WaveBuffer(j, i), this.caustics = new App.Caustics
                }
                return b.prototype.setup = function() {
                    var a, b, d, e, f, k, l, m, n, o, p, q;
                    for (l = new THREE.Color(1190461), m = new THREE.Color(1513250), BrowserDetect.isTablet && (l = new THREE.Color(2244953)), this.uniforms = {
                            heightTex: {
                                type: "t",
                                value: this.hbuffer.target
                            },
                            time: {
                                type: "f",
                                value: 0
                            },
                            noiseIntensity: {
                                type: "f",
                                value: 100
                            },
                            resolution: {
                                type: "v2",
                                value: new THREE.Vector2
                            },
                            colorLight: {
                                type: "c",
                                value: l
                            },
                            colorShadow: {
                                type: "c",
                                value: m
                            },
                            colorFog: {
                                type: "c",
                                value: new THREE.Color(c)
                            }
                        }, this.material = new THREE.ShaderMaterial({
                            uniforms: this.uniforms,
                            waveR: {
                                type: "f",
                                value: 0
                            },
                            vertexShader: App.Shaders.plane_vt_VS,
                            fragmentShader: App.Shaders.plane_vt_FS,
                            color: 12058368,
                            wireframe: !1
                        }), this.material.shading = THREE.FlatShading, this.material.defines.BUMP = 1, this.wuniforms = {
                            heightTex: {
                                type: "t",
                                value: this.hbuffer.target
                            },
                            lbumpTex: {
                                type: "t",
                                value: null
                            },
                            wbumpTex: {
                                type: "t",
                                value: null
                            },
                            noiseIntensity: {
                                type: "f",
                                value: 100
                            },
                            time: {
                                type: "f",
                                value: 0
                            },
                            resolution: {
                                type: "v2",
                                value: new THREE.Vector2
                            },
                            colorLight: {
                                type: "c",
                                value: new THREE.Color(2893379)
                            },
                            colorShadow: {
                                type: "c",
                                value: new THREE.Color(1052186)
                            },
                            colorFog: {
                                type: "c",
                                value: new THREE.Color(c)
                            }
                        }, this.wireframeMaterial = new THREE.ShaderMaterial({
                            uniforms: this.wuniforms,
                            vertexShader: App.Shaders.plane_vt_VS,
                            fragmentShader: App.Shaders.plane_vt_FS,
                            color: 12058368,
                            wireframe: !0
                        }), this.wireframeMaterial.defines.BUMP_LIGHT = 1, this.wireframeMaterial.defines.BUMP = 1, this.huniforms = {
                            heightTex: {
                                type: "t",
                                value: this.hbuffer.target
                            },
                            lbumpTex: {
                                type: "t",
                                value: null
                            },
                            wbumpTex: {
                                type: "t",
                                value: null
                            },
                            noiseIntensity: {
                                type: "f",
                                value: 50
                            },
                            time: {
                                type: "f",
                                value: 0
                            },
                            resolution: {
                                type: "v2",
                                value: new THREE.Vector2
                            },
                            colorLight: {
                                type: "c",
                                value: new THREE.Color(2893379)
                            },
                            colorShadow: {
                                type: "c",
                                value: new THREE.Color(1052186)
                            },
                            colorFog: {
                                type: "c",
                                value: new THREE.Color(1185311)
                            }
                        }, this.hMaterial = new THREE.ShaderMaterial({
                            uniforms: this.huniforms,
                            vertexShader: App.Shaders.plane_vt_VS,
                            fragmentShader: App.Shaders.plane_vt_FS,
                            color: 12058368,
                            wireframe: !0,
                            transparent: !0
                        }), this.hMaterial.defines.BUMP_LIGHT = 1, this.hMaterial.defines.HORIZON = 1, this.hMaterial.depthWrite = !1, n = this.expe.planeGeometry.faceVertexUvs[0], q = this.expe.planeGeometry.faces, k = o = 0, p = q.length; p > o; k = ++o) f = q[k], a = n[k][0], b = n[k][1], d = n[k][2], e = n[k][3], f.normal.set((a.x + b.x + d.x + e.x) / 4, (a.y + b.y + d.y + e.y) / 4, 0);
                    return this.mesh = new THREE.Mesh(this.expe.planeGeometry, this.material), this.meshWireframe = new THREE.Mesh(this.expe.planeGeometry, this.wireframeMaterial), this.meshHorizon = new THREE.Mesh(this.expe.planeGeometry, this.hMaterial), this.meshHorizon.position.x = h / j / 2, this.meshHorizon.position.y = g / i / 2, this.expe.scene.add(this.mesh), this.expe.scene.add(this.meshWireframe), this.expe.scene.add(this.meshHorizon), this.expe.scene.add(this.caustics.view), this.mouseBump.setMouse(this.expe.intersection), this.caustics.setBGColor(c), this.mesh.position.z = -1.3, this.meshWireframe.position.z = -1, this.meshHorizon.position.z = 10, this.caustics.view.position.y = g / 2, this.caustics.view.position.z = 10
                }, b.prototype.step = function(a) {
                    return this.waveBuff.step(a), this.hbuffer.step(a), this.caustics.step(a)
                }, b.prototype.prerender = function() {
                    return this.caustics.render(this.expe.renderer), this.waveBuff.render(this.expe.renderer), this.mouseBump.setVelocity(this.expe.svelocity), this.mouseBump.render(this.expe.renderer), this.hbuffer.setMouseBump(this.mouseBump.getBuffer()), this.hbuffer.setWaveBump(this.waveBuff.getBuffer()), this.hbuffer.render(this.expe.renderer), this.wuniforms.lbumpTex.value = this.mouseBump.getBuffer(), this.wuniforms.wbumpTex.value = this.waveBuff.getBuffer(), this.huniforms.lbumpTex.value = this.mouseBump.getBuffer(), this.huniforms.wbumpTex.value = this.waveBuff.getBuffer()
                }, b.prototype.dispose = function() {}, b.prototype.mousemove = function() {}, b.prototype.mousedown = function() {
                    return this.waveBuff.addWaveAt(this.expe.intersection.clone())
                }, b.prototype.mouseup = function() {}, b
            }(), e = function() {
                function b(b) {
                    this.expe = b, this.mouseup = a(this.mouseup, this), this.mousedown = a(this.mousedown, this), this.mousemove = a(this.mousemove, this), this.time = 0
                }
                return b.prototype.setup = function() {
                    var a, b, c, d;
                    for (this.uniforms = {
                            time: {
                                type: "f",
                                value: 0
                            },
                            waveR: {
                                type: "f",
                                value: 0
                            },
                            clicked: {
                                type: "f",
                                value: 0
                            },
                            mouseposition: {
                                type: "v3",
                                value: this.expe.intersection
                            },
                            resolution: {
                                type: "v2",
                                value: new THREE.Vector2
                            },
                            colorLight: {
                                type: "c",
                                value: new THREE.Color(991283)
                            },
                            colorShadow: {
                                type: "c",
                                value: new THREE.Color(1119777)
                            }
                        }, this.material = new THREE.ShaderMaterial({
                            uniforms: this.uniforms,
                            waveR: {
                                type: "f",
                                value: 0
                            },
                            vertexShader: App.Shaders.planeVS,
                            fragmentShader: App.Shaders.planeFS,
                            color: 12058368,
                            wireframe: !1
                        }), this.material.shading = THREE.FlatShading, this.wuniforms = {
                            time: {
                                type: "f",
                                value: 0
                            },
                            waveR: {
                                type: "f",
                                value: 0
                            },
                            clicked: {
                                type: "f",
                                value: 0
                            },
                            mouseposition: {
                                type: "v3",
                                value: this.expe.intersection
                            },
                            resolution: {
                                type: "v2",
                                value: new THREE.Vector2
                            },
                            colorLight: {
                                type: "c",
                                value: new THREE.Color(1775401)
                            },
                            colorShadow: {
                                type: "c",
                                value: new THREE.Color(986138)
                            }
                        }, this.wireframeMaterial = new THREE.ShaderMaterial({
                            uniforms: this.wuniforms,
                            vertexShader: App.Shaders.planeVS,
                            fragmentShader: App.Shaders.planeFS,
                            color: 12058368,
                            wireframe: !0
                        }), d = this.expe.planeGeometry.faces, b = 0, c = d.length; c > b; b++) a = d[b], a.normal.copy(a.centroid);
                    return this.expe.mesh.material = this.material, this.expe.meshWireframe.material = this.wireframeMaterial
                }, b.prototype.step = function(a) {
                    return this.time += a, this.uniforms.waveR.value += 1.5, this.wuniforms.waveR.value += 1.5, this.uniforms.time.value = this.time, this.wuniforms.time.value = this.time
                }, b.prototype.prerender = function() {}, b.prototype.mousemove = function() {}, b.prototype.mousedown = function() {
                    return this.uniforms.clicked.value = 1, this.wuniforms.clicked.value = 1, this.uniforms.waveR.value = 0, this.wuniforms.waveR.value = 0
                }, b.prototype.mouseup = function() {
                    return this.uniforms.clicked.value = 0, this.wuniforms.clicked.value = 0
                }, b
            }(), f
        }()
    }.call(this),
    function() {
        var a, b = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        a = function() {
            var a, b;
            try {
                return a = document.createElement("canvas"), !!window.WebGLRenderingContext && (a.getContext("webgl") || a.getContext("experimental-webgl"))
            } catch (c) {
                return b = c, !1
            }
        }, App.ProtectedMasterHead = function() {
            function c() {
                this.show = b(this.show, this);
                var a, c;
                this.$el = $("#webgl"), this.fallback = this.$el.find(".webgl-fallback"), this.canvas = this.$el.find(".webgl-canvas"), a = d ? this.fallback : this.canvas, c = d ? this.canvas : this.fallback, a.hide(), c.show(), d && (this.glExpe = new App.GLExpe(this.canvas))
            }
            var d;
            return d = Modernizr.webgl && a() ? !0 : !1, c.prototype.resize = function(a) {
                return d && void 0 !== a ? this.glExpe.updateSize(a) : void 0
            }, c.prototype.show = function() {
                return d ? (this.$el.removeClass("hide"), this.glExpe.show()) : void 0
            }, c.prototype.hide = function() {
                return d ? (this.$el.addClass("hide"), this.glExpe.hide()) : void 0
            }, c.prototype.dispose = function() {
                return d ? this.glExpe.dispose() : void 0
            }, c
        }(), App.MasterHead = function() {
            function a() {}
            var b;
            return b = null, a.prototype.get = function() {
                return null != b ? b : b = new App.ProtectedMasterHead
            }, a
        }(), this.App.MasterHead = new App.MasterHead
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.AboutSlides = function() {
            function b() {
                this.stopInterval = a(this.stopInterval, this), this.restartInterval = a(this.restartInterval, this), this.navigateProject = a(this.navigateProject, this), this.animateView = a(this.animateView, this), this.completeSlideAnimation = a(this.completeSlideAnimation, this), this.startSlide = a(this.startSlide, this), this._bindEvents = a(this._bindEvents, this), this.currentIndex = 0, this.tm = null, this.countSlides = 0, this.offset = 20, this.interval = null, this.rotate = 0, this.container = "#about-slider", this.slider = "" + this.container + " ul.about__slider--slides", this.buttonRefresh = "" + this.container + " .awards-refresh--button", this.navItems = "" + this.container + " ul.about__navigation li", this.duration = .5, this.preventAnimation = !1, this.load(), this.startSlide(0), this._bindEvents()
            }
            return b.prototype._bindEvents = function() {
                var a = this;
                return $(this.navItems).on("click", function(b) {
                    return a.currentIndex = $(b.currentTarget).index(), a.startSlide(), a.restartInterval()
                })
            }, b.prototype.load = function() {
                var a, b, c, d, e, f;
                for (this.items = MMPDatas.about_slides, this.tmpl = $(this.slider).find("li:first").clone(), $(this.slider).empty(), f = this.items, d = 0, e = f.length; e > d; d++) a = f[d], c = this.tmpl.find("*[when='" + a.type + "']").clone(), "text" === a.type ? c.html(a.text) : (c.addClass("slide"), c.find("h4").html(a.title), c.find("h3").html(a.text), c.find("img").attr("src", "" + App.IMAGES_DIR + "/about/" + a.img)), b = $("<li/>").append(c[0]), b.appendTo($(this.slider));
                return this.countSlides = $(this.slider).find("li").length, this.restartInterval()
            }, b.prototype.startSlide = function() {
                return this.preventAnimation ? void 0 : (this.preventAnimation = !0, null != this.tm && this.tm.kill(), $(this.navItems).removeClass("active"), $(this.navItems).eq(this.currentIndex).addClass("active"), this.updateSlidesStyle(), this.tm = new TimelineMax({
                    paused: !0,
                    onComplete: this.completeSlideAnimation
                }), $(this.slider).find(".slide-out").length > 0 && this.tm.add(TweenMax.fromTo("" + this.slider + " .slide-out", this.duration, {
                    y: 0,
                    autoAlpha: 1
                }, {
                    y: -this.offset,
                    autoAlpha: 0
                }), 0), this.tm.add(TweenMax.fromTo("" + this.slider + " .slide-in", this.duration, {
                    y: this.offset,
                    autoAlpha: 0
                }, {
                    y: 0,
                    autoAlpha: 1
                }), .2), this.tm.play())
            }, b.prototype.updateSlidesStyle = function() {
                return $(this.slider).find(".slide-out").length > 0 && $(this.slider).find(".slide-out").css({
                    zIndex: 2
                }), $(this.slider).find("li").eq(this.currentIndex).addClass("slide-in").css({
                    zIndex: 3
                }), this.currentIndex >= this.countSlides - 1 ? this.currentIndex = 0 : this.currentIndex++
            }, b.prototype.completeSlideAnimation = function() {
                return $(this.slider).find(".slide-out").removeClass("slide-out"), $(this.slider).find(".slide-in").removeClass("slide-in").addClass("slide-out"), this.preventAnimation = !1
            }, b.prototype.animateView = function() {
                return $(this.slider).addClass("animate")
            }, b.prototype.navigateProject = function(a) {
                return null != a && a.preventDefault(), App.Router.navigate($(a.currentTarget).attr("href"))
            }, b.prototype.restartInterval = function() {
                return this.stopInterval(), this.interval = window.setInterval(this.startSlide, 5e3)
            }, b.prototype.stopInterval = function() {
                return null != this.interval ? (window.clearInterval(this.interval), this.interval = null) : void 0
            }, b.prototype.dispose = function() {
                return this.stopInterval(), delete this
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.ContactPanel = function() {
            function b() {
                this.handleClickPanel = a(this.handleClickPanel, this), this.top = a(this.top, this), this.container = ".contact__container--hidden", this.mapContainer = ".contact__container--maps", this.frontPanel = ".contact__container--front-panel", this.sections = "" + this.container + " .contact__container--section", this.map = new App.ColoredMap(this.container, this.mapContainer), this.panelOpened = null, this.buttonMap = "" + this.frontPanel + " .button--contact-maps", this.buttonJobs = "" + this.frontPanel + " .button--contact-jobs", this.buttonTop = "" + this.container + " .button--get-in-touch", $(this.buttonJobs).unbind().bind("click", this.handleClickPanel), $(this.buttonMap).unbind().bind("click", this.handleClickPanel), $(this.buttonTop).unbind().bind("click", this.top)
            }
            return b.prototype.top = function(a) {
                return null != a && a.preventDefault(), TweenLite.to(window, 1, {
                    scrollTo: {
                        y: 0
                    },
                    ease: Power4.easeOut
                })
            }, b.prototype.handleClickPanel = function(a) {
                var b;
                return null != a && a.preventDefault(), b = $(a.currentTarget).attr("data-panel"), this.panelOpened ? this.changePanel(b) : this.openPanel(b)
            }, b.prototype.closePanel = function(a) {
                var b = this;
                return $(this.frontPanel).removeClass("open"), window.setTimeout(function() {
                    return $(b.container).find(".contact__container--" + a).removeClass("selected")
                }, 500), this.panelOpened = null
            }, b.prototype.openPanel = function(a) {
                return this.panelOpened !== a ? (this.panelOpened = a, $(this.frontPanel).addClass("open"), $(this.container).find(".contact__container--" + this.panelOpened).addClass("selected")) : void 0
            }, b.prototype.changePanel = function(a) {
                return this.panelOpened === a ? this.closePanel(a) : (this.panelOpened = a, "maps" === this.panelOpened && this.map.reset(), $(this.sections).removeClass("selected"), $(this.container).find(".contact__container--" + this.panelOpened).css("top", "-235px").addClass("selected"), TweenMax.to(".contact__container--" + this.panelOpened, .3, {
                    css: {
                        top: 0
                    },
                    delay: .2
                }))
            }, b.prototype.reset = function() {
                return this.closePanel("maps"), this.closePanel("jobs")
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.WheelDots = function() {
            function b(b, c) {
                var d, e, f, g, h, i, j, k, l, m, n, o, p;
                for (this.options = b, this.projects = c, this._navigate = a(this._navigate, this), this._mouseenterEvent = a(this._mouseenterEvent, this), this.clearTimerCloseProject = a(this.clearTimerCloseProject, this), this.timerCloseProject = a(this.timerCloseProject, this), this.container = "ul.awards__dots", this.preventCloseProject = !1, this.currentProjectID = 0, this.onEnterSVG = !1, f = 265, d = 645, this.timeoutCloseProject = null, h = 1, n = -1.5707963267949, j = ""; h <= this.options.dots;) k = this.projects[h - 1], l = 2 * Math.PI * ((h - 1) / this.options.dots), o = parseInt(f - this.options.radiusDot / 2 + Math.cos(n + l) * f), p = parseInt(f - this.options.radiusDot / 2 + Math.sin(n + l) * f), m = n + 2 * Math.PI * ((h - 1 - .5) / this.options.dots), g = n + 2 * Math.PI * ((h - 1 + .5) / this.options.dots), $(this.container).append("<li class='awards__dot awards__dot-" + k.id + "'  data-project-id='" + k.id + "' data-rad='" + .5 * (g - m) + "'> <span class='in'></span> </li>"), $(".awards__dot-" + k.id).css({
                    top: p,
                    left: o,
                    opacity: 0,
                    visibility: "hidden"
                }), BrowserDetect.isChrome || $(".awards__dot-" + k.id + " .in").css("overflow", "hidden"), i = this.projects[h - 1].studycase ? "/work/" + this.projects[h - 1].slug : "", j += App.SVGCircle.drawSector(this.options.radiusWheel, this.options.radiusWheel, this.options.radiusWheel - 15, m, g, null, "radian", k.id, .5 * (n + l), i), h++;
                e = App.SVGCircle.drawDonut(this.options.radiusWheel, this.options.radiusWheel, 306, 323), $(".awards__svg-sectors").append("<svg x='0' y='0' class='awards__svg' y='0' width='" + d + "' height='" + d + "'>" + j + " " + e + "</svg>")
            }
            return b.prototype.timerCloseProject = function(a) {
                var b = this;
                if (!this.preventCloseProject) return this.preventCloseProject = !0, this.timeoutCloseProject = window.setTimeout(function() {
                    return $(".awards__svg-sectors").hasClass("hover") && b.onEnterSVG ? void 0 : ($(".awards__svg-sectors").removeClass("hover"), $(".awards__dots li").removeClass("hover"), b.onEnterSVG = !1, b.currentProjectID = 0, b.options.closeProject(a))
                }, 300)
            }, b.prototype.clearTimerCloseProject = function() {
                return null != this.timeoutCloseProject && window.clearTimeout(this.timeoutCloseProject), this.timeoutCloseProject = null, this.preventCloseProject = !1
            }, b.prototype.bindEvents = function() {
                var a = this;
                return $(".awards__svg path.donut, .awards__container--inner").on({
                    mouseleave: function() {
                        return a.timerCloseProject(a.currentProjectID)
                    }
                }), $(".awards__svg-sectors").on({
                    mouseleave: function(b) {
                        return a._checkForMousePosition(b)
                    }
                }), $(".awards__svg path.sector").on({
                    mouseenter: this._mouseenterEvent,
                    tap: this._mouseenterEvent
                }), BrowserDetect.isTablet ? void 0 : $(".awards__svg path.sector").on("click", this._navigate)
            }, b.prototype._mouseenterEvent = function(a) {
                var b, c;
                return this.clearTimerCloseProject(), c = $(a.currentTarget).attr("data-project-id"), b = $(a.currentTarget).attr("data-rad"), this.currentProjectID !== c ? (this.currentProjectID = c, this.currentAnglerRad = b, $(".awards__dots li").removeClass("hover"), $(".awards__dot-" + this.currentProjectID).addClass("hover"), this.onEnterSVG ? this.options.swapProject(this.currentProjectID, this.currentAnglerRad) : (this.onEnterSVG = !0, $(".awards__svg-sectors").addClass("hover"), this.options.openProject(this.currentProjectID, this.currentAnglerRad))) : void 0
            }, b.prototype._navigate = function(a) {
                return null != a && a.preventDefault(), $(a.currentTarget).off("click", this._navigate), "" !== $(a.currentTarget).attr("href") ? App.Router.navigate($(a.currentTarget).attr("href")) : void 0
            }, b.prototype._checkForMousePosition = function(a) {
                return a.toElement.className && "DIV" === a.toElement.nodeName && "awards__project-details--titles" !== a.toElement.className ? ($(".awards__svg-sectors").removeClass("hover"), this.timerCloseProject(this.currentProjectID)) : void 0
            }, b.prototype.displayDots = function() {
                return TweenMax.staggerTo(".awards__dots li", .2, {
                    autoAlpha: 1
                }, .1)
            }, b.prototype.dispose = function() {
                return $(".awards__svg path.sector, .awards__svg-sectors").unbind(), $(".awards__svg path.donut, .awards__container--inner").unbind(), this.clearTimerCloseProject(), delete this
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.WheelAnimationIntro = function() {
            function b(b, c) {
                this.container = b, this.callback = c, this.completedAnimation = a(this.completedAnimation, this), this.slideIntro = "" + this.container + " li.awards__infos--intro", this.tm = null
            }
            return b.prototype.start = function() {
                var a;
                return this.tm = new TimelineMax({
                    paused: !0,
                    onComplete: this.completedAnimation
                }), a = 0, this.tm.add(TweenMax.to("" + this.slideIntro + " h5", .5, {
                    css: {
                        autoAlpha: 1
                    }
                }), a), this.tm.add(TweenMax.to("" + this.slideIntro + " h3", .5, {
                    css: {
                        autoAlpha: 1
                    }
                }), a), this.tm.add(TweenMax.to("" + this.slideIntro + " .container--border", .5, {
                    css: {
                        autoAlpha: 1
                    }
                }), a), this.tm.add(TweenMax.to("" + this.slideIntro + " .container--border", .5, {
                    css: {
                        autoAlpha: 0
                    }
                }), a += 1), this.tm.add(TweenMax.to("" + this.slideIntro + " h5", .5, {
                    css: {
                        autoAlpha: 0,
                        top: "-=20"
                    }
                }), a), this.tm.add(TweenMax.to("" + this.slideIntro + " h3", .5, {
                    css: {
                        autoAlpha: 0,
                        top: "+=20"
                    }
                }), a), this.tm.play()
            }, b.prototype.completedAnimation = function() {
                return $("" + this.container + " .awards__infos--price").css({
                    display: "block"
                }), this.callback()
            }, b.prototype.dispose = function() {
                var a, b;
                return null != (a = this.tm) && a.kill(), null != (b = this.tm) && b.clear(), delete this
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.WheelInformations = function() {
            function b() {
                this.completeCall = a(this.completeCall, this), this.startSlide = a(this.startSlide, this), this.offset = 20, this.duration = .5, this.preventStartIntro = !0, this.currentIndex = 0, this.slider = ".awards__infos", this.slidesCount = 0, this.slides = null, this.tm = null, this.interval = null, this.leavePrice = "" + this.slider + " .slide-out .awards__infos--price-number", this.leaveImage = "" + this.slider + " .slide-out .awards__infos--image", this.enterPrice = "" + this.slider + " .slide-in .awards__infos--price-number", this.enterImage = "" + this.slider + " .slide-in .awards__infos--image"
            }
            return b.prototype.start = function(a) {
                return null == a && (a = !1), this.slides = $("" + this.slider + " li.awards__infos--price"), this.slidesCount = this.slides.length, a && (this.reset(), this.currentIndex = this.currentIndex >= this.slidesCount - 1 ? 0 : this.currentIndex + 1), this.restartInterval(), this.startSlide(this.currentIndex)
            }, b.prototype.reset = function() {
                return $("" + this.slider + " .awards__infos--price").removeClass("slide-in slide-out"), TweenMax.set("" + this.slider + " .awards__infos--price-number", {
                    autoAlpha: 0,
                    x: 0
                }), TweenMax.set("" + this.slider + " .awards__infos--image", {
                    autoAlpha: 0,
                    x: 0
                })
            }, b.prototype.startSlide = function(a) {
                var b;
                return null != this.tm && this.tm.kill(), this.updateSlidesStyle(a), this.tm = new TimelineMax({
                    paused: !0,
                    onComplete: this.completeCall
                }), b = 0, $("" + this.slider + " .slide-out").length > 0 && (this.tm.add(TweenMax.fromTo(this.leavePrice, .5, {
                    x: 0,
                    autoAlpha: 1
                }, {
                    x: -this.offset,
                    autoAlpha: 0
                }), b), this.tm.add(TweenMax.fromTo(this.leaveImage, .5, {
                    x: 0,
                    autoAlpha: 1
                }, {
                    x: this.offset,
                    autoAlpha: 0
                }), b)), this.tm.add(TweenMax.fromTo(this.enterPrice, .5, {
                    x: this.offset,
                    autoAlpha: 0
                }, {
                    x: 0,
                    autoAlpha: 1
                }), b += .6), this.tm.add(TweenMax.fromTo(this.enterImage, .5, {
                    x: -this.offset,
                    autoAlpha: 0
                }, {
                    x: 0,
                    autoAlpha: 1
                }), b), this.tm.play()
            }, b.prototype.updateSlidesStyle = function(a) {
                return null != a ? this.currentIndex = a : this.currentIndex >= this.slidesCount - 1 ? this.currentIndex = 0 : this.currentIndex++, $("" + this.slider + " .slide-out").length > 0 && $("" + this.slider + " .slide-out").css({
                    zIndex: 2
                }), this.slides.eq(this.currentIndex).addClass("slide-in").css({
                    zIndex: 3
                })
            }, b.prototype.completeCall = function() {
                return $("" + this.slider + " .slide-out").removeClass("slide-out"), $("" + this.slider + " .slide-in").removeClass("slide-in").addClass("slide-out")
            }, b.prototype.hide = function() {
                return this.stopInterval(), TweenMax.to(this.slider, .1, {
                    autoAlpha: 0
                })
            }, b.prototype.show = function() {
                return this.start(!0), TweenMax.to(this.slider, .5, {
                    autoAlpha: 1
                })
            }, b.prototype.restartInterval = function(a) {
                var b;
                return null == a && (a = 0), this.stopInterval(), b = a > 0 ? a : App.Constants.awards.infosDuration, this.interval = window.setInterval(this.startSlide, b)
            }, b.prototype.stopInterval = function() {
                return null != this.interval ? (window.clearInterval(this.interval), this.interval = null) : void 0
            }, b.prototype.dispose = function() {
                return this.stopInterval(), delete this
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.WheelProjects = function() {
            function b() {
                this.completeCall = a(this.completeCall, this), this.startSlide = a(this.startSlide, this), this.hidden = a(this.hidden, this), this.slider = null, this.slides = [], this.preventAnimation = !1, this.selected = null, this.interval = null, this.currentProject = 0, this.currentSlide = 0, this.offset = 20, this.d1 = .2, this.d2 = .3, this.leaveImage = ".slide-out img", this.leaveTitles = ".slide-out .awards__project-details--titles", this.enterImage = ".slide-in img", this.enterTitles = ".slide-in .awards__project-details--titles"
            }
            return b.prototype.start = function(a) {
                var b;
                return this.currentProject = a, this.currentSlide = 0, this.selected = $("#awards-details-project-" + this.currentProject), this.selected.addClass("selected"), this.slides = this.selected.find("ul"), this.slides.children().length ? (b = $(".awards--project--item-" + this.currentProject), b.css({
                    zIndex: 2
                }), TweenMax.to(b, .4, {
                    autoAlpha: 1,
                    scale: 1,
                    ease: Back.easeOut,
                    overwrite: !0
                }), this.slides.children().length <= 1 ? this.startSlide(this.currentSlide, "once") : (this.startSlide(this.currentSlide, "multiple"), this.restartInterval())) : void 0
            }, b.prototype.stop = function(a) {
                var b, c;
                return null == a && (a = !1), this.selected ? (a || ($(".awards__projects li").css({
                    zIndex: 1
                }), TweenMax.to(".awards--project--item-" + this.currentProject, .4, {
                    autoAlpha: 0,
                    scale: .98
                })), null != this.tm && (this.tm.clear(), this.tm.kill()), this.stopInterval(), this.selected.removeClass("selected"), b = this.slides.children().length > 1 ? this.slides.find(".slide-in, .slide-out") : this.slides.children(), c = 0, b.css("zIndex", 2).removeClass("slide-in slide-out"), this.hidden()) : void 0
            }, b.prototype.hidden = function() {
                var a;
                return a = this.slides.children(), TweenMax.set([a.find("img"), a.find(".awards__project-details--titles"), a.find(".container--border, a")], {
                    autoAlpha: 0
                })
            }, b.prototype.swap = function(a) {
                var b = this;
                if (!this.preventAnimation) return this.preventAnimation = !0, this.stop(!0), $(".awards__projects li").css({
                    zIndex: 1
                }), TweenMax.to(".awards--project--item-" + this.currentProject, .3, {
                    autoAlpha: 0,
                    scale: .98,
                    ease: Sine.easeOut
                }), TweenMax.to(".awards--project--item-" + a, .4, {
                    autoAlpha: 1,
                    ease: Sine.easeOut
                }), window.setTimeout(function() {
                    return b.start(a), b.preventAnimation = !1
                }, 100)
            }, b.prototype.startSlide = function(a, b) {
                var c, d;
                return null == a && (a = null), this.updateSlidesStyle(a, b), null != this.tm && this.tm.kill(), this.tm = new TimelineMax({
                    paused: !0,
                    onComplete: this.completeCall
                }), d = 0, null != b ? (c = this.slides.find("li:first"), this.tm.add(TweenMax.fromTo(c.find("img"), this.d1, {
                    x: 0,
                    autoAlpha: 0,
                    y: -this.offset
                }, {
                    autoAlpha: 1,
                    y: 0
                }), 0), this.tm.add(TweenMax.fromTo(c.find(".awards__project-details--titles"), this.d1, {
                    x: 0,
                    autoAlpha: 0
                }, {
                    autoAlpha: 1
                }), 0), this.tm.add(TweenMax.fromTo(c.find(".container--border, a"), this.d1, {
                    x: 0,
                    autoAlpha: 0,
                    y: this.offset
                }, {
                    autoAlpha: 1,
                    y: 0
                }), 0)) : (this.slides.find(".slide-out").length > 0 && (this.tm.add(TweenMax.fromTo(this.leaveImage, this.d2, {
                    x: 0,
                    autoAlpha: 1
                }, {
                    x: -this.offset,
                    autoAlpha: 0
                }), d), this.tm.add(TweenMax.fromTo(this.leaveTitles, this.d2, {
                    x: 0,
                    autoAlpha: 1
                }, {
                    x: this.offset,
                    autoAlpha: 0
                }), d)), this.tm.add(TweenMax.fromTo(this.enterImage, this.d2, {
                    x: this.offset,
                    autoAlpha: 0
                }, {
                    x: 0,
                    autoAlpha: 1
                }), d += .6), this.tm.add(TweenMax.fromTo(this.enterTitles, this.d2, {
                    x: -this.offset,
                    autoAlpha: 0
                }, {
                    x: 0,
                    autoAlpha: 1
                }), d)), this.tm.play()
            }, b.prototype.updateSlidesStyle = function(a, b) {
                return null == b && (b = null), 1 !== this.slides.children().length ? (null != a ? this.currentSlide = a : this.currentSlide >= this.slides.children().length - 1 ? this.currentSlide = 0 : this.currentSlide++, this.slides.find(".slide-out").length && this.slides.find(".slide-out").css("zIndex", 2), this.slides.children().eq(this.currentSlide).addClass("slide-in").css("zIndex", 3)) : void 0
            }, b.prototype.completeCall = function() {
                return this.slides.find(".slide-out").removeClass("slide-out"), this.slides.find(".slide-in").removeClass("slide-in").addClass("slide-out")
            }, b.prototype.restartInterval = function() {
                return this.stopInterval(), this.interval = window.setInterval(this.startSlide, App.Constants.awards.projectDuration)
            }, b.prototype.stopInterval = function() {
                return null != this.interval && window.clearInterval(this.interval), this.interval = null
            }, b.prototype.dispose = function() {
                return this.stopInterval(), delete this
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.WheelArc = function() {
            function b(b, c) {
                var d, e, f, g;
                this.options = b, this.projects = c, this.fadeOut = a(this.fadeOut, this), this.fadeIn = a(this.fadeIn, this), this.close1 = a(this.close1, this), this.open = a(this.open, this), this.rotateTo = a(this.rotateTo, this), this.container = ".awards__wheel--arc-container", d = 700, g = -1.5707963267949 + 2 * Math.PI * (-0.5 / this.options.dots), e = -1.5707963267949 + 2 * Math.PI * (.5 / this.options.dots), f = App.SVGCircle.drawArc(d / 2, d / 2, d / 2 - 10, g, e, "radian"), $(this.container).append("<svg x='0' y='0' class='awards__arc' y='0' width='" + d + "' height='" + d + "'>" + f + "</svg>"), TweenMax.set(".awards__arc", {
                    autoAlpha: 0
                }), this.deg = 0
            }
            return b.prototype.rotateTo = function(a, b, c) {
                var d;
                return null == b && (b = !1), null == c && (c = !1), d = App.SVGCircle.degrees(Number(a) + .78539816339745), c ? TweenMax.to(".awards__arc", .5, {
                    transformOrigin: "50% 50%",
                    rotation: "" + (this.deg + 20) + "_cw",
                    ease: Quad.easeOut
                }) : (b && TweenMax.set(".awards__arc", {
                    rotation: "" + (d - 20) + "_short"
                }), TweenMax.to(".awards__arc", .5, {
                    transformOrigin: "50% 50%",
                    rotation: "" + d + "_short",
                    ease: Quad.easeOut
                }), this.deg = d)
            }, b.prototype.open = function(a, b) {
                return null == b && (b = !1), this.fadeIn(), this.rotateTo(a, b, !1)
            }, b.prototype.close = function() {
                return this.fadeOut(), this.rotateTo(-.78539816339745, !1, !0)
            }, b.prototype.fadeIn = function() {
                return TweenMax.to(".awards__arc", .5, {
                    autoAlpha: 1
                })
            }, b.prototype.fadeOut = function() {
                return TweenMax.to(".awards__arc", .5, {
                    autoAlpha: 0
                })
            }, b
        }()
    }.call(this),
    function() {
        var a, b = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        a = function(a, b, c, d) {
            return d = d ? 1 : -1, b[a] > c[a] ? -1 * d : b[a] < c[a] ? 1 * d : 0
        }, App.ui.AwardsWheel = function() {
            function c() {
                this.gracefull = b(this.gracefull, this), this.swap = b(this.swap, this), this.close1 = b(this.close1, this), this.open = b(this.open, this), this.navigateProject = b(this.navigateProject, this), this.animationIntroCompleted = b(this.animationIntroCompleted, this);
                var a = this;
                this.infos = [], this.projects = [], this.dotRadius = 32, this.activeWheel = !1, this.now = 0, this.sInfos = ".awards__infos", this.sDetails = ".awards__projects-details", this.sBackgrounds = ".awards__projects", this.buttonProject = ".awards__see-project", this.load(), this.loadTemplates(), this.dotsOpts = {
                    radiusDot: 32,
                    radiusWheel: 322.5,
                    dots: this.projects.length,
                    openProject: this.open,
                    swapProject: this.swap,
                    closeProject: this.close1
                }, this.wheelDots = new App.ui.WheelDots(this.dotsOpts, this.projects), this.wheelAnimIntro = new App.ui.WheelAnimationIntro(this.sInfos, this.animationIntroCompleted), this.wheelsInfos = new App.ui.WheelInformations, this.wheelsProjects = new App.ui.WheelProjects, this.wheelsArc = new App.ui.WheelArc(this.dotsOpts, this.projects), this.preventGap = !1, this.timeoutGap = null, window.setTimeout(function() {
                    var b, c;
                    return null != (b = a.wheelAnimIntro) && b.start(), null != (c = a.wheelDots) ? c.displayDots() : void 0
                }, 6e3)
            }
            return c.prototype.load = function() {
                var b, c, d;
                this.infos = MMPDatas.awards_infos, d = MMPDatas.mmp_projects;
                for (b in d) c = d[b], c.wheel === !0 && this.projects.push(c);
                return this.projects.sort(function(b, c) {
                    return a("wheelOrder", b, c, !1)
                })
            }, c.prototype.loadTemplates = function() {
                return this.loadTemplateInfos(), this.loadTemplateProjects()
            }, c.prototype.loadTemplateInfos = function() {
                var a, b, c, d, e, f, g, h;
                for (d = $(this.sInfos).find("li:first").clone(), $(this.sInfos).empty(), g = this.infos, h = [], e = 0, f = g.length; f > e; e++) a = g[e], c = d.find("*[when='" + a.type + "']").clone(), "intro" === a.type ? (c.find("h5").html(a.title), c.find("h3").html(a.subtitle)) : (c.find("span").html(a.price), c.find("img").attr({
                    src: "" + App.IMAGES_DIR + "/awards/" + a.img
                })), b = $("<li/>", {
                    "class": "awards__infos--" + a.type
                }).append(c[0]), h.push(b.appendTo($(this.sInfos)));
                return h
            }, c.prototype.loadTemplateProjects = function() {
                var a, b, c, d, e, f, g, h, i, j, k, l, m, n;
                for (f = $("" + this.sDetails + " > li:first").clone(), g = f.find("li").clone(), f.find("li").remove(), $(this.sDetails).empty(), $(this.sBackgrounds).empty(), l = this.projects, n = [], h = 0, j = l.length; j > h; h++) {
                    for (c = l[h], a = $("<li/>", {
                            "class": "awards--project--item-" + c.id
                        }), a.append($("<img/>", {
                            src: "" + App.UPLOADS_DIR + "/awards-svg/" + c.img
                        })), a.appendTo($(this.sBackgrounds)), e = f.clone(), m = c.prices, i = 0, k = m.length; k > i; i++) d = m[i], b = g.clone(), c.prices.length > 1 && b.addClass("slides"), b.find("img").attr({
                        src: "" + App.IMAGES_DIR + "/awards/" + d.price + ".png"
                    }), b.find("h5").html(d.status), b.find("h4").html(c.title), c.studycase ? b.find(this.buttonProject).attr("href", App.CASES_PATH + c.slug) : (b.addClass("no-case-study"), b.find(this.buttonProject).remove()), e.find("ul").append(b[0]);
                    e.attr({
                        id: "awards-details-project-" + c.id
                    }), n.push(e.appendTo($(this.sDetails)))
                }
                return n
            }, c.prototype.animationIntroCompleted = function() {
                return this.wheelsInfos.start(), this.wheelDots.bindEvents(), $(this.buttonProject).on("click", this.navigateProject)
            }, c.prototype.navigateProject = function(a) {
                return null != a && a.preventDefault(), App.Router.navigate($(a.currentTarget).attr("href"))
            }, c.prototype.open = function(a, b) {
                return this.time() <= 300 || this.preventGap ? void this.resetGap() : (this.wheelsInfos.hide(), this.wheelsProjects.start(a), this.wheelsArc.open(b, !0))
            }, c.prototype.close = function() {
                return this.wheelsInfos.show(), this.wheelsProjects.stop(!1), this.wheelsArc.close1()
            }, c.prototype.swap = function(a, b) {
                return this.time() <= 100 || this.preventGap ? void this.resetGap() : (this.wheelsArc.rotateTo(b, !1), this.wheelsProjects.swap(a))
            }, c.prototype.time = function() {
                var a, b;
                return b = (new Date).getTime(), a = b - this.now, this.now = b, a
            }, c.prototype.dispose = function() {
                return this.wheelDots.dispose(), this.wheelsInfos.dispose(), this.wheelsProjects.dispose(), this.wheelAnimIntro.dispose(), this.wheelDots = null, this.wheelsInfos = null, this.wheelsProjects = null, this.wheelAnimIntro = null, this.resetTimeout(), delete this
            }, c.prototype.resetTimeout = function() {
                return window.clearTimeout(this.timeoutGap), this.timeoutGap = null
            }, c.prototype.resetGap = function() {
                return this.resetTimeout(), this.timeoutGap = window.setTimeout(this.gracefull, 2e3)
            }, c.prototype.gracefull = function() {
                return this.preventGap = !1
            }, c
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        $.fn.reverse = [].reverse, App.ui.WorksSlider = function() {
            function b() {
                this.complete = a(this.complete, this), this.resizeLayout = a(this.resizeLayout, this), this.switchInterval = a(this.switchInterval, this), this.stopInterval = a(this.stopInterval, this), this.addElementToItems = a(this.addElementToItems, this), this.leaveItem = a(this.leaveItem, this), this.enterItem = a(this.enterItem, this), this.nextNav = a(this.nextNav, this), this.previousNav = a(this.previousNav, this), this.set = a(this.set, this);
                var b, c, d, e, f, g;
                for (this.items = MMPDatas.works_slides_single, e = [], c = 0; e.length !== this.items.length;)
                    for (c++, g = this.items, d = 0, f = g.length; f > d; d++) b = g[d], b.position === c && e.push(b);
                this.items = e, BrowserDetect.isMobile ? this.setupMobile() : this.setup()
            }
            return b.prototype.setupMobile = function() {
                var a, b, c, d, e, f, g, h = this;
                if (this.container = ".mobile-work__container--inner", this.filter = this.items.filter(function(a) {
                        return a.mobile === !0
                    }), this.filter.length) {
                    for (g = [], b = f = 0; 2 >= f; b = ++f) d = Math.floor(Math.random() * this.filter.length), e = $("<figure />"), e.append($("<img />", {
                        src: "" + App.UPLOADS_DIR + "/mobile/slider/" + this.filter[d].thumb
                    })), a = $("<figcaption />").append(this.filter[d].title), c = MMPDatas.mmp_projects.filter(function(a) {
                        return a.id === h.filter[d].id
                    }), e.attr("href", App.CASES_PATH + c[0].slug), this.filter.splice(d, 1), e.on("click", this.set), e.append(a), g.push($("" + this.container + " ul li").eq(b).append(e[0]));
                    return g
                }
            }, b.prototype.setup = function() {
                var a = this;
                return this.pictures = null, this.slides = "#work-slider-items li:not(.slider--navigation)", this.preventNavigation = !1, this.countPictures = 0, this.loopIndex = 0, this.currentSlide = 0, this.direction = 1, this.scaleHover = .93, this.te = null, this.tm = null, this.slidesNumber = 3, this.sliderLeft = ".slider-item--left", this.sliderMiddle = ".slider-item--middle", this.sliderRight = ".slider-item--right", this.load(), window.setTimeout(function() {
                    return a.resizeLayout(), a.addElementToItems(!0)
                }, 1e3), $(".slider--navigation-left").on("click", this.previousNav), $(".slider--navigation-right").on("click", this.nextNav)
            }, b.prototype.load = function() {
                var a, b, c, d, e, f, g;
                if (this.tmpl = $(".work-project--single").clone(), $(".work-project--single").remove(), a = 0, this.items.length)
                    for (g = this.items, e = 0, f = g.length; f > e; e++) {
                        switch (b = g[e], d = this.tmpl.clone(), d.attr("id", "project-" + b.id), d.find(".out").attr("src", "" + App.UPLOADS_DIR + "/slider/" + b.thumb), d.find(".hover").attr("src", "" + App.UPLOADS_DIR + "/slider/" + b.thumb_hover), c = MMPDatas.mmp_projects.filter(function(a) {
                            return a.id === b.id
                        }), null != c && d.attr("href", App.CASES_PATH + c[0].slug), d.find("h3").html(b.title), d.find("h4").html(b.brand), a) {
                            case 0:
                                $(this.sliderLeft).append(d[0]);
                                break;
                            case 1:
                                $(this.sliderMiddle).append(d[0]);
                                break;
                            case 2:
                                $(this.sliderRight).append(d[0])
                        }
                        TweenMax.set(d, {
                            x: -3e3
                        }), a++, a > 2 && (a = 0)
                    }
                return this.countPictures = $("" + this.slides + " > div").length, this.pictures = $("" + this.slides + " > div"), $(".work-project--single").on("click", this.set)
            }, b.prototype.set = function(a) {
                return null != a && a.preventDefault(), $(".work-project--single").off("click", this.set), App.Router.navigate($(a.currentTarget).attr("href"))
            }, b.prototype.previousNav = function(a) {
                return null != a && a.preventDefault(), this.preventNavigation ? void 0 : this.navigate(-1)
            }, b.prototype.nextNav = function(a) {
                return null != a && a.preventDefault(), this.preventNavigation ? void 0 : this.navigate(1)
            }, b.prototype.enterItem = function(a) {
                return this.preventNavigation ? void 0 : (this.stopInterval(), this.animateProjectIn($(a.currentTarget)))
            }, b.prototype.leaveItem = function(a) {
                return this.preventNavigation ? void 0 : this.animateProjectOut($(a.currentTarget))
            }, b.prototype.animateProjectIn = function(a) {
                var b;
                return this.te = new TimelineMax({
                    paused: !0
                }), b = 0, this.te.add(TweenMax.to(a.find("img.out"), .2, {
                    scale: this.scaleHover
                }), b), this.te.add(TweenMax.to(a.find("img.hover"), .2, {
                    scale: this.scaleHover
                }), b), this.te.add(TweenMax.to(a.find(".work-project--titles"), 0, {
                    autoAlpha: 1
                }), b), this.te.add(TweenMax.to(a.find("img.hover"), .2, {
                    autoAlpha: 1
                }), b += .1), this.te.add(TweenMax.to(a.find("h3"), .1, {
                    autoAlpha: 1,
                    y: 0
                }), b), this.te.add(TweenMax.to(a.find("h4"), .1, {
                    autoAlpha: 1,
                    y: 0
                }), b), this.te.add(TweenMax.to(a.find(".container--border"), .1, {
                    autoAlpha: 1
                }), b), this.te.add(TweenMax.to(a.find("img.hover"), .4, {
                    scale: this.scaleHover + .03
                }), b += .1), a.addClass("active"), this.te.play()
            }, b.prototype.animateProjectOut = function(a) {
                var b, c;
                return null != this.te && this.te.kill(), c = new TimelineMax({
                    paused: !0
                }), b = 0, c.add(TweenMax.to(a.find("img.out"), .2, {
                    scale: 1
                }), b), c.add(TweenMax.to(a.find("img.hover"), .2, {
                    scale: 1,
                    autoAlpha: 0
                }), b), c.add(TweenMax.to(a.find(".container--border"), .2, {
                    autoAlpha: 0
                }), b), c.add(TweenMax.to(a.find("h3"), .2, {
                    autoAlpha: 0,
                    y: 0
                }), b), c.add(TweenMax.to(a.find("h4"), .2, {
                    autoAlpha: 0,
                    y: 0
                }), b), a.removeClass("active"), c.play()
            }, b.prototype.navigate = function(a) {
                return this.direction = a, this.preventNavigation = !0, this.addElementToItems()
            }, b.prototype.addElementToItems = function(a) {
                var b = this;
                return null == a && (a = !1), a || this.position(), $(this.slides).each(function(a, c) {
                    var d, e;
                    return d = $(c).children("div"), e = d.eq(b.currentSlide), 0 === e.length && (e = d.eq(b.currentSlide - 2)), e.addClass("item-in"), TweenMax.set(e, {
                        x: -parseInt(b.itemWidth * b.direction),
                        zIndex: 3
                    })
                }), this.startAnimation()
            }, b.prototype.position = function() {
                if (1 === this.direction) {
                    if (this.currentSlide++, this.currentSlide > this.slidesNumber) return this.currentSlide = 0
                } else if (this.currentSlide--, this.currentSlide < 0) return this.currentSlide = this.slidesNumber
            }, b.prototype.stopInterval = function() {
                return null != this.interval ? (window.clearInterval(this.interval), this.interval = null) : void 0
            }, b.prototype.restartInterval = function() {
                var a;
                return this.stopInterval(), a = 1, this.interval = window.setInterval(this.addElementToItems, 8e3)
            }, b.prototype.switchInterval = function() {
                return this.addElementToItems()
            }, b.prototype.resizeLayout = function() {
                return this.itemWidth = $(this.slides).width() + 300
            }, b.prototype.startAnimation = function() {
                var a, b, c, d;
                return this.tm = new TimelineMax({
                    paused: !0,
                    onComplete: this.complete
                }), d = 0, a = .5, b = .5, c = [this.sliderLeft, this.sliderMiddle, this.sliderRight], 1 !== this.direction && (c = c.reverse()), $("" + c[0] + " .item-out").length ? (this.tm.add(TweenMax.to("" + c[0] + " .item-in", b, {
                    x: 0,
                    ease: Power4.easeOut
                }), d), this.tm.add(TweenMax.to("" + c[1] + " .item-in", b, {
                    x: 0,
                    ease: Power4.easeOut
                }), d += .2), this.tm.add(TweenMax.to("" + c[2] + " .item-in", b, {
                    x: 0,
                    ease: Power4.easeOut
                }), d += .2)) : (this.tm.add(TweenMax.to("" + c[0] + " .item-in", a, {
                    x: 0,
                    ease: Power4.easeOut
                }), 0), this.tm.add(TweenMax.to("" + c[1] + " .item-in", a, {
                    x: 0,
                    ease: Power4.easeOut
                }), .1), this.tm.add(TweenMax.to("" + c[2] + " .item-in", a, {
                    x: 0,
                    ease: Power4.easeOut
                }), .2)), this.tm.play()
            }, b.prototype.complete = function() {
                return $("#work-slider-items, #work-slider-items li").off("mouseenter mouseleave"), BrowserDetect.isTablet || $(this.slides).on({
                    mouseenter: this.enterItem,
                    mouseleave: this.leaveItem
                }), $(this.slides).find(".item-out").removeClass("item-out").css("zIndex", 1), $(this.slides).find(".item-in").removeClass("item-in").addClass("item-out").css("zIndex", 2), this.preventNavigation = !1
            }, b.prototype.dispose = function() {
                return this.stopInterval(), delete this
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.HomeParallax = function() {
            function b() {
                this.scroll = a(this.scroll, this), this.bandWork = ".subview__work .shape__dark", this.containerWork = ".subview__work .work__container", this.containerAbout = ".about__wrap", this.containerAwards = ".awards__wrap", this.wheelAwards = ".awards__wheel", this.backTopContact = ".button--get-in-touch", this.frontPanelContact = ".contact__container--front-panel", this.footerContact = ".footer", this.animations = []
            }
            return b.prototype.scroll = function() {}, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.ui.IntroTransition = function() {
            function b() {
                this.resize = a(this.resize, this), this.collapse = a(this.collapse, this), this.after = a(this.after, this);
                var b = this;
                this.t = 0, this.currentCase = null, this.prevCase = null, this.nextCase = null, this.dir = null, this.$el = null, this.$old = null, this.container = "#study-cases-intro", this.coverContainer = ".study-case__cover", this.btnNext = ".study-case__intro__arrow--right", this.btnPrev = ".study-case__intro__arrow--left", this.callback = null, this.prevent = !1, this.swipeInterval = 100, BrowserDetect.isMobile && ($(this.container).css("min-height", $(window).height()), $(this.container).css("height", $(window).height()), $(window).on("orientationchange", function() {
                    return $(b.container).css("min-height", $(window).height()), $(b.container).css("height", $(window).height())
                })), $(this.container).on("touchstart", function(a) {
                    var c, d;
                    return b.prevent || BrowserDetect.isTablet ? void 0 : (c = a.originalEvent.targetTouches[0].pageX, d = c, $(b.container).on("touchmove", function(a) {
                        return d = a.originalEvent.targetTouches[0].pageX
                    }), $(b.container).on("touchend", function() {
                        return $(b.container).unbind("touchend"), $(b.container).unbind("touchmove"), a = {
                            preventDefault: function() {}
                        }, c > d && c - d > b.swipeInterval && (b.dir = "right", a.currentTarget = b.btnNext, App.CaseNavigation.navigateNext(a)), d > c && c - d < -b.swipeInterval ? (b.dir = "left", a.currentTarget = b.btnPrev, App.CaseNavigation.navigatePrev(a)) : void 0
                    }))
                }), $(this.btnNext).on("click", function(a) {
                    return null != a && a.preventDefault(), b.dir = "right", b.prevent ? void 0 : App.CaseNavigation.navigateNext(a)
                }), $(this.btnPrev).on("click", function(a) {
                    return null != a && a.preventDefault(), b.dir = "left", b.prevent ? void 0 : App.CaseNavigation.navigatePrev(a)
                })
            }
            return b.prototype.load = function(a, b, c, d) {
                var e, f, g, h, i, j, k, l, m = this;
                for (this.currentCase = a, this.prevCase = b, this.nextCase = c, this.prevent = !0, this.t = 0, null != this.$el && (this.$old = this.$el), this.$el = $(this.coverContainer).last(), this.$el.find("h3, h5, h4, .study-case__informations__awards, .cover-background, a.button").css({
                        opacity: 0
                    }), this.$el.find(".cover-background").addClass("cover--" + this.currentCase.slug), this.$el.find("h3").html(this.currentCase.titleCase), "" !== this.currentCase.corporate ? this.$el.find("h4").html(this.currentCase.corporate) : this.$el.find("h4").addClass("hide"), this.$el.find("h5").html(this.currentCase.year), l = this.currentCase.prices, j = 0, k = l.length; k > j; j++) i = l[j], this.$el.find(".study-case__informations__awards").append($("<li/>", {
                    "class": i.type
                }));
                return e = this.hexToRgb(this.currentCase.color), $(this.btnNext).attr("href", App.CASES_PATH + this.nextCase.slug), $(this.btnPrev).attr("href", App.CASES_PATH + this.prevCase.slug), "" !== this.currentCase.link ? $(this.$el).find(".button--see-case").attr("href", this.currentCase.link) : $(this.$el).find(".button--see-case").addClass("hide"), $(this.$el).find(".button--read-case").on("click", this.collapse), BrowserDetect.isMobile || BrowserDetect.isTablet ? (this.prevent = !1, $(this.$el).removeClass("hide"), d()) : (f = this.$el.find(".cover-background").css("backgroundImage"), g = f.replace("url(", "").replace(")", "").replace(/"/g, ""), h = new Image, h.onload = function() {
                    return m.prevent = !1, $(m.$el).removeClass("hide"), d()
                }, h.src = g)
            }, b.prototype.after = function() {
                return this.prevent = !1, null != this.$old && ($(this.$old).remove(), null != this.callback && this.callback()), BrowserDetect.isTablet ? App.Loader.hide(!1) : void 0
            }, b.prototype.next = function(a) {
                return this.callback = null != a ? a : null, this.prevent ? void 0 : this.swap()
            }, b.prototype.prev = function(a) {
                return this.callback = null != a ? a : null, this.prevent ? void 0 : this.swap()
            }, b.prototype.swap = function() {}, b.prototype.hide = function(a) {
                var b, c;
                return null == a && (a = null), this.prevent = !0, c = new TimelineMax({
                    paused: !0,
                    onComplete: function() {
                        return a ? a() : void 0
                    }
                }), b = 0, c.add(TweenMax.to(this.$el.find(".cover-background"), .3, {
                    autoAlpha: 0,
                    scale: 1,
                    ease: Sine.easeInOut
                }), b), c.add(TweenMax.fromTo(this.$el.find("h3, h4"), .3, {
                    autoAlpha: 1,
                    y: 0
                }, {
                    autoAlpha: 0,
                    y: -30
                }), b), c.add(TweenMax.fromTo(this.$el.find("h5"), .3, {
                    autoAlpha: 1
                }, {
                    autoAlpha: 0
                }), b), c.add(TweenMax.fromTo(this.$el.find(".study-case__informations__awards"), .3, {
                    autoAlpha: 1,
                    y: 0
                }, {
                    autoAlpha: 0,
                    y: 30
                }), b), c.add(TweenMax.fromTo(this.$el.find("a.button"), .3, {
                    autoAlpha: 1
                }, {
                    autoAlpha: 0
                }), b), c.play()
            }, b.prototype.show = function() {
                var a, b;
                return this.prevent = !0, b = new TimelineMax({
                    paused: !0,
                    onComplete: this.after
                }), a = 0, b.add(TweenMax.fromTo(this.$el.find(".cover-background"), .3, {
                    autoAlpha: 0,
                    scale: 1
                }, {
                    autoAlpha: 1,
                    scale: 1,
                    ease: Sine.easeInOut
                }), a), b.add(TweenMax.fromTo(this.$el.find("h3, h4"), .3, {
                    autoAlpha: 0,
                    y: -30
                }, {
                    autoAlpha: 1,
                    y: 0
                }), a), b.add(TweenMax.fromTo(this.$el.find("h5"), .3, {
                    autoAlpha: 0
                }, {
                    autoAlpha: 1
                }), a), b.add(TweenMax.fromTo(this.$el.find(".study-case__informations__awards"), .3, {
                    autoAlpha: 0,
                    y: 30
                }, {
                    autoAlpha: 1,
                    y: 0
                }), a), b.add(TweenMax.fromTo(this.$el.find("a.button"), .3, {
                    autoAlpha: 0
                }, {
                    autoAlpha: 1
                }), a), b.play()
            }, b.prototype.collapse = function(a) {
                return null != a && a.preventDefault(), TweenLite.to(window, .8, {
                    scrollTo: {
                        y: window.innerHeight
                    },
                    ease: Power4.easeOut
                })
            }, b.prototype.resize = function() {}, b.prototype.hexToRgb = function(a) {
                var b;
                return b = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a), b ? {
                    r: parseInt(b[1], 16),
                    g: parseInt(b[2], 16),
                    b: parseInt(b[3], 16)
                } : null
            }, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.BaseManager = function() {
            function b(b) {
                this.route = b, this.scroll = a(this.scroll, this), this.hide = a(this.hide, this), this.loaded = a(this.loaded, this), this.load = a(this.load, this), this.glExpe = App.MasterHead.get(), this.glContainer = "#webgl", this.btnBackTop = ".back-top-button"
            }
            return b.prototype.load = function() {}, b.prototype.loaded = function() {}, b.prototype.bindEvents = function() {}, b.prototype.show = function() {}, b.prototype.hide = function() {}, b.prototype.dispose = function() {}, b.prototype.name = function() {
                return this.constructor.name
            }, b.prototype.scroll = function() {}, b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.PageManager = function(b) {
            function d(b) {
                this.scroll = a(this.scroll, this), this.top = a(this.top, this), this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), this.resize = a(this.resize, this), d.__super__.constructor.call(this, b), this.container = this.route.container
            }
            return c(d, b), d.prototype.resize = function() {
                var a, b, c;
                return b = $(window).height() - $(".navigation").height(), c = $("body").innerWidth(), a = App.Constants.shapeAngle * (Math.PI / 180), $("" + this.container + " .shape--resize").css({
                    width: Math.ceil(c * Math.cos(a)) - 1
                })
            }, d.prototype.show = function() {
                return App.CaseNavigation.swapCase = !1, $(this.container).removeClass("hidden")
            }, d.prototype.hide = function(a) {
                var b = this;
                return window.setTimeout(function() {
                    return $(b.container).addClass("hide"), a()
                }, 500)
            }, d.prototype.load = function(a, b) {
                var c = this;
                return App.Navigation.clickable = !1, App.TemplateManager.load(this.route.partial, this.container, function() {
                    return App.Navigation.blocked = !1, App.Navigation.normal(), c.resize(), c.bindEvents(), b()
                })
            }, d.prototype.top = function(a) {
                return null != a && a.preventDefault(), TweenLite.to(window, 2, {
                    scrollTo: {
                        y: 0
                    },
                    ease: Power4.easeOut
                })
            }, d.prototype.bindEvents = function() {
                return $(this.footerBtn).unbind().bind("click", this.top)
            }, d.prototype.name = function() {
                return this.constructor.name
            }, d.prototype.scroll = function() {}, d.prototype.dispose = function() {
                return $(this.container).empty(), $(this.containerIntro).addClass("hide"), $(window).off("resize", this.resize)
            }, d
        }(App.BaseManager)
    }.call(this),
    function() {
        var a, b = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            c = {}.hasOwnProperty,
            d = function(a, b) {
                function d() {
                    this.constructor = a
                }
                for (var e in b) c.call(b, e) && (a[e] = b[e]);
                return d.prototype = b.prototype, a.prototype = new d, a.__super__ = b.prototype, a
            };
        App.CaseManager = function(a) {
            function c(a) {
                this.scroll = b(this.scroll, this), this.top = b(this.top, this), this.scrollToCase = b(this.scrollToCase, this), this.loaded = b(this.loaded, this), this.load = b(this.load, this), this.hide = b(this.hide, this), this.show = b(this.show, this), this.resize = b(this.resize, this), this.navigateHome = b(this.navigateHome, this), c.__super__.constructor.call(this, a), null == g && (g = App.CaseNavigation), null == e && (e = App.CaseFooter), this.containerIntro = "#study-cases-intro", this.imgFeatured = ".study-case__bloc--demo", this.container = this.route.container, this.footer = ".study-case__contact", this.btnBack = "" + this.container + " .back--button", this.btnTop = ".back-top-button", this.btnCaseStudy = "" + this.containerIntro + " .button--open-case-study", this.contactPanel = null, this.footerBtn = ".footer a", this.toggleIntroGL = "intro", this.homeSlogan = ".home__slogan"
            }
            var e, f, g;
            return d(c, a), f = new App.ui.IntroTransition, g = null, e = null, c.prototype.navigateHome = function(a) {
                return null != a && a.preventDefault(), App.Router.navigate(App.ABS_PATH)
            }, c.prototype.resize = function() {
                var a, b, c, d, e, g, h, i;
                return i = $(document.body).width(), b = App.Constants.shapeAngle * (Math.PI / 180), $("" + this.container + " .shape--resize").css({
                    width: Math.ceil(i * Math.cos(b)) - 1
                }), $("" + this.containerIntro + " .shape--resize").css({
                    width: Math.ceil(i * Math.cos(b)) - 1
                }), e = BrowserDetect.isMobile ? $(window).height() : $(window).height() - 46, $("" + this.containerIntro + " .study-case__cover").css("height", e + 46), $("#study-cases").css({
                    marginTop: parseInt(1.3 * e)
                }), this.updateHorizon(), h = Math.tan(App.Constants.shapeAngle * (Math.PI / 180)) * Math.cos(App.Constants.shapeAngle * (Math.PI / 180)), c = parseInt(i * h), a = $("" + this.container + " .context-concept--contents-relative").height(), g = parseInt($("" + this.container + " .background--shape-intro").css("top")), d = 0, d = 150, i > 1380 && (d += 80), $("" + this.container + " .context-concept--contents").css({
                    height: a,
                    marginTop: d - c / 2 - 15
                }), $("" + this.container + " .study-case__bloc--context-concept").css({
                    height: a
                }), $("" + this.container + " .background--shape-intro").css({
                    height: a + 2 * d
                }), null != f ? f.resize() : void 0
            }, c.prototype.show = function() {
                var a;
                App.Navigation.inCase = !0, null != (a = this.glExpe) && a.hide(), $(this.container).removeClass("hidden"), $(this.footer).removeClass("hide"), f.show(), BrowserDetect.isMobile && $(".study-case__contact").removeClass("hide"), g.swapCase || $(this.containerIntro).removeClass("hide")
            }, c.prototype.hide = function(a) {
                var b = this;
                return App.Navigation.inCase = !1, f.hide(function() {
                    return g.swapCase ? (BrowserDetect.isMobile && $(".study-case__contact").addClass("hide"), a()) : window.setTimeout(function() {
                        var c;
                        return $(b.container).addClass("hidden"), $(b.containerIntro).addClass("hide"), $(b.footer).addClass("hide"), null != (c = b.glExpe) && c.hide(), a()
                    }, 1e3)
                })
            }, c.prototype.load = function(a, b) {
                var c, d = this;
                return $(this.homeSlogan).addClass("hide"), $(this.containerIntro).removeClass("hide"), App.Navigation.clickable = !0, App.Navigation.positionWorks(), App.Loader.show(!0), c = [], c.push(new Array(this.route.partial, this.container, null)), c.push(new Array("partials/case-footer", ".study-case__footer", null)), c.push(new Array("partials/case-intro", ".study-case__covers", null)), $(this.footer).html() || c.push(new Array("one-page/contact", this.footer, null)), App.TemplateManager.loadMultiples(c, function() {
                    return $(d.container).addClass("hidden"), App.Navigation.compact(), App.Navigation.blocked = !0, g.set(d.route.slug), f.load(g.get(), g.prevCase(), g.nextCase(), b), e.update(d.container, g.get()), d.loaded(), d.bindEvents()
                })
            }, c.prototype.loaded = function() {
                var a = this;
                return App.Loader.preload(function() {
                    return $(a.container).removeClass("hide"), BrowserDetect.isTablet ? $(window).on("orientationchange", a.resize) : $(window).on("resize", a.resize), a.resize()
                })
            }, c.prototype.bindEvents = function() {
                return $(this.btnBack).unbind().bind("click", this.navigateHome), $(this.btnTop).unbind().bind("click", this.top), $(this.footerBtn).unbind().bind("click", this.navigateHome), $(this.btnCaseStudy).unbind().bind("click", this.scrollToCase), BrowserDetect.isTablet && $(".button-play:not('.no-video')").on("click", function(a) {
                    var b;
                    return b = $(a.currentTarget), b.addClass("hide"), b.parent().find("video")[0].load(), b.parent().find("video")[0].play()
                }), this.toggleIntroGL = "intro", this.scroll(), (BrowserDetect.isMobile || BrowserDetect.isTablet) && $(document).bind("touchmove", this.mobileHideCover), this.contactPanel = new App.ui.ContactPanel
            }, c.prototype.scrollToCase = function(a) {
                return null != a && a.preventDefault(), TweenMax.fromTo(this.container, .8, {
                    y: 500
                }, {
                    y: 0
                }), f.collapse()
            }, c.prototype.top = function(a) {
                return null != a && a.preventDefault(), TweenLite.to(window, 2, {
                    scrollTo: {
                        y: 0
                    },
                    ease: Power4.easeOut
                })
            }, c.prototype.scroll = function() {
                var a, b, c;
                if (!BrowserDetect.isDesktop) return void(a = document.documentElement.scrollTop || document.body.scrollTop);
                if (a = document.documentElement.scrollTop || document.body.scrollTop, $(document).innerHeight() - $(window).innerHeight() < a + $(window).height() ? null != (b = this.glExpe) && b.show() : null != (c = this.glExpe) && c.hide(), a > $(window).height() ? $(this.btnTop).removeClass("hidden") : $(this.btnTop).addClass("hidden"), a > 2 * $(window).height()) {
                    if ("gl" === this.toggleIntroGL) return;
                    return this.toggleIntroGL = "gl", $(this.containerIntro).addClass("hide"), $(this.glContainer).removeClass("hide"), this.updateHorizon()
                }
                return "intro" !== this.toggleIntroGL ? (this.toggleIntroGL = "intro", $(this.glContainer).addClass("hide"), $(this.containerIntro).removeClass("hide")) : void 0
            }, c.prototype.updateHorizon = function() {
                var a;
                return null != (a = this.glExpe) ? a.resize(0) : void 0
            }, c.prototype.mobileHideCover = function() {
                var a;
                return a = document.documentElement.scrollTop || document.body.scrollTop, a > 2 * $(window).height() ? $("#study-cases-intro").addClass("hide") : $("#study-cases-intro").removeClass("hide")
            }, c.prototype.dispose = function() {
                var a;
                return $(this.container).addClass("hide"), $(this.homeSlogan).removeClass("hide"), $(this.container).empty(), $(this.btnTop).addClass("hidden"), null != (a = this.contactPanel) && a.reset(), $(window).off("resize", this.resize), $(window).off("orientationchange", this.resize), BrowserDetect.isMobile || BrowserDetect.isTablet ? $(document).unbind("touchmove", this.mobileHideCover) : void 0
            }, c
        }(App.BaseManager), a = function() {
            function a() {
                this.close1 = b(this.close1, this), this.navigate = b(this.navigate, this), this.navigateNext = b(this.navigateNext, this), this.navigatePrev = b(this.navigatePrev, this), this.current = 0, this.routes = [], this.prevBtn = "" + this.container + " .navigation__prev", this.nextBtn = "" + this.container + " .navigation__next", this.closeBtn = "" + this.container + " .navigation__close", this.direction = null, this.swapCase = !1
            }
            return a.prototype.setRoutes = function(a) {
                this.routes = a
            }, a.prototype.set = function(a) {
                var b, c, d;
                for (b = c = 0, d = this.routes.length; d >= 0 ? d > c : c > d; b = d >= 0 ? ++c : --c) this.routes[b].slug === a && (this.current = b);
                return this.replace()
            }, a.prototype.nextRoute = function() {
                var a;
                return a = this.current + 1, this.routes.length <= a && (a = 0), this.routes[a]
            }, a.prototype.prevRoute = function() {
                var a;
                return a = this.current - 1, 0 > a && (a = this.routes.length - 1), this.routes[a]
            }, a.prototype.prevCase = function() {
                return this.get(this.prevRoute().id)
            }, a.prototype.nextCase = function() {
                return this.get(this.nextRoute().id)
            }, a.prototype.get = function(a) {
                var b, c, d, e, f, g;
                for (null == a && (a = -1), c = this.routes[this.current], d = null, g = MMPDatas.mmp_projects, e = 0, f = g.length; f > e; e++) b = g[e], -1 === a ? b.id === c.id && (d = b) : b.id === a && (d = b);
                return d
            }, a.prototype.replace = function() {
                return $(this.prevBtn).attr("href", this.nextRoute().slug), $(this.nextBtn).attr("href", this.nextRoute().slug), $(this.prevBtn).on("click", this.navigatePrev), $(this.nextBtn).on("click", this.navigateNext), $(this.closeBtn).on("click", this.close1)
            }, a.prototype.navigatePrev = function(a) {
                return null != a && a.preventDefault(), this.swapCase = !0, BrowserDetect.isTablet && App.Loader.show(!1), this.direction = "left", this.autoScroll(a)
            }, a.prototype.navigateNext = function(a) {
                return null != a && a.preventDefault(), this.swapCase = !0, BrowserDetect.isTablet && App.Loader.show(!1), this.direction = "right", this.autoScroll(a)
            }, a.prototype.autoScroll = function(a) {
                var b;
                return b = document.documentElement.scrollTop || document.body.scrollTop, b > 100 ? TweenMax.to(window, 1, {
                    scrollTo: {
                        y: 0
                    },
                    ease: Power4.easeOut,
                    onComplete: function() {
                        return App.Router.navigate($(a.currentTarget).attr("href"), !1)
                    }
                }) : App.Router.navigate($(a.currentTarget).attr("href"), !1)
            }, a.prototype.navigate = function(a) {
                var b = this;
                return BrowserDetect.isTablet && App.Loader.show(!1), this.swapCase = !0, this.direction = "left", BrowserDetect.isTablet ? window.setTimeout(function() {
                    return b.autoScroll(a)
                }, 1e3) : this.autoScroll(a)
            }, a.prototype.close = function(a) {
                return null != a && a.preventDefault(), this.swapCase = !1, App.Router.navigate(App.ABS_PATH)
            }, a
        }(), this.App.CaseNavigation = new a, App.CaseFooter = function() {
            function a() {
                this.set = b(this.set, this)
            }
            return a.prototype.update = function(a, b) {
                var c, d, e, f, g, h, i, j, k, l, m;
                for (this.caseContainer = a, this.current = b, this.container = ".study-case__footer", this.tmpl = $("" + this.caseContainer + " #slide-footer").html(), $("" + this.caseContainer + " #slide-footer").remove(), $("" + this.caseContainer + " " + this.container + " ul").empty(), this.items = [null, null, null], l = MMPDatas.mmp_projects, h = 0, j = l.length; j > h; h++) e = l[h], e.footerCaseProjects && (e.id === this.current.footerCaseProjects.left && (this.items[0] = e), e.id === this.current.footerCaseProjects.mid && (this.items[1] = e), e.id === this.current.footerCaseProjects.right && (this.items[2] = e));
                for (d = 0, m = this.items, i = 0, k = m.length; k > i; i++) c = m[i], null != c && (g = $(this.tmpl).clone(), g.addClass("slider-item--" + d), f = MMPDatas.works_slides_single.filter(function(a) {
                    return a.id === c.id
                }), g.find("img").attr("src", "" + App.UPLOADS_DIR + "/slider/" + f[0].thumb_hover), g.find("h3").html(c.title), g.find("h4").html(c.client), g.find("a").attr("href", App.CASES_PATH + c.slug), $("" + this.caseContainer + " " + this.container + " ul").append(g[0]), d++);
                return $("" + this.caseContainer + " " + this.container + " li a").on("click", this.set)
            }, a.prototype.set = function(a) {
                return null != a && a.preventDefault(), $("#study-cases-intro").removeClass("hide"), App.CaseNavigation.navigate(a)
            }, a.prototype.dispose = function() {
                return $("" + this.caseContainer + " " + this.container).empty(), delete this
            }, a
        }(), this.App.CaseFooter = new App.CaseFooter
    }.call(this),
    function() {
        var a, b, c, d, e = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        d = function(a, b) {
            var c, d, e;
            return [].concat.apply([], function() {
                var f, g, h;
                for (h = [], f = 0, g = a.length; g > f; f++) d = a[f], h.push(function() {
                    var a;
                    a = [];
                    for (c in d) e = d[c], c === b && a.push(e);
                    return a
                }());
                return h
            }())
        }, c = function(a, b) {
            var c, d, e, f, g, h, i, j, k;
            for (f = [], c = h = 0, j = b.length; j >= 0 ? j > h : h > j; c = j >= 0 ? ++h : --h) {
                for (g = b[c].split("."), e = a[g[0]], d = i = 1, k = g.length; k >= 1 ? k > i : i > k; d = k >= 1 ? ++i : --i) e = e[g[d]];
                f[c] = e
            }
            return f
        }, a = function() {
            function a() {
                this.set = e(this.set, this), this.end = e(this.end, this), this.container = ".navigation", this.inner = ".navigation--inner", this.items = "" + this.inner + " li a", this.cursor = ".navigation__indicator--cursor", this.activeItem = ".navigation li.active", this.sections = ".section", this.offset = 200, this.opened = !1, this.clickable = !1, this.prevent = !1, this.blocked = !1, this.tabs = [{
                    min: 768,
                    max: 1024,
                    work: 0,
                    about: 0,
                    awards: 0,
                    contact: 0
                }, {
                    min: 1025,
                    max: 1280,
                    work: 0,
                    about: 0,
                    awards: 0,
                    contact: 0
                }, {
                    min: 1281,
                    max: 1600,
                    work: 0,
                    about: 0,
                    awards: 0,
                    contact: 0
                }, {
                    min: 1601,
                    max: 5e3,
                    work: 0,
                    about: 0,
                    awards: 0,
                    contact: 0
                }]
            }
            return a.prototype.scroll = function() {
                var a, b, c;
                if (!App.Navigation.inCase) return c = document.documentElement.scrollTop || document.body.scrollTop, c > this.offset ? this.compact() : this.normal(), b = 1e5, a = null, $(this.sections).each(function(d, e) {
                    var f;
                    return f = Math.abs($(e).offset().top - c), b > f ? (b = f, a = e) : void 0
                }), $(this.items).parent().removeClass("active"), $(this.items + ("[data-subview='" + $(a).data("anchor").split("-")[1] + "']")).parent().addClass("active"), this.indicate()
            }, a.prototype.positionWorks = function() {
                return $(this.items).parent().removeClass("active"), $(this.items).parent().eq(1).addClass("active"), this.indicate()
            }, a.prototype.indicate = function() {
                var a, b;
                return a = parseInt($(this.activeItem).attr("data-indic-left")), b = parseInt($(this.activeItem).attr("data-indic-width")), TweenLite.to(this.cursor, .6, {
                    left: a,
                    width: b,
                    ease: Sine.easeOut
                })
            }, a.prototype.normal = function() {
                return this.blocked || !this.opened || this.prevent ? void 0 : (this.opened = !1, TweenMax.staggerTo(this.items, .2, {
                    y: 0,
                    overwrite: !0
                }, .15), TweenMax.to(this.inner, .25, {
                    height: 72,
                    ease: Ease.easeOut,
                    overwrite: !0,
                    onComplete: this.end
                }))
            }, a.prototype.compact = function() {
                return this.blocked || this.opened || this.prevent ? void 0 : (this.opened = !0, TweenMax.staggerTo($(this.items).reverse(), .1, {
                    y: -15,
                    overwrite: !0
                }, .05), TweenMax.to(this.inner, .2, {
                    height: 42,
                    delay: .35,
                    overwrite: !0,
                    ease: Back.easeOut,
                    onComplete: this.end
                }))
            }, a.prototype.end = function() {
                var a = this;
                return window.setTimeout(function() {
                    return a.prevent = !1
                }, 300)
            }, a.prototype["default"] = function() {
                return this.opened = !1, $(this.container).removeClass("navigation--compact")
            }, a.prototype.show = function(a) {
                var b;
                return null == a && (a = .3), this.prevent = !0, this.indicate(), TweenMax.set(this.items, {
                    y: -20,
                    autoAlpha: 0
                }), TweenMax.set(this.container, {
                    y: -80
                }), b = new TimelineMax({
                    paused: !0,
                    onComplete: this.end
                }), b.add(TweenMax.to(this.container, .3, {
                    y: 0
                }), a), b.add(TweenMax.staggerTo(this.items, .3, {
                    y: 0,
                    autoAlpha: 1
                }, .2), a -= .1), b.play()
            }, a.prototype.bindEvents = function() {
                return $(this.items).on("click", this.set)
            }, a.prototype.set = function(a) {
                var b, c = this;
                return null != a && a.preventDefault(), b = $(a.currentTarget), this.clickable ? (App.CaseNavigation.swapCase = !1, App.Router.navigate(App.ABS_PATH), window.setTimeout(function() {
                    return c.move(b.attr("data-subview"))
                }, 2e3)) : this.move(b.attr("data-subview"))
            }, a.prototype.move = function(a) {
                var b, c, d, e;
                return e = 0, "home" !== a && (c = ".subview__" + a, ".subview__awards" === c && (c = ".awards__svg-sectors"), ".subview__about" === c && (c = ".about__container--slider"), d = ($(window).height() - $(c).outerHeight()) / 2, d = $(".navigation").outerHeight(), e = $(c).offset().top - d), b = {
                    scrollTo: {
                        y: e
                    }
                }, navigator.userAgent.match(/Version\/[\d\.]+.*Safari/) && (b.ease = Quad.easeOut), TweenMax.to(window, 1, b), this.indicate()
            }, a
        }(), b = function() {
            function a() {
                this.toggle = e(this.toggle, this), this.active = e(this.active, this), this.container = ".navigation__mobile", this.layout = "#one-page", this.button = ".navigation__mobile--button", this.items = ".navigation__anchor li", this.blocked = !1, this.clickable = !1
            }
            return a.prototype.show = function(a) {
                null == a && (a = 0)
            }, a.prototype.bindEvents = function() {
                return $(this.button).on("click", this.toggle), $(this.items).on("click", this.active), $("" + this.container + " h3").on("click", this.set)
            }, a.prototype.scroll = function() {}, a.prototype.compact = function() {}, a.prototype.normal = function() {}, a.prototype.positionWorks = function() {}, a.prototype.active = function(a) {
                var b, c;
                return this.clickable ? (App.CaseNavigation.swapCase = !1, App.Router.navigate(App.ABS_PATH), c = $(a.currentTarget).attr("data-subview"), b = ".subview__" + c, window.setTimeout(function() {
                    return TweenLite.to(window, 1, {
                        scrollTo: {
                            y: $(b).offset().top
                        },
                        ease: Power4.easeOut
                    })
                }, 3e3), this.toggle()) : ($(this.items).removeClass("active"), $(a.currentTarget).addClass("active"), c = $(a.currentTarget).attr("data-subview"), b = ".subview__" + c, this.toggle(), window.setTimeout(function() {
                    return TweenLite.to(window, 1, {
                        scrollTo: {
                            y: $(b).offset().top
                        },
                        ease: Power4.easeOut
                    })
                }, 400))
            }, a.prototype.toggle = function(a) {
                return null != a && a.preventDefault(), $(this.container).toggleClass("open"), $(this.layout).toggleClass("open")
            }, a
        }(), this.App.Navigation = BrowserDetect.isMobile ? new b : new a
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.HomePage = function(b) {
            function d(b) {
                this.resize = a(this.resize, this), this.scroll = a(this.scroll, this), this.backTop = a(this.backTop, this), this.updateHomeSlogan = a(this.updateHomeSlogan, this), this.load = a(this.load, this), this.section = a(this.section, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b), this.container = "#one-page", this.footerBtn = ".footer a", this.btnBackTop = ".back-top-button", this.homeSlogan = ".home__slogan", this.aboutContainer = ".about__container--inner"
            }
            return c(d, b), d.prototype.__name__ = "HomePage", d.prototype.show = function() {
                var a;
                return null != (a = this.glExpe) && a.show(), d.__super__.show.call(this)
            }, d.prototype.section = function(a) {
                return null != a ? a.preventDefault() : void 0
            }, d.prototype.hide = function(a) {
                var b;
                return null != (b = this.glExpe) && b.hide(), $(this.glContainer).addClass("hide"), d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                var c, d, e, f, g, h, i = this;
                for (App.Navigation.clickable = !1, a.init || (App.Navigation.blocked = !1, App.Navigation.normal()), e = [], this.filter = MMPDatas.routes.filter(function(a) {
                        return "home" === a.name
                    }), h = this.filter, f = 0, g = h.length; g > f; f++) c = h[f], d = new Array(c.partial, c.element, null), e.push(d);
                return App.TemplateManager.loadMultiples(e, function() {
                    return $(i.container).addClass("hidden"), i.aboutSlides = new App.ui.AboutSlides, i.awardsWheel = new App.ui.AwardsWheel, i.contactPanel = new App.ui.ContactPanel, i.worksSlider = new App.ui.WorksSlider, BrowserDetect.isMobile || (i.homeParallax = new App.ui.HomeParallax), i.loaded(), i.bindEvents(), b()
                })
            }, d.prototype.loaded = function() {
                return App.Loader.preload(), this.offsetHomeSlogan = $(this.homeSlogan).offset().top, this.offsetHomeSlogan = $(this.homeSlogan).outerHeight(), $(this.container).removeClass("hide"), BrowserDetect.isTablet ? ($(window).on("orientationchange", this.resize), this.updateHomeSlogan()) : $(window).on("resize", this.resize), this.resize()
            }, d.prototype.bindEvents = function() {
                return d.__super__.bindEvents.call(this), $("" + this.container + " .button--get-in-touch").unbind().bind("click", this.top), $(this.btnBackTop).on("click", this.backTop), $(window).on("orientationchange", this.updateHomeSlogan)
            }, d.prototype.updateHomeSlogan = function() {
                switch (window.orientation) {
                    case 0:
                    case 180:
                        return $(this.homeSlogan).removeClass("landscape").addClass("portrait");
                    case 90:
                    case -90:
                        return $(this.homeSlogan).removeClass("portrait").addClass("landscape")
                }
            }, d.prototype.backTop = function(a) {
                return a.preventDefault(), TweenLite.to(window, 2, {
                    scrollTo: {
                        y: 0
                    },
                    ease: Power4.easeOut
                })
            }, d.prototype.dispose = function() {
                var a, b, c, d;
                for (this.aboutSlides.dispose(), this.awardsWheel.dispose(), this.worksSlider.dispose(), this.worksSlider = null, this.awardsWheel = null, this.aboutSlides = null, d = this.filter, b = 0, c = d.length; c > b; b++) a = d[b], $(a.element).empty();
                return $(window).off("resize", this.resize)
            }, d.prototype.scroll = function() {
                var a, b;
                if (a = document.documentElement.scrollTop || document.body.scrollTop, a > 1.5 * $(window).height() ? $(this.homeSlogan).hasClass("hide") || (BrowserDetect.isTablet || $(this.homeSlogan).addClass("hide"), $(this.btnBackTop).removeClass("hidden"), null != (b = this.glExpe) && b.resize(0)) : $(this.homeSlogan).hasClass("hide") && ($(this.homeSlogan).removeClass("hide"), this.updateHorizon(), $(this.btnBackTop).addClass("hidden")), a > $(window).height() && a < $(".subview__awards").offset().top) {
                    if (this.glExpe) return this.glExpe.glExpe.releaseInputs()
                } else if (this.glExpe) return this.glExpe.glExpe.setupInputs()
            }, d.prototype.updateHorizon = function() {
                var a, b;
                return a = $(window).height(), this.horizon = .5 * a - 75, null != (b = this.glExpe) ? b.resize(this.horizon) : void 0
            }, d.prototype.resize = function() {
                var a, b, c, e, f;
                if (d.__super__.resize.call(this), e = Math.tan(21 * (Math.PI / 180)) * Math.cos(21 * (Math.PI / 180)), a = parseInt($(window).innerWidth() * e), c = parseInt($(".about__wrap").css("top")), $(this.aboutContainer).css({
                        marginTop: -292 - a / 2 + c - 25
                    }), f = parseInt($(".work__slider--background").css("top")) + parseInt($(".subview__work .shape__dark").css("top")), BrowserDetect.isTablet) {
                    switch (window.orientation) {
                        case -90:
                        case 90:
                            b = -0;
                            break;
                        default:
                            b = 50
                    }
                    $(".work__container--inner").css({
                        marginTop: .5 * -$(".slider-item--left").height() - a / 2 + f
                    })
                } else $(".work__container--inner").css({
                    marginTop: .5 * -$(".slider-item--left").height() - a / 2 + f
                });
                return this.updateHorizon()
            }, d
        }(App.PageManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.BeroccaCase = function(b) {
            function d(b) {
                this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b)
            }
            return c(d, b), d.prototype.__name__ = "BeroccaCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                return d.__super__.load.call(this, a, b)
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this)
            }, d.prototype.loaded = function() {
                return d.__super__.loaded.call(this)
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.BmwCase = function(b) {
            function d(b) {
                this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b)
            }
            return c(d, b), d.prototype.__name__ = "BmwCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                return d.__super__.load.call(this, a, b)
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this)
            }, d.prototype.loaded = function() {
                return d.__super__.loaded.call(this), BrowserDetect.isDesktop ? (this.videoNode = "#video-intro", $(this.videoNode).prop("loop", !0), $(this.videoNode).load(), $(this.videoNode)[0].play()) : void 0
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.GhmummCase = function(b) {
            function d(b) {
                this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b)
            }
            return c(d, b), d.prototype.__name__ = "GhmummCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                return d.__super__.load.call(this, a, b)
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this)
            }, d.prototype.loaded = function() {
                var a, b, c, e, f;
                for (d.__super__.loaded.call(this), this.videos = new Array("" + this.container + " #video-intro", "" + this.container + " #video-step-1", "" + this.container + " #video-step-2", "" + this.container + " #video-step-3"), e = this.videos, f = [], b = 0, c = e.length; c > b; b++) a = e[b], $(a).prop("loop", !0), $(a)[0].load(), f.push(BrowserDetect.isDesktop ? $(a)[0].play() : void 0);
                return f
            }, d.prototype.bindEvents = function() {
                return d.__super__.bindEvents.call(this)
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.GreenpeaceCase = function(b) {
            function d(b) {
                this.setCurrentImageByDraggerPosition = a(this.setCurrentImageByDraggerPosition, this), this.renderDemoImage = a(this.renderDemoImage, this), this.updateDraggerPosition = a(this.updateDraggerPosition, this), this._bindEvents = a(this._bindEvents, this), this.loaded = a(this.loaded, this), this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b), this.imagesTL = [], this.imagesDemoContainer = ".study-case__bloc--demo__macbook--slider", this.currentImage = 0, this.dragger = ".dragger-selector", this.draggerWidth = 74, this.draggerContainer = ".dragger-container"
            }
            return c(d, b), d.prototype.__name__ = "GreenpeaceCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                var c, e, f;
                if (BrowserDetect.isDesktop)
                    for (c = f = 0; 265 >= f; c = ++f) e = new Image, e.src = "" + App.IMAGES_DIR + "/cases/greenpeace/bloc-demo/" + c + ".jpg", this.imagesTL.push(e);
                return d.__super__.load.call(this, a, b)
            }, d.prototype.loaded = function() {
                return d.__super__.loaded.call(this), BrowserDetect.isDesktop ? ($(this.imagesDemoContainer).append(this.imagesTL[this.currentImage]), this._bindEvents()) : void 0
            }, d.prototype._bindEvents = function() {
                var a, b = this;
                return a = $(this.draggerContainer).width() - .5 * $(this.dragger).width() - 12, $(this.draggerContainer).on("mousedown touchstart", function() {
                    return $(document).on("mousemove touchmove", function(c) {
                        return c.clientX - $(b.draggerContainer).offset().left < 0 || c.clientX - $(b.draggerContainer).offset().left > a ? void 0 : b.updateDraggerPosition(c.clientX - $(b.draggerContainer).offset().left)
                    }), $(document).on("mouseup touchend", function() {
                        return $(document).unbind("mouseup touchend"), $(document).unbind("mousemove touchmove")
                    }), b.renderDemoImage()
                })
            }, d.prototype.updateDraggerPosition = function(a) {
                var b;
                return b = a - this.draggerWidth / 2, 0 > b && (b = 0), $(this.dragger).css("left", b), this.setCurrentImageByDraggerPosition(b), this.renderDemoImage()
            }, d.prototype.renderDemoImage = function() {
                return $(this.imagesDemoContainer).empty(), $(this.imagesDemoContainer).append(this.imagesTL[this.currentImage])
            }, d.prototype.setCurrentImageByDraggerPosition = function(a) {
                return this.currentImage = Math.round(a * this.imagesTL.length / $(this.draggerContainer).width()), this.currentImage === this.imagesTL.length ? this.currentImage = this.imagesTL.length - 1 : this.currentImage < 0 ? this.currentImage = 0 : void 0
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this)
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.IsseyMiyakeCase = function(b) {
            function d(b) {
                this.setCurrentImageByMousePosition = a(this.setCurrentImageByMousePosition, this), this.setCurrentImageByDraggerPosition = a(this.setCurrentImageByDraggerPosition, this), this.renderExperienceImage = a(this.renderExperienceImage, this), this.updateDraggerPosition = a(this.updateDraggerPosition, this), this.moveExperiencePrevPosition = a(this.moveExperiencePrevPosition, this), this.moveExperienceNextPosition = a(this.moveExperienceNextPosition, this), this.loaded = a(this.loaded, this), this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b), this.imagesTL = [], this.imagesExperienceContainer = ".study-case__bloc--cross-experience-images-container", this.currentImage = 43, this.dragger = ".dragger-selector", this.draggerWidth = 18, this.draggerContainer = ".dragger-container", this.draggerNext = ".dragger-control-right", this.draggerPrev = ".dragger-control-left"
            }
            return c(d, b), d.prototype.__name__ = "IsseyMiyakeCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                var c, e, f, g;
                if (BrowserDetect.isDesktop) {
                    for (c = f = 143; f >= 100; c = --f) e = new Image, e.src = "" + App.IMAGES_DIR + "/cases/issey-miyake/experience/" + c + ".jpg", this.imagesTL.push(e);
                    for (c = g = 200; 235 >= g; c = ++g) e = new Image, e.src = "" + App.IMAGES_DIR + "/cases/issey-miyake/experience/" + c + ".jpg", this.imagesTL.push(e)
                }
                return d.__super__.load.call(this, a, b)
            }, d.prototype.loaded = function() {
                return d.__super__.loaded.call(this), BrowserDetect.isDesktop ? ($(this.imagesExperienceContainer).append(this.imagesTL[this.currentImage]), this.updateDraggerPosition($(this.draggerContainer).width() / 2), this.rFramePixel = Math.round($(this.draggerContainer).width() / this.imagesTL.length)) : void 0
            }, d.prototype.bindEvents = function() {
                var a = this;
                return d.__super__.bindEvents.call(this), BrowserDetect.isDesktop ? ($(this.draggerContainer).on("mousedown touchstart", function() {
                    return $(document).on("mousemove touchmove", function(b) {
                        return b.clientX - $(a.draggerContainer).offset().left < 0 || b.clientX - $(a.draggerContainer).offset().left > $(a.draggerContainer).width() ? void 0 : a.updateDraggerPosition(b.clientX - $(a.draggerContainer).offset().left)
                    }), $(document).on("mouseup touchend", function() {
                        return $(document).unbind("mouseup touchend"), $(document).unbind("mousemove touchmove")
                    }), a.renderExperienceImage()
                }), $(this.draggerNext).on("mousedown touchstart", function() {
                    return a.clickingDraggerButton = !0, a.timerDraggerClick = window.setInterval(function() {
                        return a.clickingDraggerButton ? a.moveExperienceNextPosition() : void window.clearInterval(a.timerDraggerClick)
                    }, 50), $(document).on("mouseup touchend", function() {
                        return $(document).unbind("mouseup touchend"), a.clickingDraggerButton = !1
                    })
                }), $(this.draggerPrev).on("mousedown touchstart", function() {
                    return a.clickingDraggerButton = !0, a.timerDraggerClick = window.setInterval(function() {
                        return a.clickingDraggerButton ? a.moveExperiencePrevPosition() : void window.clearInterval(a.timerDraggerClick)
                    }, 50), $(document).on("mouseup", function() {
                        return $(document).unbind("mouseup"), a.clickingDraggerButton = !1
                    })
                })) : void 0
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this)
            }, d.prototype.moveExperienceNextPosition = function() {
                var a;
                return a = Math.round($(this.dragger).position().left + this.rFramePixel), a > $(this.draggerContainer).width() - this.draggerWidth / 2 ? void(a = $(this.draggerContainer).width() - this.draggerWidth / 2) : this.updateDraggerPosition(a + this.draggerWidth / 2)
            }, d.prototype.moveExperiencePrevPosition = function() {
                var a;
                return a = Math.round($(this.dragger).position().left - this.rFramePixel), a < 0 + this.draggerWidth / 2 ? void(a = 0 + this.draggerWidth / 2) : this.updateDraggerPosition(a + this.draggerWidth / 2)
            }, d.prototype.updateDraggerPosition = function(a) {
                var b;
                return b = a - this.draggerWidth / 2, 0 > b && (b = 0), $(this.dragger).css("left", b), this.setCurrentImageByDraggerPosition(b), this.renderExperienceImage()
            }, d.prototype.renderExperienceImage = function() {
                return $(this.imagesExperienceContainer).empty(), $(this.imagesExperienceContainer).append(this.imagesTL[this.currentImage])
            }, d.prototype.setCurrentImageByDraggerPosition = function(a) {
                return this.currentImage = Math.round(a * this.imagesTL.length / $(this.draggerContainer).width()), this.currentImage === this.imagesTL.length ? this.currentImage = this.imagesTL.length - 1 : this.currentImage < 0 ? this.currentImage = 0 : void 0
            }, d.prototype.setCurrentImageByMousePosition = function(a) {
                return this.currentImage = Math.round(a * this.imagesTL.length / $(this.imagesExperienceContainer).width()), this.currentImage === this.imagesTL.length ? this.currentImage = this.imagesTL.length - 1 : void 0
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.LongchampsCase = function() {
            var b, d;
            return b = function(b) {
                function e(b) {
                    this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), e.__super__.constructor.call(this, b)
                }
                return c(e, b), e.prototype.__name__ = "LongchampsCase", e.prototype.show = function() {
                    return e.__super__.show.call(this)
                }, e.prototype.hide = function(a) {
                    return e.__super__.hide.call(this, a)
                }, e.prototype.load = function(a, b) {
                    return e.__super__.load.call(this, a, b)
                }, e.prototype.dispose = function() {
                    return e.__super__.dispose.call(this)
                }, e.prototype.loaded = function() {
                    return e.__super__.loaded.call(this), BrowserDetect.isDesktop ? (new d(".study-case__bloc--steps__image-container.step-1", -1190), new d(".study-case__bloc--steps__image-container.step-2", -610), new d(".study-case__bloc--steps__image-container.step-3", -1180), this.video = "" + this.container + " #video-screencast", $(this.video).prop("loop", !0), $(this.video)[0].load(), $(this.video)[0].play()) : void 0
                }, e
            }(App.CaseManager), d = function() {
                function b(b, c) {
                    this.elem = b, this.centerX = c, this.mouseMove = a(this.mouseMove, this), this.clearAnimationStep = a(this.clearAnimationStep, this), this.setAnimationStepOver = a(this.setAnimationStepOver, this), this.mousePosition = {}, this.positionSmooth = {
                        x: this.centerX
                    }, this._bindEvents()
                }
                return b.prototype._bindEvents = function() {
                    return $(this.elem).on("mousemove", this.mouseMove), $(this.elem).on("mouseenter", this.setAnimationStepOver), $(this.elem).on("mouseleave", this.clearAnimationStep)
                }, b.prototype.setAnimationStepOver = function() {
                    var a = this;
                    return this.animStep = window.setInterval(function() {
                        return a.positionSmooth.x -= .1 * (a.mousePosition.x + a.positionSmooth.x - a.centerX - 131), $(a.elem).css("background-position", "" + a.positionSmooth.x + "px 0px")
                    }, 16)
                }, b.prototype.clearAnimationStep = function() {
                    return window.clearInterval(this.animStep), this.positionSmooth = {
                        x: this.centerX
                    }, TweenMax.to(this.elem, .3, {
                        backgroundPosition: "" + this.centerX + "px 0px"
                    })
                }, b.prototype.mouseMove = function(a) {
                    return this.mousePosition.x = a.offsetX, this.mousePosition.y = a.offsetY
                }, b
            }(), b
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.NestleCase = function() {
            var b, d;
            return b = function(b) {
                function e(b) {
                    this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), e.__super__.constructor.call(this, b)
                }
                return c(e, b), e.prototype.__name__ = "NestleCase", e.prototype.show = function() {
                    return e.__super__.show.call(this)
                }, e.prototype.hide = function(a) {
                    return e.__super__.hide.call(this, a)
                }, e.prototype.load = function(a, b) {
                    return e.__super__.load.call(this, a, b)
                }, e.prototype.dispose = function() {
                    return e.__super__.dispose.call(this)
                }, e.prototype.loaded = function() {
                    return e.__super__.loaded.call(this), BrowserDetect.isDesktop ? (this.video = "" + this.container + " #video-screencast", $(this.video).prop("loop", !0), $(this.video)[0].load(), $(this.video)[0].play(), new d(".study-case__bloc--steps__image-container.step-1", -770, -550), new d(".study-case__bloc--steps__image-container.step-2", -1080, -515), new d(".study-case__bloc--steps__image-container.step-3", -1180, -630)) : void 0
                }, e
            }(App.CaseManager), d = function() {
                function b(b, c, d) {
                    this.elem = b, this.centerX = c, this.centerY = d, this.mouseMove = a(this.mouseMove, this), this.clearAnimationStep = a(this.clearAnimationStep, this), this.setAnimationStepOver = a(this.setAnimationStepOver, this), this.mousePosition = {}, this.positionSmooth = {
                        x: this.centerX,
                        y: this.centerY
                    }, this._bindEvents()
                }
                return b.prototype._bindEvents = function() {
                    return $(this.elem).on("mousemove", this.mouseMove), $(this.elem).on("mouseenter", this.setAnimationStepOver), $(this.elem).on("mouseleave", this.clearAnimationStep)
                }, b.prototype.setAnimationStepOver = function() {
                    var a = this;
                    return this.animStep = window.setInterval(function() {
                        return a.positionSmooth.x -= .1 * (a.mousePosition.x + a.positionSmooth.x - a.centerX - 131), a.positionSmooth.y -= .1 * (a.mousePosition.y + a.positionSmooth.y - a.centerY - 131), $(a.elem).css("background-position", "" + a.positionSmooth.x + "px " + a.positionSmooth.y + "px")
                    }, 16)
                }, b.prototype.clearAnimationStep = function() {
                    return window.clearInterval(this.animStep), this.positionSmooth = {
                        x: this.centerX,
                        y: this.centerY
                    }, TweenMax.to(this.elem, .3, {
                        backgroundPosition: "" + this.centerX + "px " + this.centerY + "px"
                    })
                }, b.prototype.mouseMove = function(a) {
                    return this.mousePosition.x = a.offsetX, this.mousePosition.y = a.offsetY
                }, b
            }(), b
        }()
    }.call(this),
    function() {
        var a, b = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            c = {}.hasOwnProperty,
            d = function(a, b) {
                function d() {
                    this.constructor = a
                }
                for (var e in b) c.call(b, e) && (a[e] = b[e]);
                return d.prototype = b.prototype, a.prototype = new d, a.__super__ = b.prototype, a
            };
        App.OccitaneCase = function(c) {
            function e(a) {
                this.launchVideosBlockDemo = b(this.launchVideosBlockDemo, this), this.resize = b(this.resize, this), this.load = b(this.load, this), this.hide = b(this.hide, this), this.show = b(this.show, this), e.__super__.constructor.call(this, a), this.videoBlocDemo1 = ".bloc--demo-video1", this.videoBlocDemo2 = ".bloc--demo-video2", this.bindEvents()
            }
            return d(e, c), e.prototype.__name__ = "OccitaneCase", e.prototype.show = function() {
                return e.__super__.show.call(this)
            }, e.prototype.hide = function(a) {
                return e.__super__.hide.call(this, a)
            }, e.prototype.load = function(a, b) {
                return e.__super__.load.call(this, a, b)
            }, e.prototype.resize = function() {
                var a;
                return e.__super__.resize.call(this), a = $(".bloc--demo-video1").height(), 0 === a ? a = $(".bloc--demo-video2").height() : void 0
            }, e.prototype.bindEvents = function() {
                var a = this;
                return $(".case__loccitane-grasse .button-play").on("click", function(b) {
                    var c;
                    return c = $(b.currentTarget), console.log("coucou", a.iphoneTween), a.iphoneTween.play(), a.ipadTween.play()
                })
            }, e.prototype.dispose = function() {
                return BrowserDetect.isDesktop && ($(this.videoBlocDemo1).unbind("ended"), $(this.videoBlocDemo2).unbind("canplaythrough"), $(this.videoBlocDemo2).addClass("hide"), $(this.videoBlocDemo1).removeClass("hide"), null != this.iphoneTween && this.iphoneTween.kill(), null != this.ipadTween && this.ipadTween.kill()), e.__super__.dispose.call(this)
            }, e.prototype.loaded = function() {
                return e.__super__.loaded.call(this), BrowserDetect.isDesktop && (new a, TweenMax.fromTo($(".circle .fill, .circle .mask.full"), 1, {
                    rotation: 0
                }, {
                    rotation: 180
                }), this.iphone = ".bloc--demo__iphone__image-container", this.ipad = ".demo__ipad--slider__image-container", this.launchVideosBlockDemo()), this.iphoneTween = TweenMax.fromTo("" + this.iphone + " img", 50, {
                    y: 0
                }, {
                    y: -2365,
                    repeat: -1,
                    delay: 5,
                    yoyo: !0
                }), this.ipadTween = TweenMax.fromTo("" + this.ipad + " img", 50, {
                    y: 0
                }, {
                    y: -3910,
                    repeat: -1,
                    delay: 5,
                    yoyo: !0
                })
            }, e.prototype.launchVideosBlockDemo = function() {
                var a, b;
                return a = $(this.videoBlocDemo1), b = $(this.videoBlocDemo2), a[0].play(), a.on("ended", function() {
                    return a.unbind("ended"), b.prop("loop", !0), b[0].load(), b.on("canplaythrough", function() {
                        return a.addClass("hide"), b.removeClass("hide"), b[0].play()
                    })
                })
            }, e
        }(App.CaseManager), a = function() {
            function a() {
                this.reset = b(this.reset, this), this.showSpotByColor = b(this.showSpotByColor, this), this.bindEvents = b(this.bindEvents, this), this.template = ".study-case__bloc--watercolor", this.bindEvents(), this.count = 0
            }
            return a.prototype.bindEvents = function() {
                var a = this;
                return $(this.template).find(".watercolor--item .color__selector").on("click", function(b) {
                    var c;
                    return null != b && b.preventDefault(), c = $(b.currentTarget), TweenMax.to(c.prev(), .6, {
                        rotation: 360,
                        ease: Quint.easeOut
                    }), TweenMax.to(c.find(".drop"), .6, {
                        y: 50,
                        ease: Quint.easeIn,
                        onComplete: function() {
                            return a.showSpotByColor(c.attr("data-color"))
                        }
                    })
                })
            }, a.prototype.showSpotByColor = function(a) {
                var b;
                return b = $(this.template).find(".watercolor__layout-painting").find('[data-color="' + a + '"]'), b.hasClass("shown") || (b.addClass("shown"), TweenLite.fromTo(b, 1, {
                    autoAlpha: 0
                }, {
                    autoAlpha: 1
                })), this.count++, 3 === this.count ? window.setTimeout(this.reset, 3e3) : void 0
            }, a.prototype.reset = function() {
                return this.count = 0, TweenMax.to(".watercolor_layout-painting__inner img", .3, {
                    autoAlpha: 0
                }), TweenMax.staggerFromTo(".color__selector img", .3, {
                    y: 0,
                    autoAlpha: 0
                }, {
                    y: 0,
                    autoAlpha: 1
                }, .3), $(".watercolor_layout-painting__inner img").removeClass("shown")
            }, a
        }()
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.OnePieceCase = function(b) {
            function d(b) {
                this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b)
            }
            return c(d, b), d.prototype.__name__ = "OnePieceCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                return d.__super__.load.call(this, a, b)
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this)
            }, d.prototype.loaded = function() {
                var a, b, c, e, f;
                if (d.__super__.loaded.call(this), BrowserDetect.isDesktop) {
                    for (this.videos = new Array("" + this.container + " #video-intro", "" + this.container + " #video-screencast"), e = this.videos, f = [], b = 0, c = e.length; c > b; b++) a = e[b], $(a).prop("loop", !0), $(a)[0].load(), f.push($(a)[0].play());
                    return f
                }
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.WatchdogsCase = function(b) {
            function d(b) {
                this.scrollVideo = a(this.scrollVideo, this), this._bindEvents = a(this._bindEvents, this), this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b), this.slider = null
            }
            return c(d, b), d.prototype.__name__ = "WatchdogsCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                return d.__super__.load.call(this, a, b)
            }, d.prototype._bindEvents = function() {
                return $(window).bind("scroll", this.scrollVideo)
            }, d.prototype.scrollVideo = function() {
                var a, b, c, d, e, f;
                for (a = $(document).scrollTop(), e = this.videos, f = [], c = 0, d = e.length; d > c; c++) b = e[c], $(b.elem).offset().top - 100 < a && !b.played ? (b.played = !0, $(b.elem).prop("loop", !0), $(b.elem)[0].load(), f.push($(b.elem)[0].play())) : f.push(void 0);
                return f
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this), $(window).unbind("scroll", this.scrollVideo)
            }, d.prototype.loaded = function() {
                var a = this;
                return d.__super__.loaded.call(this), BrowserDetect.isDesktop ? (this.videos = [], this.videos.push({
                    elem: "" + this.container + " #video-intro",
                    played: !1
                }), this.videos.push({
                    elem: "" + this.container + " #video-screencast",
                    played: !1
                }), setTimeout(function() {
                    return a._bindEvents()
                }, 1e3)) : void 0
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            b = {}.hasOwnProperty,
            c = function(a, c) {
                function d() {
                    this.constructor = a
                }
                for (var e in c) b.call(c, e) && (a[e] = c[e]);
                return d.prototype = c.prototype, a.prototype = new d, a.__super__ = c.prototype, a
            };
        App.RatboothCase = function(b) {
            function d(b) {
                this.load = a(this.load, this), this.hide = a(this.hide, this), this.show = a(this.show, this), d.__super__.constructor.call(this, b)
            }
            return c(d, b), d.prototype.__name__ = "RatboothCase", d.prototype.show = function() {
                return d.__super__.show.call(this)
            }, d.prototype.hide = function(a) {
                return d.__super__.hide.call(this, a)
            }, d.prototype.load = function(a, b) {
                return d.__super__.load.call(this, a, b)
            }, d.prototype.dispose = function() {
                return d.__super__.dispose.call(this)
            }, d.prototype.loaded = function() {
                return d.__super__.loaded.call(this), BrowserDetect.isDesktop ? (this.video = "" + this.container + " #video-screencast", $(this.video).prop("loop", !0), $(this.video)[0].load(), $(this.video)[0].play()) : void 0
            }, d
        }(App.CaseManager)
    }.call(this),
    function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments)
            }
        };
        App.Main = function() {
            function b() {
                this.updateScroll = a(this.updateScroll, this), this.templatesLoaded = a(this.templatesLoaded, this), this.updateOrientation = a(this.updateOrientation, this);
                var b, c, d, e, f, g;
                for (App.TemplateManager.prefix = "" + App.VIEWS_DIR + "/", this.templates = [], this.routes = [], this.routeStart = "", g = MMPDatas.routes, e = 0, f = g.length; f > e; e++) c = g[e], c.onload && (d = new Array(c.partial, c.element, null), this.templates.push(d)), c.slug && (b = {
                    id: c.id,
                    slug: "case" === c.type ? App.CASES_PREFIX + c.slug : App.ABS_PATH,
                    controller: c.controller,
                    container: c.element,
                    partial: c.partial,
                    type: c.type
                }, this.routes.push(b));
                App.TemplateManager.loadMultiples(this.templates, this.templatesLoaded), this.swidth = window.screen.width, this.vpwidth = 480, this.vlwidth = 960, BrowserDetect.isTablet && (this.updateOrientation(), $(window).on("orientationchange", this.updateOrientation))
            }
            return b.prototype.updateOrientation = function() {
                var a;
                switch (a = document.querySelector("meta[name=viewport]"), window.orientation) {
                    case 0:
                        return a.setAttribute("content", "width=device-width, minimum-scale=0.7, maximum-scale=0.7");
                    case 90:
                    case -90:
                        return a.setAttribute("content", "width=device-width, minimum-scale=1, maximum-scale=1")
                }
            }, b.prototype.templatesLoaded = function() {
                return App.Router.initialize(this.routes, this.routeStart), App.CaseNavigation.setRoutes(this.routes.filter(function(a) {
                    return "case" === a.type
                })), App.Navigation.bindEvents(), this.bindEvents()
            }, b.prototype.bindEvents = function() {
                var a;
                return a = this.throttle(this.updateScroll, 100), $(window).scroll(a)
            }, b.prototype.updateScroll = function() {
                return document.documentElement.scrollTop || document.body.scrollTop, App.ScrollManager.scroll(), App.Navigation.scroll(), null != App.Router.current ? App.Router.current.view.scroll() : void 0
            }, b.prototype.now = function() {
                return (new Date).getTime()
            }, b.prototype.throttle = function(a, b, c) {
                var d, e, f, g, h, i, j = this;
                return e = void 0, d = void 0, h = void 0, i = null, g = 0, c || (c = {}), f = function() {
                        g = c.leading === !1 ? 0 : j.now(), i = null, h = a.apply(e, d), i || (e = d = null)
                    },
                    function() {
                        var k, l;
                        return k = j.now(), g || c.leading !== !1 || (g = k), l = b - (k - g), e = j, d = arguments, 0 >= l || l > b ? (clearTimeout(i), i = null, g = k, h = a.apply(e, d), i || (e = d = null)) : i || c.trailing === !1 || (i = setTimeout(f, l)), h
                    }
            }, b
        }(), $(document).ready(function() {
            var a;
            return a = new App.Main
        })
    }.call(this);